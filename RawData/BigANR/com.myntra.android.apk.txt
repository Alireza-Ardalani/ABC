Duration => 134
UI Thread => 1510
Worker Thread => 2790

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 273
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 196
<java.io.File: void <init>(java.lang.String)>: 48
<java.io.File: boolean exists()>: 47
<java.io.File: void <init>(java.io.File,java.lang.String)>: 38
<java.lang.Object: boolean equals(java.lang.Object)>: 37
<android.net.Uri$Builder: android.net.Uri build()>: 36
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 35
<java.io.PrintStream: void println(java.lang.String)>: 29
<android.net.Uri: java.lang.String decode(java.lang.String)>: 28
<com.myntra.android.platform.magasin.Installation: boolean equals(java.lang.Object)>: 26
<android.net.NetworkInfo: boolean isConnected()>: 24
<java.io.ByteArrayInputStream: void <init>(byte[])>: 23
<java.io.ObjectInputStream: void close()>: 21
<java.io.ObjectInputStream: java.lang.Object readObject()>: 21
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 21
<java.io.InputStream: void close()>: 20
<java.net.InetAddress: java.lang.String getHostAddress()>: 19
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>: 19
<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>: 19
<java.net.InetAddress: boolean isLoopbackAddress()>: 19
<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>: 19
<java.lang.Boolean: boolean equals(java.lang.Object)>: 19
<java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>: 18
<java.io.Reader: int read(char[])>: 18
<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>: 18
<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>: 18
<java.io.Writer: void <init>()>: 18
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>: 18
<org.apache.commons.io.output.StringBuilderWriter: void <init>()>: 18
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 17
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>: 17
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 17
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 16
<java.io.InputStream: int read(byte[])>: 16
<java.io.BufferedReader: java.lang.String readLine()>: 15
<java.io.File: boolean mkdirs()>: 15
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 14
<java.io.BufferedReader: void <init>(java.io.Reader)>: 14
<com.github.zafarkhaja.semver.MetadataVersion$NullMetadataVersion: boolean equals(java.lang.Object)>: 13
<java.io.File: java.lang.String getName()>: 13
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 13
<java.io.InputStream: int available()>: 13
<java.io.File: java.lang.String getAbsolutePath()>: 13
<okhttp3.Cookie: boolean equals(java.lang.Object)>: 13
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 9
<java.lang.String: int hashCode()>: 8
<android.net.NetworkInfo: int getType()>: 6
<android.net.NetworkInfo: int getSubtype()>: 6
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 5
<java.lang.Enum: boolean equals(java.lang.Object)>: 5
<java.io.File: java.lang.String getPath()>: 4
<java.io.ByteArrayOutputStream: void <init>()>: 4
<android.graphics.Bitmap: void recycle()>: 3
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 3
<java.io.OutputStream: void write(byte[],int,int)>: 3
<android.graphics.drawable.Drawable: int getIntrinsicHeight()>: 3
<android.graphics.drawable.Drawable: int getIntrinsicWidth()>: 3
<android.graphics.BitmapFactory$Options: void <init>()>: 3
<android.graphics.Bitmap: int getHeight()>: 3
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 3
<android.graphics.Bitmap: int getWidth()>: 3
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 3
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 2
<java.io.FileInputStream: void <init>(java.io.File)>: 2
<java.io.OutputStream: void flush()>: 2
<android.net.http.HttpResponseCache: android.net.http.HttpResponseCache getInstalled()>: 2
<com.facebook.imagepipeline.image.EncodedImage: void close()>: 2
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 2
<java.io.StringReader: void <init>(java.lang.String)>: 2
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 1
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<java.io.BufferedReader: void <init>(java.io.Reader,int)>: 1
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>: 1
<java.net.URI: void <init>(java.lang.String)>: 1
<android.net.Uri$Builder: android.net.Uri$Builder path(java.lang.String)>: 1
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 1
<java.net.URISyntaxException: java.lang.String getMessage()>: 1
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 1
<org.apache.xml.security.utils.UnsyncBufferedOutputStream: void flush()>: 1
<java.io.File: boolean canRead()>: 1
<java.io.FileOutputStream: void close()>: 1
<java.net.URI: java.lang.String getScheme()>: 1
<com.myntra.android.notifications.model.ScheduledNotification: boolean equals(java.lang.Object)>: 1
<android.net.http.HttpResponseCache: android.net.http.HttpResponseCache install(java.io.File,long)>: 1
<java.io.OutputStream: void close()>: 1
<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>: 1
<android.net.wifi.WifiInfo: int getIpAddress()>: 1
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 1
<java.net.URI: java.lang.String toString()>: 1
<java.io.OutputStream: void write(byte[])>: 1
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 1
<android.net.TrafficStats: long getUidTxBytes(int)>: 1
<android.net.TrafficStats: long getUidRxBytes(int)>: 1
<java.net.URI: java.lang.String getAuthority()>: 1
<org.apache.xml.security.utils.UnsyncBufferedOutputStream: void write(byte[],int,int)>: 1
<java.net.URI: java.lang.String getFragment()>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<java.io.BufferedReader: void close()>: 1
<java.io.OutputStream: void <init>()>: 1
<java.net.URI: java.lang.String getPath()>: 1
<com.facebook.common.references.CloseableReference: void close()>: 1
<java.io.FileInputStream: void <init>(java.lang.String)>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 1
<java.io.ByteArrayOutputStream: void close()>: 1
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 1
<java.net.URI: java.lang.String getQuery()>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 360
<java.io.Writer: void write(java.lang.String)>: 123
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 87
<java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>: 84
<android.net.NetworkInfo: int getType()>: 75
<android.net.NetworkInfo: int getSubtype()>: 75
<java.lang.String: int hashCode()>: 72
<java.io.Writer: void <init>()>: 58
<java.lang.Object: boolean equals(java.lang.Object)>: 56
<java.net.URL: void <init>(java.lang.String)>: 51
<java.net.URL: java.net.URLConnection openConnection()>: 51
<java.net.HttpURLConnection: int getResponseCode()>: 51
<java.io.File: boolean delete()>: 41
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 38
<java.net.URLConnection: void setReadTimeout(int)>: 38
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 38
<java.net.URLConnection: java.io.InputStream getInputStream()>: 38
<java.io.PrintWriter: void close()>: 38
<java.io.PrintWriter: void println()>: 38
<java.net.URLConnection: void setConnectTimeout(int)>: 38
<java.io.PrintWriter: void <init>(java.io.Writer)>: 38
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 38
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>: 36
<android.net.wifi.WifiInfo: int getIpAddress()>: 36
<java.io.Reader: int read(char[])>: 33
<java.net.URLConnection: void setDoOutput(boolean)>: 32
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>: 32
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 32
<android.graphics.Bitmap: int getHeight()>: 30
<android.graphics.Bitmap: int getWidth()>: 30
<java.io.File: void <init>(java.lang.String)>: 30
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 28
<okhttp3.ResponseBody: void close()>: 27
<java.io.File: void <init>(java.io.File,java.lang.String)>: 27
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 26
<java.io.File: boolean isDirectory()>: 26
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>: 26
<com.bugsnag.android.JsonWriter: void close()>: 26
<java.io.OutputStream: void write(byte[])>: 26
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 26
<java.net.URI: java.lang.String getHost()>: 26
<java.io.IOException: void <init>(java.lang.String)>: 26
<java.io.File: java.io.File[] listFiles()>: 26
<java.io.File: void deleteOnExit()>: 26
<java.io.Writer: void flush()>: 26
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>: 20
<org.apache.commons.io.output.StringBuilderWriter: void <init>()>: 20
<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>: 19
<java.io.OutputStreamWriter: void flush()>: 19
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 19
<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>: 19
<java.io.ByteArrayOutputStream: void <init>(int)>: 19
<java.io.BufferedReader: java.lang.String readLine()>: 19
<java.util.zip.GZIPInputStream: void close()>: 19
<java.io.FilterOutputStream: void write(byte[])>: 19
<java.io.ByteArrayOutputStream: void <init>()>: 19
<java.util.zip.DeflaterOutputStream: void close()>: 19
<java.net.URLConnection: void setDoInput(boolean)>: 19
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 19
<java.io.ByteArrayOutputStream: void close()>: 19
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 19
<java.io.BufferedReader: void <init>(java.io.Reader)>: 19
<java.io.FilterInputStream: int read(byte[])>: 19
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 19
<java.io.Closeable: void close()>: 15
<java.io.File: java.lang.String getPath()>: 15
<java.io.FileReader: void <init>(java.io.File)>: 13
<java.io.Writer: void write(int)>: 13
<java.io.File: java.lang.String getName()>: 13
<java.io.Writer: java.io.Writer append(char)>: 13
<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>: 13
<java.io.Writer: void write(char[],int,int)>: 13
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 13
<java.io.Writer: void write(java.lang.String,int,int)>: 13
<java.io.FileWriter: void <init>(java.lang.String)>: 13
<java.io.Writer: void close()>: 13
<java.io.File: boolean exists()>: 13
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>: 13
<android.net.NetworkInfo: boolean isConnected()>: 13
<com.facebook.imagepipeline.image.EncodedImage: void close()>: 13
<android.graphics.BitmapFactory$Options: void <init>()>: 4
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 4
<android.graphics.Bitmap: void recycle()>: 2
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 2
<java.io.InputStream: int read(byte[])>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 2
<java.io.OutputStream: void write(byte[],int,int)>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>: 2
<java.io.FileOutputStream: void <init>(java.io.File)>: 2
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 2
<android.graphics.Bitmap: boolean isRecycled()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>: 2
<java.io.File: java.lang.String getAbsolutePath()>: 2
