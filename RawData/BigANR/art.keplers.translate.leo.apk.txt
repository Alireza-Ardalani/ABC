Duration => 837
UI Thread => 492
Worker Thread => 2015

----------------StartUI----------------
<java.io.File: boolean exists()>: 40
<java.io.IOException: void <init>(java.lang.String)>: 30
<java.io.File: boolean delete()>: 29
<java.io.File: void <init>(java.io.File,java.lang.String)>: 25
<android.database.Cursor: void close()>: 18
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 15
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 12
<java.io.File: void <init>(java.lang.String)>: 11
<java.io.File: boolean mkdirs()>: 11
<java.io.IOException: void <init>()>: 10
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>: 10
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 10
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 10
<java.io.File: boolean mkdir()>: 10
<java.io.Writer: void close()>: 10
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 10
<java.io.BufferedReader: java.lang.String readLine()>: 10
<java.io.EOFException: void <init>()>: 10
<java.io.BufferedReader: void <init>(java.io.Reader,int)>: 9
<java.io.File: boolean createNewFile()>: 9
<java.io.BufferedReader: void close()>: 9
<java.io.File: java.io.File[] listFiles()>: 7
<java.io.FileInputStream: void <init>(java.io.File)>: 6
<java.io.InputStream: int read(byte[])>: 6
<java.io.InputStream: void close()>: 6
<java.io.OutputStream: void write(byte[],int,int)>: 6
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 6
<java.io.File: java.lang.String getPath()>: 6
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 5
<com.d.a.a.a.a.a.a: void close()>: 5
<java.io.File: boolean renameTo(java.io.File)>: 5
<java.io.File: boolean isDirectory()>: 5
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 5
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 5
<java.nio.charset.Charset: boolean equals(java.lang.Object)>: 5
<java.io.ByteArrayOutputStream: void <init>(int)>: 5
<java.io.Writer: void write(java.lang.String)>: 5
<java.io.InputStream: int read(byte[],int,int)>: 5
<java.io.FileOutputStream: void <init>(java.io.File)>: 5
<java.io.ByteArrayOutputStream: void <init>()>: 5
<android.graphics.Bitmap: boolean isRecycled()>: 5
<java.io.ByteArrayOutputStream: void close()>: 5
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 5
<java.io.PrintStream: void println(java.lang.String)>: 5
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 4
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 4
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 4
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 4
<java.io.ObjectInputStream: java.lang.Object readObject()>: 4
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 4
<java.io.ByteArrayInputStream: void <init>(byte[])>: 4
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 4
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 4
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 2
<java.io.File: long length()>: 2
<java.io.DataOutputStream: void <init>(java.io.OutputStream)>: 2
<java.io.DataOutputStream: void flush()>: 2
<java.io.FilterOutputStream: void close()>: 2
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 2
<android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>: 2
<java.io.OutputStream: void close()>: 1
<java.io.FileOutputStream: void <init>(java.lang.String)>: 1
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 1
<java.io.OutputStream: void flush()>: 1
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>: 1
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>: 1
<java.io.File: java.lang.String getAbsolutePath()>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 1
<java.io.File: java.io.File getParentFile()>: 1
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>: 1
<java.io.BufferedReader: void <init>(java.io.Reader)>: 1
----------------StartWorker----------------
<java.io.File: boolean exists()>: 111
<java.io.File: java.lang.String getAbsolutePath()>: 97
<java.io.File: boolean delete()>: 86
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 63
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 63
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 63
<java.io.File: boolean isFile()>: 57
<java.io.InputStream: void close()>: 52
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 51
<java.io.InputStream: int read(byte[])>: 51
<java.io.ByteArrayOutputStream: void <init>()>: 51
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 49
<java.io.File: void <init>(java.io.File,java.lang.String)>: 44
<java.io.FileOutputStream: void <init>(java.io.File)>: 44
<java.io.File: boolean isDirectory()>: 38
<java.io.File: java.lang.String getPath()>: 38
<okhttp3.Response: void close()>: 38
<java.io.StringReader: void <init>(java.lang.String)>: 38
<java.io.File: void <init>(java.lang.String)>: 34
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 32
<java.io.Closeable: void close()>: 29
<java.io.FileOutputStream: void write(byte[],int,int)>: 29
<java.io.File: boolean mkdirs()>: 29
<java.io.OutputStream: void write(byte[],int,int)>: 27
<java.io.ByteArrayInputStream: void <init>(byte[])>: 25
<java.io.OutputStream: void flush()>: 24
<java.io.ByteArrayOutputStream: void close()>: 22
<java.io.EOFException: void <init>()>: 22
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>: 20
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 20
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 20
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 19
<android.database.sqlite.SQLiteDatabase: long replace(java.lang.String,java.lang.String,android.content.ContentValues)>: 19
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>: 19
<java.io.ObjectOutputStream: void flush()>: 19
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 19
<java.lang.Object: java.lang.String toString()>: 19
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>: 19
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 19
<java.io.File: java.io.File[] listFiles()>: 19
<android.graphics.BitmapFactory$Options: void <init>()>: 15
<java.io.File: boolean renameTo(java.io.File)>: 15
<android.graphics.Bitmap: void recycle()>: 15
<java.io.File: long length()>: 15
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 15
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 15
<java.io.ObjectInputStream: java.lang.Object readObject()>: 15
<android.graphics.Bitmap: int getHeight()>: 15
<java.io.InputStream: int read(byte[],int,int)>: 15
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 15
<android.database.Cursor: void close()>: 15
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 13
<java.io.BufferedReader: java.lang.String readLine()>: 13
<java.net.HttpURLConnection: int getResponseCode()>: 13
<java.io.BufferedReader: void <init>(java.io.Reader)>: 13
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 10
<java.io.InputStream: void reset()>: 10
<java.io.Writer: void write(java.lang.String)>: 10
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 10
<android.graphics.Bitmap: int getWidth()>: 10
<java.io.DataOutputStream: void write(byte[],int,int)>: 10
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>: 10
<java.io.InputStream: boolean markSupported()>: 10
<java.io.Writer: void flush()>: 10
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>: 10
<java.io.PrintStream: void println(java.lang.String)>: 10
<java.io.FileOutputStream: void close()>: 10
<java.net.URL: void <init>(java.lang.String)>: 8
<java.net.URLConnection: void setReadTimeout(int)>: 8
<java.net.URL: java.net.URLConnection openConnection()>: 8
<java.net.URLConnection: java.io.InputStream getInputStream()>: 8
<java.net.URLConnection: void setConnectTimeout(int)>: 8
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 5
<java.io.FileInputStream: void <init>(java.io.File)>: 5
<com.d.a.a.a.a.a.a$2: void <init>()>: 5
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 5
<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>: 5
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 5
<java.io.InputStream: void <init>()>: 5
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 5
<com.d.a.b.a.c: void <init>(java.io.InputStream)>: 5
<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>: 5
<java.io.OutputStream: void <init>()>: 5
<com.d.a.a.a.a.a.a$c: void close()>: 5
<java.io.FileInputStream: void <init>(java.lang.String)>: 5
<java.io.IOException: void <init>(java.lang.String)>: 5
<android.graphics.Bitmap: boolean isRecycled()>: 5
<android.graphics.Bitmap: int getRowBytes()>: 5
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 5
<java.io.FilterInputStream: void <init>(java.io.InputStream)>: 5
<java.net.URLConnection: int getContentLength()>: 5
<java.io.InputStream: int available()>: 5
