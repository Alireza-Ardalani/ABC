Duration => 381
UI Thread => 740
Worker Thread => 2249

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 192
<java.io.File: void <init>(java.lang.String)>: 79
<java.io.File: boolean exists()>: 70
<java.io.File: boolean mkdirs()>: 39
<java.io.File: java.lang.String getPath()>: 35
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 34
<android.database.Cursor: void close()>: 24
<java.io.FileOutputStream: void <init>(java.io.File)>: 12
<java.io.File: boolean delete()>: 12
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 8
<java.io.File: long length()>: 7
<java.io.File: void <init>(java.io.File,java.lang.String)>: 7
<android.graphics.Bitmap: boolean isRecycled()>: 7
<java.io.FileOutputStream: void <init>(java.lang.String)>: 6
<java.io.IOException: void <init>(java.lang.String)>: 6
<android.net.wifi.WifiManager: boolean enableNetwork(int,boolean)>: 6
<java.io.FileInputStream: void <init>(java.io.File)>: 5
<java.io.ObjectOutputStream: void writeLong(long)>: 5
<java.io.ObjectOutputStream: void writeInt(int)>: 5
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>: 5
<java.io.ObjectOutputStream: void writeShort(int)>: 5
<java.io.ObjectOutputStream: void writeBoolean(boolean)>: 5
<java.io.ObjectOutputStream: void writeFloat(float)>: 5
<java.io.File: java.io.File[] listFiles()>: 5
<java.io.ObjectOutputStream: void close()>: 5
<java.io.OutputStreamWriter: void close()>: 4
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>: 4
<java.io.FileOutputStream: void close()>: 4
<java.io.InputStream: void close()>: 4
<java.io.FileWriter: void <init>(java.lang.String)>: 4
<java.nio.channels.spi.AbstractInterruptibleChannel: void close()>: 3
<java.io.File: boolean mkdir()>: 3
<java.io.FileInputStream: void close()>: 3
<java.io.File: boolean canWrite()>: 3
<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>: 3
<android.graphics.BitmapFactory$Options: void <init>()>: 3
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>: 3
<java.io.Writer: void write(java.lang.String)>: 3
<java.io.IOException: void <init>()>: 2
<java.io.File: boolean isDirectory()>: 2
<java.net.InetAddress: java.lang.String getHostAddress()>: 2
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 2
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>: 2
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 2
<java.net.URL: java.io.InputStream openStream()>: 2
<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>: 2
<java.io.File: void deleteOnExit()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 2
<java.io.PrintStream: void println(java.lang.String)>: 2
<java.net.ServerSocket: void close()>: 2
<java.io.InputStream: int read(byte[])>: 2
<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>: 2
<java.io.Writer: void close()>: 2
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 2
<android.net.wifi.WifiManager: boolean isWifiEnabled()>: 2
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 1
<java.io.File: boolean isAbsolute()>: 1
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>: 1
<android.graphics.Bitmap: void recycle()>: 1
<java.net.URL: java.lang.String getPath()>: 1
<java.io.Closeable: void close()>: 1
<java.net.URL: java.lang.String getHost()>: 1
<java.net.DatagramSocket: void close()>: 1
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 1
<java.io.OutputStream: void write(byte[],int,int)>: 1
<java.io.ObjectInputStream: boolean readBoolean()>: 1
<java.io.File: java.lang.String getName()>: 1
<android.database.Observable: void <init>()>: 1
<java.io.ObjectInputStream: float readFloat()>: 1
<java.lang.Object: boolean equals(java.lang.Object)>: 1
<java.nio.charset.Charset: boolean equals(java.lang.Object)>: 1
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$2: void <init>()>: 1
<android.database.Observable: void unregisterObserver(java.lang.Object)>: 1
<java.io.ByteArrayOutputStream: void <init>(int)>: 1
<java.io.ObjectInputStream: void close()>: 1
<java.io.BufferedReader: java.lang.String readLine()>: 1
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>: 1
<java.io.ObjectInputStream: long readLong()>: 1
<java.io.File: boolean createNewFile()>: 1
<java.io.ObjectInputStream: short readShort()>: 1
<java.net.URL: int getPort()>: 1
<java.net.InetSocketAddress: void <init>(int)>: 1
<android.database.MatrixCursor: void addRow(java.lang.Object[])>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 1
<java.net.InetAddress: boolean isLoopbackAddress()>: 1
<java.net.URI: java.net.URL toURL()>: 1
<java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>: 1
<java.io.OutputStream: void close()>: 1
<java.io.File: boolean renameTo(java.io.File)>: 1
<java.io.FileOutputStream: void write(byte[],int,int)>: 1
<java.io.File: void <init>(java.net.URI)>: 1
<java.net.URL: void <init>(java.lang.String)>: 1
<java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>: 1
<java.io.File: java.net.URI toURI()>: 1
<java.io.ObjectInputStream: int readInt()>: 1
<android.net.wifi.WifiInfo: int getIpAddress()>: 1
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: void close()>: 1
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 1
<java.net.ServerSocket: void <init>()>: 1
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 1
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 1
<android.database.MatrixCursor: void <init>(java.lang.String[])>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 1
<com.gopro.wsdk.domain.contract.SafeStateObservable: void unregisterObserver(java.lang.Object)>: 1
<android.graphics.Bitmap: void copyPixelsFromBuffer(java.nio.Buffer)>: 1
<android.graphics.Bitmap: int getHeight()>: 1
<java.io.InputStream: int read(byte[],int,int)>: 1
<android.database.Observable: void registerObserver(java.lang.Object)>: 1
<java.net.URL: java.net.URI toURI()>: 1
<java.io.BufferedReader: void close()>: 1
<android.net.NetworkInfo: boolean isAvailable()>: 1
<java.io.OutputStream: void <init>()>: 1
<com.gopro.wsdk.domain.contract.SafeStateObservable: void registerObserver(java.lang.Object)>: 1
<android.graphics.Bitmap: int getWidth()>: 1
<java.io.ByteArrayOutputStream: void <init>()>: 1
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 1
<com.gopro.wsdk.domain.contract.SafeStateObservable: void <init>()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>: 1
<java.io.FileInputStream: void <init>(java.lang.String)>: 1
<android.net.NetworkInfo: boolean isConnected()>: 1
<java.io.File: java.lang.String getAbsolutePath()>: 1
<java.net.ServerSocket: void bind(java.net.SocketAddress)>: 1
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 1
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 1
<java.io.File: java.lang.String toString()>: 1
<java.io.EOFException: void <init>()>: 1
<java.io.BufferedReader: void <init>(java.io.Reader)>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 173
<android.graphics.Bitmap: int getHeight()>: 107
<android.graphics.Bitmap: int getWidth()>: 107
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 60
<java.io.PrintWriter: void print(java.lang.String)>: 56
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>: 51
<java.io.File: void <init>(java.lang.String)>: 47
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 44
<java.io.BufferedReader: void <init>(java.io.Reader)>: 35
<java.io.File: boolean exists()>: 33
<java.io.ByteArrayInputStream: void <init>(byte[])>: 33
<java.io.OutputStream: void write(byte[],int,int)>: 31
<java.io.BufferedReader: java.lang.String readLine()>: 30
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 29
<android.graphics.Bitmap: void recycle()>: 29
<java.io.PrintWriter: void flush()>: 28
<java.io.PushbackInputStream: int read(byte[],int,int)>: 28
<java.lang.Enum: boolean equals(java.lang.Object)>: 28
<java.io.IOException: void <init>(java.lang.String)>: 27
<java.io.IOException: void <init>(java.lang.Throwable)>: 25
<java.io.InputStream: int read(byte[])>: 25
<java.io.File: java.lang.String getAbsolutePath()>: 22
<java.io.FileOutputStream: void <init>(java.io.File)>: 22
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>: 21
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 20
<java.io.ByteArrayOutputStream: void <init>()>: 20
<android.net.wifi.WifiInfo: int getIpAddress()>: 19
<java.net.Socket: void close()>: 19
<java.io.FileOutputStream: void <init>(java.lang.String)>: 19
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 19
<java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>: 18
<java.io.InputStream: int read(byte[],int,int)>: 18
<java.io.OutputStream: void flush()>: 18
<java.io.OutputStream: void write(byte[])>: 17
<java.net.Socket: void setSoTimeout(int)>: 17
<java.io.InputStream: void close()>: 17
<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>: 16
<java.io.File: void deleteOnExit()>: 16
<java.io.File: void <init>(java.io.File,java.lang.String)>: 16
<java.net.Socket: java.io.OutputStream getOutputStream()>: 15
<java.io.Closeable: void close()>: 15
<java.net.Socket: java.io.InputStream getInputStream()>: 15
<java.io.Reader: int read(char[])>: 14
<java.net.ServerSocket: java.net.Socket accept()>: 14
<java.net.ServerSocket: boolean isClosed()>: 14
<java.net.InetAddress: java.lang.String getHostAddress()>: 14
<java.io.RandomAccessFile: void write(byte[],int,int)>: 14
<java.io.PushbackInputStream: void unread(byte[],int,int)>: 14
<java.net.Socket: java.net.InetAddress getInetAddress()>: 14
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 14
<java.io.PushbackInputStream: void <init>(java.io.InputStream,int)>: 14
<java.io.InputStream: int available()>: 14
<java.net.InetAddress: boolean isLoopbackAddress()>: 14
<java.net.InetAddress: boolean isAnyLocalAddress()>: 14
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>: 14
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>: 14
<java.net.SocketException: void <init>(java.lang.String)>: 14
<java.io.PrintWriter: void <init>(java.io.OutputStream)>: 14
<java.io.RandomAccessFile: java.io.FileDescriptor getFD()>: 14
<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>: 14
<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>: 14
<java.net.Socket: boolean isClosed()>: 14
<java.io.RandomAccessFile: void seek(long)>: 14
<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>: 14
<java.io.RandomAccessFile: long length()>: 14
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 11
<java.lang.Object: boolean equals(java.lang.Object)>: 11
<java.net.InetSocketAddress: void <init>(int)>: 11
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>: 11
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 10
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>: 10
<java.net.ServerSocket: void <init>()>: 10
<java.net.ServerSocket: void bind(java.net.SocketAddress)>: 10
<java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>: 9
<android.graphics.BitmapFactory$Options: void <init>()>: 9
<android.graphics.Bitmap: int getByteCount()>: 9
<android.graphics.Bitmap: void copyPixelsToBuffer(java.nio.Buffer)>: 9
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory$Options)>: 9
<android.graphics.Bitmap: int getRowBytes()>: 9
<java.io.File: boolean isAbsolute()>: 8
<java.io.File: java.lang.String getName()>: 8
<java.io.File: boolean mkdir()>: 8
<java.io.FileOutputStream: void close()>: 8
<java.io.FileOutputStream: void write(byte[],int,int)>: 8
<java.net.ServerSocket: void close()>: 8
<java.io.File: void <init>(java.net.URI)>: 8
<java.io.File: java.net.URI toURI()>: 8
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 8
<android.database.Cursor: void close()>: 8
<java.net.URL: java.lang.String getPath()>: 8
<java.net.URL: java.io.InputStream openStream()>: 8
<java.net.URI: java.net.URL toURL()>: 8
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 8
<java.net.URL: java.net.URI toURI()>: 8
<java.io.File: boolean delete()>: 8
<java.io.IOException: void <init>()>: 7
<java.net.URL: void <init>(java.lang.String)>: 6
<java.net.URL: java.net.URLConnection openConnection()>: 6
<java.net.HttpURLConnection: int getResponseCode()>: 6
<java.io.OutputStream: void close()>: 6
<java.net.URLConnection: void setReadTimeout(int)>: 6
<java.net.URLConnection: java.io.InputStream getInputStream()>: 6
<java.net.URLConnection: void setConnectTimeout(int)>: 6
<java.io.OutputStreamWriter: void close()>: 5
<java.net.URI: void <init>(java.lang.String)>: 5
<java.net.URLConnection: void setDoOutput(boolean)>: 5
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 5
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 5
<java.io.ObjectOutputStream: void writeShort(int)>: 5
<java.io.ObjectOutputStream: void writeBoolean(boolean)>: 5
<java.io.Writer: void write(java.lang.String)>: 5
<java.io.BufferedReader: void close()>: 5
<java.io.ObjectOutputStream: void writeFloat(float)>: 5
<java.net.URLConnection: void setDoInput(boolean)>: 5
<java.io.BufferedReader: int read()>: 5
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>: 5
<java.io.ObjectOutputStream: void writeLong(long)>: 5
<java.io.ObjectOutputStream: void writeInt(int)>: 5
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>: 5
<java.io.OutputStreamWriter: void flush()>: 5
<java.io.ObjectOutputStream: void close()>: 5
<java.io.InputStream: void <init>()>: 4
<java.net.URI: boolean isAbsolute()>: 4
<java.net.URI: java.lang.String getScheme()>: 4
<org.apache.http.MalformedChunkCodingException: void <init>(java.lang.String)>: 4
<org.apache.http.HttpHost: boolean equals(java.lang.Object)>: 4
<org.apache.http.conn.routing.HttpRoute: boolean equals(java.lang.Object)>: 4
<java.lang.Boolean: boolean equals(java.lang.Object)>: 4
<java.io.OutputStream: void <init>()>: 3
<java.net.URI: java.net.URI create(java.lang.String)>: 3
<java.net.URI: java.lang.String getHost()>: 3
<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>: 3
<java.net.URI: int getPort()>: 3
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>: 3
<java.net.URI: java.lang.String toString()>: 2
<java.net.URI: java.lang.String toASCIIString()>: 2
<java.net.URI: java.lang.String getAuthority()>: 2
<java.net.URI: java.lang.String getPath()>: 2
<java.io.InterruptedIOException: void <init>(java.lang.String)>: 2
<java.net.URI: java.lang.String getFragment()>: 2
<java.net.InetAddress: java.lang.String getHostName()>: 1
<java.net.ProtocolException: void <init>(java.lang.String)>: 1
<java.net.DatagramSocket: void setReuseAddress(boolean)>: 1
<java.net.Socket: int getSendBufferSize()>: 1
<java.net.URI: java.lang.String getRawFragment()>: 1
<android.database.Observable: void <init>()>: 1
<java.net.URI: java.net.URI resolve(java.net.URI)>: 1
<org.apache.http.client.ClientProtocolException: void <init>(java.lang.String)>: 1
<java.io.File: java.lang.String getPath()>: 1
<java.net.Socket: void setSoLinger(boolean,int)>: 1
<org.apache.http.impl.io.ContentLengthInputStream: int read(byte[])>: 1
<java.net.URISyntaxException: java.lang.String getMessage()>: 1
<java.net.MulticastSocket: void <init>()>: 1
<java.net.URI: java.lang.String getRawQuery()>: 1
<org.apache.http.impl.io.ContentLengthOutputStream: void write(byte[],int,int)>: 1
<com.gopro.wsdk.domain.camera.setting.model.GpCommandBase: void <init>()>: 1
<java.net.NetworkInterface: java.net.NetworkInterface getByInetAddress(java.net.InetAddress)>: 1
<org.apache.http.impl.io.ContentLengthInputStream: int read(byte[],int,int)>: 1
<org.apache.http.impl.io.ChunkedOutputStream: void write(byte[],int,int)>: 1
<org.apache.http.impl.io.ChunkedInputStream: int read(byte[],int,int)>: 1
<java.net.ConnectException: void <init>(java.lang.String)>: 1
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 1
<org.apache.http.TruncatedChunkException: void <init>(java.lang.String)>: 1
<java.net.DatagramSocket: void send(java.net.DatagramPacket)>: 1
<android.net.NetworkInfo: boolean isConnected()>: 1
<android.graphics.Bitmap: boolean isRecycled()>: 1
<java.net.URI: java.lang.String getRawPath()>: 1
<java.net.URI: java.lang.String getQuery()>: 1
<java.net.Socket: int getReceiveBufferSize()>: 1
<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>: 1
<java.net.Socket: void shutdownOutput()>: 1
<java.net.DatagramSocket: void close()>: 1
<java.io.InputStream: int read()>: 1
<org.apache.http.conn.ConnectionPoolTimeoutException: void <init>(java.lang.String)>: 1
<java.io.InterruptedIOException: void <init>()>: 1
<java.net.Socket: int getSoTimeout()>: 1
<org.apache.http.impl.io.IdentityOutputStream: void write(byte[],int,int)>: 1
<java.util.UUID: int hashCode()>: 1
<org.apache.http.impl.io.ChunkedInputStream: int read(byte[])>: 1
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 1
<java.net.MulticastSocket: void setTimeToLive(int)>: 1
<java.io.PrintStream: void println(java.lang.String)>: 1
<org.apache.http.conn.ConnectTimeoutException: void <init>(java.lang.String)>: 1
<java.net.Socket: void shutdownInput()>: 1
<java.net.DatagramSocket: void bind(java.net.SocketAddress)>: 1
<java.net.Socket: void setTcpNoDelay(boolean)>: 1
<org.apache.http.ConnectionClosedException: void <init>(java.lang.String)>: 1
<android.graphics.Bitmap: void copyPixelsFromBuffer(java.nio.Buffer)>: 1
<org.apache.http.NoHttpResponseException: void <init>(java.lang.String)>: 1
<android.net.NetworkInfo: boolean isAvailable()>: 1
<android.net.wifi.WifiInfo: java.lang.String getBSSID()>: 1
<android.net.wifi.WifiInfo: java.lang.String getSSID()>: 1
<java.net.MulticastSocket: void <init>(java.net.SocketAddress)>: 1
<org.apache.http.client.ClientProtocolException: void <init>(java.lang.Throwable)>: 1
<java.net.InetAddress: boolean equals(java.lang.Object)>: 1
<java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>: 1
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 1
<android.net.wifi.WifiManager: int calculateSignalLevel(int,int)>: 1
<java.io.File: boolean mkdirs()>: 1
