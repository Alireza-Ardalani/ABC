Duration => 13714
UI Thread => 701
Worker Thread => 10390

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 94
<java.io.File: boolean exists()>: 69
<java.io.File: void <init>(java.lang.String)>: 63
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 29
<java.io.File: java.lang.String getAbsolutePath()>: 27
<java.io.File: boolean delete()>: 26
<java.io.File: boolean isDirectory()>: 25
<java.io.File: boolean mkdirs()>: 19
<java.io.File: void <init>(java.io.File,java.lang.String)>: 18
<java.io.File: java.lang.String getName()>: 16
<java.io.FileOutputStream: void <init>(java.io.File)>: 16
<java.io.File: boolean renameTo(java.io.File)>: 12
<java.io.FileInputStream: void <init>(java.io.File)>: 12
<com.couchbase.lite.internal.database.sqlite.SQLiteClosable: void close()>: 12
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>: 12
<android.database.Cursor: void close()>: 10
<java.io.File: boolean createNewFile()>: 7
<java.io.FileOutputStream: void close()>: 7
<java.io.InputStream: void close()>: 6
<java.io.File: java.lang.String getPath()>: 6
<java.io.FileInputStream: void close()>: 6
<java.io.File: boolean canRead()>: 6
<java.io.RandomAccessFile: void close()>: 6
<java.io.PrintStream: void println(java.lang.String)>: 6
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>: 6
<android.graphics.Bitmap: void recycle()>: 5
<java.lang.String: int hashCode()>: 5
<java.io.RandomAccessFile: java.lang.String readUTF()>: 5
<java.lang.Object: int hashCode()>: 5
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 5
<java.io.RandomAccessFile: int readInt()>: 4
<java.io.OutputStream: void flush()>: 4
<java.io.RandomAccessFile: boolean readBoolean()>: 4
<android.graphics.Bitmap: int getHeight()>: 4
<java.io.RandomAccessFile: long readLong()>: 4
<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>: 3
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 3
<java.util.zip.ZipInputStream: void close()>: 3
<java.io.OutputStream: void close()>: 3
<java.nio.channels.spi.AbstractInterruptibleChannel: void close()>: 3
<java.io.FileOutputStream: void write(byte[],int,int)>: 3
<java.io.OutputStreamWriter: void close()>: 3
<android.net.Uri$Builder: android.net.Uri build()>: 3
<java.io.File: java.lang.String[] list()>: 3
<java.io.InputStream: int read(byte[])>: 3
<java.io.OutputStream: void write(byte[],int,int)>: 3
<java.io.InputStreamReader: void close()>: 3
<java.io.StringWriter: java.lang.String toString()>: 3
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>: 3
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 3
<java.io.File: boolean mkdir()>: 3
<java.io.Writer: void write(java.lang.String)>: 3
<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>: 3
<java.io.BufferedReader: java.lang.String readLine()>: 3
<java.io.InputStream: int read(byte[],int,int)>: 3
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>: 3
<com.couchbase.lite.internal.database.sqlite.SQLiteConnectionPool: void close()>: 3
<java.io.BufferedReader: void close()>: 3
<java.io.FilterOutputStream: void write(byte[])>: 3
<java.io.ByteArrayOutputStream: void <init>()>: 3
<java.io.StringWriter: void <init>()>: 3
<java.io.FilterOutputStream: void close()>: 3
<java.io.IOException: void <init>(java.lang.String)>: 3
<java.io.File: java.io.File[] listFiles()>: 3
<java.io.PrintWriter: void <init>(java.io.Writer)>: 3
<java.io.File: void deleteOnExit()>: 3
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>: 3
<java.io.ByteArrayOutputStream: void close()>: 3
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 3
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 3
<java.io.BufferedReader: void <init>(java.io.Reader)>: 3
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 3
<com.couchbase.lite.internal.database.cursor.Cursor: void close()>: 3
<java.io.FilterInputStream: int read(byte[])>: 3
<android.graphics.BitmapFactory$Options: void <init>()>: 2
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 2
<android.graphics.Bitmap: int getWidth()>: 2
<android.graphics.Bitmap: boolean isRecycled()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 2
<java.io.RandomAccessFile: void writeUTF(java.lang.String)>: 1
<android.database.ContentObserver: void <init>(android.os.Handler)>: 1
<java.lang.Object: boolean equals(java.lang.Object)>: 1
<java.lang.Enum: boolean equals(java.lang.Object)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>: 1
<java.io.File: boolean isFile()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>: 1
<java.io.RandomAccessFile: void setLength(long)>: 1
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 1
<android.graphics.Bitmap: void setDensity(int)>: 1
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 1146
<java.io.File: void <init>(java.lang.String)>: 844
<java.io.File: boolean exists()>: 777
<java.io.File: boolean delete()>: 486
<android.database.Cursor: void close()>: 357
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 322
<java.io.File: java.lang.String getAbsolutePath()>: 274
<java.io.FileInputStream: void <init>(java.io.File)>: 259
<java.io.File: java.lang.String getName()>: 240
<java.lang.Object: java.lang.String toString()>: 213
<java.io.FileOutputStream: void <init>(java.io.File)>: 199
<java.io.InputStream: void close()>: 151
<java.io.OutputStream: void close()>: 133
<java.io.File: boolean mkdirs()>: 133
<java.io.StringReader: void <init>(java.lang.String)>: 130
<java.io.File: java.lang.String getPath()>: 128
<java.io.Writer: void write(java.lang.String)>: 128
<java.io.ObjectInputStream: java.lang.Object readObject()>: 128
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 128
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>: 126
<java.lang.String: int hashCode()>: 115
<java.io.OutputStream: void write(byte[],int,int)>: 109
<java.net.URI: java.net.URI create(java.lang.String)>: 108
<java.io.InputStream: int read(byte[])>: 102
<java.io.File: boolean createNewFile()>: 98
<java.io.FileInputStream: void close()>: 97
<java.io.File: java.lang.String[] list()>: 96
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>: 96
<java.io.File: boolean mkdir()>: 96
<java.io.ObjectInputStream: void close()>: 96
<java.io.File: boolean renameTo(java.io.File)>: 96
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>: 96
<java.io.StringWriter: java.lang.String toString()>: 96
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>: 96
<java.io.RandomAccessFile: void close()>: 93
<java.io.Closeable: void close()>: 69
<java.io.IOException: void <init>(java.lang.String)>: 68
<java.io.RandomAccessFile: void writeUTF(java.lang.String)>: 67
<java.io.RandomAccessFile: void setLength(long)>: 67
<java.io.PrintWriter: void <init>(java.io.Writer)>: 66
<java.io.File: boolean isDirectory()>: 65
<java.io.FileOutputStream: void close()>: 65
<java.io.FileInputStream: int read(byte[])>: 65
<java.io.File: long length()>: 64
<java.io.FileOutputStream: void <init>(java.lang.String)>: 64
<java.io.StringWriter: void <init>()>: 64
<java.io.StringWriter: void <init>(int)>: 64
<java.io.FileWriter: void <init>(java.io.File)>: 64
<java.io.Writer: void write(int)>: 64
<java.io.FileInputStream: void <init>(java.lang.String)>: 64
<java.io.RandomAccessFile: java.lang.String readUTF()>: 62
<java.io.InputStream: int read(byte[],int,int)>: 52
<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String)>: 52
<java.lang.Object: int hashCode()>: 42
<java.io.OutputStream: void write(byte[])>: 40
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 36
<java.io.RandomAccessFile: void writeBoolean(boolean)>: 36
<java.io.RandomAccessFile: void writeLong(long)>: 36
<java.io.RandomAccessFile: void writeInt(int)>: 36
<java.io.OutputStream: void flush()>: 35
<java.io.File: void <init>(java.io.File,java.lang.String)>: 35
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 34
<java.io.BufferedReader: java.lang.String readLine()>: 34
<java.io.FileOutputStream: void write(byte[],int,int)>: 34
<java.io.BufferedReader: void <init>(java.io.Reader)>: 34
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 33
<java.io.BufferedReader: void close()>: 33
<java.io.FilterInputStream: int read(byte[])>: 33
<java.util.zip.ZipInputStream: void close()>: 32
<java.io.OutputStreamWriter: void close()>: 32
<java.io.File: long lastModified()>: 32
<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>: 32
<java.io.BufferedWriter: void flush()>: 32
<android.graphics.BitmapFactory$Options: void <init>()>: 32
<java.io.OutputStreamWriter: void flush()>: 32
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 32
<java.lang.Enum: boolean equals(java.lang.Object)>: 32
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 32
<java.io.Writer: void write(char[])>: 32
<java.io.File: java.io.File[] listFiles()>: 32
<java.io.ObjectOutputStream: void close()>: 32
<java.io.RandomAccessFile: int readInt()>: 31
<java.io.RandomAccessFile: boolean readBoolean()>: 31
<java.io.RandomAccessFile: long readLong()>: 31
<android.net.Uri$Builder: android.net.Uri build()>: 30
<java.io.PrintStream: void println(java.lang.String)>: 29
<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String,java.lang.Throwable)>: 24
<com.fasterxml.jackson.databind.JavaType: boolean equals(java.lang.Object)>: 20
<com.fasterxml.jackson.databind.JavaType: int hashCode()>: 16
<java.lang.Object: boolean equals(java.lang.Object)>: 12
<java.io.CharConversionException: void <init>(java.lang.String)>: 12
<com.fasterxml.jackson.core.JsonGenerationException: void <init>(java.lang.String)>: 12
<java.net.URL: void <init>(java.lang.String)>: 10
<java.io.InputStream: void <init>()>: 8
<java.net.InetAddress: java.lang.String toString()>: 8
<com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>: 8
<com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey: int hashCode()>: 8
<java.util.Locale: boolean equals(java.lang.Object)>: 8
<com.fasterxml.jackson.core.base.ParserBase: void close()>: 8
<com.fasterxml.jackson.core.util.ByteArrayBuilder: void <init>()>: 8
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>: 8
<java.io.OutputStream: void <init>()>: 8
<com.fasterxml.jackson.core.sym.Name: int hashCode()>: 8
<java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>: 4
<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>: 4
<java.math.BigInteger: int hashCode()>: 4
<java.net.DatagramSocket: void close()>: 4
<java.io.Reader: void <init>()>: 4
<java.io.Reader: void close()>: 4
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 4
<java.net.DatagramSocket: void <init>()>: 4
<java.net.DatagramPacket: void <init>(byte[],int)>: 4
<java.net.InetSocketAddress: int getPort()>: 4
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>: 4
<java.net.DatagramSocket: void setSoTimeout(int)>: 4
<com.fasterxml.jackson.databind.util.TokenBuffer: void close()>: 4
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String,java.lang.Throwable)>: 4
<java.net.InetSocketAddress: java.lang.String getHostName()>: 4
<com.fasterxml.jackson.core.io.MergedStream: int read(byte[],int,int)>: 4
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 4
<java.net.DatagramSocket: void receive(java.net.DatagramPacket)>: 4
<java.net.DatagramSocket: void send(java.net.DatagramPacket)>: 4
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String)>: 4
<com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>: 4
<com.fasterxml.jackson.databind.deser.UnresolvedForwardReference: void <init>(java.lang.String)>: 4
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 4
<java.net.InetSocketAddress: java.net.InetAddress getAddress()>: 4
<java.lang.Double: int hashCode()>: 4
<com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey: boolean equals(java.lang.Object)>: 4
<com.fasterxml.jackson.core.JsonParser: void close()>: 4
<java.io.Reader: int read(char[],int,int)>: 4
<java.io.InvalidObjectException: void <init>(java.lang.String)>: 3
<java.io.FilterOutputStream: void write(byte[])>: 3
<java.io.FilterOutputStream: void close()>: 3
<java.io.PrintWriter: void <init>(java.io.OutputStream)>: 2
<java.util.zip.ZipOutputStream: void <init>(java.io.OutputStream)>: 2
<java.net.URI: void <init>(java.lang.String)>: 2
<java.io.InputStream: int available()>: 2
<java.io.FileWriter: void <init>(java.lang.String)>: 2
<android.graphics.Bitmap: int getHeight()>: 2
<java.io.PrintWriter: void close()>: 2
<android.graphics.Bitmap: int getWidth()>: 2
<java.io.PrintWriter: void println(java.lang.String)>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 2
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 1
<java.net.URLConnection: void setDoOutput(boolean)>: 1
<java.io.ByteArrayInputStream: void close()>: 1
<java.net.URL: java.net.URLConnection openConnection()>: 1
<java.io.BufferedOutputStream: void write(byte[],int,int)>: 1
<java.net.URL: java.io.InputStream openStream()>: 1
<java.io.ByteArrayInputStream: void <init>(byte[])>: 1
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 1
<java.util.zip.GZIPInputStream: void close()>: 1
<java.io.DataOutputStream: void <init>(java.io.OutputStream)>: 1
<java.io.DataOutputStream: void write(byte[],int,int)>: 1
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 1
<java.io.File: boolean canRead()>: 1
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 1
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>: 1
<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>: 1
<java.io.DataOutputStream: void writeBytes(java.lang.String)>: 1
<java.net.URLConnection: java.io.InputStream getInputStream()>: 1
<java.io.File: boolean isFile()>: 1
<java.io.ByteArrayOutputStream: void <init>()>: 1
<java.io.DataOutputStream: void flush()>: 1
<java.net.URLConnection: void setDoInput(boolean)>: 1
<java.io.ByteArrayOutputStream: void close()>: 1
<java.io.FileOutputStream: void write(byte[])>: 1
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 1
<java.net.URLConnection: void setUseCaches(boolean)>: 1
