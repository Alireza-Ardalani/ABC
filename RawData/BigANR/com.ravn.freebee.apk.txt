Duration => 591
UI Thread => 72
Worker Thread => 2481

----------------StartUI----------------
<java.io.PrintStream: void println(java.lang.String)>: 28
<java.lang.String: boolean equals(java.lang.Object)>: 16
<java.net.URL: void <init>(java.lang.String)>: 6
<java.net.URL: java.lang.String getProtocol()>: 2
<java.net.URL: java.lang.String getPath()>: 2
<java.net.URL: java.lang.String getAuthority()>: 2
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 2
<java.io.File: void <init>(java.io.File,java.lang.String)>: 2
<java.io.BufferedReader: java.lang.String readLine()>: 1
<java.io.BufferedReader: void <init>(java.io.Reader,int)>: 1
<android.graphics.BitmapFactory$Options: void <init>()>: 1
<java.io.File: boolean canWrite()>: 1
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 1
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 1
<java.io.File: boolean canRead()>: 1
<java.lang.String: int hashCode()>: 1
<java.io.File: void <init>(java.lang.String)>: 1
<java.io.File: boolean mkdirs()>: 1
<java.io.File: boolean exists()>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 251
<java.io.PrintStream: void println(java.lang.String)>: 178
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 96
<android.database.sqlite.SQLiteOpenHelper: void close()>: 90
<java.lang.Object: boolean equals(java.lang.Object)>: 75
<android.graphics.Bitmap: int getHeight()>: 63
<android.graphics.Bitmap: int getWidth()>: 63
<java.io.File: boolean exists()>: 54
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 45
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 45
<java.net.URL: void <init>(java.lang.String)>: 45
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 36
<java.io.ByteArrayOutputStream: void <init>()>: 36
<java.io.File: boolean delete()>: 36
<java.net.URL: java.lang.String toString()>: 32
<java.io.FileInputStream: void <init>(java.io.File)>: 27
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 27
<java.io.File: void <init>(java.lang.String)>: 27
<java.io.DataOutputStream: void writeBytes(java.lang.String)>: 27
<java.io.File: java.lang.String getAbsolutePath()>: 27
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 26
<java.io.File: void <init>(java.io.File,java.lang.String)>: 26
<java.io.File: boolean mkdirs()>: 26
<java.net.URL: java.net.URLConnection openConnection()>: 25
<java.net.URLConnection: java.io.InputStream getInputStream()>: 25
<java.net.URI: java.lang.String getHost()>: 24
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 22
<android.database.sqlite.SQLiteStatement: long simpleQueryForLong()>: 18
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>: 18
<java.io.File: long lastModified()>: 18
<java.io.File: long length()>: 18
<java.io.OutputStream: void write(byte[],int,int)>: 18
<java.io.File: java.lang.String getName()>: 18
<java.io.File: boolean createNewFile()>: 18
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 18
<android.graphics.BitmapFactory$Options: void <init>()>: 18
<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>: 18
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 18
<android.database.Cursor: void close()>: 18
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 18
<android.database.sqlite.SQLiteClosable: void close()>: 18
<java.net.URLConnection: void setDoOutput(boolean)>: 17
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 17
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>: 17
<java.io.IOException: void <init>(java.lang.String)>: 17
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 17
<java.io.OutputStream: void close()>: 17
<java.io.InputStream: int read(byte[])>: 17
<java.io.InputStream: void close()>: 17
<java.net.URLConnection: void setConnectTimeout(int)>: 17
<java.nio.channels.spi.AbstractInterruptibleChannel: void close()>: 16
<java.nio.channels.Channel: void close()>: 16
<java.nio.channels.SocketChannel: int read(java.nio.ByteBuffer)>: 16
<java.net.URI: java.lang.String getScheme()>: 16
<java.net.URL: java.lang.String getProtocol()>: 15
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 9
<java.io.IOException: void <init>()>: 9
<java.net.Proxy: void <init>(java.net.Proxy$Type,java.net.SocketAddress)>: 9
<android.graphics.Bitmap: void recycle()>: 9
<java.net.URL: java.lang.String getHost()>: 9
<java.io.Closeable: void close()>: 9
<java.io.FileInputStream: java.io.FileDescriptor getFD()>: 9
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 9
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 9
<java.io.ByteArrayOutputStream: void <init>(int)>: 9
<java.io.ByteArrayInputStream: void <init>(byte[])>: 9
<java.net.HttpURLConnection: int getResponseCode()>: 9
<java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>: 9
<java.io.DataOutputStream: void <init>(java.io.OutputStream)>: 9
<java.net.URL: int getPort()>: 9
<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)>: 9
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 9
<java.io.File: boolean canWrite()>: 9
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>: 9
<java.io.File: java.io.File getParentFile()>: 9
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 9
<java.net.URI: java.net.URL toURL()>: 9
<java.net.URLConnection: java.lang.String getContentEncoding()>: 9
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 9
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 9
<java.io.File: boolean renameTo(java.io.File)>: 9
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 9
<com.androidquery.util.PredefinedBAOS: void <init>(int)>: 9
<android.database.sqlite.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)>: 9
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>: 9
<java.net.URI: java.lang.String getAuthority()>: 9
<java.io.FileOutputStream: void <init>(java.io.File)>: 9
<java.io.FilterOutputStream: void write(byte[])>: 9
<com.androidquery.util.PredefinedBAOS: byte[] toByteArray()>: 9
<java.io.DataOutputStream: void flush()>: 9
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>: 9
<java.io.FileInputStream: void <init>(java.lang.String)>: 9
<java.net.URLConnection: void setDoInput(boolean)>: 9
<java.io.FilterOutputStream: void close()>: 9
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 9
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 9
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>: 9
<java.net.URLConnection: void setUseCaches(boolean)>: 9
<java.net.Socket: java.net.SocketAddress getLocalSocketAddress()>: 8
<java.nio.channels.Selector: void close()>: 8
<java.nio.CharBuffer: java.lang.String toString()>: 8
<java.nio.channels.spi.AbstractInterruptibleChannel: boolean isOpen()>: 8
<java.net.URI: java.net.URI create(java.lang.String)>: 8
<java.net.InetSocketAddress: int getPort()>: 8
<java.io.BufferedReader: java.lang.String readLine()>: 8
<java.net.URI: int getPort()>: 8
<java.nio.channels.Selector: java.nio.channels.Selector open()>: 8
<java.net.URLConnection: void setReadTimeout(int)>: 8
<java.io.OutputStream: void write(byte[])>: 8
<java.nio.channels.SocketChannel: java.nio.channels.SocketChannel open()>: 8
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 8
<java.net.URI: java.lang.String getPath()>: 8
<java.nio.channels.ReadableByteChannel: int read(java.nio.ByteBuffer)>: 8
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 8
<java.net.URI: java.lang.String getQuery()>: 8
<java.io.BufferedReader: void <init>(java.io.Reader)>: 8
<java.net.URL: java.lang.String getPath()>: 6
<java.net.URL: java.lang.String getAuthority()>: 6
