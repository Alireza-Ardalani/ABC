Duration => 2109
UI Thread => 590
Worker Thread => 13164

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 87
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 49
<java.io.PrintWriter: void println(java.lang.Object)>: 44
<java.io.PrintStream: void println(java.lang.Object)>: 44
<java.io.File: boolean exists()>: 17
<android.database.Cursor: void close()>: 15
<java.io.File: void <init>(java.lang.String)>: 14
<java.io.File: void <init>(java.io.File,java.lang.String)>: 13
<java.io.File: java.lang.String getAbsolutePath()>: 13
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 11
<java.io.File: boolean delete()>: 11
<java.net.URL: void <init>(java.lang.String)>: 10
<java.net.URI: java.lang.String toString()>: 9
<java.io.IOException: void <init>(java.lang.String)>: 9
<java.io.OutputStream: void write(byte[])>: 7
<java.io.File: java.io.File[] listFiles()>: 7
<java.io.File: boolean mkdirs()>: 7
<android.graphics.BitmapFactory$Options: void <init>()>: 6
<java.net.URL: java.lang.String getPath()>: 6
<java.net.URL: java.lang.String getHost()>: 6
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>: 6
<java.net.URI: void <init>(java.lang.String)>: 6
<java.net.URI: java.lang.String getRawFragment()>: 6
<java.net.URL: java.lang.String getProtocol()>: 6
<java.net.URI: java.lang.String getRawUserInfo()>: 6
<java.net.URI: java.lang.String getHost()>: 6
<java.net.URI: java.lang.String getRawQuery()>: 6
<java.net.URL: java.net.URI toURI()>: 6
<java.net.URI: int getPort()>: 6
<java.net.URL: int getPort()>: 6
<java.net.URISyntaxException: void <init>(java.lang.String,java.lang.String)>: 6
<android.graphics.Bitmap: boolean isRecycled()>: 6
<java.net.URI: java.lang.String getRawPath()>: 6
<java.net.URI: java.lang.String getScheme()>: 6
<android.database.sqlite.SQLiteStatement: long simpleQueryForLong()>: 5
<java.io.File: boolean isDirectory()>: 5
<java.io.File: java.lang.String getName()>: 5
<java.io.File: long length()>: 4
<java.net.URI: java.net.URI create(java.lang.String)>: 4
<java.io.ByteArrayOutputStream: void <init>()>: 4
<java.net.URI: java.net.URI normalize()>: 4
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 3
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 3
<android.net.Uri$Builder: android.net.Uri build()>: 3
<java.io.InputStream: int read(byte[])>: 3
<java.io.File: java.net.URI toURI()>: 3
<java.io.File: java.lang.String getPath()>: 3
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 3
<java.lang.String: int hashCode()>: 3
<android.net.NetworkInfo: boolean isConnected()>: 3
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 3
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 3
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 2
<java.io.OutputStream: void close()>: 2
<java.io.IOException: void <init>()>: 2
<java.io.File: boolean renameTo(java.io.File)>: 2
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 2
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>: 2
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 2
<java.io.File: boolean mkdir()>: 2
<java.io.OutputStream: void flush()>: 2
<java.io.Writer: void write(java.lang.String)>: 2
<java.io.Writer: void close()>: 2
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 2
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>: 2
<java.io.FileOutputStream: void <init>(java.io.File)>: 2
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>: 1
<java.io.FileInputStream: void <init>(java.io.File)>: 1
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 1
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 1
<java.io.InputStream: void close()>: 1
<android.net.Uri: boolean equals(java.lang.Object)>: 1
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 1
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: void close()>: 1
<java.lang.Object: boolean equals(java.lang.Object)>: 1
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(android.net.Network)>: 1
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 1
<java.nio.charset.Charset: boolean equals(java.lang.Object)>: 1
<java.lang.Enum: boolean equals(java.lang.Object)>: 1
<android.database.sqlite.SQLiteStatement: java.lang.String simpleQueryForString()>: 1
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>: 1
<java.io.ByteArrayOutputStream: void <init>(int)>: 1
<android.net.ConnectivityManager: android.net.Network[] getAllNetworks()>: 1
<java.io.InputStream: int read(byte[],int,int)>: 1
<java.io.File: boolean createNewFile()>: 1
<android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat valueOf(java.lang.String)>: 1
<java.lang.Object: int hashCode()>: 1
<java.io.Writer: void flush()>: 1
<java.io.File: java.io.File getParentFile()>: 1
<java.io.PrintStream: void println(java.lang.String)>: 1
<java.io.EOFException: void <init>()>: 1
<java.io.FileOutputStream: void close()>: 1
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>: 1
<android.net.NetworkInfo: java.lang.String getTypeName()>: 1
<java.io.InputStream: int available()>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 1301
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 546
<java.io.File: void <init>(java.io.File,java.lang.String)>: 371
<java.io.File: boolean exists()>: 361
<java.lang.Throwable: java.lang.String getMessage()>: 351
<android.graphics.Bitmap: int getHeight()>: 331
<java.io.IOException: void <init>(java.lang.String)>: 327
<android.graphics.Bitmap: int getWidth()>: 325
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 234
<java.io.OutputStream: void write(byte[])>: 232
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 202
<java.io.File: boolean isDirectory()>: 199
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 195
<java.io.PrintStream: void println(java.lang.String)>: 195
<java.io.File: void <init>(java.lang.String)>: 181
<android.graphics.Bitmap: void recycle()>: 175
<java.io.InputStream: void close()>: 172
<java.io.File: boolean mkdirs()>: 169
<java.lang.String: int hashCode()>: 161
<android.database.Cursor: void close()>: 158
<java.net.URI: java.lang.String getHost()>: 156
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 156
<java.io.File: boolean delete()>: 145
<java.io.ByteArrayOutputStream: void <init>()>: 126
<android.database.sqlite.SQLiteStatement: long simpleQueryForLong()>: 117
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>: 117
<java.io.File: java.lang.String[] list()>: 117
<java.lang.Object: boolean equals(java.lang.Object)>: 117
<java.nio.channels.spi.AbstractInterruptibleChannel: boolean isOpen()>: 117
<java.io.OutputStream: void close()>: 117
<java.io.EOFException: void <init>()>: 117
<android.net.Uri: java.lang.String encode(java.lang.String)>: 117
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 116
<java.io.File: java.lang.String getName()>: 115
<java.io.InputStream: int read(byte[])>: 115
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 103
<java.io.FileOutputStream: void <init>(java.io.File)>: 98
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 97
<android.net.NetworkInfo: boolean isConnected()>: 97
<android.graphics.BitmapFactory$Options: void <init>()>: 91
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 89
<java.io.OutputStream: void flush()>: 85
<java.io.File: java.io.File getParentFile()>: 81
<android.graphics.Bitmap: int getPixel(int,int)>: 79
<java.io.BufferedReader: void <init>(java.io.Reader)>: 79
<java.net.InetSocketAddress: int getPort()>: 78
<java.io.File: java.lang.String getParent()>: 78
<java.nio.channels.Channel: void close()>: 78
<java.net.URI: int getPort()>: 78
<java.nio.channels.SocketChannel: int read(java.nio.ByteBuffer)>: 78
<java.net.URI: java.lang.String getScheme()>: 78
<java.io.FileNotFoundException: void <init>(java.lang.String)>: 78
<java.nio.channels.ReadableByteChannel: int read(java.nio.ByteBuffer)>: 78
<java.io.File: java.lang.String toString()>: 78
<java.io.File: java.lang.String getAbsolutePath()>: 66
<java.io.File: long length()>: 59
<java.io.OutputStream: void write(byte[],int,int)>: 53
<java.io.Closeable: void close()>: 52
<java.io.ByteArrayInputStream: void <init>(byte[])>: 51
<java.net.HttpURLConnection: int getResponseCode()>: 51
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 51
<java.io.Writer: void write(char[],int,int)>: 49
<java.net.URL: java.net.URLConnection openConnection()>: 46
<java.net.URL: void <init>(java.lang.String)>: 46
<java.net.URLConnection: java.io.InputStream getInputStream()>: 46
<java.net.URLConnection: void setConnectTimeout(int)>: 46
<java.io.FileInputStream: void <init>(java.io.File)>: 45
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 45
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 45
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 45
<android.graphics.Bitmap: boolean isRecycled()>: 45
<java.io.File: java.io.File[] listFiles()>: 42
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 41
<java.io.Reader: int read(char[])>: 40
<java.lang.Object: java.lang.String toString()>: 40
<java.io.StringWriter: void <init>()>: 40
<java.io.File: boolean canWrite()>: 40
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 40
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 40
<okhttp3.Response: void close()>: 40
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 40
<java.io.File: java.io.File getAbsoluteFile()>: 39
<java.net.Socket: java.net.SocketAddress getLocalSocketAddress()>: 39
<java.nio.channels.spi.AbstractInterruptibleChannel: void close()>: 39
<org.java_websocket.SSLSocketChannel2: int read(java.nio.ByteBuffer)>: 39
<java.net.URI: void <init>(java.lang.String)>: 39
<java.net.URLConnection: void setDoOutput(boolean)>: 39
<java.nio.CharBuffer: java.lang.String toString()>: 39
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 39
<java.net.URL: java.io.InputStream openStream()>: 39
<com.cuebiq.cuebiqsdk.model.wrapper.Information: boolean equals(java.lang.Object)>: 39
<java.net.URLConnection: java.util.Map getHeaderFields()>: 39
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory$Options)>: 39
<java.io.BufferedReader: java.lang.String readLine()>: 39
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 39
<java.net.URI: java.lang.String getRawQuery()>: 39
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 39
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>: 39
<java.net.URLConnection: java.lang.String getContentType()>: 39
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 39
<java.nio.channels.spi.SelectorProvider: java.nio.channels.spi.SelectorProvider provider()>: 39
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 39
<java.lang.Object: int hashCode()>: 39
<java.io.File: boolean canRead()>: 39
<java.io.EOFException: void <init>(java.lang.String)>: 39
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 39
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 39
<java.net.InetSocketAddress: java.lang.String getHostName()>: 39
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 39
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>: 39
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 39
<java.net.URL: java.lang.String toString()>: 39
<java.io.File: boolean equals(java.lang.Object)>: 39
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 39
<com.cuebiq.cuebiqsdk.model.wrapper.Geo: boolean equals(java.lang.Object)>: 39
<java.net.URL: void <init>(java.net.URL,java.lang.String)>: 39
<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>: 39
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 39
<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>: 39
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 39
<java.io.BufferedReader: void close()>: 39
<java.net.URI: java.lang.String getPath()>: 39
<android.os.ParcelFileDescriptor: void close()>: 39
<java.io.File: java.io.File getCanonicalFile()>: 39
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 39
<java.net.URI: java.lang.String getQuery()>: 39
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>: 39
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 39
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 38
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 38
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 37
<java.net.URI: java.net.URI create(java.lang.String)>: 36
<java.net.URI: java.net.URI normalize()>: 36
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>: 24
<java.io.File: boolean renameTo(java.io.File)>: 18
<java.io.InputStream: int read(byte[],int,int)>: 18
<java.io.Writer: void write(java.lang.String)>: 14
<java.io.Writer: void flush()>: 13
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>: 13
<java.io.InputStream: void reset()>: 12
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 12
<java.io.InputStream: boolean markSupported()>: 12
<java.io.OutputStream: void <init>()>: 8
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$2: void <init>()>: 7
<java.net.URLConnection: void setReadTimeout(int)>: 7
<java.io.FileInputStream: void <init>(java.lang.String)>: 7
<java.io.IOException: void <init>()>: 6
<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>: 6
<java.io.InputStream: void <init>()>: 6
<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>: 6
<android.graphics.Bitmap: int getRowBytes()>: 6
<java.io.FilterInputStream: void <init>(java.io.InputStream)>: 6
<java.io.InputStream: int available()>: 6
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot: void close()>: 6
<com.nostra13.universalimageloader.core.assist.FlushedInputStream: void <init>(java.io.InputStream)>: 6
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 6
<java.net.URLConnection: int getContentLength()>: 6
<java.io.FileOutputStream: void close()>: 3
<com.fasterxml.jackson.core.io.UTF8Writer: void write(int)>: 2
<okhttp3.ResponseBody: void close()>: 2
<java.io.File: boolean createNewFile()>: 2
<com.fasterxml.jackson.core.base.GeneratorBase: void close()>: 2
<com.fasterxml.jackson.core.io.UTF8Writer: void write(java.lang.String,int,int)>: 1
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>: 1
<java.io.File: boolean mkdir()>: 1
<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>: 1
<java.io.BufferedInputStream: void close()>: 1
<java.io.Writer: void <init>()>: 1
<com.fasterxml.jackson.core.JsonGenerator: void close()>: 1
<java.io.Writer: void close()>: 1
