Duration => 91
UI Thread => 111
Worker Thread => 119

----------------StartUI----------------
<java.io.File: boolean exists()>: 8
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 7
<java.io.File: void <init>(java.lang.String)>: 7
<de.greenrobot.dao.DaoException: void <init>(java.lang.String)>: 5
<java.io.File: void <init>(java.io.File,java.lang.String)>: 5
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 4
<java.io.File: java.lang.String getPath()>: 4
<android.database.CursorWindow: int getNumRows()>: 4
<java.io.FileOutputStream: void <init>(java.io.File)>: 4
<java.io.OutputStream: void write(byte[])>: 3
<android.net.wifi.p2p.WifiP2pManager: android.net.wifi.p2p.WifiP2pManager$Channel initialize(android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager$ChannelListener)>: 3
<java.io.FileOutputStream: void close()>: 3
<java.io.File: boolean mkdirs()>: 3
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 2
<java.io.InputStream: int read(byte[])>: 2
<java.io.OutputStream: void flush()>: 2
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 2
<java.io.RandomAccessFile: void readFully(byte[])>: 2
<java.io.RandomAccessFile: long length()>: 2
<java.io.RandomAccessFile: void close()>: 2
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>: 2
<android.database.CursorWindow: long getLong(int,int)>: 1
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 1
<android.graphics.BitmapFactory$Options: void <init>()>: 1
<java.io.OutputStream: void close()>: 1
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 1
<java.io.FileInputStream: void <init>(java.io.File)>: 1
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>: 1
<java.io.File: long length()>: 1
<android.database.CursorWindow: int getStartPosition()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 1
<java.io.OutputStream: void write(byte[],int,int)>: 1
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 1
<java.io.File: boolean mkdir()>: 1
<android.net.wifi.p2p.WifiP2pManager: void requestConnectionInfo(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ConnectionInfoListener)>: 1
<android.database.CursorWindow: java.lang.String getString(int,int)>: 1
<android.database.CursorWindow: int getInt(int,int)>: 1
<java.io.FileInputStream: void close()>: 1
<android.graphics.Bitmap: int getHeight()>: 1
<android.net.NetworkInfo: java.lang.String toString()>: 1
<java.io.File: boolean createNewFile()>: 1
<java.lang.String: int hashCode()>: 1
<android.graphics.Bitmap: int getWidth()>: 1
<java.io.ByteArrayOutputStream: void <init>()>: 1
<android.net.NetworkInfo: java.lang.String getReason()>: 1
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 1
<android.database.SQLException: void <init>(java.lang.String)>: 1
<android.net.NetworkInfo: boolean isConnected()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 1
<java.lang.Object: int hashCode()>: 1
<java.io.File: java.lang.String getAbsolutePath()>: 1
<java.io.PrintStream: void println(java.lang.Object)>: 1
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 1
<java.io.PrintStream: void println(java.lang.String)>: 1
<android.database.Cursor: void close()>: 1
<android.net.wifi.p2p.WifiP2pManager: void removeGroup(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)>: 1
----------------StartWorker----------------
<de.greenrobot.dao.DaoException: void <init>(java.lang.String)>: 33
<android.database.SQLException: void <init>(java.lang.String)>: 9
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 7
<java.io.PrintStream: void println(java.lang.Object)>: 5
<android.database.Cursor: void close()>: 5
<android.database.CursorWindow: long getLong(int,int)>: 4
<java.io.FileOutputStream: void <init>(java.io.File)>: 4
<java.io.InputStream: int read(byte[])>: 4
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 4
<android.bluetooth.BluetoothSocket: void close()>: 4
<android.database.CursorWindow: java.lang.String getString(int,int)>: 4
<java.io.FileOutputStream: void close()>: 4
<android.database.CursorWindow: int getInt(int,int)>: 4
<java.io.OutputStream: void write(byte[])>: 3
<java.io.RandomAccessFile: void readFully(byte[])>: 2
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 2
<java.io.FileOutputStream: void write(byte[],int,int)>: 2
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 2
<android.bluetooth.BluetoothServerSocket: void close()>: 2
<java.io.RandomAccessFile: long length()>: 2
<java.io.RandomAccessFile: void close()>: 2
<java.io.PrintStream: void println(java.lang.String)>: 2
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>: 2
<java.io.File: void <init>(java.lang.String)>: 2
<java.io.File: void <init>(java.io.File,java.lang.String)>: 2
<java.io.File: boolean exists()>: 2
<java.io.OutputStream: void flush()>: 1
