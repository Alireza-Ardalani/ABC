Duration => 6052
UI Thread => 1393
Worker Thread => 6706

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 184
<java.lang.Object: boolean equals(java.lang.Object)>: 182
<java.lang.Object: int hashCode()>: 143
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 51
<java.io.IOException: void <init>(java.lang.String)>: 33
<io.realm.Realm: void close()>: 33
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 24
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 24
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 23
<java.io.ByteArrayOutputStream: void <init>()>: 23
<java.io.File: boolean mkdirs()>: 22
<java.net.HttpURLConnection: int getResponseCode()>: 20
<java.io.PrintStream: void println(java.lang.String)>: 20
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>: 20
<java.io.InputStream: int read(byte[],int,int)>: 20
<java.io.BufferedReader: java.lang.String readLine()>: 19
<java.io.BufferedReader: void close()>: 19
<java.io.BufferedReader: void <init>(java.io.Reader,int)>: 18
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 18
<java.io.PrintStream: void println(java.lang.Object)>: 16
<java.io.PrintWriter: void println(java.lang.Object)>: 16
<java.io.File: boolean exists()>: 15
<java.io.File: void <init>(java.io.File,java.lang.String)>: 15
<java.io.DataOutputStream: void writeInt(int)>: 13
<java.io.DataOutputStream: void <init>(java.io.OutputStream)>: 13
<java.io.DataOutputStream: void writeLong(long)>: 13
<java.io.FilterOutputStream: void write(byte[])>: 13
<java.io.FilterOutputStream: void close()>: 13
<java.net.URL: void <init>(java.lang.String)>: 12
<java.io.File: boolean isDirectory()>: 11
<java.io.OutputStream: void flush()>: 11
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 11
<java.io.Writer: void write(java.lang.String)>: 11
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 10
<okhttp3.ResponseBody: void close()>: 10
<java.net.URLConnection: void setDoOutput(boolean)>: 10
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 10
<java.net.URL: java.net.URLConnection openConnection()>: 10
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 10
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 10
<java.io.File: java.io.File getParentFile()>: 10
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 10
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 10
<android.net.Uri$Builder: android.net.Uri build()>: 10
<java.net.URLConnection: void setReadTimeout(int)>: 10
<java.io.OutputStreamWriter: void flush()>: 10
<java.net.URLConnection: java.io.InputStream getInputStream()>: 10
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>: 10
<java.net.URLConnection: void setConnectTimeout(int)>: 10
<java.io.File: java.io.File getCanonicalFile()>: 10
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 10
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 9
<android.database.Cursor: void close()>: 9
<java.io.ByteArrayInputStream: void <init>(byte[])>: 8
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 7
<com.nike.snkrs.database.SnkrsDatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 7
<java.io.Closeable: void close()>: 7
<com.nike.snkrs.database.SnkrsDatabaseHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 7
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 6
<java.io.File: java.lang.String getAbsolutePath()>: 5
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 4
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 3
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 2
<java.net.URL: java.io.InputStream openStream()>: 2
<android.net.http.SslError: int getPrimaryError()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 2
<java.io.File: void <init>(java.lang.String)>: 2
<android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>: 2
<android.net.Uri$Builder: android.net.Uri$Builder clearQuery()>: 2
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int,android.database.DatabaseErrorHandler)>: 2
<java.io.InputStream: void close()>: 2
<android.graphics.Bitmap: int getHeight()>: 2
<android.graphics.Bitmap: int getWidth()>: 2
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>: 2
<java.io.FileReader: void <init>(java.io.File)>: 1
<java.io.FileOutputStream: java.io.FileDescriptor getFD()>: 1
<java.io.FileInputStream: void <init>(java.io.File)>: 1
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>: 1
<java.io.File: long length()>: 1
<java.io.File: boolean setExecutable(boolean,boolean)>: 1
<java.io.OutputStream: void write(byte[],int,int)>: 1
<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>: 1
<java.io.File: java.lang.String getName()>: 1
<android.net.http.SslError: android.net.http.SslCertificate getCertificate()>: 1
<java.io.File: boolean setWritable(boolean)>: 1
<java.io.File: boolean createNewFile()>: 1
<java.lang.String: int hashCode()>: 1
<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>: 1
<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>: 1
<android.content.pm.Signature: int hashCode()>: 1
<android.net.Uri$Builder: void <init>()>: 1
<java.io.BufferedWriter: void flush()>: 1
<java.io.FileWriter: void <init>(java.io.File)>: 1
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>: 1
<java.io.InputStream: int read(byte[])>: 1
<android.net.NetworkInfo: int getType()>: 1
<java.util.zip.ZipFile: void close()>: 1
<java.io.BufferedWriter: void close()>: 1
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>: 1
<java.io.File: java.lang.String getCanonicalPath()>: 1
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 1
<java.io.File: boolean setReadable(boolean,boolean)>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<java.io.FileDescriptor: void sync()>: 1
<com.nike.snkrs.models.FeedLocale: boolean equals(java.lang.Object)>: 1
<java.io.File: boolean delete()>: 1
<java.io.EOFException: void <init>()>: 1
<android.net.http.SslCertificate$DName: java.lang.String getOName()>: 1
<java.io.BufferedReader: void <init>(java.io.Reader)>: 1
<android.net.http.SslError: java.lang.String getUrl()>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 663
<java.lang.Object: int hashCode()>: 352
<java.io.Writer: void write(java.lang.String)>: 280
<java.net.URLConnection: java.net.URL getURL()>: 215
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>: 172
<java.net.HttpURLConnection: int getResponseCode()>: 170
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 159
<java.io.IOException: void <init>(java.lang.String)>: 155
<android.net.NetworkInfo: int getType()>: 150
<java.net.URL: void <init>(java.lang.String)>: 137
<java.net.HttpURLConnection: java.lang.String getRequestMethod()>: 129
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 129
<java.net.URLConnection: int getContentLength()>: 129
<java.lang.Object: boolean equals(java.lang.Object)>: 116
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 115
<java.net.URLConnection: void setReadTimeout(int)>: 115
<java.net.URLConnection: void setConnectTimeout(int)>: 115
<java.net.URLConnection: java.io.InputStream getInputStream()>: 111
<java.io.InputStream: int read(byte[],int,int)>: 98
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 94
<com.newrelic.agent.android.instrumentation.io.CountingInputStream: int available()>: 86
<java.net.URL: java.lang.String getHost()>: 86
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 86
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 86
<java.net.URLConnection: java.lang.String getContentType()>: 80
<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getErrorStream()>: 79
<java.net.URLConnection: void setDoInput(boolean)>: 67
<java.net.URLConnection: void setDoOutput(boolean)>: 66
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 66
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 64
<android.net.NetworkInfo: int getSubtype()>: 64
<java.io.ByteArrayOutputStream: void <init>()>: 64
<android.net.NetworkInfo: boolean isConnected()>: 64
<java.io.File: void <init>(java.io.File,java.lang.String)>: 58
<java.net.URL: java.net.URLConnection openConnection()>: 51
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 49
<java.io.BufferedReader: java.lang.String readLine()>: 48
<java.io.BufferedReader: void close()>: 48
<com.newrelic.agent.android.instrumentation.HttpURLConnectionExtension: java.io.InputStream getErrorStream()>: 47
<io.realm.internal.OsSharedRealm: void close()>: 45
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>: 44
<java.io.File: boolean mkdirs()>: 44
<java.net.URL: java.lang.String getPath()>: 43
<java.net.HttpURLConnection: void <init>(java.net.URL)>: 43
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 43
<java.io.InputStream: void <init>()>: 43
<java.io.OutputStream: void flush()>: 43
<java.io.StringWriter: void <init>()>: 43
<java.net.URL: int getPort()>: 43
<java.io.InputStream: int available()>: 43
<java.io.Writer: void write(int)>: 43
<javax.net.ssl.HttpsURLConnection: void <init>(java.net.URL)>: 43
<java.net.URL: java.lang.String toString()>: 43
<java.io.Writer: java.io.Writer append(char)>: 43
<java.io.StringWriter: java.lang.String toString()>: 43
<java.net.URL: java.lang.String getProtocol()>: 43
<java.io.Writer: void write(java.lang.String,int,int)>: 43
<android.net.NetworkInfo: java.lang.String getTypeName()>: 43
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>: 42
<java.io.File: boolean exists()>: 37
<java.io.OutputStream: void <init>()>: 36
<java.io.File: void <init>(java.lang.String)>: 33
<java.io.BufferedReader: void <init>(java.io.Reader)>: 26
<java.io.DataOutputStream: void <init>(java.io.OutputStream)>: 24
<java.io.FilterOutputStream: void write(byte[])>: 24
<java.io.FilterOutputStream: void close()>: 24
<java.io.BufferedReader: void <init>(java.io.Reader,int)>: 23
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 23
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 22
<java.io.File: boolean isDirectory()>: 22
<okhttp3.ResponseBody: void close()>: 22
<java.io.File: java.io.File getParentFile()>: 22
<java.io.OutputStreamWriter: void flush()>: 22
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>: 22
<java.io.File: java.io.File getCanonicalFile()>: 22
<java.io.FileInputStream: void <init>(java.io.File)>: 21
<java.io.FileInputStream: int available()>: 21
<java.io.File: java.lang.String getPath()>: 21
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>: 21
<java.io.FileInputStream: void close()>: 21
<java.io.FileOutputStream: void close()>: 21
<java.io.OutputStream: void write(byte[])>: 21
<java.io.FileOutputStream: void <init>(java.io.File)>: 21
<android.net.wifi.WifiInfo: java.lang.String getSSID()>: 21
<java.io.File: boolean delete()>: 21
<java.io.FileOutputStream: void write(byte[])>: 21
<java.io.ByteArrayOutputStream: void close()>: 21
<java.io.FileInputStream: int read(byte[])>: 21
<java.io.DataOutputStream: void writeInt(int)>: 20
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 20
<java.io.DataOutputStream: void writeLong(long)>: 20
<java.io.File: java.lang.String getName()>: 18
<java.net.URI: void <init>(java.lang.String)>: 15
<io.realm.aa: boolean equals(java.lang.Object)>: 15
<io.realm.internal.l: boolean equals(java.lang.Object)>: 15
<io.realm.a: void close()>: 15
<io.realm.internal.RealmNotifier: void close()>: 15
<java.io.File: boolean equals(java.lang.Object)>: 15
<java.lang.Boolean: boolean equals(java.lang.Object)>: 15
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>: 14
<java.io.PrintStream: void println(java.lang.Object)>: 13
<java.io.PrintWriter: void println(java.lang.Object)>: 13
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 10
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 10
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 8
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 5
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 4
<com.nike.snkrs.database.SnkrsDatabaseHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 4
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 4
<android.database.sqlite.SQLiteDatabase: boolean deleteDatabase(java.io.File)>: 4
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 4
<java.io.DataOutputStream: void flush()>: 4
<android.database.sqlite.SQLiteClosable: void close()>: 4
<android.database.Cursor: void close()>: 3
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int,android.database.DatabaseErrorHandler)>: 2
<com.newrelic.agent.android.harvest.ConnectInformation: boolean equals(java.lang.Object)>: 2
<java.io.Reader: int read(char[])>: 1
<com.newrelic.com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>: 1
<com.newrelic.com.google.gson.internal.bind.JsonTreeWriter$1: void <init>()>: 1
<java.io.EOFException: void <init>(java.lang.String)>: 1
<java.io.Writer: void <init>()>: 1
<com.newrelic.agent.android.harvest.DeviceInformation: boolean equals(java.lang.Object)>: 1
<java.io.InputStream: void close()>: 1
<io.realm.Realm: void close()>: 1
<com.newrelic.agent.android.harvest.ApplicationInformation: boolean equals(java.lang.Object)>: 1
<java.io.RandomAccessFile: void close()>: 1
<java.io.StringReader: void <init>(java.lang.String)>: 1
<java.io.Reader: int read(char[],int,int)>: 1
