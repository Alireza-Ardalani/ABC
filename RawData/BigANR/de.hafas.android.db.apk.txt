Duration => 13352
UI Thread => 403
Worker Thread => 14051

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 140
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 57
<java.lang.String: int hashCode()>: 26
<java.lang.Object: boolean equals(java.lang.Object)>: 22
<android.net.Uri$Builder: android.net.Uri build()>: 17
<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>: 15
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 14
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 10
<java.net.ProxySelector: java.net.ProxySelector getDefault()>: 7
<java.io.File: void <init>(java.io.File,java.lang.String)>: 7
<java.lang.reflect.Method: boolean equals(java.lang.Object)>: 7
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 6
<android.database.Cursor: void close()>: 5
<java.io.File: boolean exists()>: 4
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 4
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 3
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 3
<android.net.Uri$Builder: java.lang.String toString()>: 3
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 3
<java.io.File: java.lang.String getAbsolutePath()>: 3
<de.bahn.dbnav.utils.tracking.a: boolean equals(java.lang.Object)>: 2
<java.io.BufferedReader: java.lang.String readLine()>: 2
<java.io.BufferedReader: void close()>: 2
<de.bahn.dbtickets.business.e: boolean equals(java.lang.Object)>: 2
<java.util.AbstractMap: boolean equals(java.lang.Object)>: 2
<java.io.BufferedReader: void <init>(java.io.Reader)>: 2
<android.database.sqlite.SQLiteClosable: void close()>: 2
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 1
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 1
<java.io.FileReader: void <init>(java.io.File)>: 1
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 1
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>: 1
<java.io.FileInputStream: void <init>(java.io.File)>: 1
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 1
<android.net.Uri: java.lang.String decode(java.lang.String)>: 1
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 1
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 1
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 1
<de.eosuptrade.a.a.ae: void close()>: 1
<java.io.RandomAccessFile: void readFully(byte[])>: 1
<de.bahn.dbtickets.DbNavigatorApplication$1: void <init>()>: 1
<java.io.ByteArrayOutputStream: void <init>()>: 1
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>: 1
<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>: 1
<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>: 1
<android.net.Uri$Builder: void <init>()>: 1
<java.io.File: boolean delete()>: 1
<android.net.NetworkInfo: boolean isConnected()>: 1
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<java.util.Date: boolean equals(java.lang.Object)>: 1
<java.io.ObjectOutputStream: void close()>: 1
<java.net.Authenticator: void setDefault(java.net.Authenticator)>: 1
<java.io.RandomAccessFile: long length()>: 1
<java.net.Authenticator: void <init>()>: 1
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 1
<java.io.RandomAccessFile: void close()>: 1
<android.net.Uri: java.lang.String encode(java.lang.String)>: 1
<java.io.File: void <init>(java.lang.String)>: 1
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>: 1
<java.io.File: boolean mkdirs()>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 4874
<java.lang.String: int hashCode()>: 374
<java.lang.Object: boolean equals(java.lang.Object)>: 235
<java.io.File: void <init>(java.lang.String)>: 222
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 220
<java.io.File: void <init>(java.io.File,java.lang.String)>: 206
<java.io.File: boolean exists()>: 203
<android.database.Cursor: void close()>: 189
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 186
<java.io.InputStream: int read(byte[])>: 182
<java.io.ByteArrayOutputStream: void <init>()>: 168
<java.io.InputStream: void close()>: 165
<java.net.URLConnection: java.io.InputStream getInputStream()>: 144
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 144
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 134
<java.io.File: java.lang.String getPath()>: 131
<java.io.ByteArrayOutputStream: void close()>: 131
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 130
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 128
<java.net.URL: void <init>(java.lang.String)>: 128
<java.net.URLConnection: void setReadTimeout(int)>: 128
<java.net.URLConnection: void setConnectTimeout(int)>: 128
<java.io.File: boolean delete()>: 128
<java.net.HttpURLConnection: int getResponseCode()>: 126
<java.io.Writer: void write(java.lang.String)>: 126
<java.net.URL: java.net.URLConnection openConnection()>: 110
<java.lang.Object: int hashCode()>: 108
<android.database.sqlite.SQLiteClosable: void close()>: 95
<java.io.File: java.lang.String getAbsolutePath()>: 93
<de.hafas.data.ad: boolean equals(java.lang.Object)>: 90
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 90
<java.lang.Enum: boolean equals(java.lang.Object)>: 90
<android.graphics.Bitmap: int getHeight()>: 90
<android.graphics.Bitmap: int getWidth()>: 90
<java.io.FileInputStream: void <init>(java.io.File)>: 77
<java.io.ByteArrayInputStream: void <init>(byte[])>: 76
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 76
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 76
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 75
<java.io.IOException: void <init>(java.lang.String)>: 75
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 74
<java.io.File: java.io.File[] listFiles()>: 74
<java.io.File: boolean isDirectory()>: 73
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 72
<java.io.PrintStream: void println(java.lang.String)>: 72
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 72
<java.io.OutputStream: void close()>: 72
<android.net.NetworkInfo: boolean isConnected()>: 72
<java.io.ByteArrayInputStream: void close()>: 57
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>: 54
<java.io.File: long length()>: 54
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 54
<java.io.StringWriter: void <init>()>: 54
<java.io.File: boolean renameTo(java.io.File)>: 54
<java.io.StringWriter: java.lang.String toString()>: 54
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>: 54
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 54
<java.io.OutputStream: void write(byte[])>: 54
<java.io.File: boolean isFile()>: 54
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 54
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 54
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 43
<java.io.FileInputStream: void close()>: 40
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 40
<java.io.File: java.lang.String[] list()>: 38
<java.io.ByteArrayOutputStream: void write(int)>: 38
<java.io.File: boolean mkdirs()>: 37
<de.hafas.ui.stationtable.a$b: boolean equals(java.lang.Object)>: 36
<java.io.OutputStream: void write(byte[],int,int)>: 36
<java.io.PrintStream: void print(java.lang.String)>: 36
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 36
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(android.net.Network)>: 36
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory$Options)>: 36
<java.io.BufferedReader: java.lang.String readLine()>: 36
<android.net.ConnectivityManager: android.net.Network[] getAllNetworks()>: 36
<java.io.File: boolean createNewFile()>: 36
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 36
<java.io.Writer: void <init>()>: 36
<android.graphics.BitmapFactory$Options: void <init>()>: 36
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>: 36
<de.hafas.data.g.f: int hashCode()>: 36
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 36
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 36
<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>: 36
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 36
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>: 36
<java.io.BufferedReader: void <init>(java.io.Reader)>: 36
<java.io.StringReader: void <init>(java.lang.String)>: 36
<java.io.PrintStream: void println(java.lang.Object)>: 35
<java.io.PrintWriter: void println(java.lang.Object)>: 35
<de.bahn.dbnav.utils.tracking.a: boolean equals(java.lang.Object)>: 34
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 22
<android.database.sqlite.SQLiteStatement: void execute()>: 22
<de.eosuptrade.a.a.ae: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 22
<android.database.sqlite.SQLiteProgram: void clearBindings()>: 22
<java.util.zip.GZIPInputStream: void close()>: 21
<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>: 21
<java.io.FilterInputStream: int read(byte[])>: 21
<java.io.File: boolean mkdir()>: 20
<java.io.InputStream: int available()>: 20
<android.database.sqlite.SQLiteProgram: void bindLong(int,long)>: 20
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 20
<java.io.Closeable: void close()>: 19
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 19
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 19
<java.io.FileOutputStream: void <init>(java.io.File)>: 19
<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>: 18
<java.io.DataInputStream: int read(byte[],int,int)>: 18
<android.graphics.Bitmap: void recycle()>: 18
<java.net.URL: java.lang.String getHost()>: 18
<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>: 18
<java.net.URLConnection: void setDoOutput(boolean)>: 18
<java.io.Reader: void <init>()>: 18
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>: 18
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>: 18
<java.io.File: java.lang.String getName()>: 18
<java.io.FileOutputStream: void <init>(java.lang.String)>: 18
<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String)>: 18
<java.io.DataInputStream: boolean readBoolean()>: 18
<java.io.OutputStream: void flush()>: 18
<android.graphics.drawable.Drawable: int getIntrinsicHeight()>: 18
<de.hafas.data.g.f: boolean equals(java.lang.Object)>: 18
<java.io.ByteArrayOutputStream: void <init>(int)>: 18
<java.io.ByteArrayOutputStream: int size()>: 18
<de.hafas.gson.internal.bind.JsonTreeWriter$1: void <init>()>: 18
<java.io.FilterInputStream: void close()>: 18
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>: 18
<java.net.URL: int getPort()>: 18
<android.graphics.Bitmap: void setDensity(int)>: 18
<android.graphics.drawable.Drawable: int getIntrinsicWidth()>: 18
<de.hafas.gson.internal.bind.JsonTreeReader$1: void <init>()>: 18
<android.database.sqlite.SQLiteProgram: void bindString(int,java.lang.String)>: 18
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 18
<java.net.URLConnection: java.net.URL getURL()>: 18
<java.io.DataInputStream: void <init>(java.io.InputStream)>: 18
<com.google.android.gms.maps.model.Marker: boolean equals(java.lang.Object)>: 18
<java.io.EOFException: void <init>(java.lang.String)>: 18
<java.io.Writer: void write(int)>: 18
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 18
<java.net.URLConnection: long getLastModified()>: 18
<android.net.NetworkInfo: int getType()>: 18
<de.bahn.dbnav.utils.tracking.e: boolean equals(java.lang.Object)>: 18
<android.graphics.Bitmap: int getScaledWidth(int)>: 18
<java.io.DataInputStream: int readInt()>: 18
<java.lang.Appendable: java.lang.Appendable append(char)>: 18
<java.io.Writer: java.io.Writer append(char)>: 18
<java.net.URL: java.lang.String getProtocol()>: 18
<java.net.URL: void <init>(java.net.URL,java.lang.String)>: 18
<de.hafas.gson.stream.MalformedJsonException: void <init>(java.lang.String)>: 18
<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>: 18
<java.io.Writer: void write(java.lang.String,int,int)>: 18
<java.io.DataInputStream: long readLong()>: 18
<java.io.InputStream: int read(byte[],int,int)>: 18
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>: 18
<java.io.BufferedReader: void close()>: 18
<java.net.URL: java.lang.String toExternalForm()>: 18
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 18
<java.net.URLConnection: void setDoInput(boolean)>: 18
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>: 18
<java.io.DataInputStream: java.lang.String readUTF()>: 18
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 18
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>: 18
<java.net.URLConnection: int getContentLength()>: 18
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 18
<android.graphics.Bitmap: int getScaledHeight(int)>: 18
<java.io.Reader: int read(char[],int,int)>: 18
<java.util.AbstractMap: boolean equals(java.lang.Object)>: 16
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>: 2
<java.io.File: long lastModified()>: 2
<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>: 2
<android.net.wifi.WifiInfo: java.lang.String getBSSID()>: 2
<java.net.URLConnection: void setUseCaches(boolean)>: 2
<java.net.InetAddress: java.lang.String getHostAddress()>: 1
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>: 1
<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>: 1
<java.net.NetworkInterface: java.lang.String getName()>: 1
<java.net.InetAddress: boolean isLoopbackAddress()>: 1
<java.net.NetworkInterface: java.util.List getInterfaceAddresses()>: 1
<java.io.FileInputStream: int read(byte[],int,int)>: 1
<java.lang.Integer: boolean equals(java.lang.Object)>: 1
<android.net.wifi.WifiManager: java.util.List getScanResults()>: 1
<android.net.wifi.WifiInfo: java.lang.String getSSID()>: 1
<java.io.FileOutputStream: void write(byte[])>: 1
<java.io.File: java.lang.String toString()>: 1
<android.net.NetworkInfo: java.lang.String getTypeName()>: 1
<java.net.NetworkInterface: boolean isUp()>: 1
<java.lang.Boolean: boolean equals(java.lang.Object)>: 1
