Duration => 870
UI Thread => 696
Worker Thread => 5526

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 136
<java.io.File: void <init>(java.lang.String)>: 47
<org.greenrobot.greendao.DaoException: void <init>(java.lang.String)>: 38
<java.io.File: java.lang.String getName()>: 36
<android.database.CursorWindow: int getNumRows()>: 32
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 23
<java.io.File: long length()>: 19
<java.io.File: java.lang.String getAbsolutePath()>: 17
<java.io.File: boolean exists()>: 15
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 13
<android.database.sqlite.SQLiteProgram: void bindString(int,java.lang.String)>: 12
<android.database.sqlite.SQLiteProgram: void bindLong(int,long)>: 12
<java.io.InputStream: int read(byte[])>: 10
<java.io.InputStream: void close()>: 10
<android.database.sqlite.SQLiteStatement: void execute()>: 9
<android.net.NetworkInfo: int getType()>: 9
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 9
<android.net.NetworkInfo: boolean isConnected()>: 9
<android.database.CursorWindow: long getLong(int,int)>: 8
<android.database.CursorWindow: int getStartPosition()>: 8
<android.database.CursorWindow: int getInt(int,int)>: 8
<java.io.File: boolean renameTo(java.io.File)>: 8
<android.database.CursorWindow: java.lang.String getString(int,int)>: 8
<java.io.File: boolean delete()>: 8
<android.database.Cursor: void close()>: 8
<java.lang.Object: boolean equals(java.lang.Object)>: 6
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 6
<java.net.Socket: void setReceiveBufferSize(int)>: 6
<java.io.BufferedReader: java.lang.String readLine()>: 5
<java.io.IOException: void <init>(java.lang.String)>: 5
<java.io.File: void deleteOnExit()>: 5
<java.io.FileOutputStream: void close()>: 5
<java.io.PrintStream: void println(java.lang.String)>: 5
<java.io.InputStream: int available()>: 5
<java.io.FileOutputStream: void write(byte[],int,int)>: 5
<java.io.FileOutputStream: void <init>(java.io.File)>: 5
<java.io.FileInputStream: void <init>(java.lang.String)>: 5
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>: 5
<android.database.SQLException: void <init>(java.lang.String)>: 4
<java.io.FileInputStream: void <init>(java.io.File)>: 3
<java.net.URI: void <init>(java.lang.String)>: 3
<java.net.InetAddress: java.lang.String getHostAddress()>: 3
<android.database.sqlite.SQLiteProgram: void clearBindings()>: 3
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 3
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 3
<java.io.BufferedReader: void <init>(java.io.Reader)>: 3
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 2
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 2
<android.graphics.Bitmap: void recycle()>: 2
<java.net.Socket: int getSendBufferSize()>: 2
<java.net.URI: java.lang.String getHost()>: 2
<java.net.Socket: void setSoLinger(boolean,int)>: 2
<java.net.Socket: void setReuseAddress(boolean)>: 2
<java.net.URISyntaxException: java.lang.String getMessage()>: 2
<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>: 2
<android.graphics.drawable.BitmapDrawable: void <init>()>: 2
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 2
<java.net.URI: int getPort()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 2
<java.net.Socket: void setSendBufferSize(int)>: 2
<java.net.Socket: void setTrafficClass(int)>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 2
<java.net.URI: java.lang.String getScheme()>: 2
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>: 2
<java.io.RandomAccessFile: void writeBytes(java.lang.String)>: 2
<java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>: 2
<java.net.Socket: void setTcpNoDelay(boolean)>: 2
<java.nio.channels.SocketChannel: java.nio.channels.SocketChannel open()>: 2
<android.graphics.Bitmap: boolean hasAlpha()>: 2
<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>: 2
<org.greenrobot.greendao.a.b: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 2
<android.graphics.Bitmap: int getHeight()>: 2
<java.net.Socket: void setKeepAlive(boolean)>: 2
<java.io.BufferedReader: void close()>: 2
<android.graphics.Bitmap: int getWidth()>: 2
<android.graphics.Bitmap: boolean isRecycled()>: 2
<java.io.RandomAccessFile: void seek(long)>: 2
<java.io.RandomAccessFile: void close()>: 2
<java.net.Socket: int getReceiveBufferSize()>: 2
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>: 1
<java.io.File: long lastModified()>: 1
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>: 1
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 1
<android.net.wifi.WifiManager$WifiLock: void acquire()>: 1
<java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>: 1
<java.io.PrintWriter: void flush()>: 1
<java.io.PrintWriter: void <init>(java.io.Writer)>: 1
<android.net.wifi.WifiManager$WifiLock: boolean isHeld()>: 1
<java.net.InetAddress: boolean isLoopbackAddress()>: 1
<android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>: 1
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 1
<java.net.ServerSocket: void close()>: 1
<java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>: 1
<android.net.wifi.WifiInfo: int getIpAddress()>: 1
<java.io.File: boolean isFile()>: 1
<java.net.ServerSocket: int getLocalPort()>: 1
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 1
<java.io.File: void <init>(java.io.File,java.lang.String)>: 1
<java.io.PrintWriter: void close()>: 1
<java.io.PrintWriter: void println(java.lang.String)>: 1
<java.io.File: java.io.File[] listFiles()>: 1
<android.database.sqlite.SQLiteStatement: long executeInsert()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 1
<android.net.wifi.WifiManager: android.net.wifi.WifiManager$WifiLock createWifiLock(int,java.lang.String)>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 1025
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 440
<org.greenrobot.greendao.DaoException: void <init>(java.lang.String)>: 312
<java.io.File: java.lang.String getAbsolutePath()>: 214
<java.io.File: void <init>(java.lang.String)>: 179
<android.database.sqlite.SQLiteProgram: void bindString(int,java.lang.String)>: 156
<android.database.sqlite.SQLiteProgram: void bindLong(int,long)>: 156
<java.io.File: boolean exists()>: 146
<android.database.CursorWindow: int getNumRows()>: 140
<android.database.sqlite.SQLiteProgram: void clearBindings()>: 123
<java.io.File: java.lang.String getName()>: 114
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 103
<java.io.File: long length()>: 92
<java.io.InputStream: int read(byte[])>: 90
<java.io.File: boolean delete()>: 88
<java.io.FileInputStream: void <init>(java.io.File)>: 87
<java.io.FileOutputStream: void <init>(java.io.File)>: 86
<java.io.File: void <init>(java.io.File,java.lang.String)>: 85
<java.lang.Object: boolean equals(java.lang.Object)>: 83
<android.database.SQLException: void <init>(java.lang.String)>: 81
<java.io.OutputStream: void write(byte[])>: 46
<java.io.File: boolean isFile()>: 45
<java.io.File: java.io.File[] listFiles()>: 45
<java.io.FileOutputStream: java.io.FileDescriptor getFD()>: 44
<java.io.Closeable: void close()>: 44
<java.io.File: boolean setExecutable(boolean,boolean)>: 44
<java.io.OutputStream: void write(byte[],int,int)>: 44
<java.io.OutputStream: void flush()>: 44
<java.io.File: boolean setWritable(boolean)>: 44
<java.io.File: boolean createNewFile()>: 44
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>: 44
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>: 44
<java.io.File: boolean setReadable(boolean,boolean)>: 44
<java.io.FileDescriptor: void sync()>: 44
<java.io.EOFException: void <init>()>: 44
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 43
<java.io.FileOutputStream: void close()>: 42
<java.util.zip.ZipOutputStream: void <init>(java.io.OutputStream)>: 41
<java.io.FileOutputStream: void <init>(java.lang.String)>: 41
<java.io.FileInputStream: void close()>: 41
<java.util.zip.ZipOutputStream: void close()>: 41
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 41
<java.util.zip.ZipOutputStream: void write(byte[],int,int)>: 41
<android.database.sqlite.SQLiteStatement: long executeInsert()>: 41
<java.lang.Boolean: boolean equals(java.lang.Object)>: 41
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 40
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 40
<org.greenrobot.greendao.a.b: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 40
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 39
<android.database.Cursor: void close()>: 37
<android.database.CursorWindow: long getLong(int,int)>: 35
<android.database.CursorWindow: int getStartPosition()>: 35
<android.database.CursorWindow: int getInt(int,int)>: 35
<android.net.NetworkInfo: int getType()>: 35
<android.database.CursorWindow: java.lang.String getString(int,int)>: 35
<android.database.sqlite.SQLiteStatement: void execute()>: 33
<android.net.NetworkInfo: boolean isConnected()>: 33
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 29
<java.io.File: long lastModified()>: 13
<java.nio.channels.Selector: java.nio.channels.Selector open()>: 8
<java.io.InputStream: void close()>: 8
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 6
<java.io.ByteArrayOutputStream: void <init>()>: 6
<java.io.ByteArrayOutputStream: void close()>: 6
<java.net.Proxy: void <init>(java.net.Proxy$Type,java.net.SocketAddress)>: 4
<java.io.DataOutputStream: void <init>(java.io.OutputStream)>: 4
<android.graphics.Bitmap: int getHeight()>: 4
<java.net.InetSocketAddress: java.net.InetSocketAddress createUnresolved(java.lang.String,int)>: 4
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 4
<java.net.URLConnection: void setDoOutput(boolean)>: 3
<java.net.URL: java.net.URLConnection openConnection()>: 3
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 3
<java.net.HttpURLConnection: int getResponseCode()>: 3
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 3
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 3
<java.net.URL: void <init>(java.lang.String)>: 3
<java.net.URLConnection: void setReadTimeout(int)>: 3
<java.net.URLConnection: java.io.InputStream getInputStream()>: 3
<java.net.URLConnection: void setConnectTimeout(int)>: 3
<java.net.URLConnection: void setUseCaches(boolean)>: 3
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>: 2
<java.net.URI: void <init>(java.lang.String)>: 2
<android.graphics.Bitmap: int getPixel(int,int)>: 2
<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>: 2
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>: 2
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>: 2
<java.io.BufferedReader: java.lang.String readLine()>: 2
<java.io.ByteArrayInputStream: void <init>(byte[])>: 2
<android.net.NetworkInfo: java.lang.String getExtraInfo()>: 2
<java.net.Socket: java.io.InputStream getInputStream()>: 2
<java.io.PushbackInputStream: void <init>(java.io.InputStream,int)>: 2
<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)>: 2
<java.io.DataOutputStream: void writeUTF(java.lang.String)>: 2
<java.io.DataInputStream: void <init>(java.io.InputStream)>: 2
<android.net.Proxy: java.lang.String getDefaultHost()>: 2
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 2
<android.net.Proxy: int getDefaultPort()>: 2
<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>: 2
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 2
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 2
<android.net.wifi.WifiManager: boolean isWifiEnabled()>: 2
<android.graphics.Bitmap: int getWidth()>: 2
<java.util.zip.DeflaterOutputStream: void close()>: 2
<java.net.Socket: java.io.OutputStream getOutputStream()>: 2
<android.net.wifi.WifiManager: java.util.List getScanResults()>: 2
<java.net.URLConnection: void setDoInput(boolean)>: 2
<java.io.FilterOutputStream: void close()>: 2
<java.io.DataInputStream: java.lang.String readUTF()>: 2
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 2
<android.net.NetworkInfo: java.lang.String getTypeName()>: 2
<java.io.BufferedReader: void <init>(java.io.Reader)>: 2
<java.io.PushbackInputStream: void unread(byte[])>: 2
<android.graphics.Bitmap: void recycle()>: 1
<java.net.ServerSocket: java.net.Socket accept()>: 1
<java.net.ServerSocket: void <init>(int)>: 1
<java.net.URLConnection: java.util.Map getHeaderFields()>: 1
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>: 1
<java.io.File: void deleteOnExit()>: 1
<java.io.PrintStream: void println(java.lang.String)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 1
<android.graphics.Bitmap: void setPixel(int,int,int)>: 1
<java.io.OutputStream: void close()>: 1
<java.io.FileOutputStream: void write(byte[],int,int)>: 1
<java.net.Socket: void connect(java.net.SocketAddress,int)>: 1
<java.net.URL: java.lang.String getProtocol()>: 1
<java.net.Socket: void close()>: 1
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 1
<java.net.Socket: void <init>()>: 1
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>: 1
