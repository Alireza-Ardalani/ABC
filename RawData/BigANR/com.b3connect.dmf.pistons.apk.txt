Duration => 76
UI Thread => 720
Worker Thread => 1667

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 84
<java.io.FileInputStream: void close()>: 37
<java.lang.Object: int hashCode()>: 32
<java.io.File: boolean delete()>: 24
<java.io.Writer: void write(java.lang.String)>: 21
<android.os.ParcelFileDescriptor: void close()>: 21
<java.lang.Object: boolean equals(java.lang.Object)>: 20
<android.net.Uri$Builder: void <init>()>: 18
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 18
<android.net.Uri$Builder: android.net.Uri build()>: 18
<java.io.ObjectInputStream: void close()>: 16
<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>: 16
<java.io.ObjectInputStream: java.lang.Object readObject()>: 16
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 16
<java.io.File: java.lang.String getPath()>: 15
<java.io.File: void <init>(java.io.File,java.lang.String)>: 15
<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>: 14
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>: 14
<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>: 14
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 11
<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>: 9
<java.io.FileInputStream: void <init>(java.io.File)>: 8
<java.io.Closeable: void close()>: 8
<java.io.File: void <init>(java.lang.String)>: 8
<java.io.InputStream: int read(byte[])>: 8
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 7
<java.io.File: boolean createNewFile()>: 7
<java.io.File: boolean canRead()>: 7
<java.io.PrintStream: void println(java.lang.String)>: 7
<java.io.FileOutputStream: void write(byte[],int,int)>: 7
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 7
<android.database.Cursor: void close()>: 7
<java.net.URI: void <init>(java.lang.String)>: 6
<java.io.File: boolean exists()>: 6
<java.io.StringWriter: void <init>()>: 6
<java.io.StringWriter: java.lang.String toString()>: 6
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 6
<java.lang.Enum: boolean equals(java.lang.Object)>: 5
<java.io.File: boolean mkdirs()>: 5
<java.io.FileOutputStream: void close()>: 4
<java.net.URI: java.lang.String getScheme()>: 4
<java.net.URI: java.lang.String toString()>: 4
<java.net.URI: java.lang.String getFragment()>: 4
<java.net.URI: java.lang.String getPath()>: 4
<java.io.Reader: void <init>()>: 3
<java.lang.String: int hashCode()>: 3
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 3
<com.ticketmaster.presencesdk.event_tickets.TmxEventTicketsResponseBody$EventTicket: boolean equals(java.lang.Object)>: 3
<java.io.IOException: void <init>(java.lang.String)>: 3
<java.io.EOFException: void <init>(java.lang.String)>: 3
<java.io.Writer: void <init>()>: 3
<java.io.Writer: void write(int)>: 3
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>: 3
<java.lang.Appendable: java.lang.Appendable append(char)>: 3
<eo.d: void <init>(java.lang.String)>: 3
<java.io.Writer: java.io.Writer append(char)>: 3
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 3
<java.io.Writer: void write(java.lang.String,int,int)>: 3
<el.e$1: void <init>()>: 3
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>: 3
<java.io.ObjectOutputStream: void close()>: 3
<java.io.StringReader: void <init>(java.lang.String)>: 3
<java.io.Reader: int read(char[],int,int)>: 3
<android.net.Uri$Builder: android.net.Uri$Builder encodedQuery(java.lang.String)>: 2
<java.nio.CharBuffer: java.lang.String toString()>: 2
<java.net.URI: java.lang.String getRawFragment()>: 2
<java.net.URI: java.lang.String getRawAuthority()>: 2
<java.io.File: java.lang.String getName()>: 2
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 2
<java.net.URI: java.lang.String getHost()>: 2
<java.net.URI: java.lang.String getRawQuery()>: 2
<java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>: 2
<java.net.URI: java.lang.String getUserInfo()>: 2
<java.net.URI: int getPort()>: 2
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 2
<android.net.wifi.WifiManager$WifiLock: boolean isHeld()>: 2
<java.net.URI: java.lang.String getRawSchemeSpecificPart()>: 2
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 2
<java.net.URI: java.lang.String getRawUserInfo()>: 2
<java.io.File: boolean isFile()>: 2
<java.net.URI: java.lang.String getAuthority()>: 2
<android.net.Uri$Builder: android.net.Uri$Builder appendEncodedPath(java.lang.String)>: 2
<java.io.File: java.io.File[] listFiles()>: 2
<android.net.NetworkInfo: boolean isConnected()>: 2
<java.net.URI: java.lang.String getRawPath()>: 2
<android.net.wifi.WifiManager$WifiLock: void release()>: 2
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 1
<java.io.IOException: void <init>()>: 1
<java.io.File: long lastModified()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>: 1
<java.io.FileOutputStream: void <init>(java.lang.String)>: 1
<android.support.v4.media.session.MediaSessionCompat$Token: boolean equals(java.lang.Object)>: 1
<java.io.OutputStream: void flush()>: 1
<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>: 1
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>: 1
<java.net.CookieManager: void <init>()>: 1
<java.io.OutputStream: void close()>: 1
<java.io.InputStream: void close()>: 1
<java.net.URL: void <init>(java.lang.String)>: 1
<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>: 1
<java.io.OutputStream: void write(byte[])>: 1
<android.graphics.Bitmap: int getHeight()>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<android.graphics.Bitmap: int getWidth()>: 1
<java.io.ByteArrayOutputStream: void <init>()>: 1
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 1
<java.io.File: java.lang.String getAbsolutePath()>: 1
<java.io.ByteArrayOutputStream: void close()>: 1
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 1
<java.lang.Boolean: boolean equals(java.lang.Object)>: 1
<android.net.wifi.WifiManager: android.net.wifi.WifiManager$WifiLock createWifiLock(int,java.lang.String)>: 1
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 199
<java.io.PrintStream: void println(java.lang.String)>: 199
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 168
<java.net.URL: void <init>(java.lang.String)>: 38
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 33
<android.net.NetworkInfo: boolean isConnected()>: 33
<java.lang.String: int hashCode()>: 32
<java.net.URI: java.lang.String getHost()>: 30
<java.net.URI: java.lang.String getScheme()>: 30
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 29
<java.net.URL: java.net.URLConnection openConnection()>: 23
<java.io.ObjectInputStream: void close()>: 21
<java.io.ObjectInputStream: java.lang.Object readObject()>: 21
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 21
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 21
<java.net.URLConnection: java.io.InputStream getInputStream()>: 20
<java.io.FileInputStream: void close()>: 20
<java.io.InputStream: int read(byte[])>: 18
<java.io.OutputStream: void flush()>: 18
<java.net.HttpURLConnection: int getResponseCode()>: 18
<java.lang.Object: boolean equals(java.lang.Object)>: 17
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 16
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>: 15
<java.io.IOException: void <init>()>: 15
<java.net.Socket: void <init>(java.net.Proxy)>: 15
<java.net.Socket: void connect(java.net.SocketAddress,int)>: 15
<java.net.URI: void <init>(java.lang.String)>: 15
<java.io.InputStream: void close()>: 15
<java.io.Reader: int read(char[])>: 15
<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>: 15
<java.net.URLConnection: void setDoOutput(boolean)>: 15
<java.nio.CharBuffer: java.lang.String toString()>: 15
<java.net.Socket: void setTcpNoDelay(boolean)>: 15
<java.io.OutputStream: void write(byte[],int,int)>: 15
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 15
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 15
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 15
<java.net.Socket: boolean isClosed()>: 15
<java.net.Socket: void setReuseAddress(boolean)>: 15
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 15
<java.nio.channels.Channel: void close()>: 15
<java.net.URI: java.lang.String getRawQuery()>: 15
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 15
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>: 15
<java.net.Socket: java.io.OutputStream getOutputStream()>: 15
<java.net.Socket: java.io.InputStream getInputStream()>: 15
<java.net.CookieManager: void <init>()>: 15
<java.net.URLConnection: void setDoInput(boolean)>: 15
<java.net.URI: int getPort()>: 15
<java.net.Socket: void close()>: 15
<java.net.URI: java.lang.String getRawPath()>: 15
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 15
<java.io.PrintStream: void println(java.lang.Object)>: 15
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 15
<android.database.Cursor: void close()>: 15
<java.net.Socket: boolean isBound()>: 15
<java.net.URLConnection: java.lang.String getContentEncoding()>: 15
<java.io.File: boolean exists()>: 11
<java.io.File: void <init>(java.io.File,java.lang.String)>: 10
<java.io.File: java.lang.String getAbsolutePath()>: 10
<java.io.File: boolean mkdirs()>: 9
<android.graphics.BitmapFactory$Options: void <init>()>: 4
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 4
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 3
<java.net.URL: java.lang.String toString()>: 3
<java.net.URLConnection: void setReadTimeout(int)>: 3
<java.net.URL: java.lang.String getProtocol()>: 3
<java.io.DataOutputStream: void writeBytes(java.lang.String)>: 3
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>: 3
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 3
<java.net.URLConnection: void setConnectTimeout(int)>: 3
<java.io.DataOutputStream: void <init>(java.io.OutputStream)>: 3
<java.io.ByteArrayOutputStream: void <init>()>: 3
<java.io.DataOutputStream: void flush()>: 3
<java.io.FilterOutputStream: void close()>: 3
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 3
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 3
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 2
<java.io.BufferedInputStream: void close()>: 2
<java.io.BufferedReader: java.lang.String readLine()>: 2
<android.graphics.Bitmap: int getHeight()>: 2
<java.io.BufferedReader: void close()>: 2
<android.graphics.Bitmap: int getWidth()>: 2
<java.io.BufferedInputStream: void mark(int)>: 2
<java.io.BufferedReader: void <init>(java.io.Reader)>: 2
<java.io.BufferedInputStream: void reset()>: 2
<java.io.FileReader: void <init>(java.io.File)>: 1
<java.io.FileInputStream: void <init>(java.io.File)>: 1
<java.io.ByteArrayInputStream: void <init>(byte[])>: 1
<java.io.File: boolean delete()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 1
<java.io.File: void <init>(java.lang.String)>: 1
<android.graphics.Bitmap: void setPixel(int,int,int)>: 1
