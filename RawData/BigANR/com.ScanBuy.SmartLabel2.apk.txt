Duration => 1146
UI Thread => 289
Worker Thread => 1662

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 57
<java.lang.Object: java.lang.String toString()>: 13
<java.lang.String: int hashCode()>: 12
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 10
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 9
<java.lang.Object: int hashCode()>: 9
<android.database.sqlite.SQLiteClosable: void close()>: 9
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 8
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 7
<com.fasterxml.jackson.databind.JavaType: boolean equals(java.lang.Object)>: 7
<com.fasterxml.jackson.databind.JavaType: int hashCode()>: 6
<java.lang.Object: boolean equals(java.lang.Object)>: 6
<java.io.File: void <init>(java.io.File,java.lang.String)>: 6
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 5
<android.database.Cursor: void close()>: 5
<java.io.File: void <init>(java.lang.String)>: 5
<java.io.File: boolean exists()>: 4
<java.io.IOException: void <init>(java.lang.String)>: 4
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 3
<java.net.URI: java.net.URI create(java.lang.String)>: 3
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 3
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 3
<java.io.File: boolean delete()>: 3
<java.io.File: java.lang.String getAbsolutePath()>: 3
<com.fasterxml.jackson.core.JsonParser: void close()>: 3
<com.fasterxml.jackson.core.util.ByteArrayBuilder: void <init>()>: 2
<java.io.FileReader: void <init>(java.io.File)>: 2
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 2
<java.io.Closeable: void close()>: 2
<java.io.FileInputStream: void <init>(java.io.File)>: 2
<java.io.InputStream: void close()>: 2
<java.net.URL: void <init>(java.lang.String)>: 2
<java.io.OutputStream: void write(byte[],int,int)>: 2
<java.io.BufferedWriter: void close()>: 2
<java.net.InetAddress: java.lang.String toString()>: 2
<java.io.Writer: void write(java.lang.String)>: 2
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 2
<java.io.BufferedReader: java.lang.String readLine()>: 2
<java.io.BufferedReader: void close()>: 2
<java.io.OutputStream: void <init>()>: 2
<com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>: 2
<java.io.File: java.io.File[] listFiles()>: 2
<java.util.Locale: boolean equals(java.lang.Object)>: 2
<java.io.BufferedWriter: void flush()>: 2
<java.io.BufferedReader: void <init>(java.io.Reader)>: 2
<java.io.FileWriter: void <init>(java.io.File)>: 2
<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>: 2
<com.fasterxml.jackson.core.base.ParserBase: void close()>: 2
<java.io.OutputStream: void close()>: 1
<java.net.InetSocketAddress: java.lang.String getHostName()>: 1
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>: 1
<com.fasterxml.jackson.databind.type.SimpleType: boolean equals(java.lang.Object)>: 1
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>: 1
<android.net.Uri$Builder: android.net.Uri build()>: 1
<java.io.File: boolean isDirectory()>: 1
<java.io.InputStream: int read(byte[])>: 1
<java.math.BigInteger: int hashCode()>: 1
<java.io.File: long length()>: 1
<java.io.File: java.net.URI toURI()>: 1
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>: 1
<java.io.File: java.lang.String getName()>: 1
<java.net.URI: java.lang.String toString()>: 1
<java.io.Reader: void close()>: 1
<java.io.OutputStream: void write(byte[])>: 1
<java.io.InputStream: void <init>()>: 1
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 1
<java.io.File: boolean mkdir()>: 1
<java.net.InetSocketAddress: int getPort()>: 1
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 1
<com.fasterxml.jackson.databind.util.TypeKey: int hashCode()>: 1
<java.io.ByteArrayInputStream: void <init>(byte[])>: 1
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>: 1
<android.net.http.SslError: int getPrimaryError()>: 1
<java.io.File: boolean createNewFile()>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String)>: 1
<com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>: 1
<com.fasterxml.jackson.databind.util.TokenBuffer: void close()>: 1
<android.net.NetworkInfo: boolean isConnected()>: 1
<java.io.FileOutputStream: void write(byte[])>: 1
<java.net.InetSocketAddress: java.net.InetAddress getAddress()>: 1
<java.io.FileOutputStream: void close()>: 1
<java.lang.Double: int hashCode()>: 1
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String,java.lang.Throwable)>: 1
<java.io.InputStream: int available()>: 1
<java.io.StringReader: void <init>(java.lang.String)>: 1
<java.io.File: boolean mkdirs()>: 1
<java.io.Reader: int read(char[],int,int)>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 373
<java.lang.Object: java.lang.String toString()>: 108
<java.lang.Object: int hashCode()>: 106
<java.lang.String: int hashCode()>: 73
<com.fasterxml.jackson.databind.JavaType: boolean equals(java.lang.Object)>: 42
<java.io.IOException: void <init>(java.lang.String)>: 36
<com.fasterxml.jackson.databind.JavaType: int hashCode()>: 36
<java.io.Writer: void write(java.lang.String)>: 30
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 26
<java.lang.Object: boolean equals(java.lang.Object)>: 24
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 24
<java.net.URL: void <init>(java.lang.String)>: 23
<android.database.sqlite.SQLiteClosable: void close()>: 21
<java.net.URI: java.net.URI create(java.lang.String)>: 18
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 18
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 18
<com.fasterxml.jackson.core.JsonParser: void close()>: 18
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 16
<android.net.NetworkInfo: int getType()>: 15
<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>: 14
<java.io.OutputStream: void <init>()>: 14
<android.database.Cursor: void close()>: 14
<java.io.Closeable: void close()>: 12
<java.io.OutputStream: void write(byte[],int,int)>: 12
<java.net.InetAddress: java.lang.String toString()>: 12
<com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>: 12
<java.util.Locale: boolean equals(java.lang.Object)>: 12
<com.fasterxml.jackson.core.base.ParserBase: void close()>: 12
<com.fasterxml.jackson.core.util.ByteArrayBuilder: void <init>()>: 12
<java.io.InputStream: void close()>: 12
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 11
<java.io.StringReader: void <init>(java.lang.String)>: 11
<java.net.URLConnection: java.net.URL getURL()>: 10
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 10
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>: 9
<java.net.HttpURLConnection: int getResponseCode()>: 9
<java.net.URL: java.lang.String getHost()>: 8
<java.io.InputStream: void <init>()>: 8
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 8
<java.net.URLConnection: java.lang.String getContentType()>: 8
<java.io.StringWriter: void <init>()>: 8
<java.io.StringWriter: java.lang.String toString()>: 8
<java.io.Reader: int read(char[],int,int)>: 8
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 7
<java.net.URLConnection: void setDoOutput(boolean)>: 7
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 7
<java.io.File: void <init>(java.lang.String)>: 7
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 7
<java.net.URI: java.lang.String toString()>: 7
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 7
<java.net.URLConnection: void setDoInput(boolean)>: 7
<java.net.URLConnection: void setUseCaches(boolean)>: 7
<java.math.BigInteger: int hashCode()>: 6
<java.io.Reader: void close()>: 6
<java.net.InetSocketAddress: int getPort()>: 6
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>: 6
<java.net.HttpURLConnection: java.lang.String getRequestMethod()>: 6
<com.fasterxml.jackson.databind.util.TokenBuffer: void close()>: 6
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String,java.lang.Throwable)>: 6
<java.io.OutputStream: void close()>: 6
<java.net.InetSocketAddress: java.lang.String getHostName()>: 6
<com.fasterxml.jackson.databind.type.SimpleType: boolean equals(java.lang.Object)>: 6
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>: 6
<java.io.OutputStream: void write(byte[])>: 6
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 6
<com.fasterxml.jackson.databind.util.TypeKey: int hashCode()>: 6
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String)>: 6
<com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>: 6
<android.net.NetworkInfo: boolean isConnected()>: 6
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 6
<java.net.InetSocketAddress: java.net.InetAddress getAddress()>: 6
<java.lang.Double: int hashCode()>: 6
<java.net.URLConnection: int getContentLength()>: 6
<java.io.Writer: void write(int)>: 5
<java.net.URL: java.lang.String toString()>: 5
<java.io.Writer: java.io.Writer append(char)>: 5
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 5
<java.io.Writer: void write(java.lang.String,int,int)>: 5
<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>: 5
<android.net.NetworkInfo: int getSubtype()>: 5
<android.net.NetworkInfo: java.lang.String getTypeName()>: 5
<com.newrelic.agent.android.instrumentation.io.CountingInputStream: int available()>: 4
<java.net.URL: java.lang.String getPath()>: 4
<java.net.URI: void <init>(java.lang.String)>: 4
<com.newrelic.agent.android.instrumentation.HttpURLConnectionExtension: java.io.InputStream getErrorStream()>: 4
<java.net.URL: int getPort()>: 4
<java.net.URLConnection: void setReadTimeout(int)>: 4
<java.net.URL: java.lang.String getProtocol()>: 4
<java.net.URLConnection: java.io.InputStream getInputStream()>: 4
<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getErrorStream()>: 4
<java.io.InputStream: int read(byte[],int,int)>: 4
<java.net.URLConnection: void setConnectTimeout(int)>: 4
<com.newrelic.agent.android.harvest.ConnectInformation: boolean equals(java.lang.Object)>: 4
<java.net.URL: java.net.URLConnection openConnection()>: 3
<android.net.UrlQuerySanitizer: void <init>(java.lang.String)>: 3
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 3
<java.io.PrintStream: void println(java.lang.Object)>: 3
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 3
<java.net.URI: java.lang.String getScheme()>: 3
<android.net.UrlQuerySanitizer: java.util.List getParameterList()>: 3
<java.net.URI: java.lang.String getAuthority()>: 3
<java.net.URI: java.lang.String getFragment()>: 3
<java.net.URI: java.lang.String getPath()>: 3
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 2
<java.io.Reader: int read(char[])>: 2
<java.net.HttpURLConnection: void <init>(java.net.URL)>: 2
<java.net.URLConnection: java.util.Map getRequestProperties()>: 2
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 2
<java.io.FileOutputStream: void <init>(java.lang.String)>: 2
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 2
<java.net.URLConnection: java.util.Map getHeaderFields()>: 2
<java.io.ObjectInputStream: void close()>: 2
<java.io.FileInputStream: void close()>: 2
<com.newrelic.com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>: 2
<com.newrelic.com.google.gson.internal.bind.JsonTreeWriter$1: void <init>()>: 2
<java.io.FileOutputStream: void close()>: 2
<java.io.InputStream: int available()>: 2
<java.io.EOFException: void <init>(java.lang.String)>: 2
<java.io.Writer: void <init>()>: 2
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>: 2
<com.newrelic.agent.android.harvest.DeviceInformation: boolean equals(java.lang.Object)>: 2
<javax.net.ssl.HttpsURLConnection: void <init>(java.net.URL)>: 2
<java.io.ObjectInputStream: java.lang.Object readObject()>: 2
<com.newrelic.agent.android.harvest.ApplicationInformation: boolean equals(java.lang.Object)>: 2
<java.io.BufferedReader: void close()>: 2
<java.io.FilterOutputStream: void write(byte[])>: 2
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>: 2
<java.io.ByteArrayOutputStream: void <init>()>: 2
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 2
<java.io.FileInputStream: void <init>(java.lang.String)>: 2
<java.io.FilterOutputStream: void close()>: 2
<java.io.ObjectOutputStream: void close()>: 2
<java.io.ByteArrayOutputStream: void close()>: 2
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 2
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>: 2
<java.io.RandomAccessFile: void close()>: 2
<java.io.BufferedReader: void <init>(java.io.Reader)>: 2
<java.io.File: boolean isDirectory()>: 1
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>: 1
<java.io.BufferedOutputStream: void write(byte[],int,int)>: 1
<java.io.File: boolean exists()>: 1
<java.io.BufferedOutputStream: void flush()>: 1
<java.io.File: java.lang.String getAbsolutePath()>: 1
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 1
<java.io.File: boolean mkdirs()>: 1
