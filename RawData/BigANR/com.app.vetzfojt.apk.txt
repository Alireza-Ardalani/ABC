Duration => 7264
UI Thread => 944
Worker Thread => 7831

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 160
<java.io.PrintStream: void println(java.lang.String)>: 134
<java.lang.Object: boolean equals(java.lang.Object)>: 98
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 60
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 49
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>: 46
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>: 46
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 44
<java.io.File: boolean exists()>: 23
<java.io.File: java.lang.String getPath()>: 20
<java.net.CookieManager: void setCookiePolicy(java.net.CookiePolicy)>: 15
<java.net.CookieManager: void <init>()>: 15
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 12
<java.io.File: void <init>(java.lang.String)>: 10
<java.io.File: boolean mkdirs()>: 10
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 9
<java.io.File: void <init>(java.io.File,java.lang.String)>: 8
<android.graphics.Bitmap: int getWidth()>: 8
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 8
<java.io.File: java.lang.String toString()>: 8
<android.graphics.Bitmap: void recycle()>: 7
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 6
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 6
<android.graphics.Bitmap: int getHeight()>: 6
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 5
<java.io.File: boolean createNewFile()>: 5
<android.database.Cursor: void close()>: 5
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 5
<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>: 4
<java.io.File: long length()>: 4
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>: 4
<android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)>: 4
<java.io.StringWriter: java.lang.String toString()>: 4
<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>: 4
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>: 4
<android.graphics.Bitmap: boolean isRecycled()>: 4
<android.graphics.BitmapFactory$Options: void <init>()>: 3
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 3
<java.io.InputStream: int read(byte[])>: 3
<java.io.InputStream: void close()>: 3
<java.io.File: java.io.File[] listFiles()>: 3
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 3
<java.io.File: java.io.File getParentFile()>: 3
<java.io.InputStream: int available()>: 3
<java.io.FileInputStream: void <init>(java.io.File)>: 2
<java.io.Reader: int read(char[])>: 2
<java.net.CookieHandler: void setDefault(java.net.CookieHandler)>: 2
<java.io.File: java.lang.String getName()>: 2
<java.io.Writer: void write(char[],int,int)>: 2
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 2
<java.io.PrintWriter: void println()>: 2
<java.io.StringWriter: void <init>()>: 2
<java.net.CookieHandler: java.net.CookieHandler getDefault()>: 2
<android.net.NetworkInfo: boolean isConnected()>: 2
<java.io.PrintWriter: void <init>(java.io.Writer)>: 2
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 2
<java.io.StringWriter: void <init>(int)>: 2
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 2
<java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>: 1
<java.io.File: java.io.File getAbsoluteFile()>: 1
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 1
<java.net.URL: void setURLStreamHandlerFactory(java.net.URLStreamHandlerFactory)>: 1
<java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>: 1
<android.database.ContentObserver: void <init>(android.os.Handler)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 1
<java.io.Reader: boolean markSupported()>: 1
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>: 1
<java.io.BufferedWriter: void close()>: 1
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 1
<java.net.URI: java.lang.String toString()>: 1
<java.net.URI: java.net.URI create(java.lang.String)>: 1
<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>: 1
<java.io.Reader: int read()>: 1
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 1
<java.io.Writer: void write(java.lang.String)>: 1
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 1
<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>: 1
<android.net.http.SslError: int getPrimaryError()>: 1
<java.io.ByteArrayOutputStream: void <init>()>: 1
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>: 1
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 1
<java.util.Date: boolean equals(java.lang.Object)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>: 1
<java.io.PrintStream: void println(java.lang.Object)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 1
<java.io.BufferedReader: void <init>(java.io.Reader)>: 1
<java.io.FileWriter: void <init>(java.io.File)>: 1
<android.database.sqlite.SQLiteClosable: void close()>: 1
<java.io.StringReader: void <init>(java.lang.String)>: 1
----------------StartWorker----------------
<java.io.PrintStream: void println(java.lang.String)>: 787
<java.lang.String: boolean equals(java.lang.Object)>: 717
<android.graphics.Bitmap: boolean isRecycled()>: 387
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 344
<android.graphics.Bitmap: void recycle()>: 301
<android.graphics.Bitmap: int getHeight()>: 260
<android.graphics.Bitmap: int getWidth()>: 260
<java.net.URL: java.net.URLConnection openConnection()>: 223
<java.net.URL: void <init>(java.lang.String)>: 223
<java.net.URLConnection: java.io.InputStream getInputStream()>: 218
<java.net.HttpURLConnection: int getResponseCode()>: 173
<java.net.URLConnection: java.util.Map getHeaderFields()>: 172
<java.lang.Object: boolean equals(java.lang.Object)>: 134
<java.io.BufferedReader: void <init>(java.io.Reader)>: 134
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 131
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 130
<java.io.InputStream: int read(byte[],int,int)>: 129
<java.io.InputStream: void close()>: 97
<java.io.StringReader: void <init>(java.lang.String)>: 91
<java.net.URLConnection: void setDoInput(boolean)>: 90
<java.io.BufferedReader: java.lang.String readLine()>: 88
<java.io.IOException: void <init>(java.lang.String)>: 88
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 88
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 88
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 88
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 87
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 87
<android.graphics.Bitmap: void eraseColor(int)>: 86
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 86
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>: 86
<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>: 86
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 86
<android.database.Cursor: void close()>: 86
<java.io.Reader: int read()>: 48
<java.io.File: void <init>(java.lang.String)>: 48
<java.io.Reader: boolean markSupported()>: 48
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 45
<java.net.URLConnection: void setDoOutput(boolean)>: 44
<java.io.File: java.lang.String getName()>: 44
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 44
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 44
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 44
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 44
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>: 43
<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>: 43
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 43
<java.io.ByteArrayInputStream: void <init>(byte[])>: 43
<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>: 43
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 43
<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>: 43
<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)>: 43
<android.net.Uri$Builder: void <init>()>: 43
<java.io.FilterInputStream: void <init>(java.io.InputStream)>: 43
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 43
<android.net.Uri$Builder: android.net.Uri build()>: 43
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 43
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>: 43
<java.net.HttpURLConnection: long getHeaderFieldDate(java.lang.String,long)>: 43
<java.io.BufferedWriter: void close()>: 43
<java.io.Writer: void write(java.lang.String)>: 43
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 43
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>: 43
<java.io.BufferedReader: void close()>: 43
<java.io.FileInputStream: void <init>(java.lang.String)>: 43
<java.io.RandomAccessFile: java.lang.String readLine()>: 43
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 43
<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>: 43
<android.net.Uri: java.lang.String encode(java.lang.String)>: 43
<java.net.CookieManager: void <init>()>: 42
<java.net.CookieManager: void setCookiePolicy(java.net.CookiePolicy)>: 42
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 10
<java.io.OutputStream: void close()>: 6
<java.io.OutputStream: void flush()>: 5
<java.io.File: boolean delete()>: 5
<java.io.Reader: int read(char[])>: 4
<java.io.OutputStream: void write(byte[],int,int)>: 4
<java.io.FileOutputStream: void <init>(java.lang.String)>: 4
<java.net.URL: java.io.InputStream openStream()>: 4
<java.io.File: boolean exists()>: 4
<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>: 4
<java.io.InputStream: int read(byte[])>: 4
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 4
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>: 4
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>: 4
<java.net.URLConnection: int getContentLength()>: 4
<java.io.BufferedReader: void <init>(java.io.Reader,int)>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 2
<java.io.File: java.lang.String getAbsolutePath()>: 2
<java.net.URI: void <init>(java.lang.String)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>: 1
<android.graphics.BitmapFactory$Options: void <init>()>: 1
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 1
<java.io.File: void <init>(java.net.URI)>: 1
<java.net.URLConnection: void setReadTimeout(int)>: 1
<java.io.OutputStream: void write(byte[])>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<java.net.URLConnection: void setConnectTimeout(int)>: 1
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 1
<java.nio.charset.UnsupportedCharsetException: void <init>(java.lang.String)>: 1
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>: 1
