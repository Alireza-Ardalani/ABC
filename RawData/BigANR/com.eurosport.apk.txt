Duration => 6350
UI Thread => 1067
Worker Thread => 21367

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 288
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 285
<java.util.Locale: boolean equals(java.lang.Object)>: 73
<android.net.Uri: java.lang.String encode(java.lang.String)>: 42
<java.lang.Object: int hashCode()>: 32
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 31
<java.io.IOException: void <init>(java.lang.String)>: 22
<java.io.File: void <init>(java.io.File,java.lang.String)>: 13
<android.net.NetworkInfo: int getType()>: 12
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 12
<android.net.NetworkInfo: int getSubtype()>: 12
<java.io.DataInput: int readUnsignedByte()>: 12
<android.net.NetworkInfo: boolean isConnected()>: 12
<java.lang.Object: boolean equals(java.lang.Object)>: 11
<java.io.DataInput: java.lang.String readUTF()>: 9
<java.io.DataInputStream: void <init>(java.io.InputStream)>: 9
<java.io.InputStream: void close()>: 8
<java.lang.Enum: boolean equals(java.lang.Object)>: 8
<java.lang.String: int hashCode()>: 8
<android.database.ContentObserver: void <init>(android.os.Handler)>: 6
<org.joda.time.DateTimeZone: boolean equals(java.lang.Object)>: 6
<java.io.DataInputStream: int readUnsignedShort()>: 6
<java.io.FilterInputStream: void close()>: 6
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>: 6
<java.io.DataInput: boolean readBoolean()>: 6
<java.io.DataInputStream: java.lang.String readUTF()>: 6
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 6
<java.io.File: void <init>(java.lang.String)>: 6
<java.net.URL: void <init>(java.lang.String)>: 5
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 4
<java.io.File: boolean exists()>: 4
<java.io.ByteArrayOutputStream: void <init>()>: 4
<java.io.File: java.lang.String getAbsolutePath()>: 4
<java.io.FileInputStream: void <init>(java.io.File)>: 3
<java.io.PrintStream: void <init>(java.io.OutputStream)>: 3
<java.io.File: boolean isDirectory()>: 3
<java.io.File: java.lang.String getName()>: 3
<java.io.DataInput: int readUnsignedShort()>: 3
<java.io.DataInput: int readInt()>: 3
<java.io.DataInput: long readLong()>: 3
<java.io.DataInput: byte readByte()>: 3
<java.io.File: java.io.File getParentFile()>: 3
<java.net.URL: java.lang.String getPath()>: 2
<java.net.URL: java.lang.String getHost()>: 2
<java.net.URL: java.lang.String getRef()>: 2
<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>: 2
<java.net.URL: java.lang.String getProtocol()>: 2
<java.net.URI: java.net.URI create(java.lang.String)>: 2
<android.net.Uri$Builder: java.lang.String toString()>: 2
<java.net.URI: java.lang.String toASCIIString()>: 2
<android.graphics.Bitmap: int getHeight()>: 2
<java.io.ByteArrayInputStream: void <init>(byte[])>: 2
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>: 2
<android.graphics.Bitmap: int getWidth()>: 2
<java.net.URL: java.lang.String getUserInfo()>: 2
<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>: 2
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 2
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 2
<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>: 2
<java.net.URL: int getPort()>: 2
<android.net.Uri$Builder: void <init>()>: 2
<java.net.URL: java.lang.String getQuery()>: 2
<java.io.FileReader: void <init>(java.io.File)>: 1
<android.graphics.BitmapFactory$Options: void <init>()>: 1
<android.graphics.Bitmap: void recycle()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 1
<java.io.BufferedWriter: void close()>: 1
<java.io.StringWriter: java.lang.String toString()>: 1
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 1
<com.nielsen.app.sdk.AppSdk: void close()>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 1
<java.io.Writer: void write(java.lang.String)>: 1
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 1
<java.io.BufferedReader: java.lang.String readLine()>: 1
<android.graphics.Bitmap: int getDensity()>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<java.io.BufferedReader: void close()>: 1
<java.io.StringWriter: void <init>()>: 1
<android.graphics.Bitmap: void setDensity(int)>: 1
<java.io.PrintWriter: void <init>(java.io.Writer)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 1
<com.nielsen.app.sdk.m: void close()>: 1
<java.io.BufferedWriter: void flush()>: 1
<java.io.FileOutputStream: void close()>: 1
<android.database.Cursor: void close()>: 1
<java.io.BufferedReader: void <init>(java.io.Reader)>: 1
<java.io.FileWriter: void <init>(java.io.File)>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 2342
<java.net.URL: void <init>(java.lang.String)>: 927
<java.net.HttpURLConnection: int getResponseCode()>: 689
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 409
<java.net.URLConnection: java.io.InputStream getInputStream()>: 400
<java.net.URLConnection: void setConnectTimeout(int)>: 400
<java.lang.Object: int hashCode()>: 376
<java.net.URL: java.net.URLConnection openConnection()>: 363
<java.io.File: boolean exists()>: 363
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 320
<java.net.URLConnection: void setReadTimeout(int)>: 320
<java.net.URLConnection: java.net.URL getURL()>: 290
<java.io.File: void <init>(java.io.File,java.lang.String)>: 283
<android.net.NetworkInfo: int getType()>: 247
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 243
<java.io.BufferedReader: void <init>(java.io.Reader)>: 242
<java.io.BufferedReader: java.lang.String readLine()>: 241
<java.io.File: void <init>(java.lang.String)>: 241
<java.net.URLConnection: void setDoInput(boolean)>: 240
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 240
<java.net.URLConnection: void setUseCaches(boolean)>: 240
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 209
<java.lang.Object: boolean equals(java.lang.Object)>: 207
<android.net.NetworkInfo: boolean isConnected()>: 202
<java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>: 201
<java.net.URLConnection: void setDoOutput(boolean)>: 200
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 200
<java.io.BufferedReader: void close()>: 200
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 200
<java.io.IOException: void <init>(java.lang.String)>: 181
<java.io.InputStream: void close()>: 173
<java.net.URLConnection: java.lang.String getContentType()>: 168
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>: 167
<java.net.URL: java.lang.String getHost()>: 164
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 163
<java.io.OutputStream: void close()>: 163
<java.net.URI: java.lang.String toString()>: 162
<java.io.File: boolean delete()>: 161
<java.io.File: boolean isDirectory()>: 160
<android.database.sqlite.SQLiteClosable: void close()>: 160
<java.net.HttpURLConnection: java.lang.String getRequestMethod()>: 126
<java.net.URLConnection: int getContentLength()>: 126
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 124
<java.net.URL: java.lang.String getPath()>: 122
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 122
<java.net.URL: java.lang.String toString()>: 122
<java.io.File: long lastModified()>: 120
<java.net.URLConnection: void setAllowUserInteraction(boolean)>: 120
<java.io.File: java.io.File[] listFiles()>: 120
<java.io.File: java.lang.String getAbsolutePath()>: 120
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 120
<java.io.File: boolean renameTo(java.io.File)>: 120
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>: 120
<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>: 120
<java.io.InputStream: void <init>()>: 87
<java.io.Writer: void write(java.lang.String)>: 87
<java.io.InputStream: int read(byte[],int,int)>: 87
<java.io.OutputStream: void write(byte[])>: 85
<java.net.URL: java.lang.String getProtocol()>: 85
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 84
<java.io.OutputStream: void flush()>: 84
<java.util.Formatter: void close()>: 83
<java.lang.String: int hashCode()>: 82
<android.net.NetworkInfo: int getSubtype()>: 82
<java.io.FileInputStream: void <init>(java.io.File)>: 81
<java.io.File: java.lang.String getName()>: 81
<java.io.Reader: int read(char[],int,int)>: 81
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 80
<java.io.File: java.lang.String getPath()>: 80
<java.io.File: boolean mkdir()>: 80
<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>: 80
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 80
<java.io.BufferedInputStream: void close()>: 80
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 80
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 80
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 80
<android.graphics.Bitmap: int getHeight()>: 80
<android.graphics.Bitmap: int getWidth()>: 80
<java.io.FilterInputStream: int read(byte[])>: 80
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>: 80
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 80
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 80
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 80
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 79
<java.io.ByteArrayOutputStream: void <init>()>: 79
<java.io.StringWriter: void <init>()>: 43
<java.io.OutputStream: void <init>()>: 43
<java.io.RandomAccessFile: void close()>: 43
<java.io.StringWriter: java.lang.String toString()>: 43
<java.io.Reader: int read(char[])>: 42
<java.net.HttpURLConnection: void <init>(java.net.URL)>: 42
<com.newrelic.agent.android.instrumentation.HttpURLConnectionExtension: java.io.InputStream getErrorStream()>: 42
<java.io.PrintWriter: void <init>(java.io.Writer)>: 42
<java.io.FileOutputStream: void close()>: 42
<javax.net.ssl.HttpsURLConnection: void <init>(java.net.URL)>: 42
<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getErrorStream()>: 42
<java.io.RandomAccessFile: void readFully(byte[])>: 42
<java.io.File: long length()>: 42
<java.net.URI: java.lang.String getHost()>: 42
<java.net.URL: int getPort()>: 42
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>: 42
<java.io.FileOutputStream: void <init>(java.io.File)>: 42
<java.io.RandomAccessFile: long length()>: 42
<android.net.NetworkInfo: java.lang.String getTypeName()>: 42
<java.io.OutputStreamWriter: void close()>: 41
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 41
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>: 41
<java.io.File: boolean createNewFile()>: 41
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>: 41
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>: 41
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>: 41
<java.io.ObjectOutputStream: void close()>: 41
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 41
<java.io.BufferedReader: void <init>(java.io.Reader,int)>: 40
<java.net.InetAddress: java.lang.String getHostAddress()>: 40
<com.nielsen.app.sdk.AppConfig: void close()>: 40
<java.io.InputStreamReader: void close()>: 40
<java.util.zip.DeflaterOutputStream: void flush()>: 40
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(android.net.Network)>: 40
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>: 40
<java.io.ByteArrayOutputStream: void <init>(int)>: 40
<java.net.HttpCookie: java.util.List parse(java.lang.String)>: 40
<java.io.FileInputStream: void close()>: 40
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>: 40
<java.util.zip.GZIPInputStream: void close()>: 40
<com.nielsen.app.sdk.AppConfig$AppRule: void close()>: 40
<com.nielsen.app.sdk.AppLocationManager: void close()>: 40
<com.nielsen.app.sdk.l: void close()>: 40
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 40
<java.io.BufferedWriter: void flush()>: 40
<java.net.InetAddress: boolean isLoopbackAddress()>: 40
<java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>: 40
<java.net.HttpCookie: java.lang.String getName()>: 40
<java.io.FileOutputStream: void write(byte[],int,int)>: 40
<com.nielsen.app.sdk.i: void close()>: 40
<java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>: 40
<java.io.ObjectOutputStream: void flush()>: 40
<java.lang.Integer: boolean equals(java.lang.Object)>: 40
<com.nielsen.app.sdk.b: void close()>: 40
<java.io.ObjectInputStream: java.lang.Object readObject()>: 40
<java.io.FilterOutputStream: void write(byte[])>: 40
<java.io.FileNotFoundException: void <init>(java.lang.String)>: 40
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 40
<java.net.HttpCookie: java.lang.String getValue()>: 40
<com.nielsen.app.sdk.AppRequestManager: void close()>: 40
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>: 40
<android.database.Cursor: void close()>: 40
<android.net.Uri: java.lang.String encode(java.lang.String)>: 40
<java.io.File: java.io.File getAbsoluteFile()>: 40
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 40
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>: 40
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>: 40
<com.adincube.sdk.g.a: boolean equals(java.lang.Object)>: 40
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>: 40
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 40
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 40
<java.lang.Character: boolean equals(java.lang.Object)>: 40
<java.io.ObjectInputStream: void close()>: 40
<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>: 40
<android.net.http.HttpResponseCache: android.net.http.HttpResponseCache getInstalled()>: 40
<android.net.ConnectivityManager: android.net.Network[] getAllNetworks()>: 40
<java.io.DataOutputStream: void <init>(java.io.OutputStream)>: 40
<java.util.Date: boolean equals(java.lang.Object)>: 40
<java.net.HttpURLConnection: void setFollowRedirects(boolean)>: 40
<java.io.PrintStream: void println(java.lang.String)>: 40
<android.net.http.HttpResponseCache: android.net.http.HttpResponseCache install(java.io.File,long)>: 40
<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>: 40
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 40
<java.io.BufferedWriter: void close()>: 40
<java.io.DataOutputStream: void writeBytes(java.lang.String)>: 40
<java.io.File: boolean isFile()>: 40
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 40
<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>: 40
<android.database.sqlite.SQLiteOpenHelper: void close()>: 40
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>: 40
<java.util.zip.DeflaterOutputStream: void close()>: 40
<java.io.DataOutputStream: void flush()>: 40
<com.nielsen.app.sdk.h: void close()>: 40
<java.io.FilterOutputStream: void close()>: 40
<java.io.ByteArrayOutputStream: void close()>: 40
<java.io.File: boolean mkdirs()>: 40
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,java.io.InputStream)>: 40
<android.graphics.Bitmap: void recycle()>: 39
<java.io.PrintStream: void <init>(java.io.OutputStream)>: 37
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 34
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>: 34
<cz.msebera.android.httpclient.HttpConnection: void close()>: 10
<java.net.InetAddress: boolean equals(java.lang.Object)>: 9
<java.lang.Enum: boolean equals(java.lang.Object)>: 7
<java.net.URI: boolean isAbsolute()>: 6
<java.net.URI: java.net.URI create(java.lang.String)>: 6
<java.io.InterruptedIOException: void <init>()>: 5
<java.net.URI: void <init>(java.lang.String)>: 4
<java.io.OutputStream: void write(byte[],int,int)>: 4
<cz.msebera.android.httpclient.HttpHost: boolean equals(java.lang.Object)>: 4
<java.net.Socket: void close()>: 4
<cz.msebera.android.httpclient.conn.routing.HttpRoute: boolean equals(java.lang.Object)>: 4
<java.io.ByteArrayInputStream: void <init>(byte[])>: 4
<java.io.InterruptedIOException: void <init>(java.lang.String)>: 4
<cz.msebera.android.httpclient.MalformedChunkCodingException: void <init>(java.lang.String)>: 4
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 4
<java.net.Proxy: void <init>(java.net.Proxy$Type,java.net.SocketAddress)>: 3
<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)>: 3
<java.net.URI: java.lang.String getScheme()>: 3
<java.io.InputStream: int read(byte[])>: 3
<java.net.URL: void <init>(java.net.URL,java.lang.String)>: 3
<java.net.URI: java.lang.String toASCIIString()>: 3
<java.net.URI: boolean isOpaque()>: 3
<java.net.Socket: void setSoTimeout(int)>: 3
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>: 3
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>: 2
<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>: 2
<java.net.URI: java.lang.String getRawFragment()>: 2
<java.io.ByteArrayOutputStream: int size()>: 2
<java.net.URI: java.lang.String getRawQuery()>: 2
<java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>: 2
<java.net.URI: java.lang.String getUserInfo()>: 2
<java.net.URI: java.lang.String getAuthority()>: 2
<java.net.URI: java.lang.String getPath()>: 2
<java.io.FileOutputStream: void write(byte[])>: 2
<java.io.StringReader: void <init>(java.lang.String)>: 2
<cz.msebera.android.httpclient.NoHttpResponseException: void <init>(java.lang.String)>: 2
<cz.msebera.android.httpclient.ConnectionClosedException: void <init>(java.lang.String)>: 2
<java.nio.charset.Charset: boolean equals(java.lang.Object)>: 2
<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>: 2
<java.nio.charset.CoderResult: boolean isError()>: 2
<java.net.URI: int getPort()>: 2
<com.loopj.android.http.Base64OutputStream: void write(byte[],int,int)>: 2
<java.nio.charset.CoderResult: void throwException()>: 2
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 2
<java.net.URI: java.lang.String getFragment()>: 2
<com.newrelic.agent.android.harvest.ConnectInformation: boolean equals(java.lang.Object)>: 2
<java.net.InetAddress: java.lang.String getHostName()>: 1
<java.net.Socket: int getSendBufferSize()>: 1
<java.net.URI: java.lang.String getRawAuthority()>: 1
<java.net.URI: java.net.URI resolve(java.net.URI)>: 1
<java.net.Socket: void setSoLinger(boolean,int)>: 1
<java.net.URISyntaxException: java.lang.String getMessage()>: 1
<com.newrelic.com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>: 1
<java.io.ByteArrayOutputStream: void writeTo(java.io.OutputStream)>: 1
<cz.msebera.android.httpclient.conn.ConnectionPoolTimeoutException: void <init>(java.lang.String)>: 1
<cz.msebera.android.httpclient.MessageConstraintException: void <init>(java.lang.String)>: 1
<com.newrelic.com.google.gson.internal.bind.JsonTreeWriter$1: void <init>()>: 1
<cz.msebera.android.httpclient.impl.io.IdentityOutputStream: void write(byte[],int,int)>: 1
<java.net.URI: java.net.URI normalize()>: 1
<java.io.EOFException: void <init>(java.lang.String)>: 1
<java.io.Writer: void <init>()>: 1
<com.newrelic.agent.android.harvest.DeviceInformation: boolean equals(java.lang.Object)>: 1
<cz.msebera.android.httpclient.impl.io.ContentLengthOutputStream: void write(byte[],int,int)>: 1
<java.nio.CharBuffer: java.nio.CharBuffer wrap(char[],int,int)>: 1
<cz.msebera.android.httpclient.conn.EofSensorInputStream: int read(byte[],int,int)>: 1
<com.newrelic.agent.android.harvest.ApplicationInformation: boolean equals(java.lang.Object)>: 1
<cz.msebera.android.httpclient.impl.io.ContentLengthInputStream: int read(byte[])>: 1
<java.net.Socket: java.io.OutputStream getOutputStream()>: 1
<java.net.URI: java.lang.String getRawPath()>: 1
<cz.msebera.android.httpclient.client.ClientProtocolException: void <init>(java.lang.Throwable)>: 1
<java.net.URI: java.lang.String getQuery()>: 1
<java.net.Socket: int getReceiveBufferSize()>: 1
<cz.msebera.android.httpclient.TruncatedChunkException: void <init>(java.lang.String)>: 1
<java.io.IOException: void <init>()>: 1
<java.net.Socket: void shutdownOutput()>: 1
<java.nio.CharBuffer: java.lang.String toString()>: 1
<cz.msebera.android.httpclient.impl.SocketHttpClientConnection: void close()>: 1
<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>: 1
<java.io.InputStream: int read()>: 1
<java.nio.charset.CharacterCodingException: void <init>()>: 1
<cz.msebera.android.httpclient.client.ClientProtocolException: void <init>(java.lang.String)>: 1
<java.net.Socket: int getSoTimeout()>: 1
<cz.msebera.android.httpclient.conn.UnsupportedSchemeException: void <init>(java.lang.String)>: 1
<java.net.Socket: java.io.InputStream getInputStream()>: 1
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 1
<java.net.Socket: void shutdownInput()>: 1
<java.io.Writer: void write(int)>: 1
<cz.msebera.android.httpclient.impl.io.ChunkedInputStream: int read(byte[],int,int)>: 1
<cz.msebera.android.httpclient.impl.io.ContentLengthInputStream: int read(byte[],int,int)>: 1
<cz.msebera.android.httpclient.impl.io.EmptyInputStream: void <init>()>: 1
<com.loopj.android.http.Base64DataException: void <init>(java.lang.String)>: 1
<java.net.Socket: void setTcpNoDelay(boolean)>: 1
<java.net.URI: java.lang.String getRawSchemeSpecificPart()>: 1
<java.io.Writer: java.io.Writer append(char)>: 1
<java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>: 1
<java.net.URI: java.lang.String getRawUserInfo()>: 1
<java.io.Writer: void write(java.lang.String,int,int)>: 1
<cz.msebera.android.httpclient.impl.io.ChunkedInputStream: int read(byte[])>: 1
<cz.msebera.android.httpclient.conn.ConnectTimeoutException: void <init>(java.lang.String)>: 1
<java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>: 1
<cz.msebera.android.httpclient.impl.io.ChunkedOutputStream: void write(byte[],int,int)>: 1
<java.io.FileInputStream: int read(byte[])>: 1
