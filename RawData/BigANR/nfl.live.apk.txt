Duration => 233
UI Thread => 318
Worker Thread => 190

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 47
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 18
<java.lang.String: int hashCode()>: 18
<android.database.ContentObserver: void <init>(android.os.Handler)>: 11
<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String)>: 10
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 10
<android.graphics.BitmapFactory$Options: void <init>()>: 9
<java.io.File: boolean exists()>: 8
<java.io.File: void <init>(java.lang.String)>: 8
<org.codehaus.jackson.type.JavaType: int hashCode()>: 7
<org.codehaus.jackson.JsonNode: boolean equals(java.lang.Object)>: 6
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory$Options)>: 6
<java.lang.Object: int hashCode()>: 6
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 6
<org.codehaus.jackson.type.JavaType: boolean equals(java.lang.Object)>: 5
<android.graphics.Bitmap: void recycle()>: 5
<java.lang.Object: boolean equals(java.lang.Object)>: 5
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>: 4
<android.database.Observable: void registerObserver(java.lang.Object)>: 4
<java.io.File: boolean createNewFile()>: 4
<java.io.File: java.io.File getParentFile()>: 4
<java.io.File: boolean mkdirs()>: 4
<java.math.BigDecimal: int hashCode()>: 3
<java.io.InputStream: void close()>: 3
<java.net.URL: void <init>(java.lang.String)>: 3
<java.math.BigInteger: int hashCode()>: 3
<java.util.AbstractMap: int hashCode()>: 3
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 3
<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>: 3
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 3
<java.io.BufferedInputStream: void close()>: 3
<java.math.BigDecimal: boolean equals(java.lang.Object)>: 3
<java.io.FileOutputStream: void <init>(java.io.File)>: 3
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 3
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 3
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>: 3
<java.io.IOException: void <init>(java.lang.String)>: 3
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>: 3
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 3
<android.graphics.drawable.BitmapDrawable: void draw(android.graphics.Canvas)>: 3
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 3
<java.io.FileOutputStream: void close()>: 3
<android.net.Uri$Builder: android.net.Uri build()>: 2
<org.codehaus.jackson.JsonGenerator: void close()>: 2
<android.net.Uri$Builder: android.net.Uri$Builder path(java.lang.String)>: 2
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 2
<java.io.Writer: void write(java.lang.String)>: 2
<org.codehaus.jackson.JsonGenerationException: void <init>(java.lang.String)>: 2
<org.codehaus.jackson.map.ser.SerializerCache$TypeKey: int hashCode()>: 2
<android.net.Uri$Builder: void <init>()>: 2
<org.codehaus.jackson.map.introspect.MemberKey: boolean equals(java.lang.Object)>: 2
<android.database.Cursor: void close()>: 2
<java.io.Writer: void <init>()>: 1
<org.codehaus.jackson.impl.JsonParserBase: void close()>: 1
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 1
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 1
<java.io.File: boolean renameTo(java.io.File)>: 1
<java.io.Closeable: void close()>: 1
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 1
<java.io.File: boolean isDirectory()>: 1
<org.codehaus.jackson.impl.ReaderBasedParser: void close()>: 1
<java.io.File: long length()>: 1
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 1
<org.codehaus.jackson.JsonProcessingException: void <init>(java.lang.String)>: 1
<java.io.Reader: void close()>: 1
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 1
<java.io.File: java.lang.String getPath()>: 1
<org.codehaus.jackson.impl.JsonGeneratorBase: void close()>: 1
<java.net.InetAddress: java.lang.String toString()>: 1
<java.io.Writer: void close()>: 1
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 1
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 1
<java.io.OutputStream: void <init>()>: 1
<org.codehaus.jackson.map.ser.SerializerCache$TypeKey: boolean equals(java.lang.Object)>: 1
<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String,java.lang.Throwable)>: 1
<java.io.File: java.lang.String getAbsolutePath()>: 1
<org.codehaus.jackson.JsonProcessingException: void <init>(java.lang.String,java.lang.Throwable)>: 1
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 1
<org.codehaus.jackson.util.ByteArrayBuilder: void <init>()>: 1
<org.codehaus.jackson.JsonParser: void close()>: 1
<java.io.PrintStream: void println(java.lang.String)>: 1
<java.io.StringReader: void <init>(java.lang.String)>: 1
<java.io.Reader: int read(char[],int,int)>: 1
<java.io.EOFException: void <init>(java.lang.String)>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 37
<java.io.PrintStream: void println(java.lang.String)>: 15
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 13
<java.lang.String: int hashCode()>: 12
<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String)>: 10
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 8
<java.io.IOException: void <init>(java.lang.String)>: 6
<java.lang.Object: int hashCode()>: 6
<org.codehaus.jackson.JsonNode: boolean equals(java.lang.Object)>: 4
<org.codehaus.jackson.map.introspect.MemberKey: boolean equals(java.lang.Object)>: 4
<java.lang.Object: boolean equals(java.lang.Object)>: 3
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 3
<org.codehaus.jackson.type.JavaType: int hashCode()>: 3
<java.net.URI: java.lang.String getScheme()>: 3
<org.codehaus.jackson.impl.JsonParserBase: void close()>: 2
<java.math.BigDecimal: int hashCode()>: 2
<java.math.BigInteger: int hashCode()>: 2
<org.codehaus.jackson.impl.ReaderBasedParser: void close()>: 2
<java.util.AbstractMap: int hashCode()>: 2
<org.codehaus.jackson.JsonProcessingException: void <init>(java.lang.String)>: 2
<java.io.Reader: void close()>: 2
<java.net.URI: java.lang.String getHost()>: 2
<java.math.BigDecimal: boolean equals(java.lang.Object)>: 2
<java.io.OutputStream: void <init>()>: 2
<org.codehaus.jackson.util.ByteArrayBuilder: void <init>()>: 2
<org.codehaus.jackson.JsonParser: void close()>: 2
<java.io.StringReader: void <init>(java.lang.String)>: 2
<java.io.Reader: int read(char[],int,int)>: 2
<java.io.EOFException: void <init>(java.lang.String)>: 2
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>: 1
<android.graphics.BitmapFactory$Options: void <init>()>: 1
<java.io.IOException: void <init>()>: 1
<java.net.Socket: java.net.SocketAddress getLocalSocketAddress()>: 1
<java.net.Socket: void <init>(java.net.Proxy)>: 1
<android.graphics.Bitmap: void recycle()>: 1
<java.net.Socket: void connect(java.net.SocketAddress,int)>: 1
<java.net.URI: void <init>(java.lang.String)>: 1
<java.io.InputStream: int read(byte[])>: 1
<java.nio.CharBuffer: java.lang.String toString()>: 1
<java.net.Socket: void setTcpNoDelay(boolean)>: 1
<java.io.OutputStream: void write(byte[],int,int)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>: 1
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 1
<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>: 1
<java.io.OutputStream: void flush()>: 1
<java.net.Socket: boolean isClosed()>: 1
<java.net.Socket: void setReuseAddress(boolean)>: 1
<java.net.InetSocketAddress: int getPort()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory$Options)>: 1
<android.graphics.Bitmap: int getHeight()>: 1
<java.nio.channels.Channel: void close()>: 1
<java.net.URI: java.lang.String getRawQuery()>: 1
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>: 1
<android.graphics.Bitmap: int getWidth()>: 1
<java.net.Socket: java.io.OutputStream getOutputStream()>: 1
<java.net.Socket: java.io.InputStream getInputStream()>: 1
<java.net.URI: int getPort()>: 1
<java.net.Socket: void close()>: 1
<java.net.URI: java.lang.String getRawPath()>: 1
<android.database.Cursor: void close()>: 1
<java.net.Socket: boolean isBound()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 1
