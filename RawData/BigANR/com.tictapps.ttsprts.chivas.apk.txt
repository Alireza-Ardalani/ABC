Duration => 68
UI Thread => 130
Worker Thread => 788

----------------StartUI----------------
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 12
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 10
<android.database.sqlite.SQLiteDatabase: boolean isOpen()>: 8
<android.database.sqlite.SQLiteClosable: void close()>: 8
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 7
<java.io.ObjectInputStream: void close()>: 7
<java.io.FileInputStream: void close()>: 7
<java.io.ObjectInputStream: java.lang.Object readObject()>: 7
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 6
<java.io.File: void <init>(java.lang.String)>: 6
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 5
<java.io.File: boolean exists()>: 5
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 3
<android.net.NetworkInfo: boolean isConnected()>: 3
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 3
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 3
<java.io.File: boolean setLastModified(long)>: 2
<java.io.File: java.lang.String getAbsolutePath()>: 2
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 2
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 2
<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>: 1
<java.io.Writer: void <init>()>: 1
<java.io.FileReader: void <init>(java.io.File)>: 1
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 1
<java.io.PrintWriter: void close()>: 1
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 1
<java.io.OutputStream: void close()>: 1
<java.io.PrintWriter: void println()>: 1
<android.net.NetworkInfo: int getSubtype()>: 1
<java.io.FileInputStream: void <init>(java.io.File)>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<java.io.File: boolean createNewFile()>: 1
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 1
<java.io.InputStream: int read(byte[])>: 1
<android.net.NetworkInfo: int getType()>: 1
<java.io.OutputStream: void write(byte[],int,int)>: 1
<java.io.File: boolean delete()>: 1
<java.io.PrintWriter: void <init>(java.io.Writer)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 1
<android.database.Cursor: void close()>: 1
<java.io.File: boolean mkdirs()>: 1
----------------StartWorker----------------
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 51
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 50
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 45
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 18
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 17
<java.net.URL: void <init>(java.lang.String)>: 17
<java.net.URL: java.net.URLConnection openConnection()>: 16
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 16
<java.io.FileOutputStream: void close()>: 15
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>: 15
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>: 15
<java.io.ObjectOutputStream: void close()>: 15
<java.io.IOException: void <init>(java.lang.String)>: 11
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 11
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 11
<java.net.URLConnection: void setReadTimeout(int)>: 11
<java.io.File: void <init>(java.io.File,java.lang.String)>: 11
<java.net.URLConnection: void setConnectTimeout(int)>: 11
<java.io.File: boolean delete()>: 11
<java.io.File: java.lang.String getAbsolutePath()>: 11
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 9
<java.io.OutputStream: void write(byte[])>: 9
<java.net.URLConnection: java.io.InputStream getInputStream()>: 9
<java.io.ByteArrayOutputStream: void <init>()>: 9
<java.io.OutputStream: void close()>: 8
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 7
<java.io.File: long lastModified()>: 7
<java.net.URLConnection: void setDoOutput(boolean)>: 7
<java.io.ObjectInputStream: void close()>: 7
<java.io.FileInputStream: void close()>: 7
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 7
<java.net.HttpURLConnection: int getResponseCode()>: 7
<java.io.File: boolean renameTo(java.io.File)>: 7
<org.apache.http.HttpConnection: void close()>: 7
<java.io.ObjectInputStream: java.lang.Object readObject()>: 7
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 7
<java.io.BufferedReader: java.lang.String readLine()>: 6
<java.net.URI: boolean isAbsolute()>: 6
<java.io.InputStream: int read(byte[])>: 6
<java.io.InputStream: void close()>: 6
<android.database.Cursor: void close()>: 6
<java.io.BufferedReader: void <init>(java.io.Reader)>: 6
<java.net.URI: void <init>(java.lang.String)>: 5
<android.database.sqlite.SQLiteDatabase: boolean isOpen()>: 5
<java.io.InputStream: void <init>()>: 5
<java.io.InterruptedIOException: void <init>()>: 5
<java.io.File: void <init>(java.lang.String)>: 5
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 5
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 5
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 5
<android.database.sqlite.SQLiteClosable: void close()>: 5
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 4
<java.net.URI: java.net.URI create(java.lang.String)>: 4
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 4
<java.io.OutputStream: void flush()>: 4
<java.io.ByteArrayInputStream: void <init>(byte[])>: 4
<com.microsoft.appcenter.utils.storage.DatabaseManager$Scanner: void close()>: 4
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 4
<com.microsoft.appcenter.utils.storage.StorageHelper$DatabaseStorage$DatabaseScanner: void close()>: 4
<org.apache.http.MalformedChunkCodingException: void <init>(java.lang.String)>: 4
<java.net.Socket: void close()>: 4
<java.io.OutputStream: void write(byte[],int,int)>: 3
<java.net.Socket: void setSoTimeout(int)>: 3
<java.net.URI: java.lang.String toASCIIString()>: 3
<android.graphics.Bitmap: int getHeight()>: 3
<java.io.OutputStream: void <init>()>: 3
<java.net.URI: boolean isOpaque()>: 3
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>: 2
<java.io.FileReader: void <init>(java.io.File)>: 2
<java.io.Closeable: void close()>: 2
<java.net.InetAddress: java.lang.String getHostName()>: 2
<android.net.ConnectivityManager: void unregisterNetworkCallback(android.net.ConnectivityManager$NetworkCallback)>: 2
<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>: 2
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 2
<android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)>: 2
<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String)>: 2
<java.nio.charset.Charset: boolean equals(java.lang.Object)>: 2
<com.microsoft.appcenter.utils.NetworkStateHelper: void close()>: 2
<java.net.URI: java.lang.String getHost()>: 2
<java.io.File: boolean mkdir()>: 2
<android.net.ConnectivityManager$NetworkCallback: void <init>()>: 2
<java.io.File: boolean exists()>: 2
<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>: 2
<java.io.InterruptedIOException: void <init>(java.lang.String)>: 2
<java.nio.charset.CoderResult: boolean isError()>: 2
<java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>: 2
<java.net.URI: java.lang.String getUserInfo()>: 2
<java.net.URI: int getPort()>: 2
<android.database.sqlite.SQLiteQueryBuilder: void <init>()>: 2
<android.net.ConnectivityManager: void registerNetworkCallback(android.net.NetworkRequest,android.net.ConnectivityManager$NetworkCallback)>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 2
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 2
<java.io.FileWriter: void <init>(java.io.File)>: 2
<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>: 2
<java.net.URI: java.lang.String getScheme()>: 2
<java.nio.charset.CoderResult: void throwException()>: 2
<android.net.NetworkRequest$Builder: void <init>()>: 2
<java.io.BufferedWriter: void close()>: 2
<org.apache.http.ConnectionClosedException: void <init>(java.lang.String)>: 2
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 2
<android.net.NetworkRequest$Builder: android.net.NetworkRequest build()>: 2
<java.io.Writer: void write(java.lang.String)>: 2
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 2
<java.net.URI: java.lang.String getAuthority()>: 2
<android.net.NetworkInfo: java.lang.String getSubtypeName()>: 2
<java.io.InputStream: int read(byte[],int,int)>: 2
<org.apache.http.NoHttpResponseException: void <init>(java.lang.String)>: 2
<java.io.BufferedReader: void close()>: 2
<java.net.URI: java.lang.String getPath()>: 2
<android.graphics.Bitmap: int getWidth()>: 2
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 2
<java.io.File: java.io.File[] listFiles()>: 2
<android.net.NetworkInfo: boolean isConnected()>: 2
<java.net.InetAddress: boolean equals(java.lang.Object)>: 2
<android.database.sqlite.SQLiteQueryBuilder: void appendWhere(java.lang.CharSequence)>: 2
<android.net.NetworkInfo: java.lang.String getTypeName()>: 2
<android.net.NetworkRequest$Builder: android.net.NetworkRequest$Builder addCapability(int)>: 2
<java.io.File: boolean mkdirs()>: 2
<java.io.IOException: void <init>()>: 1
<java.net.Socket: void shutdownOutput()>: 1
<java.io.Reader: int read(char[])>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 1
<java.nio.CharBuffer: java.lang.String toString()>: 1
<java.net.Socket: int getSendBufferSize()>: 1
<java.net.URI: java.lang.String getRawFragment()>: 1
<org.apache.http.impl.io.EmptyInputStream: void <init>()>: 1
<java.net.URI: java.lang.String getRawAuthority()>: 1
<java.io.InputStream: int read()>: 1
<java.net.URI: java.net.URI resolve(java.net.URI)>: 1
<org.apache.http.client.ClientProtocolException: void <init>(java.lang.String)>: 1
<java.net.Socket: void setSoLinger(boolean,int)>: 1
<java.net.URL: java.io.InputStream openStream()>: 1
<org.apache.http.impl.io.ContentLengthInputStream: int read(byte[])>: 1
<java.nio.charset.CharacterCodingException: void <init>()>: 1
<java.net.URISyntaxException: java.lang.String getMessage()>: 1
<java.net.Socket: int getSoTimeout()>: 1
<org.apache.http.impl.io.IdentityOutputStream: void write(byte[],int,int)>: 1
<java.net.URI: java.lang.String getRawQuery()>: 1
<java.io.File: boolean createNewFile()>: 1
<org.apache.http.impl.io.ChunkedInputStream: int read(byte[])>: 1
<java.net.Socket: java.io.InputStream getInputStream()>: 1
<org.apache.http.impl.io.ContentLengthOutputStream: void write(byte[],int,int)>: 1
<org.apache.http.impl.SocketHttpClientConnection: void close()>: 1
<java.net.URI: java.net.URI normalize()>: 1
<java.net.Socket: void shutdownInput()>: 1
<org.apache.http.impl.io.ContentLengthInputStream: int read(byte[],int,int)>: 1
<org.apache.http.MessageConstraintException: void <init>(java.lang.String)>: 1
<org.apache.http.impl.io.ChunkedOutputStream: void write(byte[],int,int)>: 1
<org.apache.http.impl.io.ChunkedInputStream: int read(byte[],int,int)>: 1
<java.net.Socket: void setTcpNoDelay(boolean)>: 1
<java.net.URI: java.lang.String getRawSchemeSpecificPart()>: 1
<java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>: 1
<java.net.URI: java.lang.String getRawUserInfo()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 1
<org.apache.http.TruncatedChunkException: void <init>(java.lang.String)>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>: 1
<java.nio.CharBuffer: java.nio.CharBuffer wrap(char[],int,int)>: 1
<org.apache.http.conn.UnsupportedSchemeException: void <init>(java.lang.String)>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<java.net.URI: java.lang.String getFragment()>: 1
<java.net.Socket: java.io.OutputStream getOutputStream()>: 1
<org.apache.http.client.ClientProtocolException: void <init>(java.lang.Throwable)>: 1
<java.net.URI: java.lang.String getRawPath()>: 1
<java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>: 1
<java.io.FileOutputStream: void write(byte[])>: 1
<java.net.Socket: int getReceiveBufferSize()>: 1
