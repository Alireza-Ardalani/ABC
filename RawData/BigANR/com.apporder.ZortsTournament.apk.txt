Duration => 93
UI Thread => 408
Worker Thread => 1561

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 79
<android.database.sqlite.SQLiteClosable: void close()>: 54
<java.lang.Enum: boolean equals(java.lang.Object)>: 44
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 30
<android.database.Cursor: void close()>: 27
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 26
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 22
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 14
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 10
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 8
<java.io.InputStream: void close()>: 7
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 7
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 7
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>: 6
<android.graphics.Bitmap: int getHeight()>: 5
<java.io.FileOutputStream: void <init>(java.io.File)>: 5
<android.graphics.Bitmap: int getWidth()>: 5
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 5
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 5
<java.io.OutputStream: void close()>: 4
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 3
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 2
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 2
<java.io.InputStream: int read(byte[])>: 2
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 2
<java.util.zip.ZipFile: void close()>: 2
<java.net.InetAddress: java.lang.String getHostAddress()>: 2
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>: 2
<android.net.NetworkInfo: boolean isConnected()>: 2
<java.lang.Object: boolean equals(java.lang.Object)>: 2
<java.io.InputStream: int available()>: 2
<java.net.InetAddress: boolean isLoopbackAddress()>: 2
<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>: 2
<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>: 2
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 2
<android.graphics.BitmapFactory$Options: void <init>()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 1
<java.io.File: java.lang.String getName()>: 1
<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String)>: 1
<java.io.FileOutputStream: void close()>: 1
<java.io.File: void <init>(java.lang.String)>: 1
<java.io.File: void <init>(java.io.File,java.lang.String)>: 1
----------------StartWorker----------------
<android.database.Cursor: void close()>: 190
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 187
<android.database.sqlite.SQLiteClosable: void close()>: 121
<java.lang.String: boolean equals(java.lang.Object)>: 120
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 115
<java.lang.Enum: boolean equals(java.lang.Object)>: 75
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 68
<java.io.InputStream: void close()>: 38
<java.io.InputStream: boolean markSupported()>: 27
<java.net.URI: java.lang.String getHost()>: 24
<java.io.InputStream: int read(byte[])>: 23
<java.io.InputStream: void reset()>: 21
<java.io.InputStream: void mark(int)>: 18
<java.io.FileInputStream: void <init>(java.io.File)>: 15
<java.io.ByteArrayInputStream: void <init>(byte[])>: 15
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 14
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 14
<java.io.ByteArrayOutputStream: void <init>()>: 14
<java.io.ByteArrayOutputStream: void close()>: 14
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 14
<java.net.URI: void <init>(java.lang.String)>: 12
<com.amazonaws.internal.SdkFilterInputStream: void <init>(java.io.InputStream)>: 12
<java.net.URL: java.net.URLConnection openConnection()>: 11
<java.net.HttpURLConnection: int getResponseCode()>: 11
<java.net.URLConnection: void setReadTimeout(int)>: 11
<java.net.URLConnection: java.io.InputStream getInputStream()>: 11
<java.net.URLConnection: void setConnectTimeout(int)>: 11
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 11
<java.io.FileInputStream: void close()>: 9
<java.net.URI: int getPort()>: 9
<java.net.URI: java.lang.String getScheme()>: 9
<com.amazonaws.internal.SdkFilterInputStream: void reset()>: 9
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 9
<java.net.URI: java.lang.String getPath()>: 9
<com.amazonaws.internal.SdkFilterInputStream: boolean markSupported()>: 9
<java.net.URL: void <init>(java.lang.String)>: 8
<java.net.URLConnection: void setDoOutput(boolean)>: 7
<java.io.BufferedReader: java.lang.String readLine()>: 7
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 7
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 7
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 7
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 7
<java.io.BufferedReader: void <init>(java.io.Reader)>: 7
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 6
<java.net.URI: java.net.URI create(java.lang.String)>: 6
<java.io.IOException: void <init>(java.lang.String)>: 6
<java.io.File: void <init>(java.lang.String)>: 6
<android.graphics.BitmapFactory$Options: void <init>()>: 6
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 6
<com.amazonaws.internal.SdkInputStream: void <init>()>: 6
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 6
<com.amazonaws.internal.SdkFilterInputStream: void mark(int)>: 6
<java.net.URI: java.lang.String getAuthority()>: 6
<java.io.InputStream: int read(byte[],int,int)>: 6
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 6
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 5
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 4
<java.io.FileOutputStream: void close()>: 4
<java.io.OutputStreamWriter: void flush()>: 4
<java.io.Writer: void write(java.lang.String)>: 4
<java.io.File: void <init>(java.io.File,java.lang.String)>: 4
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>: 4
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 4
<java.net.URLConnection: void setDoInput(boolean)>: 4
<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>: 3
<java.io.File: long length()>: 3
<java.io.OutputStream: void write(byte[],int,int)>: 3
<java.io.InputStream: int read()>: 3
<java.io.File: java.lang.String getName()>: 3
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 3
<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>: 3
<java.io.InputStream: void <init>()>: 3
<java.io.ByteArrayInputStream: int available()>: 3
<java.io.OutputStream: void flush()>: 3
<com.amazonaws.internal.SdkFilterInputStream: int read()>: 3
<java.net.URLConnection: java.util.Map getHeaderFields()>: 3
<java.io.BufferedInputStream: void close()>: 3
<java.io.FileInputStream: long skip(long)>: 3
<java.io.File: boolean exists()>: 3
<com.amazonaws.util.NamespaceRemovingInputStream: void <init>(java.io.InputStream)>: 3
<java.io.BufferedInputStream: int read(byte[],int,int)>: 3
<java.io.FilterInputStream: void <init>(java.io.InputStream)>: 3
<com.amazonaws.services.s3.internal.MD5DigestCalculatingInputStream: void <init>(java.io.InputStream)>: 3
<java.net.URI: java.net.URL toURL()>: 3
<java.io.OutputStream: void close()>: 3
<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>: 3
<com.amazonaws.internal.SdkFilterInputStream: int read(byte[],int,int)>: 3
<java.net.URL: java.lang.String toString()>: 3
<java.io.FileInputStream: int read(byte[],int,int)>: 3
<java.net.URI: java.lang.String toString()>: 3
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>: 3
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>: 3
<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>: 3
<com.amazonaws.internal.SdkFilterInputStream: void close()>: 3
<java.io.FileInputStream: int read()>: 3
<java.io.BufferedReader: void close()>: 3
<java.io.FileNotFoundException: void <init>(java.lang.String)>: 3
<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>: 3
<java.io.File: java.lang.String getAbsolutePath()>: 3
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>: 3
<java.io.FilterInputStream: int read(byte[])>: 3
<java.net.URLConnection: void setUseCaches(boolean)>: 3
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 1
