Duration => 369
UI Thread => 113
Worker Thread => 551

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 12
<java.io.File: boolean exists()>: 9
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 7
<java.lang.Object: boolean equals(java.lang.Object)>: 7
<java.lang.String: int hashCode()>: 5
<java.io.IOException: void <init>(java.lang.String)>: 5
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 4
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 4
<java.io.File: boolean mkdirs()>: 4
<java.io.File: void <init>(java.io.File,java.lang.String)>: 4
<java.io.FileInputStream: void <init>(java.io.File)>: 3
<java.io.File: boolean isDirectory()>: 3
<java.io.File: boolean delete()>: 3
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 3
<java.io.File: void <init>(java.lang.String)>: 3
<java.io.BufferedWriter: void <init>(java.io.Writer,int)>: 2
<java.io.File: java.lang.String[] list()>: 2
<java.io.FileWriter: void <init>(java.io.File,boolean)>: 2
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 2
<java.io.File: boolean canWrite()>: 2
<java.io.File: java.lang.String getPath()>: 2
<java.io.File: boolean mkdir()>: 2
<java.io.File: java.lang.String toString()>: 2
<java.io.Writer: void close()>: 2
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 1
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<java.io.IOException: void <init>()>: 1
<java.io.File: boolean renameTo(java.io.File)>: 1
<java.io.Closeable: void close()>: 1
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 1
<java.io.File: long getUsableSpace()>: 1
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>: 1
<java.io.File: java.io.File[] listFiles()>: 1
<java.io.InputStream: int read()>: 1
<com.freshchat.consumer.sdk.j.a.b: void close()>: 1
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 1
<java.io.File: java.lang.String getAbsolutePath()>: 1
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 1
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>: 1
<java.io.EOFException: void <init>()>: 1
<java.io.FileWriter: void <init>(java.io.File)>: 1
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 1
<java.io.Writer: void write(java.lang.String)>: 1
----------------StartWorker----------------
<java.io.File: boolean exists()>: 41
<java.lang.Object: boolean equals(java.lang.Object)>: 30
<java.lang.String: boolean equals(java.lang.Object)>: 29
<java.io.File: java.lang.String getName()>: 22
<java.io.File: java.lang.String getAbsolutePath()>: 21
<android.database.sqlite.SQLiteDatabase: long replace(java.lang.String,java.lang.String,android.content.ContentValues)>: 18
<java.io.IOException: void <init>(java.lang.String)>: 10
<java.io.File: boolean delete()>: 10
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 9
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 9
<java.io.File: long length()>: 9
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 9
<java.io.File: void <init>(java.lang.String)>: 9
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 9
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 9
<java.lang.Object: int hashCode()>: 8
<java.io.File: boolean isDirectory()>: 7
<java.net.DatagramSocket: void close()>: 7
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 7
<java.net.DatagramPacket: void <init>(byte[],int)>: 7
<java.net.DatagramSocket: void <init>()>: 7
<java.net.DatagramSocket: void setSoTimeout(int)>: 7
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>: 7
<java.net.DatagramSocket: void receive(java.net.DatagramPacket)>: 7
<java.net.DatagramSocket: void send(java.net.DatagramPacket)>: 7
<java.net.DatagramPacket: void <init>(byte[],int,java.net.InetAddress,int)>: 7
<android.graphics.Rect: boolean equals(java.lang.Object)>: 6
<java.io.FileInputStream: void <init>(java.io.File)>: 6
<java.io.FileInputStream: void close()>: 6
<java.io.File: boolean renameTo(java.io.File)>: 6
<java.io.File: void <init>(java.io.File,java.lang.String)>: 6
<java.io.FileInputStream: int read(byte[])>: 6
<java.io.FileOutputStream: void close()>: 5
<android.graphics.Bitmap: int getHeight()>: 5
<android.graphics.Bitmap: int getWidth()>: 5
<java.io.FileOutputStream: void write(byte[])>: 5
<java.io.File: java.io.File getAbsoluteFile()>: 4
<java.io.OutputStream: void flush()>: 4
<java.io.BufferedReader: java.lang.String readLine()>: 4
<java.net.URLConnection: java.net.URL getURL()>: 4
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 4
<java.io.OutputStream: void close()>: 4
<java.io.InputStream: void close()>: 4
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 4
<java.io.BufferedReader: void close()>: 4
<java.io.EOFException: void <init>()>: 4
<java.io.BufferedReader: void <init>(java.io.Reader)>: 4
<java.lang.Boolean: boolean equals(java.lang.Object)>: 4
<java.io.InputStream: int read(byte[])>: 3
<java.io.ByteArrayInputStream: int read()>: 3
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 3
<java.io.File: boolean mkdirs()>: 3
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 2
<java.net.URL: java.lang.String getHost()>: 2
<java.io.File: java.lang.String[] list()>: 2
<java.util.zip.DeflaterOutputStream: void write(byte[],int,int)>: 2
<java.net.URI: void <init>(java.lang.String)>: 2
<java.net.URLConnection: void setDoOutput(boolean)>: 2
<android.graphics.Bitmap: int getPixel(int,int)>: 2
<java.io.OutputStream: void write(byte[],int,int)>: 2
<java.io.InputStreamReader: void close()>: 2
<java.net.URL: java.net.URLConnection openConnection()>: 2
<java.io.FileInputStream: int available()>: 2
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 2
<java.net.URLConnection: java.util.Map getHeaderFields()>: 2
<java.net.HttpCookie: java.util.List parse(java.lang.String)>: 2
<java.io.FileInputStream: long skip(long)>: 2
<java.net.CookieManager: void <init>(java.net.CookieStore,java.net.CookiePolicy)>: 2
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 2
<java.net.CookieManager: java.net.CookieStore getCookieStore()>: 2
<java.net.HttpURLConnection: int getResponseCode()>: 2
<java.net.HttpCookie: java.lang.String toString()>: 2
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 2
<android.net.http.X509TrustManagerExtensions: void <init>(javax.net.ssl.X509TrustManager)>: 2
<com.appsee.Dimension: boolean equals(java.lang.Object)>: 2
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 2
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>: 2
<android.graphics.BitmapFactory$Options: void <init>()>: 2
<android.net.NetworkInfo: int getType()>: 2
<java.net.URL: void <init>(java.lang.String)>: 2
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>: 2
<java.net.URLConnection: void setReadTimeout(int)>: 2
<java.lang.Integer: boolean equals(java.lang.Object)>: 2
<java.net.URL: java.lang.String getProtocol()>: 2
<javax.net.ssl.SSLPeerUnverifiedException: void <init>(java.lang.String)>: 2
<java.io.OutputStream: void write(byte[])>: 2
<com.freshchat.consumer.sdk.j.ac$a: long skip(long)>: 2
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 2
<java.net.URLConnection: java.io.InputStream getInputStream()>: 2
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 2
<java.net.URLConnection: void setConnectTimeout(int)>: 2
<java.io.ByteArrayOutputStream: void <init>()>: 2
<java.util.zip.DeflaterOutputStream: void close()>: 2
<java.io.FileInputStream: void <init>(java.lang.String)>: 2
<android.net.http.X509TrustManagerExtensions: java.util.List checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,java.lang.String)>: 2
<java.net.URLConnection: void setDoInput(boolean)>: 2
<android.net.NetworkInfo: boolean isConnected()>: 2
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 2
<java.io.ByteArrayOutputStream: void close()>: 2
<java.io.File: java.lang.String toString()>: 2
<java.io.Closeable: void close()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 1
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 1
<java.io.DataInputStream: int readUnsignedShort()>: 1
<java.io.ByteArrayInputStream: void <init>(byte[])>: 1
<java.io.ByteArrayInputStream: int read(byte[],int,int)>: 1
<java.io.DataInputStream: int read(byte[])>: 1
<java.io.DataInputStream: void <init>(java.io.InputStream)>: 1
<com.freshchat.consumer.sdk.j.ac$a: void <init>(byte[])>: 1
<java.io.ByteArrayInputStream: void reset()>: 1
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 1
<java.io.DataInputStream: byte readByte()>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<java.io.ByteArrayInputStream: long skip(long)>: 1
<java.io.DataInputStream: int skipBytes(int)>: 1
