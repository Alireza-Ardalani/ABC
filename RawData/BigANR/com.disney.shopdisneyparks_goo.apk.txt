Duration => 7978
UI Thread => 730
Worker Thread => 24268

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 172
<java.lang.Object: boolean equals(java.lang.Object)>: 63
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 44
<java.lang.Enum: boolean equals(java.lang.Object)>: 37
<android.database.Cursor: void close()>: 28
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>: 27
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>: 27
<java.lang.String: int hashCode()>: 27
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 24
<java.net.URL: void <init>(java.lang.String)>: 20
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>: 18
<java.io.IOException: void <init>(java.lang.String)>: 17
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 17
<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>: 12
<android.net.Uri$Builder: android.net.Uri build()>: 12
<android.net.Uri$Builder: java.lang.String toString()>: 8
<android.net.Uri$Builder: android.net.Uri$Builder appendEncodedPath(java.lang.String)>: 8
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 6
<java.io.StringWriter: void <init>()>: 6
<java.io.PrintWriter: void <init>(java.io.Writer)>: 6
<java.io.StringWriter: java.lang.String toString()>: 6
<java.lang.Long: boolean equals(java.lang.Object)>: 5
<java.net.URLConnection: java.net.URL getURL()>: 5
<java.net.URLConnection: java.lang.String getContentType()>: 4
<java.net.HttpURLConnection: int getResponseCode()>: 4
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 4
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>: 4
<java.io.InputStream: int read(byte[],int,int)>: 4
<org.apache.http.MalformedChunkCodingException: void <init>(java.lang.String)>: 4
<java.io.EOFException: void <init>()>: 4
<java.net.URLConnection: void setDoOutput(boolean)>: 3
<java.net.URLConnection: java.util.Map getRequestProperties()>: 3
<java.net.URLConnection: java.util.Map getHeaderFields()>: 3
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 3
<java.net.HttpURLConnection: java.lang.String getRequestMethod()>: 3
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 3
<java.io.InputStream: void close()>: 3
<java.net.URLConnection: void setReadTimeout(int)>: 3
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 3
<java.net.URLConnection: java.io.InputStream getInputStream()>: 3
<java.net.URLConnection: void setConnectTimeout(int)>: 3
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 3
<java.net.URLConnection: int getContentLength()>: 3
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>: 2
<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>: 2
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 2
<java.io.InputStream: void <init>()>: 2
<java.io.IOException: void <init>(java.lang.Throwable)>: 2
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 2
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 2
<java.net.URL: java.lang.String getProtocol()>: 2
<java.io.OutputStream: void write(byte[])>: 2
<com.disney.wdpro.sdp.ui.home.fragments.entities.UiState: boolean equals(java.lang.Object)>: 2
<java.io.File: void <init>(java.io.File,java.lang.String)>: 2
<com.disney.wdpro.httpclient.authentication.model.DisneyUser: int hashCode()>: 2
<java.net.Socket: void close()>: 2
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 1
<java.io.FileReader: void <init>(java.io.File)>: 1
<java.net.URL: java.lang.String getPath()>: 1
<java.net.URL: java.lang.String getHost()>: 1
<java.net.HttpURLConnection: void <init>(java.net.URL)>: 1
<java.net.URL: java.net.URLConnection openConnection()>: 1
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 1
<com.newrelic.agent.android.instrumentation.HttpURLConnectionExtension: java.io.InputStream getErrorStream()>: 1
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 1
<java.io.File: boolean exists()>: 1
<java.io.BufferedReader: java.lang.String readLine()>: 1
<org.apache.http.impl.io.IdentityOutputStream: void write(byte[],int,int)>: 1
<java.io.ByteArrayInputStream: void <init>(byte[])>: 1
<java.io.InterruptedIOException: void <init>(java.lang.String)>: 1
<java.nio.charset.CoderResult: boolean isError()>: 1
<org.apache.http.impl.io.ContentLengthOutputStream: void write(byte[],int,int)>: 1
<java.net.URL: int getPort()>: 1
<java.lang.Object: int hashCode()>: 1
<java.net.URL: java.lang.String getQuery()>: 1
<java.io.BufferedWriter: void flush()>: 1
<java.io.FileWriter: void <init>(java.io.File)>: 1
<java.io.File: void <init>(java.lang.String)>: 1
<java.io.EOFException: void <init>(java.lang.String)>: 1
<org.apache.http.impl.io.ChunkedOutputStream: void write(byte[],int,int)>: 1
<java.nio.charset.CoderResult: void throwException()>: 1
<javax.net.ssl.HttpsURLConnection: void <init>(java.net.URL)>: 1
<java.net.URL: java.lang.String toString()>: 1
<java.io.BufferedWriter: void close()>: 1
<org.apache.http.ConnectionClosedException: void <init>(java.lang.String)>: 1
<java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>: 1
<org.apache.http.TruncatedChunkException: void <init>(java.lang.String)>: 1
<java.io.Writer: void write(java.lang.String)>: 1
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 1
<android.database.sqlite.SQLiteOpenHelper: void close()>: 1
<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getErrorStream()>: 1
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 1
<java.io.BufferedReader: void close()>: 1
<java.io.OutputStream: void <init>()>: 1
<java.io.File: boolean delete()>: 1
<java.io.File: java.lang.String getAbsolutePath()>: 1
<java.io.BufferedReader: void <init>(java.io.Reader)>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 2148
<java.io.IOException: void <init>(java.lang.String)>: 1145
<java.lang.Object: int hashCode()>: 961
<java.io.InputStream: void close()>: 770
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 680
<android.net.Uri$Builder: android.net.Uri build()>: 623
<java.lang.Enum: boolean equals(java.lang.Object)>: 588
<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>: 452
<java.io.File: void <init>(java.lang.String)>: 398
<java.io.InputStream: int read(byte[],int,int)>: 363
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 336
<java.net.URLConnection: java.net.URL getURL()>: 300
<okio.Source: void close()>: 244
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 243
<org.apache.http.MalformedChunkCodingException: void <init>(java.lang.String)>: 240
<java.net.Socket: void close()>: 240
<java.io.EOFException: void <init>()>: 240
<java.net.URLConnection: java.lang.String getContentType()>: 240
<java.net.HttpURLConnection: int getResponseCode()>: 240
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 240
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>: 240
<java.io.ByteArrayInputStream: void <init>(byte[])>: 235
<java.net.URI: java.lang.String getHost()>: 230
<java.net.URL: void <init>(java.lang.String)>: 227
<android.net.NetworkInfo: int getType()>: 192
<java.io.OutputStream: void write(byte[],int,int)>: 183
<java.io.BufferedReader: void <init>(java.io.Reader)>: 183
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 182
<java.net.URLConnection: void setDoOutput(boolean)>: 180
<java.net.URLConnection: java.util.Map getRequestProperties()>: 180
<java.io.InputStream: void <init>()>: 180
<java.net.URLConnection: java.util.Map getHeaderFields()>: 180
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 180
<java.net.HttpURLConnection: java.lang.String getRequestMethod()>: 180
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 180
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 180
<java.net.URLConnection: int getContentLength()>: 180
<java.net.URLConnection: void setReadTimeout(int)>: 180
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 180
<java.net.URLConnection: java.io.InputStream getInputStream()>: 180
<java.net.URLConnection: void setConnectTimeout(int)>: 180
<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>: 177
<com.disney.wdpro.httpclient.authentication.model.DisneyUser: int hashCode()>: 176
<java.net.URI: java.lang.String getScheme()>: 174
<java.io.InputStream: int read(byte[])>: 174
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 172
<android.net.Uri$Builder: android.net.Uri$Builder appendEncodedPath(java.lang.String)>: 171
<java.io.File: boolean exists()>: 171
<java.io.File: boolean delete()>: 170
<java.lang.Object: boolean equals(java.lang.Object)>: 168
<java.net.URL: java.lang.String getHost()>: 127
<java.io.BufferedReader: java.lang.String readLine()>: 125
<java.net.URL: java.lang.String getProtocol()>: 123
<java.io.OutputStream: void write(byte[])>: 122
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 121
<android.net.NetworkInfo: boolean isConnected()>: 121
<java.nio.charset.CoderResult: boolean isError()>: 121
<java.nio.charset.CoderResult: void throwException()>: 121
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>: 120
<java.io.IOException: void <init>(java.lang.Throwable)>: 120
<java.net.URI: void <init>(java.lang.String)>: 119
<java.io.OutputStream: void flush()>: 119
<java.net.URI: java.lang.String getPath()>: 118
<java.net.URI: java.net.URI create(java.lang.String)>: 116
<android.net.http.AndroidHttpClient: org.apache.http.params.HttpParams getParams()>: 114
<java.io.File: boolean isDirectory()>: 114
<java.io.File: java.lang.String getPath()>: 114
<java.io.FileOutputStream: void close()>: 114
<java.io.File: java.lang.String getAbsolutePath()>: 114
<android.net.SSLSessionCache: void <init>(android.content.Context)>: 114
<android.net.SSLCertificateSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getHttpSocketFactory(int,android.net.SSLSessionCache)>: 114
<java.io.FileInputStream: void <init>(java.lang.String)>: 114
<java.lang.Long: boolean equals(java.lang.Object)>: 113
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>: 100
<java.io.StringWriter: void <init>()>: 86
<java.io.StringWriter: java.lang.String toString()>: 86
<java.io.PrintWriter: void <init>(java.io.Writer)>: 85
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 70
<android.net.NetworkInfo: int getSubtype()>: 64
<android.net.NetworkInfo: java.lang.String getTypeName()>: 64
<java.io.Writer: void write(java.lang.String)>: 63
<java.io.OutputStream: void <init>()>: 63
<java.net.URL: java.lang.String getPath()>: 63
<java.net.URL: int getPort()>: 63
<java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>: 62
<java.io.InterruptedIOException: void <init>(java.lang.String)>: 62
<org.apache.http.impl.io.ContentLengthInputStream: int read(byte[])>: 61
<okio.RealBufferedSource: void close()>: 61
<java.io.EOFException: void <init>(java.lang.String)>: 61
<org.apache.http.impl.io.ContentLengthInputStream: int read(byte[],int,int)>: 61
<org.apache.http.impl.io.ChunkedInputStream: int read(byte[],int,int)>: 61
<okio.GzipSource: void close()>: 61
<java.io.InputStream: int read()>: 61
<org.apache.http.impl.io.ChunkedInputStream: int read(byte[])>: 61
<java.net.SocketTimeoutException: void <init>(java.lang.String)>: 61
<java.net.HttpURLConnection: void <init>(java.net.URL)>: 60
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>: 60
<com.newrelic.agent.android.instrumentation.HttpURLConnectionExtension: java.io.InputStream getErrorStream()>: 60
<org.apache.http.impl.io.ContentLengthOutputStream: void write(byte[],int,int)>: 60
<org.apache.http.impl.io.ChunkedOutputStream: void write(byte[],int,int)>: 60
<javax.net.ssl.HttpsURLConnection: void <init>(java.net.URL)>: 60
<org.apache.http.TruncatedChunkException: void <init>(java.lang.String)>: 60
<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getErrorStream()>: 60
<java.net.URL: java.net.URLConnection openConnection()>: 60
<java.net.Socket: void setSoTimeout(int)>: 60
<org.apache.http.impl.io.IdentityOutputStream: void write(byte[],int,int)>: 60
<java.net.URL: java.lang.String toString()>: 60
<org.apache.http.ConnectionClosedException: void <init>(java.lang.String)>: 60
<java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>: 60
<java.net.URI: java.lang.String toString()>: 59
<java.net.Socket: java.io.OutputStream getOutputStream()>: 58
<java.net.URI: java.lang.String getQuery()>: 58
<java.net.Socket: java.io.InputStream getInputStream()>: 58
<java.io.PrintStream: void println(java.lang.String)>: 58
<java.io.OutputStream: void close()>: 58
<java.io.File: java.lang.String[] list()>: 57
<java.io.File: long lastModified()>: 57
<java.io.File: java.lang.String getName()>: 57
<java.io.BufferedOutputStream: void write(byte[],int,int)>: 57
<java.io.File: boolean mkdir()>: 57
<java.io.FileInputStream: void close()>: 57
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 57
<java.io.BufferedWriter: void flush()>: 57
<java.io.File: boolean setLastModified(long)>: 57
<java.io.FileOutputStream: void write(byte[],int,int)>: 57
<java.io.File: void <init>(java.net.URI)>: 57
<java.io.File: void <init>(java.io.File,java.lang.String)>: 57
<java.io.ObjectInputStream: java.lang.Object readObject()>: 57
<java.io.Writer: void write(char[])>: 57
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 57
<android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient newInstance(java.lang.String,android.content.Context)>: 57
<java.io.BufferedReader: void close()>: 57
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 57
<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>: 57
<java.io.BufferedReader: int read()>: 57
<java.io.FileReader: void <init>(java.io.File)>: 57
<java.util.zip.ZipInputStream: void close()>: 57
<java.io.PrintWriter: void <init>(java.io.OutputStream)>: 57
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>: 57
<java.io.FileOutputStream: void <init>(java.lang.String)>: 57
<java.io.ObjectInputStream: void close()>: 57
<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>: 57
<java.net.Socket: void <init>(java.lang.String,int)>: 57
<java.io.BufferedInputStream: int read(byte[],int,int)>: 57
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 57
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>: 57
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>: 57
<org.altbeacon.beacon.Beacon: int hashCode()>: 57
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 57
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 57
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>: 57
<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>: 57
<java.io.FilterOutputStream: void close()>: 57
<java.nio.charset.UnsupportedCharsetException: void <init>(java.lang.String)>: 57
<java.io.ObjectOutputStream: void close()>: 57
<java.io.FileInputStream: int read(byte[])>: 57
<java.io.File: boolean mkdirs()>: 57
<java.lang.String: int hashCode()>: 45
<android.database.Cursor: void close()>: 31
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>: 30
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>: 30
<org.apache.http.HttpConnection: void close()>: 7
<java.net.URI: boolean isAbsolute()>: 5
<java.io.InterruptedIOException: void <init>()>: 5
<org.apache.http.HttpHost: boolean equals(java.lang.Object)>: 4
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 3
<java.net.URI: java.lang.String getUserInfo()>: 3
<java.net.URI: java.lang.String getFragment()>: 3
<org.apache.http.conn.routing.HttpRoute: boolean equals(java.lang.Object)>: 3
<java.net.URI: java.lang.String toASCIIString()>: 2
<java.net.URI: java.lang.String getAuthority()>: 2
<java.nio.charset.Charset: boolean equals(java.lang.Object)>: 2
<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>: 2
<java.net.URI: int getPort()>: 2
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 2
<com.newrelic.agent.android.harvest.ConnectInformation: boolean equals(java.lang.Object)>: 2
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 1
<java.net.InetAddress: java.lang.String getHostName()>: 1
<java.io.Reader: int read(char[])>: 1
<java.net.Socket: int getSendBufferSize()>: 1
<java.net.URI: java.lang.String getRawFragment()>: 1
<java.net.URI: java.lang.String getRawAuthority()>: 1
<java.net.URI: java.net.URI resolve(java.net.URI)>: 1
<org.apache.http.client.ClientProtocolException: void <init>(java.lang.String)>: 1
<java.net.Socket: void setSoLinger(boolean,int)>: 1
<java.lang.Double: boolean equals(java.lang.Object)>: 1
<java.net.URISyntaxException: java.lang.String getMessage()>: 1
<com.newrelic.com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>: 1
<java.net.URI: java.lang.String getRawQuery()>: 1
<com.newrelic.com.google.gson.internal.bind.JsonTreeWriter$1: void <init>()>: 1
<org.apache.http.impl.SocketHttpClientConnection: void close()>: 1
<java.net.URI: java.net.URI normalize()>: 1
<java.io.Writer: void <init>()>: 1
<com.newrelic.agent.android.harvest.DeviceInformation: boolean equals(java.lang.Object)>: 1
<java.net.ConnectException: void <init>(java.lang.String)>: 1
<java.nio.CharBuffer: java.nio.CharBuffer wrap(char[],int,int)>: 1
<com.newrelic.agent.android.harvest.ApplicationInformation: boolean equals(java.lang.Object)>: 1
<java.net.URI: java.lang.String getRawPath()>: 1
<java.io.RandomAccessFile: void close()>: 1
<java.net.Socket: int getReceiveBufferSize()>: 1
<java.io.StringReader: void <init>(java.lang.String)>: 1
<java.io.Reader: int read(char[],int,int)>: 1
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 1
<java.io.IOException: void <init>()>: 1
<java.net.Socket: void shutdownOutput()>: 1
<java.nio.CharBuffer: java.lang.String toString()>: 1
<java.net.Socket: int getSoTimeout()>: 1
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 1
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 1
<java.net.Socket: void shutdownInput()>: 1
<java.io.Writer: void write(int)>: 1
<java.net.Socket: void setTcpNoDelay(boolean)>: 1
<java.net.URI: java.lang.String getRawSchemeSpecificPart()>: 1
<java.io.Writer: java.io.Writer append(char)>: 1
<java.net.URI: java.lang.String getRawUserInfo()>: 1
<java.io.Writer: void write(java.lang.String,int,int)>: 1
<org.apache.http.NoHttpResponseException: void <init>(java.lang.String)>: 1
<java.io.ByteArrayOutputStream: void <init>()>: 1
<org.apache.http.client.ClientProtocolException: void <init>(java.lang.Throwable)>: 1
<android.database.sqlite.SQLiteDatabase: boolean inTransaction()>: 1
<java.net.InetAddress: boolean equals(java.lang.Object)>: 1
<java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>: 1
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 1
<android.database.sqlite.SQLiteClosable: void close()>: 1
