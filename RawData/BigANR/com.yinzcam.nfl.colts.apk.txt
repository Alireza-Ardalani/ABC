Duration => 803
UI Thread => 1148
Worker Thread => 1052

----------------StartUI----------------
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 93
<java.io.File: void <init>(java.lang.String)>: 74
<java.io.File: boolean exists()>: 71
<java.io.File: void <init>(java.io.File,java.lang.String)>: 63
<java.io.File: boolean delete()>: 46
<io.realm.internal.SharedRealm: void close()>: 45
<java.io.PrintStream: void println(java.lang.Object)>: 33
<java.io.InputStream: int read(byte[])>: 32
<java.io.InputStream: void close()>: 31
<java.io.ObjectInputStream: void close()>: 23
<java.io.FileInputStream: void close()>: 23
<java.io.FileOutputStream: void close()>: 23
<java.io.ObjectInputStream: java.lang.Object readObject()>: 23
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 23
<java.io.File: java.io.File[] listFiles()>: 21
<java.io.FileOutputStream: void <init>(java.io.File)>: 19
<java.io.File: java.lang.String getName()>: 18
<java.io.PrintStream: void println(java.lang.String)>: 17
<io.realm.Realm: void close()>: 16
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>: 15
<io.realm.internal.RealmNotifier: void close()>: 15
<java.io.InputStream: int available()>: 15
<java.io.FileOutputStream: void write(byte[],int,int)>: 15
<java.io.File: boolean equals(java.lang.Object)>: 15
<io.realm.BaseRealm: void close()>: 15
<java.io.File: java.lang.String getAbsolutePath()>: 14
<java.lang.Object: boolean equals(java.lang.Object)>: 12
<java.lang.Object: java.lang.String toString()>: 12
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 11
<java.net.URI: void <init>(java.lang.String)>: 9
<java.io.File: boolean mkdirs()>: 9
<android.graphics.BitmapFactory$Options: void <init>()>: 8
<java.io.File: java.lang.String toString()>: 8
<java.io.IOException: void <init>(java.lang.String)>: 7
<java.net.URI: java.lang.String toString()>: 7
<android.graphics.Bitmap: int getHeight()>: 7
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 6
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 6
<java.net.URI: java.lang.String getScheme()>: 6
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>: 6
<java.net.URI: java.lang.String getFragment()>: 6
<java.net.URI: java.lang.String getPath()>: 6
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>: 6
<java.io.ObjectOutputStream: void close()>: 6
<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>: 5
<android.net.ConnectivityManager$NetworkCallback: void <init>()>: 5
<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>: 5
<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>: 5
<android.net.Uri$Builder: void <init>()>: 5
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 5
<android.net.ConnectivityManager: void registerNetworkCallback(android.net.NetworkRequest,android.net.ConnectivityManager$NetworkCallback)>: 5
<android.net.Uri$Builder: android.net.Uri build()>: 5
<android.net.NetworkRequest$Builder: void <init>()>: 5
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 5
<android.net.NetworkRequest$Builder: android.net.NetworkRequest build()>: 5
<java.net.URI: java.lang.String getAuthority()>: 5
<android.graphics.Bitmap: int getWidth()>: 5
<java.io.File: boolean isDirectory()>: 4
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 4
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 4
<android.net.NetworkInfo: boolean isConnected()>: 4
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 4
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 3
<java.io.FileInputStream: void <init>(java.io.File)>: 3
<java.io.File: long lastModified()>: 3
<java.io.File: boolean mkdir()>: 3
<java.io.OutputStream: void flush()>: 3
<java.net.URL: void <init>(java.lang.String)>: 3
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>: 3
<java.io.ByteArrayOutputStream: void <init>()>: 3
<android.graphics.Bitmap: boolean isRecycled()>: 3
<java.io.IOException: void <init>()>: 2
<android.graphics.Bitmap: void recycle()>: 2
<java.io.File: long length()>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 2
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 2
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>: 2
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 2
<java.io.File: boolean createNewFile()>: 2
<android.graphics.Bitmap: int getRowBytes()>: 2
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 2
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 2
<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>: 2
<java.io.File: boolean isFile()>: 2
<java.io.Writer: void close()>: 2
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 2
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 2
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 2
<java.io.EOFException: void <init>()>: 2
<java.io.FileOutputStream: java.io.FileDescriptor getFD()>: 1
<java.io.Closeable: void close()>: 1
<java.io.File: java.lang.String[] list()>: 1
<java.io.File: boolean setExecutable(boolean,boolean)>: 1
<java.nio.CharBuffer: java.lang.String toString()>: 1
<java.net.URI: java.lang.String getRawFragment()>: 1
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 1
<java.io.OutputStream: void write(byte[],int,int)>: 1
<java.net.URI: java.lang.String getRawAuthority()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>: 1
<java.io.FileOutputStream: void <init>(java.lang.String)>: 1
<java.nio.charset.Charset: boolean equals(java.lang.Object)>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 1
<java.io.File: java.lang.String getPath()>: 1
<java.net.URI: java.lang.String getHost()>: 1
<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>: 1
<java.io.ByteArrayOutputStream: void <init>(int)>: 1
<android.net.http.HttpResponseCache: android.net.http.HttpResponseCache getInstalled()>: 1
<java.io.BufferedReader: java.lang.String readLine()>: 1
<java.io.File: boolean setWritable(boolean)>: 1
<java.net.URI: java.lang.String getRawQuery()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>: 1
<java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>: 1
<android.net.NetworkInfo: java.lang.String getReason()>: 1
<android.net.NetworkInfo: java.lang.String getExtraInfo()>: 1
<java.net.URI: java.lang.String getUserInfo()>: 1
<java.net.URI: int getPort()>: 1
<android.net.NetworkInfo: boolean isRoaming()>: 1
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>: 1
<android.net.http.HttpResponseCache: android.net.http.HttpResponseCache install(java.io.File,long)>: 1
<java.io.OutputStream: void close()>: 1
<java.io.File: boolean renameTo(java.io.File)>: 1
<android.net.NetworkInfo: int getType()>: 1
<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>: 1
<java.io.File: java.net.URI toURI()>: 1
<java.util.zip.ZipFile: void close()>: 1
<java.net.URI: java.lang.String getRawSchemeSpecificPart()>: 1
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: void close()>: 1
<java.io.OutputStream: void write(byte[])>: 1
<android.net.NetworkInfo: android.net.NetworkInfo$DetailedState getDetailedState()>: 1
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>: 1
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 1
<java.net.URI: java.lang.String getRawUserInfo()>: 1
<java.io.File: java.lang.String getCanonicalPath()>: 1
<java.io.Writer: void write(java.lang.String)>: 1
<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>: 1
<android.net.NetworkInfo: java.lang.String getSubtypeName()>: 1
<java.io.InputStream: int read(byte[],int,int)>: 1
<java.io.File: boolean setReadable(boolean,boolean)>: 1
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>: 1
<android.net.NetworkInfo: int getSubtype()>: 1
<java.io.BufferedReader: void close()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 1
<android.net.NetworkInfo: boolean isAvailable()>: 1
<android.net.NetworkInfo: boolean isFailover()>: 1
<java.io.FileDescriptor: void sync()>: 1
<java.net.URI: java.lang.String getRawPath()>: 1
<java.io.ByteArrayOutputStream: void close()>: 1
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 1
<java.io.BufferedReader: void <init>(java.io.Reader)>: 1
<android.net.NetworkInfo: java.lang.String getTypeName()>: 1
<android.net.NetworkRequest$Builder: android.net.NetworkRequest$Builder addCapability(int)>: 1
----------------StartWorker----------------
<java.net.URL: java.net.URLConnection openConnection()>: 40
<java.net.URL: void <init>(java.lang.String)>: 40
<java.net.URLConnection: java.io.InputStream getInputStream()>: 37
<java.io.File: void <init>(java.lang.String)>: 25
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 24
<java.io.BufferedReader: java.lang.String readLine()>: 24
<java.net.HttpURLConnection: int getResponseCode()>: 24
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 24
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 24
<java.io.File: boolean exists()>: 20
<java.io.InputStream: void close()>: 20
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 20
<java.io.BufferedReader: void close()>: 20
<java.io.File: long length()>: 17
<android.graphics.BitmapFactory$Options: void <init>()>: 17
<java.io.BufferedReader: void <init>(java.io.Reader,int)>: 15
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 15
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 15
<java.io.InputStream: int read(byte[])>: 15
<java.io.ByteArrayOutputStream: void <init>()>: 15
<java.io.File: java.lang.String getAbsolutePath()>: 15
<java.io.PrintStream: void println(java.lang.String)>: 14
<java.io.FileOutputStream: void <init>(java.io.File)>: 14
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 13
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>: 13
<java.net.URLConnection: void setDoInput(boolean)>: 13
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 13
<java.io.ByteArrayInputStream: void <init>(byte[])>: 12
<java.io.File: void <init>(java.io.File,java.lang.String)>: 12
<android.net.ConnectivityManager$NetworkCallback: void <init>()>: 11
<android.graphics.Bitmap: void setDensity(int)>: 11
<android.net.ConnectivityManager: void registerNetworkCallback(android.net.NetworkRequest,android.net.ConnectivityManager$NetworkCallback)>: 11
<android.net.NetworkRequest$Builder: void <init>()>: 11
<android.net.NetworkRequest$Builder: android.net.NetworkRequest build()>: 11
<android.graphics.Bitmap: int getDensity()>: 11
<android.graphics.drawable.BitmapDrawable: void setTileModeXY(android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>: 11
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 11
<java.io.InputStream: int read(byte[],int,int)>: 10
<java.io.Closeable: void close()>: 9
<java.io.OutputStream: void flush()>: 9
<java.io.IOException: void <init>(java.lang.String)>: 9
<java.net.URLConnection: void setReadTimeout(int)>: 9
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 9
<java.net.URLConnection: void setConnectTimeout(int)>: 9
<java.io.File: boolean delete()>: 9
<java.io.BufferedReader: void <init>(java.io.Reader)>: 9
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>: 8
<java.io.ObjectInputStream: void close()>: 8
<java.io.FileInputStream: void close()>: 8
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 8
<java.io.FileOutputStream: void close()>: 8
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 8
<java.io.ObjectInputStream: java.lang.Object readObject()>: 8
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 8
<android.net.NetworkInfo: boolean isConnected()>: 8
<java.io.File: java.lang.String toString()>: 8
<java.io.File: boolean mkdirs()>: 8
<java.io.File: boolean renameTo(java.io.File)>: 7
<java.net.URL: java.lang.String toString()>: 7
<android.graphics.Bitmap: int getHeight()>: 7
<java.io.FileInputStream: void <init>(java.lang.String)>: 7
<android.graphics.Bitmap: void recycle()>: 6
<java.io.OutputStream: void write(byte[],int,int)>: 6
<java.io.InputStream: void <init>()>: 6
<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>: 6
<java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>: 6
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 6
<java.io.InputStream: int available()>: 6
<java.io.DataOutputStream: void writeBytes(java.lang.String)>: 6
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 6
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 6
<java.net.URLConnection: int getContentLength()>: 6
<java.net.URLConnection: void setDoOutput(boolean)>: 5
<java.io.Writer: void flush()>: 5
<java.io.Writer: void write(java.lang.String)>: 5
<android.graphics.Bitmap: int getWidth()>: 5
<java.io.DataOutputStream: void flush()>: 5
<java.net.URLConnection: void setUseCaches(boolean)>: 5
<java.io.InputStreamReader: void close()>: 4
<java.io.InputStream: void reset()>: 4
<android.util.JsonWriter: void close()>: 4
<java.io.DataOutputStream: void <init>(java.io.OutputStream)>: 4
<java.io.OutputStream: void close()>: 4
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 4
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 4
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>: 4
<java.io.FilterOutputStream: void close()>: 4
<java.io.InputStream: boolean markSupported()>: 4
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 4
<java.io.FileInputStream: void <init>(java.io.File)>: 3
<java.lang.Object: boolean equals(java.lang.Object)>: 3
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$2: void <init>()>: 3
<java.lang.Object: java.lang.String toString()>: 3
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>: 3
<java.net.URL: java.lang.String getProtocol()>: 3
<java.io.OutputStream: void <init>()>: 3
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 3
<java.io.IOException: void <init>()>: 2
<java.net.URI: void <init>(java.lang.String)>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 2
<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>: 2
<java.io.File: java.lang.String getPath()>: 2
<android.graphics.Bitmap: int getRowBytes()>: 2
<java.io.FilterInputStream: void <init>(java.io.InputStream)>: 2
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>: 2
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot: void close()>: 2
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 2
<java.io.OutputStream: void write(byte[])>: 2
<com.nostra13.universalimageloader.core.assist.FlushedInputStream: void <init>(java.io.InputStream)>: 2
<android.graphics.Bitmap: boolean isRecycled()>: 2
<java.io.File: java.lang.String getName()>: 1
<java.io.BufferedInputStream: void close()>: 1
<java.io.BufferedInputStream: int read(byte[],int,int)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 1
<android.graphics.Bitmap: void setPixel(int,int,int)>: 1
<java.io.FilterOutputStream: void write(byte[])>: 1
