Duration => 375
UI Thread => 624
Worker Thread => 1677

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 85
<java.io.File: boolean exists()>: 49
<java.io.File: void <init>(java.io.File,java.lang.String)>: 41
<java.lang.Object: boolean equals(java.lang.Object)>: 36
<java.io.File: java.lang.String getAbsolutePath()>: 19
<java.io.File: boolean delete()>: 18
<android.database.Cursor: void close()>: 17
<java.io.FileInputStream: void <init>(java.io.File)>: 16
<java.io.File: void <init>(java.lang.String)>: 15
<java.io.File: boolean mkdir()>: 14
<java.io.File: boolean isDirectory()>: 13
<java.io.IOException: void <init>(java.lang.String)>: 12
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 12
<java.io.BufferedInputStream: void close()>: 11
<java.io.FileOutputStream: void <init>(java.io.File)>: 10
<java.io.File: boolean mkdirs()>: 10
<java.io.File: boolean createNewFile()>: 9
<java.io.PrintStream: void println(java.lang.String)>: 9
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 6
<java.io.File: java.io.File[] listFiles()>: 5
<java.io.IOException: void <init>()>: 4
<java.io.File: long lastModified()>: 4
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 4
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>: 4
<java.lang.String: int hashCode()>: 4
<java.io.File: boolean canWrite()>: 4
<java.io.FileOutputStream: void close()>: 4
<java.io.File: boolean renameTo(java.io.File)>: 4
<java.io.File: boolean isFile()>: 4
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 4
<java.io.Writer: void close()>: 4
<java.io.File: java.lang.String[] list()>: 3
<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile build()>: 3
<java.io.File: java.lang.String getName()>: 3
<android.net.sip.SipManager: android.net.sip.SipManager newInstance(android.content.Context)>: 3
<android.net.sip.SipManager: void close(java.lang.String)>: 3
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 3
<java.io.File: java.lang.String getParent()>: 3
<android.net.sip.SipProfile: java.lang.String getUriString()>: 3
<android.net.sip.SipManager: void open(android.net.sip.SipProfile)>: 3
<java.io.File: boolean canRead()>: 3
<java.io.File: java.io.File getParentFile()>: 3
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 3
<android.net.Uri$Builder: android.net.Uri build()>: 3
<java.io.InputStream: int read(byte[])>: 3
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 3
<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile$Builder setPassword(java.lang.String)>: 3
<android.net.sip.SipManager: boolean isApiSupported(android.content.Context)>: 3
<java.io.FilterOutputStream: void close()>: 3
<android.net.sip.SipProfile$Builder: void <init>(java.lang.String,java.lang.String)>: 3
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>: 3
<java.net.URI: void <init>(java.lang.String)>: 2
<java.io.PrintStream: void println(int)>: 2
<java.net.URI: java.lang.String getRawFragment()>: 2
<java.io.OutputStream: void write(byte[],int,int)>: 2
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 2
<java.net.URI: java.lang.String getRawAuthority()>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>: 2
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 2
<java.nio.channels.spi.AbstractInterruptibleChannel: boolean isOpen()>: 2
<java.nio.charset.Charset: boolean equals(java.lang.Object)>: 2
<java.io.File: java.lang.String getPath()>: 2
<java.net.URI: java.lang.String getHost()>: 2
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 2
<java.io.ByteArrayOutputStream: void <init>(int)>: 2
<java.net.URISyntaxException: java.lang.String getMessage()>: 2
<java.net.URI: java.lang.String getRawQuery()>: 2
<java.net.URI: java.lang.String getUserInfo()>: 2
<java.net.URI: int getPort()>: 2
<java.net.URI: java.lang.String getScheme()>: 2
<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>: 2
<java.io.FileOutputStream: void write(byte[],int,int)>: 2
<android.database.sqlite.SQLiteDatabase: int getVersion()>: 2
<java.io.InputStream: void close()>: 2
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>: 2
<java.net.URI: java.lang.String getRawSchemeSpecificPart()>: 2
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 2
<java.net.URI: java.lang.String getRawUserInfo()>: 2
<java.io.Writer: void write(java.lang.String)>: 2
<java.io.InputStream: int read(byte[],int,int)>: 2
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.io.File,android.database.sqlite.SQLiteDatabase$CursorFactory)>: 2
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>: 2
<android.database.sqlite.SQLiteDatabase: void setVersion(int)>: 2
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 2
<java.net.URI: java.lang.String getFragment()>: 2
<java.net.URI: java.lang.String getPath()>: 2
<android.net.NetworkInfo: boolean isConnected()>: 2
<android.graphics.Bitmap: boolean isRecycled()>: 2
<java.net.URI: java.lang.String getRawPath()>: 2
<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>: 2
<g.c.v: void close()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 2
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 2
<java.io.EOFException: void <init>()>: 2
<android.graphics.Bitmap$Config: android.graphics.Bitmap$Config[] values()>: 1
<java.util.zip.ZipInputStream: void close()>: 1
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 1
<java.nio.channels.spi.AbstractInterruptibleChannel: void close()>: 1
<java.net.URL: java.lang.String getPath()>: 1
<java.io.File: long length()>: 1
<java.io.ByteArrayInputStream: void close()>: 1
<java.io.FileOutputStream: void <init>(java.lang.String)>: 1
<java.io.InputStream: void <init>()>: 1
<java.io.OutputStream: void flush()>: 1
<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>: 1
<java.io.ByteArrayInputStream: void <init>(byte[])>: 1
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>: 1
<android.graphics.BitmapFactory$Options: void <init>()>: 1
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 1
<java.io.OutputStream: void close()>: 1
<java.net.URL: void <init>(java.lang.String)>: 1
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>: 1
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 1
<java.io.ByteArrayOutputStream: void <init>()>: 1
<java.io.FileNotFoundException: void <init>(java.lang.String)>: 1
<java.io.ByteArrayOutputStream: void close()>: 1
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>: 1
<android.net.NetworkInfo: java.lang.String getTypeName()>: 1
<java.io.FilterInputStream: int read(byte[])>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 277
<java.lang.Object: boolean equals(java.lang.Object)>: 94
<java.io.File: boolean exists()>: 70
<java.io.File: java.lang.String getAbsolutePath()>: 70
<android.database.Cursor: void close()>: 53
<java.io.File: void <init>(java.lang.String)>: 42
<java.lang.Object: int hashCode()>: 38
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 31
<java.io.File: void <init>(java.io.File,java.lang.String)>: 31
<android.net.NetworkInfo: boolean isConnected()>: 31
<java.lang.String: int hashCode()>: 29
<java.io.InputStream: int read(byte[])>: 28
<java.io.FileOutputStream: void close()>: 27
<java.io.FileOutputStream: void <init>(java.io.File)>: 22
<java.io.File: boolean delete()>: 22
<java.io.InputStream: void close()>: 20
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 19
<java.io.File: boolean mkdirs()>: 19
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 16
<java.io.ByteArrayInputStream: void <init>(byte[])>: 16
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 16
<java.io.FileOutputStream: void write(byte[],int,int)>: 16
<java.io.ByteArrayOutputStream: void <init>()>: 16
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 16
<java.io.PrintStream: void println(java.lang.String)>: 15
<java.io.OutputStream: void write(byte[],int,int)>: 14
<java.io.InputStream: void <init>()>: 14
<java.io.OutputStream: void flush()>: 14
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 13
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 13
<android.database.sqlite.SQLiteDatabase: int getVersion()>: 13
<java.lang.Enum: boolean equals(java.lang.Object)>: 13
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.io.File,android.database.sqlite.SQLiteDatabase$CursorFactory)>: 13
<android.database.sqlite.SQLiteDatabase: void setVersion(int)>: 13
<java.io.ByteArrayInputStream: void close()>: 12
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>: 12
<java.io.ByteArrayOutputStream: void close()>: 12
<java.io.FileOutputStream: void <init>(java.lang.String)>: 11
<java.io.File: boolean createNewFile()>: 10
<java.net.URI: void <init>(java.lang.String)>: 9
<java.io.PrintStream: void println(int)>: 9
<java.net.URI: java.lang.String getRawFragment()>: 9
<java.net.URI: java.lang.String getRawAuthority()>: 9
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>: 9
<java.net.URI: java.lang.String getHost()>: 9
<java.net.URISyntaxException: java.lang.String getMessage()>: 9
<java.net.URI: java.lang.String getRawQuery()>: 9
<java.net.URI: java.lang.String getUserInfo()>: 9
<java.net.URI: int getPort()>: 9
<java.io.File: boolean canWrite()>: 9
<java.net.URI: java.lang.String getScheme()>: 9
<java.net.URI: java.lang.String getRawSchemeSpecificPart()>: 9
<java.net.URI: java.lang.String getRawUserInfo()>: 9
<java.net.URI: java.lang.String getFragment()>: 9
<java.net.URI: java.lang.String getPath()>: 9
<java.net.URI: java.lang.String getRawPath()>: 9
<java.io.File: java.lang.String[] list()>: 8
<java.io.File: long lastModified()>: 8
<java.io.File: long length()>: 8
<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile build()>: 8
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>: 8
<android.net.sip.SipManager: android.net.sip.SipManager newInstance(android.content.Context)>: 8
<android.net.sip.SipManager: void close(java.lang.String)>: 8
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 8
<android.net.sip.SipProfile: java.lang.String getUriString()>: 8
<java.net.HttpURLConnection: int getResponseCode()>: 8
<android.net.sip.SipManager: void open(android.net.sip.SipProfile)>: 8
<java.io.File: boolean canRead()>: 8
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 8
<android.net.Uri$Builder: android.net.Uri build()>: 8
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>: 8
<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile$Builder setPassword(java.lang.String)>: 8
<android.net.sip.SipManager: boolean isApiSupported(android.content.Context)>: 8
<android.net.sip.SipProfile$Builder: void <init>(java.lang.String,java.lang.String)>: 8
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>: 8
<android.graphics.Bitmap: void recycle()>: 6
<java.net.URL: java.net.URLConnection openConnection()>: 6
<android.graphics.BitmapFactory$Options: void <init>()>: 6
<java.io.File: boolean renameTo(java.io.File)>: 6
<java.net.URL: void <init>(java.lang.String)>: 6
<java.net.URLConnection: void setReadTimeout(int)>: 6
<android.graphics.Bitmap: int getHeight()>: 6
<java.io.InputStream: int read(byte[],int,int)>: 6
<java.net.URLConnection: void setConnectTimeout(int)>: 6
<java.net.URLConnection: java.io.InputStream getInputStream()>: 5
<java.io.Closeable: void close()>: 4
<java.io.InputStream: void reset()>: 4
<java.io.BufferedReader: java.lang.String readLine()>: 4
<java.io.Writer: void flush()>: 4
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>: 4
<java.io.Writer: void write(java.lang.String)>: 4
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 4
<android.graphics.Bitmap: int getWidth()>: 4
<java.io.InputStream: boolean markSupported()>: 4
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 3
<java.io.BufferedReader: void <init>(java.io.Reader)>: 3
<java.io.FileInputStream: void <init>(java.io.File)>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 2
<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>: 2
<g.c.v$c: void close()>: 2
<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>: 2
<java.io.IOException: void <init>(java.lang.String)>: 2
<android.graphics.Bitmap: int getRowBytes()>: 2
<java.io.FilterInputStream: void <init>(java.io.InputStream)>: 2
<java.io.File: java.io.File getParentFile()>: 2
<java.io.InputStream: int available()>: 2
<g.c.v$2: void <init>()>: 2
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 2
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 2
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 2
<g.c.aj: void <init>(java.io.InputStream)>: 2
<java.io.File: boolean isFile()>: 2
<java.io.OutputStream: void <init>()>: 2
<java.io.FileInputStream: void <init>(java.lang.String)>: 2
<android.graphics.Bitmap: boolean isRecycled()>: 2
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 2
<java.net.URLConnection: int getContentLength()>: 2
<java.io.BufferedReader: void <init>(java.io.Reader,int)>: 1
<java.io.File: boolean isDirectory()>: 1
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 1
<java.io.File: java.lang.String getName()>: 1
<java.io.File: java.lang.String getParent()>: 1
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 1
<java.io.StringWriter: void <init>()>: 1
<java.io.PrintWriter: void <init>(java.io.Writer)>: 1
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 1
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 1
<java.io.FileReader: void <init>(java.lang.String)>: 1
<java.io.StringWriter: java.lang.String toString()>: 1
<java.io.OutputStream: void write(byte[])>: 1
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 1
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 1
<java.io.BufferedReader: void close()>: 1
<java.io.File: java.io.File[] listFiles()>: 1
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>: 1
