Duration => 344
UI Thread => 113
Worker Thread => 115

----------------StartUI----------------
<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String)>: 22
<java.io.PrintStream: void println(java.lang.String)>: 8
<java.io.IOException: void <init>(java.lang.String)>: 6
<java.io.File: void <init>(java.io.File,java.lang.String)>: 3
<java.io.File: boolean exists()>: 3
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 3
<org.codehaus.jackson.impl.JsonParserBase: void close()>: 2
<java.io.Writer: void <init>()>: 2
<android.graphics.BitmapFactory$Options: void <init>()>: 2
<java.io.InputStream: void close()>: 2
<org.codehaus.jackson.impl.ReaderBasedParser: void close()>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 2
<org.codehaus.jackson.JsonProcessingException: void <init>(java.lang.String)>: 2
<java.io.Reader: void close()>: 2
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 2
<java.io.File: boolean mkdir()>: 2
<android.graphics.Bitmap: int getHeight()>: 2
<java.io.OutputStream: void <init>()>: 2
<android.graphics.Bitmap: int getWidth()>: 2
<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String,java.lang.Throwable)>: 2
<java.io.PrintWriter: void <init>(java.io.Writer)>: 2
<org.codehaus.jackson.JsonProcessingException: void <init>(java.lang.String,java.lang.Throwable)>: 2
<org.codehaus.jackson.util.ByteArrayBuilder: void <init>()>: 2
<org.codehaus.jackson.JsonParser: void close()>: 2
<java.io.StringReader: void <init>(java.lang.String)>: 2
<java.io.EOFException: void <init>(java.lang.String)>: 2
<java.io.Reader: int read(char[],int,int)>: 2
<java.io.Closeable: void close()>: 1
<java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>: 1
<java.net.URL: void <init>(java.lang.String)>: 1
<java.io.Reader: int read(char[])>: 1
<java.io.StringWriter: java.lang.String toString()>: 1
<java.net.URL: java.net.URLConnection openConnection()>: 1
<java.net.URL: java.lang.String getFile()>: 1
<java.net.URLConnection: java.io.InputStream getInputStream()>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>: 1
<java.io.BufferedReader: java.lang.String readLine()>: 1
<java.io.PrintWriter: void close()>: 1
<java.io.PrintWriter: void println()>: 1
<java.io.File: boolean createNewFile()>: 1
<java.io.BufferedReader: void close()>: 1
<org.apache.commons.io.output.StringBuilderWriter: void <init>()>: 1
<java.io.StringWriter: void <init>()>: 1
<java.io.FileInputStream: void <init>(java.lang.String)>: 1
<android.graphics.Bitmap: boolean isRecycled()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 1
<java.io.PrintStream: void println(java.lang.Object)>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 1
<java.io.BufferedReader: void <init>(java.io.Reader)>: 1
<java.io.File: void <init>(java.lang.String)>: 1
<java.io.File: boolean mkdirs()>: 1
<java.net.URLConnection: void setUseCaches(boolean)>: 1
----------------StartWorker----------------
<android.graphics.Bitmap: int getHeight()>: 12
<android.graphics.Bitmap: int getWidth()>: 11
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 10
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 9
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 8
<java.io.File: boolean exists()>: 5
<java.io.File: long length()>: 4
<java.io.File: boolean delete()>: 3
<java.io.InputStream: int read(byte[],int,int)>: 2
<android.graphics.BitmapFactory$Options: void <init>()>: 2
<java.io.File: boolean setLastModified(long)>: 2
<android.graphics.Bitmap: void recycle()>: 2
<java.io.FileOutputStream: void <init>(java.io.File)>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 2
<java.io.File: long lastModified()>: 2
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 2
<java.io.File: java.io.File[] listFiles()>: 2
<java.io.InputStream: void reset()>: 2
<java.io.File: java.lang.String getAbsolutePath()>: 2
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>: 2
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>: 2
<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>: 1
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 1
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 1
<java.io.ByteArrayInputStream: void <init>(byte[])>: 1
<java.io.Closeable: void close()>: 1
<com.nostra13.universalimageloader.core.assist.FlushedInputStream: void <init>(java.io.InputStream)>: 1
<java.net.URLConnection: void setConnectTimeout(int)>: 1
<java.net.HttpURLConnection: int getResponseCode()>: 1
<java.io.ByteArrayOutputStream: void <init>()>: 1
<java.io.InputStream: void close()>: 1
<java.net.URL: void <init>(java.lang.String)>: 1
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>: 1
<java.io.FileInputStream: void <init>(java.lang.String)>: 1
<java.net.URLConnection: void setReadTimeout(int)>: 1
<java.io.OutputStream: void write(byte[],int,int)>: 1
<android.graphics.Bitmap: int getRowBytes()>: 1
<java.net.URL: java.net.URLConnection openConnection()>: 1
<java.io.InputStream: void <init>()>: 1
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 1
<java.io.FilterInputStream: void <init>(java.io.InputStream)>: 1
<java.io.File: java.io.File getParentFile()>: 1
<java.net.URLConnection: java.io.InputStream getInputStream()>: 1
<java.net.URLConnection: int getContentLength()>: 1
<java.io.InputStream: int available()>: 1
<java.io.File: void <init>(java.lang.String)>: 1
<java.io.File: boolean mkdirs()>: 1
<java.io.File: void <init>(java.io.File,java.lang.String)>: 1
