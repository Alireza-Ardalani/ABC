Duration => 1645
UI Thread => 194
Worker Thread => 5207

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 30
<java.io.File: void <init>(java.lang.String)>: 21
<java.io.File: boolean exists()>: 15
<java.io.PrintStream: void println(java.lang.String)>: 10
<java.io.FileInputStream: void <init>(java.io.File)>: 9
<java.io.FileInputStream: void close()>: 7
<java.io.File: java.lang.String getAbsolutePath()>: 7
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>: 4
<java.io.FileOutputStream: void <init>(java.io.File)>: 4
<android.net.wifi.WifiManager: boolean isWifiEnabled()>: 4
<android.net.wifi.WifiInfo: int getNetworkId()>: 4
<java.io.FileOutputStream: void close()>: 4
<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>: 3
<java.nio.channels.spi.AbstractInterruptibleChannel: void close()>: 3
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>: 3
<java.lang.String: int hashCode()>: 3
<java.io.File: java.io.File getParentFile()>: 3
<java.io.File: boolean mkdirs()>: 3
<java.io.InputStream: int read(byte[])>: 2
<java.io.FileOutputStream: void <init>(java.lang.String)>: 2
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 2
<java.io.File: boolean mkdir()>: 2
<java.io.OutputStream: void flush()>: 2
<java.io.File: boolean createNewFile()>: 2
<java.io.ByteArrayOutputStream: void <init>()>: 2
<java.io.ByteArrayOutputStream: void close()>: 2
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 2
<java.util.zip.ZipInputStream: void close()>: 1
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 1
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 1
<java.io.File: boolean isDirectory()>: 1
<java.net.URI: void <init>(java.lang.String)>: 1
<java.io.InputStream: void close()>: 1
<android.database.ContentObserver: void <init>(android.os.Handler)>: 1
<java.io.File: java.lang.String getName()>: 1
<java.io.OutputStream: void write(byte[])>: 1
<java.io.File: java.lang.String getPath()>: 1
<android.database.MatrixCursor: void <init>(java.lang.String[])>: 1
<java.net.URI: java.lang.String getHost()>: 1
<java.util.UUID: boolean equals(java.lang.Object)>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>: 1
<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>: 1
<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>: 1
<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>: 1
<android.database.sqlite.SQLiteOpenHelper: void close()>: 1
<java.io.File: java.lang.String getParent()>: 1
<java.io.BufferedReader: java.lang.String readLine()>: 1
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>: 1
<java.io.ByteArrayInputStream: void <init>(byte[])>: 1
<java.io.BufferedReader: void close()>: 1
<java.net.NetworkInterface: byte[] getHardwareAddress()>: 1
<com.at.yt.b.b$a: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 1
<java.io.ByteArrayOutputStream: void write(int)>: 1
<javax.crypto.CipherInputStream: void close()>: 1
<java.io.File: boolean delete()>: 1
<java.io.File: java.io.File[] listFiles()>: 1
<java.util.zip.InflaterInputStream: int read()>: 1
<java.net.NetworkInterface: java.net.NetworkInterface getByInetAddress(java.net.InetAddress)>: 1
<java.io.File: boolean canRead()>: 1
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 1
<java.io.File: java.lang.String toString()>: 1
<android.database.MatrixCursor: void addRow(java.lang.Object[])>: 1
<java.io.BufferedReader: void <init>(java.io.Reader)>: 1
<android.database.sqlite.SQLiteClosable: void close()>: 1
<java.net.InetAddress: boolean isLoopbackAddress()>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 557
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 198
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 180
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 180
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 180
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 144
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 144
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 144
<java.io.InputStream: void close()>: 139
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>: 126
<java.net.URI: java.lang.String getHost()>: 119
<java.io.InputStream: boolean markSupported()>: 119
<java.io.File: void <init>(java.lang.String)>: 118
<android.database.sqlite.SQLiteProgram: void bindString(int,java.lang.String)>: 108
<android.database.sqlite.SQLiteStatement: void execute()>: 90
<android.database.Cursor: void close()>: 90
<java.io.BufferedReader: void <init>(java.io.Reader)>: 87
<java.io.InputStream: void reset()>: 85
<java.io.ByteArrayInputStream: void <init>(byte[])>: 85
<com.amazonaws.internal.SdkFilterInputStream: void <init>(java.io.InputStream)>: 85
<java.io.File: boolean exists()>: 84
<android.database.sqlite.SQLiteProgram: void bindLong(int,long)>: 72
<java.io.InputStream: int read(byte[])>: 69
<java.io.InputStream: void mark(int)>: 68
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 54
<java.io.BufferedReader: java.lang.String readLine()>: 53
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 52
<java.net.URI: void <init>(java.lang.String)>: 51
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 51
<java.net.URI: int getPort()>: 51
<java.net.URI: java.lang.String getScheme()>: 51
<java.net.URI: java.lang.String getPath()>: 51
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 51
<java.io.FileInputStream: void <init>(java.io.File)>: 49
<java.io.PrintStream: void println(java.lang.String)>: 40
<java.io.File: java.lang.String getAbsolutePath()>: 39
<java.lang.Integer: boolean equals(java.lang.Object)>: 37
<android.database.sqlite.SQLiteStatement: long simpleQueryForLong()>: 36
<java.net.URL: java.net.URLConnection openConnection()>: 36
<java.net.URLConnection: java.io.InputStream getInputStream()>: 36
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 36
<java.io.OutputStream: void flush()>: 34
<java.io.FileInputStream: void close()>: 34
<java.net.URI: java.lang.String getAuthority()>: 34
<com.amazonaws.services.s3.model.S3ObjectInputStream: void <init>(java.io.InputStream)>: 34
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 33
<java.net.URLConnection: void setDoOutput(boolean)>: 19
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 19
<java.net.HttpURLConnection: int getResponseCode()>: 19
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 19
<java.io.FileOutputStream: void close()>: 19
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 19
<java.net.URL: void <init>(java.lang.String)>: 19
<java.net.URLConnection: void setReadTimeout(int)>: 19
<java.io.BufferedReader: void close()>: 19
<java.net.URLConnection: void setConnectTimeout(int)>: 19
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 18
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 18
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 18
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 18
<java.lang.Long: boolean equals(java.lang.Object)>: 18
<com.at.yt.b.b$a: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 18
<android.database.sqlite.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)>: 18
<com.at.yt.b.b$a: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 18
<java.io.ByteArrayOutputStream: void <init>()>: 18
<java.io.ByteArrayOutputStream: void close()>: 18
<android.database.sqlite.SQLiteStatement: long executeInsert()>: 18
<java.io.Reader: int read(char[])>: 17
<java.net.InetAddress: java.lang.String getHostAddress()>: 17
<java.io.OutputStream: void write(byte[],int,int)>: 17
<java.io.FileOutputStream: void <init>(java.lang.String)>: 17
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 17
<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>: 17
<java.io.InputStream: void <init>()>: 17
<java.net.URI: java.net.URI create(java.lang.String)>: 17
<java.net.URLConnection: java.util.Map getHeaderFields()>: 17
<java.io.IOException: void <init>(java.lang.String)>: 17
<java.lang.Object: int hashCode()>: 17
<com.amazonaws.util.NamespaceRemovingInputStream: void <init>(java.io.InputStream)>: 17
<java.io.FilterInputStream: void <init>(java.io.InputStream)>: 17
<java.net.URI: java.net.URL toURL()>: 17
<java.io.OutputStream: void close()>: 17
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>: 17
<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>: 17
<java.net.URL: java.lang.String toString()>: 17
<com.amazonaws.internal.SdkInputStream: void <init>()>: 17
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 17
<java.net.URI: java.lang.String toString()>: 17
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>: 17
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 17
<java.lang.Enum: boolean equals(java.lang.Object)>: 17
<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>: 17
<java.io.FileNotFoundException: void <init>(java.lang.String)>: 17
<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>: 17
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 17
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 17
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>: 17
<java.net.URLConnection: void setUseCaches(boolean)>: 17
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 16
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>: 14
<android.net.wifi.WifiManager: boolean isWifiEnabled()>: 14
<android.net.wifi.WifiInfo: int getNetworkId()>: 14
<java.io.File: boolean isDirectory()>: 3
<java.io.OutputStream: void write(byte[])>: 3
<java.io.BufferedOutputStream: void flush()>: 2
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 2
<java.io.BufferedOutputStream: void close()>: 2
<java.io.File: java.lang.String[] list()>: 1
<java.io.File: long lastModified()>: 1
<java.io.File: java.lang.String getName()>: 1
<java.io.ByteArrayOutputStream: void reset()>: 1
<java.io.ByteArrayOutputStream: int size()>: 1
<java.io.File: boolean canRead()>: 1
<java.io.File: java.io.File[] listFiles()>: 1
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 1
