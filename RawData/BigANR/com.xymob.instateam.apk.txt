Duration => 2155
UI Thread => 3637
Worker Thread => 9444

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 715
<java.lang.Object: boolean equals(java.lang.Object)>: 403
<java.io.File: boolean exists()>: 244
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 219
<java.io.File: void <init>(java.io.File,java.lang.String)>: 204
<java.io.File: boolean mkdirs()>: 152
<java.io.File: void <init>(java.lang.String)>: 135
<java.io.File: java.lang.String getAbsolutePath()>: 128
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 116
<android.net.NetworkInfo: boolean isAvailable()>: 115
<java.io.File: java.lang.String getPath()>: 113
<java.lang.String: int hashCode()>: 96
<java.io.FileOutputStream: void <init>(java.io.File)>: 63
<java.io.File: long length()>: 52
<java.io.InputStream: void close()>: 51
<android.graphics.BitmapFactory$Options: void <init>()>: 39
<android.graphics.Bitmap: void recycle()>: 38
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 35
<android.graphics.Bitmap: int getHeight()>: 35
<android.graphics.Bitmap: int getWidth()>: 35
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 33
<java.io.FileOutputStream: void close()>: 33
<java.io.File: java.lang.String getName()>: 31
<android.graphics.Bitmap: boolean isRecycled()>: 31
<java.io.File: boolean createNewFile()>: 29
<java.io.File: java.io.File getParentFile()>: 29
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 28
<java.io.OutputStream: void flush()>: 28
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 28
<java.io.OutputStream: void close()>: 27
<java.io.InputStream: int read(byte[])>: 27
<java.io.OutputStream: void write(byte[],int,int)>: 27
<java.io.FileInputStream: void <init>(java.io.File)>: 26
<java.io.IOException: void <init>(java.lang.String)>: 18
<java.io.File: boolean delete()>: 18
<java.util.Calendar: boolean equals(java.lang.Object)>: 14
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 13
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 12
<android.database.Cursor: void close()>: 12
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 11
<java.io.Closeable: void close()>: 10
<com.nostra13.universalimageloader.a.a.a.a.a$c: void close()>: 10
<java.io.OutputStream: void <init>()>: 10
<com.nostra13.universalimageloader.a.a.a.a.a$2: void <init>()>: 10
<android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>: 9
<java.io.File: boolean isDirectory()>: 7
<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>: 7
<java.io.PrintStream: void println(java.lang.String)>: 7
<java.io.IOException: void <init>()>: 6
<java.io.File: boolean renameTo(java.io.File)>: 6
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 6
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>: 6
<java.io.Writer: void write(java.lang.String)>: 6
<java.io.Writer: void close()>: 6
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 6
<java.io.EOFException: void <init>()>: 6
<java.io.File: java.io.File[] listFiles()>: 5
<java.io.File: boolean canRead()>: 4
<com.googlecode.mp4parser.b.g: boolean equals(java.lang.Object)>: 3
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 3
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>: 3
<java.nio.charset.Charset: boolean equals(java.lang.Object)>: 3
<com.nostra13.universalimageloader.a.a.a.a.a: void close()>: 3
<java.net.URL: java.io.InputStream openStream()>: 3
<java.nio.channels.FileChannel: int read(java.nio.ByteBuffer)>: 3
<java.io.ByteArrayOutputStream: void <init>(int)>: 3
<java.io.InputStream: int read(byte[],int,int)>: 3
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 3
<java.io.Writer: void flush()>: 3
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 3
<java.io.File: java.lang.String[] list()>: 2
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>: 2
<java.io.File: boolean mkdir()>: 2
<java.io.File: boolean isHidden()>: 2
<android.net.NetworkInfo: int getType()>: 1
<android.graphics.Bitmap: void eraseColor(int)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 1
----------------StartWorker----------------
<java.io.File: boolean exists()>: 602
<java.lang.String: boolean equals(java.lang.Object)>: 436
<java.io.File: java.lang.String getAbsolutePath()>: 344
<java.io.File: boolean delete()>: 311
<android.graphics.Bitmap: int getHeight()>: 275
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>: 272
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 272
<java.io.File: void <init>(java.io.File,java.lang.String)>: 227
<java.io.FileOutputStream: void <init>(java.io.File)>: 222
<java.io.File: void <init>(java.lang.String)>: 222
<android.graphics.BitmapFactory$Options: void <init>()>: 214
<android.graphics.Bitmap: int getWidth()>: 205
<java.io.File: boolean renameTo(java.io.File)>: 204
<android.graphics.Bitmap: void recycle()>: 204
<java.io.File: long length()>: 204
<java.io.InputStream: int read(byte[],int,int)>: 204
<java.lang.Object: boolean equals(java.lang.Object)>: 188
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 169
<android.net.NetworkInfo: boolean isAvailable()>: 169
<java.io.InputStream: void close()>: 161
<java.io.File: boolean mkdirs()>: 150
<java.io.Closeable: void close()>: 143
<java.net.HttpURLConnection: int getResponseCode()>: 141
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 140
<java.io.Writer: void write(java.lang.String)>: 139
<java.io.IOException: void <init>(java.lang.String)>: 138
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 136
<java.io.InputStream: void reset()>: 136
<java.io.ByteArrayInputStream: void <init>(byte[])>: 136
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 136
<java.io.ByteArrayOutputStream: void <init>()>: 136
<java.io.InputStream: boolean markSupported()>: 136
<java.io.Writer: void flush()>: 136
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>: 136
<android.graphics.Bitmap: boolean isRecycled()>: 115
<java.lang.String: int hashCode()>: 97
<java.io.OutputStream: void write(byte[],int,int)>: 86
<java.net.URL: void <init>(java.lang.String)>: 76
<java.net.URL: java.net.URLConnection openConnection()>: 76
<java.net.URLConnection: java.io.InputStream getInputStream()>: 76
<java.io.OutputStream: void <init>()>: 75
<com.nostra13.universalimageloader.a.a.a.a.a$2: void <init>()>: 75
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 73
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 72
<java.io.FileInputStream: void <init>(java.io.File)>: 72
<com.nostra13.universalimageloader.a.a.a.a.a$c: void close()>: 72
<java.lang.Object: int hashCode()>: 72
<android.graphics.Matrix: boolean equals(java.lang.Object)>: 72
<java.net.URLConnection: void setReadTimeout(int)>: 71
<java.net.URLConnection: void setConnectTimeout(int)>: 71
<android.graphics.Bitmap: int getRowBytes()>: 70
<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>: 69
<java.io.IOException: void <init>()>: 68
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 68
<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>: 68
<java.io.InputStream: void <init>()>: 68
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 68
<java.io.OutputStream: void flush()>: 68
<com.nostra13.universalimageloader.core.assist.b: void <init>(java.io.InputStream)>: 68
<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>: 68
<java.io.FileInputStream: void <init>(java.lang.String)>: 68
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 68
<java.io.FilterInputStream: void <init>(java.io.InputStream)>: 68
<java.net.URLConnection: int getContentLength()>: 68
<java.io.InputStream: int available()>: 68
<java.io.OutputStream: void close()>: 23
<java.io.InputStream: int read(byte[])>: 18
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 8
<java.net.URLConnection: void setDoOutput(boolean)>: 5
<java.io.BufferedReader: java.lang.String readLine()>: 5
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 5
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 5
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 5
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 5
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>: 3
<java.io.Reader: int read(char[])>: 3
<java.io.BufferedWriter: void close()>: 3
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 3
<java.io.RandomAccessFile: void readFully(byte[])>: 3
<java.net.URLConnection: void setDoInput(boolean)>: 3
<java.io.File: java.io.File[] listFiles()>: 3
<java.io.RandomAccessFile: long length()>: 3
<java.io.BufferedWriter: void flush()>: 3
<java.io.RandomAccessFile: void close()>: 3
<java.io.BufferedReader: void <init>(java.io.Reader)>: 3
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>: 3
<java.io.BufferedReader: void <init>(java.io.Reader,int)>: 2
<java.io.OutputStream: void write(byte[])>: 2
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>: 2
<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>: 2
<java.net.URLConnection: void setUseCaches(boolean)>: 2
<android.database.Cursor: void close()>: 1
