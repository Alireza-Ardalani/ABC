Duration => 113
UI Thread => 529
Worker Thread => 307

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 224
<java.lang.Object: boolean equals(java.lang.Object)>: 138
<java.io.File: boolean delete()>: 14
<java.io.File: void <init>(java.lang.String)>: 14
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 13
<java.lang.String: int hashCode()>: 11
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 10
<android.net.NetworkInfo: boolean isConnected()>: 10
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 6
<java.io.File: boolean exists()>: 6
<java.net.InetAddress: java.lang.String getHostAddress()>: 4
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>: 4
<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>: 4
<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>: 4
<java.net.InetAddress: boolean isLoopbackAddress()>: 4
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 3
<android.graphics.Bitmap: int getHeight()>: 3
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>: 3
<android.graphics.BitmapFactory$Options: void <init>()>: 2
<java.io.Writer: void write(int)>: 2
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 2
<java.io.File: boolean isFile()>: 2
<java.io.File: void <init>(java.io.File,java.lang.String)>: 2
<java.io.BufferedReader: java.lang.String readLine()>: 2
<java.io.File: boolean createNewFile()>: 2
<java.io.FileOutputStream: void <init>(java.io.File)>: 2
<java.io.BufferedReader: void close()>: 2
<android.graphics.Bitmap: int getWidth()>: 2
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 2
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 2
<java.util.Locale: boolean equals(java.lang.Object)>: 2
<java.io.File: java.lang.String getAbsolutePath()>: 2
<java.io.FileOutputStream: void close()>: 2
<java.io.BufferedReader: void <init>(java.io.Reader)>: 2
<java.io.File: boolean mkdirs()>: 2
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 1
<android.graphics.Bitmap: void recycle()>: 1
<java.io.InputStream: int read(byte[])>: 1
<java.io.InputStream: void close()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 1
<java.util.zip.ZipFile: void close()>: 1
<java.io.File: java.lang.String getName()>: 1
<java.io.StringWriter: java.lang.String toString()>: 1
<java.lang.Enum: boolean equals(java.lang.Object)>: 1
<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>: 1
<java.io.ByteArrayOutputStream: void <init>()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>: 1
<java.io.FileOutputStream: void write(byte[])>: 1
<java.io.StringWriter: void <init>(int)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 1
<android.database.Cursor: void close()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 1
<java.io.InputStream: int available()>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 35
<java.io.File: boolean delete()>: 19
<java.io.File: void <init>(java.lang.String)>: 19
<java.net.URL: void <init>(java.lang.String)>: 12
<java.net.URL: java.net.URLConnection openConnection()>: 12
<java.net.URLConnection: java.io.InputStream getInputStream()>: 12
<java.net.HttpURLConnection: int getResponseCode()>: 12
<java.net.URLConnection: void setReadTimeout(int)>: 11
<java.net.URLConnection: void setConnectTimeout(int)>: 11
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 11
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 10
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 8
<java.net.URLConnection: void setDoOutput(boolean)>: 7
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 7
<android.graphics.Bitmap: void recycle()>: 5
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 5
<java.io.File: boolean exists()>: 5
<android.graphics.Bitmap: int getHeight()>: 5
<java.io.File: boolean createNewFile()>: 5
<java.io.FileOutputStream: void <init>(java.io.File)>: 5
<android.graphics.Bitmap: int getWidth()>: 5
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 5
<java.io.FileOutputStream: void close()>: 5
<java.io.OutputStreamWriter: void flush()>: 4
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 4
<java.io.Writer: void write(java.lang.String)>: 4
<java.io.BufferedReader: java.lang.String readLine()>: 4
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>: 4
<java.net.URLConnection: void setDoInput(boolean)>: 4
<java.io.BufferedReader: void <init>(java.io.Reader)>: 4
<android.graphics.BitmapFactory$Options: void <init>()>: 3
<java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>: 3
<java.net.URLConnection: java.lang.String getRequestProperty(java.lang.String)>: 3
<java.io.Reader: void close()>: 3
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>: 3
<java.io.OutputStream: void write(byte[])>: 3
<java.lang.Enum: boolean equals(java.lang.Object)>: 3
<java.net.URLConnection: java.util.Map getHeaderFields()>: 3
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>: 3
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 3
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 3
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>: 3
<android.database.Cursor: void close()>: 3
<java.io.Reader: int read(char[],int,int)>: 3
<java.io.InputStream: int read(byte[])>: 1
<java.io.InputStream: void close()>: 1
<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>: 1
<java.io.ByteArrayOutputStream: void <init>()>: 1
<java.io.ByteArrayOutputStream: void close()>: 1
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 1
