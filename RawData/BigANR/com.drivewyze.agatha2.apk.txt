Duration => 59
UI Thread => 79
Worker Thread => 362

----------------StartUI----------------
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>: 8
<java.net.InetAddress: java.lang.String getHostName()>: 8
<android.net.NetworkInfo: boolean isConnected()>: 8
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 8
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 5
<java.io.File: java.lang.String getAbsolutePath()>: 3
<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>: 3
<java.io.File: void <init>(java.lang.String)>: 3
<java.io.File: boolean exists()>: 3
<java.io.BufferedWriter: void <init>(java.io.Writer,int)>: 2
<java.io.BufferedWriter: void close()>: 2
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 2
<java.io.BufferedWriter: void flush()>: 2
<android.database.Cursor: void close()>: 2
<java.io.FileInputStream: void close()>: 2
<android.graphics.Bitmap: int getHeight()>: 1
<android.graphics.BitmapFactory$Options: void <init>()>: 1
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<java.io.FileInputStream: void <init>(java.io.File)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 1
<java.io.FileNotFoundException: void <init>()>: 1
<android.graphics.Bitmap: int getWidth()>: 1
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 1
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 1
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 1
<java.io.File: boolean delete()>: 1
<java.io.FileOutputStream: void close()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 1
<java.io.ObjectInputStream: void close()>: 1
<java.io.File: boolean mkdirs()>: 1
<java.io.File: void <init>(java.io.File,java.lang.String)>: 1
<java.io.ObjectInputStream: java.lang.Object readObject()>: 1
----------------StartWorker----------------
<android.database.Cursor: void close()>: 32
<android.net.Uri$Builder: android.net.Uri build()>: 31
<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>: 31
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 31
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 25
<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>: 25
<java.io.File: boolean exists()>: 17
<java.io.BufferedWriter: void close()>: 11
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 11
<java.io.File: void <init>(java.io.File,java.lang.String)>: 11
<java.io.FileWriter: void <init>(java.io.File,boolean)>: 10
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 10
<java.io.File: boolean createNewFile()>: 10
<okhttp3.ResponseBody: void close()>: 8
<java.io.File: boolean delete()>: 8
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>: 7
<java.io.File: java.lang.String getName()>: 6
<java.io.FileInputStream: void <init>(java.io.File)>: 5
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 5
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 3
<java.io.BufferedReader: java.lang.String readLine()>: 3
<java.io.BufferedReader: void close()>: 3
<java.io.BufferedReader: void <init>(java.io.Reader)>: 3
<android.database.sqlite.SQLiteClosable: void close()>: 3
<java.io.OutputStream: void close()>: 2
<android.database.sqlite.SQLiteDatabase: int getVersion()>: 2
<java.io.InputStream: int read(byte[])>: 2
<android.database.sqlite.SQLiteDatabase: boolean isOpen()>: 2
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 2
<java.io.OutputStream: void write(byte[],int,int)>: 2
<com.readystatesoftware.sqliteasset.SQLiteAssetHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 2
<java.io.OutputStream: void flush()>: 2
<android.database.sqlite.SQLiteException: void <init>(java.lang.String)>: 2
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 2
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 2
<com.readystatesoftware.sqliteasset.SQLiteAssetHelper$SQLiteAssetException: void <init>(java.lang.String)>: 2
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 2
<android.database.sqlite.SQLiteOpenHelper: void onOpen(android.database.sqlite.SQLiteDatabase)>: 2
<java.io.File: void <init>(java.lang.String)>: 2
<java.io.BufferedWriter: void <init>(java.io.Writer,int)>: 1
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 1
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 1
<java.io.InputStream: void close()>: 1
<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>: 1
<java.io.FileOutputStream: void <init>(java.lang.String)>: 1
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 1
<java.io.File: java.lang.String getPath()>: 1
<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>: 1
<java.io.File: boolean mkdir()>: 1
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 1
<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>: 1
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 1
<android.database.sqlite.SQLiteDatabase: boolean isReadOnly()>: 1
<android.database.sqlite.SQLiteDatabase: void setVersion(int)>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<com.readystatesoftware.sqliteasset.SQLiteAssetHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 1
<com.readystatesoftware.sqliteasset.SQLiteAssetHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<android.os.ParcelFileDescriptor: void close()>: 1
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 1
<java.io.BufferedWriter: void flush()>: 1
<java.io.File: boolean mkdirs()>: 1
