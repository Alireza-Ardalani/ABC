Duration => 1601
UI Thread => 1019
Worker Thread => 3777

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 172
<java.lang.Object: boolean equals(java.lang.Object)>: 78
<java.lang.String: int hashCode()>: 77
<java.io.ObjectInputStream: void close()>: 72
<java.io.FileInputStream: void close()>: 72
<java.io.ObjectInputStream: java.lang.Object readObject()>: 72
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 72
<com.fasterxml.jackson.databind.JavaType: int hashCode()>: 46
<com.fasterxml.jackson.'annotation'.JsonInclude$Value: boolean equals(java.lang.Object)>: 34
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 23
<java.lang.Object: java.lang.String toString()>: 18
<com.fasterxml.jackson.databind.JavaType: boolean equals(java.lang.Object)>: 16
<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>: 13
<android.net.Uri$Builder: android.net.Uri build()>: 13
<java.io.File: void <init>(java.io.File,java.lang.String)>: 10
<java.io.File: boolean exists()>: 7
<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>: 6
<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>: 6
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 6
<android.net.Uri$Builder: void <init>()>: 6
<java.net.URL: java.lang.String toString()>: 6
<java.io.FileOutputStream: void <init>(java.io.File)>: 5
<java.io.File: boolean mkdirs()>: 5
<java.io.Closeable: void close()>: 4
<java.net.URI: void <init>(java.lang.String)>: 4
<java.io.File: java.lang.String getName()>: 4
<java.net.InetAddress: java.lang.String toString()>: 4
<java.io.BufferedOutputStream: void flush()>: 4
<com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>: 4
<java.io.IOException: void <init>(java.lang.String)>: 4
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 4
<java.io.FileOutputStream: void close()>: 4
<java.net.URI: java.lang.String getScheme()>: 4
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 4
<com.fasterxml.jackson.core.JsonGenerator: void close()>: 4
<java.net.URI: java.lang.String toString()>: 4
<java.io.Writer: void write(java.lang.String)>: 4
<java.net.URI: java.lang.String getAuthority()>: 4
<java.net.URI: java.lang.String getFragment()>: 4
<java.io.FilterOutputStream: void write(byte[])>: 4
<java.net.URI: java.lang.String getPath()>: 4
<java.io.FilterOutputStream: void close()>: 4
<java.io.File: boolean delete()>: 4
<java.io.File: java.io.File[] listFiles()>: 4
<java.lang.Boolean: boolean equals(java.lang.Object)>: 4
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 3
<com.ticketmaster.presencesdk.event_tickets.TmxEventTicketsResponseBody$EventTicket: boolean equals(java.lang.Object)>: 3
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>: 3
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 3
<java.io.InputStream: void close()>: 3
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>: 3
<java.io.ObjectOutputStream: void close()>: 3
<java.io.File: boolean isDirectory()>: 2
<java.io.InputStream: void <init>()>: 2
<java.net.InetSocketAddress: int getPort()>: 2
<com.fasterxml.jackson.core.base.GeneratorBase: void close()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>: 2
<java.io.PrintStream: void println(java.lang.String)>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 2
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String,java.lang.Throwable)>: 2
<java.io.File: void <init>(java.lang.String)>: 2
<java.io.Writer: void <init>()>: 2
<android.graphics.BitmapFactory$Options: void <init>()>: 2
<java.net.InetSocketAddress: java.lang.String getHostName()>: 2
<com.fasterxml.jackson.databind.type.SimpleType: boolean equals(java.lang.Object)>: 2
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 2
<java.io.File: boolean isFile()>: 2
<java.io.Writer: void close()>: 2
<android.graphics.Bitmap: int getHeight()>: 2
<java.io.InputStream: int read(byte[],int,int)>: 2
<com.fasterxml.jackson.databind.util.TypeKey: int hashCode()>: 2
<android.graphics.Bitmap: int getWidth()>: 2
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String)>: 2
<com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>: 2
<android.net.NetworkInfo: boolean isConnected()>: 2
<java.net.InetSocketAddress: java.net.InetAddress getAddress()>: 2
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 1
<java.io.FileInputStream: void <init>(java.io.File)>: 1
<android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>: 1
<java.io.FileOutputStream: void <init>(java.lang.String)>: 1
<java.io.File: java.lang.String getPath()>: 1
<java.io.File: boolean mkdir()>: 1
<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>: 1
<java.io.OutputStream: void flush()>: 1
<android.net.Uri$Builder: java.lang.String toString()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>: 1
<android.database.DataSetObserver: void <init>()>: 1
<java.io.OutputStream: void close()>: 1
<java.io.InputStream: int read(byte[])>: 1
<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>: 1
<com.sportinginnovations.uphoria.fan360.config.viewDescriptor.LoyaltyDescriptor: boolean equals(java.lang.Object)>: 1
<java.io.OutputStream: void write(byte[])>: 1
<java.lang.Enum: boolean equals(java.lang.Object)>: 1
<android.database.MatrixCursor: void <init>(java.lang.String[])>: 1
<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>: 1
<java.io.ByteArrayOutputStream: void <init>()>: 1
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 1
<android.graphics.Bitmap: boolean isRecycled()>: 1
<java.io.ByteArrayOutputStream: void close()>: 1
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 1
<android.database.Cursor: void close()>: 1
<com.sportinginnovations.uphoria.fan360.config.screen.ScreenPromptDescriptor: boolean equals(java.lang.Object)>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 702
<java.lang.String: int hashCode()>: 199
<java.lang.Object: boolean equals(java.lang.Object)>: 190
<java.lang.Object: java.lang.String toString()>: 186
<java.io.PrintStream: void println(java.lang.String)>: 144
<java.net.URL: void <init>(java.lang.String)>: 74
<java.io.File: boolean exists()>: 72
<java.net.URL: java.net.URLConnection openConnection()>: 71
<java.io.File: boolean delete()>: 69
<java.net.URLConnection: java.io.InputStream getInputStream()>: 68
<java.net.URL: java.lang.String toString()>: 67
<java.io.File: void <init>(java.io.File,java.lang.String)>: 67
<java.io.BufferedReader: void <init>(java.io.Reader,int)>: 64
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 64
<java.io.BufferedReader: java.lang.String readLine()>: 64
<java.io.IOException: void <init>(java.lang.String)>: 64
<java.lang.Object: int hashCode()>: 64
<com.fasterxml.jackson.databind.JavaType: int hashCode()>: 64
<com.fasterxml.jackson.'annotation'.JsonInclude$Value: boolean equals(java.lang.Object)>: 64
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 64
<java.io.BufferedReader: void close()>: 64
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 63
<android.net.NetworkInfo: boolean isConnected()>: 63
<java.net.URI: void <init>(java.lang.String)>: 60
<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>: 60
<java.io.ObjectInputStream: void close()>: 60
<java.io.FileInputStream: void close()>: 60
<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>: 60
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 60
<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>: 60
<android.net.Uri$Builder: void <init>()>: 60
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 60
<java.net.URI: java.lang.String getScheme()>: 60
<android.net.Uri$Builder: android.net.Uri build()>: 60
<java.net.URI: java.lang.String toString()>: 60
<java.io.ObjectInputStream: java.lang.Object readObject()>: 60
<java.net.URI: java.lang.String getAuthority()>: 60
<java.net.URI: java.lang.String getFragment()>: 60
<java.net.URI: java.lang.String getPath()>: 60
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 60
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 6
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 5
<java.net.HttpURLConnection: int getResponseCode()>: 5
<java.io.ByteArrayOutputStream: void <init>()>: 5
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>: 4
<java.io.OutputStream: void flush()>: 4
<java.net.URLConnection: void setReadTimeout(int)>: 4
<java.net.URLConnection: void setConnectTimeout(int)>: 4
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 4
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 4
<java.io.File: java.lang.String getAbsolutePath()>: 4
<android.graphics.Bitmap: void recycle()>: 3
<java.io.File: long length()>: 3
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>: 3
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 3
<java.io.DataOutputStream: void <init>(java.io.OutputStream)>: 3
<java.io.File: void <init>(java.lang.String)>: 3
<android.graphics.BitmapFactory$Options: void <init>()>: 3
<java.io.File: boolean renameTo(java.io.File)>: 3
<java.io.InputStream: int read(byte[])>: 3
<java.net.URL: java.lang.String getProtocol()>: 3
<java.io.DataOutputStream: void writeBytes(java.lang.String)>: 3
<android.graphics.Bitmap: int getHeight()>: 3
<java.io.InputStream: int read(byte[],int,int)>: 3
<java.io.FileOutputStream: void <init>(java.io.File)>: 3
<java.io.DataOutputStream: void flush()>: 3
<java.io.FilterOutputStream: void close()>: 3
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 3
<java.io.Closeable: void close()>: 2
<java.io.InputStream: void reset()>: 2
<java.io.ByteArrayInputStream: void <init>(byte[])>: 2
<java.io.Writer: void flush()>: 2
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>: 2
<java.io.InputStream: void close()>: 2
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 2
<java.io.Writer: void write(java.lang.String)>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 2
<android.graphics.Bitmap: int getWidth()>: 2
<java.io.File: boolean mkdirs()>: 2
<java.io.IOException: void <init>()>: 1
<java.io.FileInputStream: void <init>(java.io.File)>: 1
<java.io.File: long lastModified()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 1
<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>: 1
<java.io.OutputStream: void write(byte[],int,int)>: 1
<java.io.InputStream: void <init>()>: 1
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$2: void <init>()>: 1
<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>: 1
<android.graphics.Bitmap: int getRowBytes()>: 1
<java.io.FilterInputStream: void <init>(java.io.InputStream)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 1
<java.io.InputStream: int available()>: 1
<android.graphics.Bitmap: void setPixel(int,int,int)>: 1
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 1
<java.io.File: boolean setLastModified(long)>: 1
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot: void close()>: 1
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 1
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 1
<com.nostra13.universalimageloader.core.assist.FlushedInputStream: void <init>(java.io.InputStream)>: 1
<java.io.OutputStream: void <init>()>: 1
<java.io.FileInputStream: void <init>(java.lang.String)>: 1
<android.graphics.Bitmap: boolean isRecycled()>: 1
<java.net.URLConnection: int getContentLength()>: 1
