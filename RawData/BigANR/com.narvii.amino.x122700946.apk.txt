Duration => 12588
UI Thread => 2542
Worker Thread => 19299

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 564
<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String)>: 263
<java.lang.String: int hashCode()>: 141
<java.lang.Object: java.lang.String toString()>: 112
<com.fasterxml.jackson.core.JsonGenerationException: void <init>(java.lang.String)>: 96
<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String,java.lang.Throwable)>: 90
<java.io.File: void <init>(java.io.File,java.lang.String)>: 86
<com.fasterxml.jackson.databind.JavaType: boolean equals(java.lang.Object)>: 80
<java.io.File: boolean exists()>: 58
<com.fasterxml.jackson.databind.JavaType: int hashCode()>: 46
<java.net.InetAddress: java.lang.String toString()>: 32
<java.io.IOException: void <init>(java.lang.String)>: 32
<java.lang.Object: int hashCode()>: 32
<java.io.Writer: void write(java.lang.String)>: 32
<java.io.Closeable: void close()>: 30
<java.io.OutputStream: void write(byte[],int,int)>: 30
<com.fasterxml.jackson.core.JsonGenerator: void close()>: 30
<java.lang.Object: boolean equals(java.lang.Object)>: 28
<java.net.URI: java.net.URI create(java.lang.String)>: 21
<java.io.OutputStream: void <init>()>: 21
<com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>: 20
<com.fasterxml.jackson.core.util.ByteArrayBuilder: void <init>()>: 20
<java.io.File: boolean mkdir()>: 19
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 19
<com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey: int hashCode()>: 17
<java.io.InputStream: void close()>: 17
<java.io.InputStream: void <init>()>: 16
<java.net.InetSocketAddress: int getPort()>: 16
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String,java.lang.Throwable)>: 16
<java.net.InetSocketAddress: java.lang.String getHostName()>: 16
<java.io.InputStream: int read(byte[],int,int)>: 16
<java.net.InetSocketAddress: java.net.InetAddress getAddress()>: 16
<com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey: boolean equals(java.lang.Object)>: 16
<com.fasterxml.jackson.core.base.GeneratorBase: void close()>: 15
<java.io.Writer: void <init>()>: 15
<java.io.Writer: void close()>: 15
<android.database.DataSetObserver: void <init>()>: 14
<java.io.FileInputStream: void <init>(java.io.File)>: 13
<java.io.File: java.lang.String getPath()>: 13
<java.io.FileInputStream: void close()>: 13
<java.net.URL: void <init>(java.lang.String)>: 12
<java.io.FileInputStream: int read(byte[])>: 12
<java.io.File: void <init>(java.lang.String)>: 11
<java.io.OutputStream: void write(byte[])>: 11
<com.fasterxml.jackson.core.JsonParser: void close()>: 11
<java.math.BigDecimal: int hashCode()>: 10
<java.math.BigInteger: int hashCode()>: 10
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 10
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>: 10
<com.fasterxml.jackson.databind.util.TokenBuffer: void close()>: 10
<java.io.PrintStream: void println(java.lang.String)>: 10
<java.io.OutputStream: void close()>: 10
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>: 10
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 10
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String)>: 10
<com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>: 10
<java.io.File: boolean delete()>: 10
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 9
<java.io.Reader: void close()>: 9
<com.fasterxml.jackson.core.base.ParserBase: void close()>: 9
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 9
<java.io.StringReader: void <init>(java.lang.String)>: 9
<java.io.Reader: int read(char[],int,int)>: 9
<java.io.File: java.lang.String getName()>: 8
<java.io.FileInputStream: int available()>: 8
<java.io.File: java.lang.String getAbsolutePath()>: 8
<java.io.ByteArrayOutputStream: void <init>(int)>: 7
<com.narvii.chat.video.overlay.PropInfoP2aConfig: boolean equals(java.lang.Object)>: 7
<java.io.File: long length()>: 6
<java.io.FileOutputStream: void close()>: 6
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>: 6
<java.io.FileOutputStream: void <init>(java.io.File)>: 6
<android.graphics.BitmapFactory$Options: void <init>()>: 5
<java.io.File: boolean isDirectory()>: 4
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 4
<java.io.FileOutputStream: void write(byte[],int,int)>: 4
<java.io.File: boolean mkdirs()>: 4
<java.io.File: java.io.File getParentFile()>: 3
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>: 3
<java.io.File: boolean renameTo(java.io.File)>: 3
<java.lang.Enum: boolean equals(java.lang.Object)>: 3
<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>: 3
<java.io.File: java.io.File[] listFiles()>: 3
<java.net.URL: java.lang.String getHost()>: 2
<java.net.URL: java.net.URLConnection openConnection()>: 2
<java.net.URLConnection: java.util.Map getHeaderFields()>: 2
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>: 2
<java.net.HttpURLConnection: int getResponseCode()>: 2
<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>: 2
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 2
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 2
<android.net.Uri$Builder: android.net.Uri build()>: 2
<java.io.InputStream: int read(byte[])>: 2
<java.net.URL: java.lang.String toString()>: 2
<java.net.URLConnection: java.io.InputStream getInputStream()>: 2
<java.io.ObjectInputStream: java.lang.Object readObject()>: 2
<java.io.ByteArrayOutputStream: void <init>()>: 2
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 2
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 2
<java.io.ByteArrayOutputStream: void close()>: 2
<android.database.Cursor: void close()>: 2
<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>: 1
<java.io.ObjectInputStream: void close()>: 1
<java.io.ByteArrayInputStream: void <init>(byte[])>: 1
<java.net.HttpCookie: void <init>(java.lang.String,java.lang.String)>: 1
<java.net.HttpCookie: java.lang.String toString()>: 1
<java.net.HttpCookie: void setComment(java.lang.String)>: 1
<java.net.HttpCookie: void setSecure(boolean)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 1
<java.net.HttpCookie: void setPath(java.lang.String)>: 1
<java.net.HttpCookie: void setDomain(java.lang.String)>: 1
<java.net.HttpCookie: java.lang.String getName()>: 1
<android.database.AbstractCursor: void <init>()>: 1
<java.net.HttpCookie: void setPortlist(java.lang.String)>: 1
<java.net.HttpCookie: boolean hasExpired()>: 1
<java.net.HttpCookie: void setCommentURL(java.lang.String)>: 1
<java.net.HttpCookie: void setVersion(int)>: 1
<java.net.URI: java.lang.String toString()>: 1
<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>: 1
<java.io.File: boolean isFile()>: 1
<java.net.HttpCookie: void setDiscard(boolean)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 1
<java.net.HttpCookie: void setMaxAge(long)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>: 1
<java.io.FileOutputStream: void write(byte[])>: 1
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor)>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 4323
<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String)>: 1833
<java.lang.String: int hashCode()>: 1022
<java.lang.Object: java.lang.String toString()>: 676
<com.fasterxml.jackson.core.JsonGenerationException: void <init>(java.lang.String)>: 372
<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String,java.lang.Throwable)>: 370
<java.io.File: void <init>(java.io.File,java.lang.String)>: 363
<java.io.IOException: void <init>(java.lang.String)>: 342
<com.fasterxml.jackson.databind.JavaType: int hashCode()>: 322
<java.lang.Object: int hashCode()>: 296
<java.io.File: long length()>: 290
<com.fasterxml.jackson.databind.JavaType: boolean equals(java.lang.Object)>: 290
<java.lang.Object: boolean equals(java.lang.Object)>: 249
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 246
<java.io.OutputStream: void write(byte[],int,int)>: 242
<java.io.FileInputStream: void <init>(java.io.File)>: 234
<java.io.File: java.lang.String getName()>: 233
<java.io.File: java.io.File[] listFiles()>: 233
<java.io.FileInputStream: int read(byte[])>: 233
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 226
<java.io.File: boolean exists()>: 185
<java.io.FileInputStream: void close()>: 176
<com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>: 176
<java.io.OutputStream: void <init>()>: 168
<java.net.URI: java.net.URI create(java.lang.String)>: 160
<com.fasterxml.jackson.core.util.ByteArrayBuilder: void <init>()>: 160
<java.net.URL: void <init>(java.lang.String)>: 146
<com.fasterxml.jackson.core.JsonParser: void close()>: 142
<java.io.File: void <init>(java.lang.String)>: 138
<com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey: int hashCode()>: 131
<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>: 126
<java.io.FileOutputStream: void close()>: 126
<android.net.Uri$Builder: android.net.Uri build()>: 126
<java.io.File: boolean delete()>: 126
<java.io.InputStream: void close()>: 122
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 121
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 121
<java.io.File: boolean isDirectory()>: 117
<java.io.File: boolean mkdirs()>: 117
<java.net.InetAddress: java.lang.String toString()>: 116
<java.io.Writer: void write(java.lang.String)>: 116
<java.io.File: java.lang.String getAbsolutePath()>: 116
<java.io.Closeable: void close()>: 112
<com.fasterxml.jackson.core.JsonGenerator: void close()>: 106
<java.io.PrintStream: void println(java.lang.String)>: 95
<java.io.OutputStream: void write(byte[])>: 88
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String)>: 88
<com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>: 88
<java.io.OutputStream: void close()>: 83
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String,java.lang.Throwable)>: 82
<java.io.Reader: void close()>: 81
<com.fasterxml.jackson.core.base.ParserBase: void close()>: 81
<java.io.StringReader: void <init>(java.lang.String)>: 81
<java.io.Reader: int read(char[],int,int)>: 81
<java.math.BigDecimal: int hashCode()>: 80
<java.math.BigInteger: int hashCode()>: 80
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 80
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>: 80
<com.fasterxml.jackson.databind.util.TokenBuffer: void close()>: 80
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>: 80
<java.math.BigInteger: boolean equals(java.lang.Object)>: 73
<java.io.FileOutputStream: void <init>(java.io.File)>: 69
<java.io.File: boolean renameTo(java.io.File)>: 68
<java.net.URL: java.net.URLConnection openConnection()>: 66
<java.io.InputStream: int read(byte[])>: 65
<java.net.URLConnection: java.io.InputStream getInputStream()>: 65
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 64
<java.util.Formatter: void close()>: 64
<java.net.URLConnection: java.util.Map getHeaderFields()>: 63
<java.net.URL: java.lang.String toString()>: 63
<java.net.URL: java.lang.String getHost()>: 62
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>: 62
<java.net.HttpURLConnection: int getResponseCode()>: 62
<java.io.ByteArrayOutputStream: void <init>()>: 62
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 62
<java.io.ByteArrayOutputStream: void close()>: 62
<java.io.FileInputStream: int available()>: 59
<java.io.ByteArrayOutputStream: void <init>(int)>: 59
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>: 59
<java.io.FileOutputStream: void write(byte[],int,int)>: 59
<android.graphics.Bitmap: void eraseColor(int)>: 58
<java.io.InputStream: void <init>()>: 58
<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>: 58
<java.net.InetSocketAddress: int getPort()>: 58
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 58
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 58
<android.graphics.BitmapFactory$Options: void <init>()>: 58
<java.net.InetSocketAddress: java.lang.String getHostName()>: 58
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 58
<android.database.AbstractCursor: void <init>()>: 58
<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>: 58
<java.io.InputStream: int read(byte[],int,int)>: 58
<java.net.InetSocketAddress: java.net.InetAddress getAddress()>: 58
<android.database.Cursor: void close()>: 58
<com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey: boolean equals(java.lang.Object)>: 58
<com.fasterxml.jackson.core.base.GeneratorBase: void close()>: 53
<java.io.Writer: void <init>()>: 53
<java.io.Writer: void close()>: 53
<java.io.File: java.io.File getParentFile()>: 9
<java.net.HttpURLConnection: boolean getFollowRedirects()>: 2
<java.io.File: boolean mkdir()>: 2
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>: 2
<java.net.URI: void <init>(java.lang.String)>: 1
<java.net.URI: java.net.URI resolve(java.lang.String)>: 1
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 1
<java.io.BufferedReader: java.lang.String readLine()>: 1
<java.net.URLConnection: java.net.URL getURL()>: 1
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>: 1
<java.io.FileInputStream: int read(byte[],int,int)>: 1
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 1
<java.net.URI: java.lang.String toString()>: 1
<java.io.File: boolean isFile()>: 1
<java.io.FileOutputStream: void write(byte[])>: 1
<java.io.BufferedReader: void <init>(java.io.Reader)>: 1
<java.net.URLConnection: int getContentLength()>: 1
