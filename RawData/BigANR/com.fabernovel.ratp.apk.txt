Duration => 1437
UI Thread => 256
Worker Thread => 3144

----------------StartUI----------------
<android.database.Cursor: void close()>: 37
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 23
<java.lang.Object: java.lang.String toString()>: 12
<java.io.IOException: void <init>(java.lang.String)>: 11
<java.io.File: boolean exists()>: 9
<java.io.File: void <init>(java.io.File,java.lang.String)>: 7
<java.io.File: boolean delete()>: 5
<com.fasterxml.jackson.core.base.ParserBase: void close()>: 4
<java.io.InputStream: int read(byte[],int,int)>: 4
<java.io.File: java.lang.String getAbsolutePath()>: 4
<java.io.OutputStream: void write(byte[],int,int)>: 3
<java.net.URI: java.net.URI create(java.lang.String)>: 3
<java.io.File: boolean mkdir()>: 3
<java.io.CharConversionException: void <init>(java.lang.String)>: 3
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 3
<java.lang.Object: int hashCode()>: 3
<java.io.File: void <init>(java.lang.String)>: 3
<android.graphics.BitmapFactory$Options: void <init>()>: 3
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 3
<java.io.InputStream: void close()>: 3
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 3
<com.fasterxml.jackson.core.JsonParser: void close()>: 3
<android.database.sqlite.SQLiteClosable: void close()>: 3
<java.io.File: boolean mkdirs()>: 3
<java.io.IOException: void <init>()>: 2
<java.io.FileInputStream: void <init>(java.io.File)>: 2
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 2
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>: 2
<java.io.InputStream: void <init>()>: 2
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 2
<java.net.InetAddress: java.lang.String toString()>: 2
<java.io.FileOutputStream: void close()>: 2
<java.io.PrintStream: void println(java.lang.String)>: 2
<com.fasterxml.jackson.core.util.ByteArrayBuilder: void <init>()>: 2
<java.io.File: boolean renameTo(java.io.File)>: 2
<android.net.Uri$Builder: android.net.Uri build()>: 2
<java.net.URL: void <init>(java.lang.String)>: 2
<java.io.OutputStream: void write(byte[])>: 2
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 2
<java.io.Writer: void write(java.lang.String)>: 2
<java.io.Writer: void close()>: 2
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 2
<java.io.FileOutputStream: void <init>(java.io.File)>: 2
<java.io.OutputStream: void <init>()>: 2
<android.net.NetworkInfo: boolean isConnected()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 2
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<android.graphics.Bitmap: void recycle()>: 1
<java.io.Closeable: void close()>: 1
<java.io.File: boolean isDirectory()>: 1
<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>: 1
<java.io.File: long length()>: 1
<java.io.Reader: void <init>()>: 1
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 1
<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>: 1
<java.io.FileOutputStream: void <init>(java.lang.String)>: 1
<java.io.Reader: void close()>: 1
<java.nio.charset.Charset: boolean equals(java.lang.Object)>: 1
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 1
<java.io.OutputStream: void flush()>: 1
<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>: 1
<java.io.ByteArrayOutputStream: void <init>(int)>: 1
<java.net.InetSocketAddress: int getPort()>: 1
<java.io.FileInputStream: void close()>: 1
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 1
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 1
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>: 1
<java.io.File: boolean createNewFile()>: 1
<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>: 1
<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>: 1
<com.fasterxml.jackson.databind.util.TokenBuffer: void close()>: 1
<android.net.Uri$Builder: void <init>()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 1
<java.io.Writer: void flush()>: 1
<java.io.File: boolean canRead()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 1
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String,java.lang.Throwable)>: 1
<android.net.Uri$Builder: android.net.Uri$Builder encodedPath(java.lang.String)>: 1
<java.io.OutputStream: void close()>: 1
<java.net.InetSocketAddress: java.lang.String getHostName()>: 1
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>: 1
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 1
<java.io.InputStream: int read(byte[])>: 1
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 1
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: void close()>: 1
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 1
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 1
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String)>: 1
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 1
<java.io.File: java.io.File[] listFiles()>: 1
<android.graphics.Bitmap: boolean isRecycled()>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 1
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 1
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 1
<java.net.InetSocketAddress: java.net.InetAddress getAddress()>: 1
<java.io.EOFException: void <init>()>: 1
<android.net.Uri: java.lang.String encode(java.lang.String)>: 1
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 1
<java.io.Reader: int read(char[],int,int)>: 1
----------------StartWorker----------------
<android.database.Cursor: void close()>: 284
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 191
<java.io.File: boolean exists()>: 92
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 90
<java.io.File: boolean delete()>: 89
<java.lang.Object: java.lang.String toString()>: 87
<android.database.sqlite.SQLiteClosable: void close()>: 82
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 81
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 81
<java.io.File: java.lang.String getAbsolutePath()>: 80
<java.io.File: void <init>(java.lang.String)>: 77
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 70
<java.io.File: java.lang.String toString()>: 58
<java.io.FileInputStream: void <init>(java.lang.String)>: 55
<java.io.FileOutputStream: void <init>(java.lang.String)>: 54
<android.database.sqlite.SQLiteOpenHelper: void close()>: 54
<java.io.BufferedReader: java.lang.String readLine()>: 48
<java.net.URL: void <init>(java.lang.String)>: 48
<java.io.File: void <init>(java.io.File,java.lang.String)>: 48
<java.io.BufferedReader: void <init>(java.io.Reader)>: 48
<java.io.BufferedReader: void close()>: 44
<java.io.OutputStream: void write(byte[],int,int)>: 39
<java.net.URL: java.net.URLConnection openConnection()>: 38
<java.io.InputStream: int read(byte[])>: 38
<java.net.URLConnection: java.io.InputStream getInputStream()>: 38
<java.net.URLConnection: void setUseCaches(boolean)>: 37
<java.io.IOException: void <init>(java.lang.String)>: 34
<java.net.URI: java.lang.String toString()>: 32
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 31
<java.io.InputStream: void close()>: 31
<java.io.OutputStream: void flush()>: 29
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 29
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 28
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 28
<java.io.OutputStream: void close()>: 28
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 28
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 28
<java.net.URLConnection: void setReadTimeout(int)>: 28
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 28
<java.net.URLConnection: void setConnectTimeout(int)>: 28
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 27
<java.nio.channels.spi.AbstractInterruptibleChannel: void close()>: 27
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 27
<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>: 27
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 27
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>: 27
<android.database.SQLException: void <init>(java.lang.String)>: 27
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 27
<java.io.FileOutputStream: void <init>(java.io.File)>: 23
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 20
<android.net.NetworkInfo: boolean isConnected()>: 20
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>: 19
<java.io.Closeable: void close()>: 13
<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>: 13
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 13
<android.graphics.Bitmap: int getHeight()>: 13
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 13
<android.graphics.Bitmap: void recycle()>: 12
<android.graphics.Bitmap: int getWidth()>: 12
<java.io.File: boolean mkdirs()>: 12
<java.io.FileInputStream: void <init>(java.io.File)>: 11
<java.io.File: boolean isDirectory()>: 10
<java.net.InetAddress: java.lang.String getHostAddress()>: 10
<java.net.URI: java.lang.String getHost()>: 10
<java.io.File: boolean mkdir()>: 10
<java.net.HttpCookie: java.util.List parse(java.lang.String)>: 10
<java.io.ObjectInputStream: void close()>: 10
<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>: 10
<android.net.http.HttpResponseCache: android.net.http.HttpResponseCache getInstalled()>: 10
<java.util.zip.GZIPInputStream: void close()>: 10
<java.io.File: java.io.File getParentFile()>: 10
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 10
<java.net.InetAddress: boolean isLoopbackAddress()>: 10
<android.net.http.HttpResponseCache: android.net.http.HttpResponseCache install(java.io.File,long)>: 10
<java.net.HttpCookie: java.lang.String getName()>: 10
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>: 10
<java.io.ObjectOutputStream: void flush()>: 10
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 10
<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>: 10
<java.io.ObjectInputStream: java.lang.Object readObject()>: 10
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 10
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>: 10
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 10
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>: 10
<java.net.URLConnection: void setDoInput(boolean)>: 10
<java.net.HttpCookie: java.lang.String getValue()>: 10
<java.io.File: java.io.File[] listFiles()>: 10
<java.io.ObjectOutputStream: void close()>: 10
<java.io.OutputStreamWriter: void close()>: 4
<java.io.InputStreamReader: void close()>: 4
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>: 4
<java.io.BufferedWriter: void write(java.lang.String,int,int)>: 4
<java.io.FileReader: void <init>(java.lang.String)>: 4
<java.io.BufferedWriter: void close()>: 4
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 4
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 4
<java.io.File: long length()>: 3
<android.graphics.BitmapFactory$Options: void <init>()>: 3
<java.io.File: boolean renameTo(java.io.File)>: 3
<java.io.InputStream: int read(byte[],int,int)>: 3
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 2
<java.net.URI: void <init>(java.lang.String)>: 2
<java.io.InputStream: void reset()>: 2
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$2: void <init>()>: 2
<java.io.ByteArrayInputStream: void <init>(byte[])>: 2
<java.net.HttpURLConnection: int getResponseCode()>: 2
<java.net.URI: int getPort()>: 2
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 2
<java.io.Writer: void flush()>: 2
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>: 2
<java.io.PrintStream: void println(java.lang.String)>: 2
<java.net.URI: java.lang.String getScheme()>: 2
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 2
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 2
<java.io.Writer: void write(java.lang.String)>: 2
<java.net.URI: java.lang.String getAuthority()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 2
<java.io.OutputStream: void <init>()>: 2
<java.io.ByteArrayOutputStream: void <init>()>: 2
<java.net.URI: java.lang.String getRawPath()>: 2
<java.io.InputStream: boolean markSupported()>: 2
<java.io.IOException: void <init>()>: 1
<java.io.File: long lastModified()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 1
<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>: 1
<java.io.InputStream: void <init>()>: 1
<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>: 1
<android.graphics.Bitmap: int getRowBytes()>: 1
<java.io.FilterInputStream: void <init>(java.io.InputStream)>: 1
<java.io.InputStream: int available()>: 1
<android.util.JsonReader: void close()>: 1
<java.io.File: boolean setLastModified(long)>: 1
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot: void close()>: 1
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 1
<com.nostra13.universalimageloader.core.assist.FlushedInputStream: void <init>(java.io.InputStream)>: 1
<android.graphics.Bitmap: boolean isRecycled()>: 1
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 1
<java.net.URLConnection: int getContentLength()>: 1
