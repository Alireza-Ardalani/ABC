Duration => 19809
UI Thread => 1097
Worker Thread => 24062

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 213
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 112
<java.net.URI: java.lang.String getAuthority()>: 111
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 37
<java.net.URI: void <init>(java.lang.String)>: 37
<java.net.URI: java.net.URI create(java.lang.String)>: 37
<java.net.URI: java.lang.String getHost()>: 37
<java.net.URISyntaxException: java.lang.String getMessage()>: 37
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>: 37
<java.net.URI: java.lang.String getPath()>: 37
<java.net.URI: int getPort()>: 37
<java.io.PrintStream: void println(java.lang.String)>: 37
<java.net.URI: java.lang.String getScheme()>: 37
<android.database.CursorWindow: int getNumRows()>: 36
<org.a.a.d: void <init>(java.lang.String)>: 20
<android.database.Cursor: void close()>: 19
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 14
<android.database.CursorWindow: long getLong(int,int)>: 9
<android.database.CursorWindow: int getStartPosition()>: 9
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 9
<android.database.CursorWindow: java.lang.String getString(int,int)>: 9
<android.database.CursorWindow: int getInt(int,int)>: 9
<android.database.CursorWindow: short getShort(int,int)>: 9
<java.io.File: boolean exists()>: 8
<java.io.File: void <init>(java.io.File,java.lang.String)>: 7
<java.io.File: boolean mkdirs()>: 7
<java.lang.Object: boolean equals(java.lang.Object)>: 6
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 5
<java.io.IOException: void <init>(java.lang.String)>: 5
<java.io.Closeable: void close()>: 4
<android.net.NetworkInfo: int getType()>: 4
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 4
<java.lang.String: int hashCode()>: 4
<java.io.File: boolean delete()>: 3
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>: 3
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 3
<java.io.BufferedWriter: void <init>(java.io.Writer,int)>: 2
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 2
<android.graphics.BitmapFactory$Options: void <init>()>: 2
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 2
<java.io.FileInputStream: void <init>(java.io.File)>: 2
<java.io.File: long length()>: 2
<java.io.FileInputStream: java.io.FileDescriptor getFD()>: 2
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 2
<java.io.FileWriter: void <init>(java.io.File,boolean)>: 2
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 2
<java.io.StringWriter: java.lang.String toString()>: 2
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 2
<java.io.Writer: void close()>: 2
<java.io.PrintWriter: void close()>: 2
<android.net.NetworkInfo: int getSubtype()>: 2
<java.io.ByteArrayOutputStream: void <init>()>: 2
<java.io.FileInputStream: void <init>(java.lang.String)>: 2
<java.io.StringWriter: void <init>()>: 2
<android.database.SQLException: void <init>(java.lang.String)>: 2
<java.io.File: java.io.File[] listFiles()>: 2
<android.net.NetworkInfo: boolean isConnected()>: 2
<java.io.PrintWriter: void <init>(java.io.Writer)>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 2
<java.io.BufferedInputStream: int read(byte[],int,int)>: 2
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 2
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 2
<java.io.File: void <init>(java.lang.String)>: 2
<java.io.FileReader: void <init>(java.io.File)>: 1
<java.io.IOException: void <init>()>: 1
<java.io.File: boolean renameTo(java.io.File)>: 1
<android.graphics.Bitmap: void recycle()>: 1
<java.io.File: boolean isDirectory()>: 1
<java.io.File: long lastModified()>: 1
<android.net.Uri: boolean equals(java.lang.Object)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 1
<java.io.InputStream: int read()>: 1
<android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient newInstance(java.lang.String)>: 1
<java.io.File: java.lang.String getPath()>: 1
<java.lang.Enum: boolean equals(java.lang.Object)>: 1
<java.io.Writer: void write(java.lang.String)>: 1
<java.io.FileInputStream: void close()>: 1
<android.net.wifi.WifiManager: int getWifiState()>: 1
<android.database.sqlite.SQLiteOpenHelper: void close()>: 1
<java.io.BufferedReader: java.lang.String readLine()>: 1
<android.graphics.Bitmap: int getHeight()>: 1
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 1
<com.dianxinos.b.c.c$c: void close()>: 1
<java.io.BufferedReader: void close()>: 1
<android.net.NetworkInfo: boolean isAvailable()>: 1
<android.graphics.Bitmap: int getWidth()>: 1
<com.dianxinos.b.c.c: void close()>: 1
<android.graphics.Bitmap: boolean isRecycled()>: 1
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>: 1
<java.io.EOFException: void <init>()>: 1
<java.io.BufferedReader: void <init>(java.io.Reader)>: 1
<java.io.FileWriter: void <init>(java.io.File)>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 2596
<java.io.IOException: void <init>(java.lang.String)>: 703
<java.io.File: boolean exists()>: 629
<java.lang.Object: boolean equals(java.lang.Object)>: 534
<android.database.sqlite.SQLiteProgram: void bindLong(int,long)>: 451
<android.database.sqlite.SQLiteProgram: void bindString(int,java.lang.String)>: 410
<android.database.sqlite.SQLiteProgram: void clearBindings()>: 410
<org.a.a.d: void <init>(java.lang.String)>: 404
<java.io.FileInputStream: void <init>(java.io.File)>: 370
<java.io.File: void <init>(java.lang.String)>: 370
<java.net.URI: java.lang.String getHost()>: 370
<java.io.File: java.lang.String getAbsolutePath()>: 333
<java.io.InputStream: void close()>: 333
<java.io.File: boolean delete()>: 333
<java.io.InputStream: boolean markSupported()>: 333
<java.io.BufferedReader: java.lang.String readLine()>: 296
<java.io.BufferedReader: void <init>(java.io.Reader)>: 296
<java.io.File: void <init>(java.io.File,java.lang.String)>: 295
<java.io.File: long length()>: 295
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 295
<java.io.InputStream: void reset()>: 259
<java.io.InputStream: int read(byte[])>: 259
<java.io.File: boolean isDirectory()>: 222
<java.io.ByteArrayInputStream: void <init>(byte[])>: 222
<java.io.InputStream: void mark(int)>: 222
<java.io.Closeable: void close()>: 221
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 186
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 186
<java.net.ProtocolException: void <init>(java.lang.String)>: 185
<java.net.URI: void <init>(java.lang.String)>: 185
<java.io.FileInputStream: void close()>: 185
<java.net.URI: java.lang.String getScheme()>: 185
<java.io.File: java.io.File[] listFiles()>: 185
<java.net.URI: int getPort()>: 185
<java.io.BufferedReader: void close()>: 184
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 184
<java.io.StringWriter: void <init>()>: 183
<com.amazonaws.internal.SdkFilterInputStream: void <init>(java.io.InputStream)>: 148
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 148
<java.io.IOException: void <init>()>: 148
<e.c$a: void close()>: 148
<java.io.File: boolean mkdirs()>: 148
<java.io.PrintWriter: void <init>(java.io.Writer)>: 146
<java.io.StringWriter: java.lang.String toString()>: 146
<android.database.CursorWindow: int getNumRows()>: 132
<java.io.EOFException: void <init>()>: 130
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 111
<java.io.OutputStream: void write(byte[],int,int)>: 111
<java.io.File: java.lang.String getName()>: 111
<java.io.File: java.lang.String getPath()>: 111
<com.amazonaws.internal.SdkFilterInputStream: int read()>: 111
<java.lang.String: int hashCode()>: 111
<java.io.OutputStream: void write(byte[])>: 111
<java.net.URI: java.lang.String getPath()>: 111
<java.net.URI: java.net.URI create(java.lang.String)>: 111
<java.io.OutputStream: void flush()>: 111
<java.lang.Object: int hashCode()>: 111
<com.amazonaws.internal.SdkFilterInputStream: int read(byte[],int,int)>: 111
<com.amazonaws.internal.SdkFilterInputStream: void reset()>: 111
<com.amazonaws.internal.SdkFilterInputStream: boolean markSupported()>: 111
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 110
<android.database.Cursor: void close()>: 110
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 110
<java.io.ByteArrayOutputStream: void <init>()>: 110
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 110
<java.io.PrintWriter: void close()>: 109
<java.net.URLConnection: void setDoOutput(boolean)>: 74
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 74
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 74
<java.io.OutputStream: void write(int)>: 74
<java.net.URLConnection: java.util.Map getHeaderFields()>: 74
<java.net.URI: java.lang.String getRawQuery()>: 74
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 74
<java.io.FilterInputStream: void <init>(java.io.InputStream)>: 74
<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>: 74
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 74
<java.net.URL: void <init>(java.lang.String)>: 74
<java.io.Writer: void close()>: 74
<java.net.URI: java.lang.String getAuthority()>: 74
<java.io.InputStream: int read(byte[],int,int)>: 74
<java.io.PrintWriter: void println(java.lang.String)>: 74
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 74
<java.io.BufferedWriter: void <init>(java.io.Writer,int)>: 74
<java.io.FileWriter: void <init>(java.io.File,boolean)>: 74
<java.io.InputStream: int read()>: 74
<java.net.URL: java.net.URLConnection openConnection()>: 74
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>: 74
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 74
<java.io.FilterInputStream: void close()>: 74
<java.net.HttpURLConnection: int getResponseCode()>: 74
<java.io.OutputStream: void close()>: 74
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 74
<com.amazonaws.internal.SdkInputStream: void <init>()>: 74
<java.net.URLConnection: void setReadTimeout(int)>: 74
<java.net.URL: java.lang.String getProtocol()>: 74
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 74
<java.lang.Enum: boolean equals(java.lang.Object)>: 74
<com.amazonaws.internal.SdkFilterInputStream: void mark(int)>: 74
<java.net.URLConnection: java.io.InputStream getInputStream()>: 74
<java.io.File: boolean isFile()>: 74
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 74
<java.io.FileOutputStream: void <init>(java.io.File)>: 74
<java.net.URLConnection: void setConnectTimeout(int)>: 74
<java.io.ByteArrayOutputStream: void close()>: 74
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>: 74
<java.net.URLConnection: void setUseCaches(boolean)>: 74
<e.r: void close()>: 74
<java.io.File: long lastModified()>: 73
<java.io.FileReader: void <init>(java.io.File)>: 73
<java.io.BufferedInputStream: int read(byte[],int,int)>: 73
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>: 56
<java.lang.reflect.Method: boolean equals(java.lang.Object)>: 56
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>: 56
<java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>: 56
<java.net.IDN: java.lang.String toASCII(java.lang.String)>: 56
<java.net.ProxySelector: java.net.ProxySelector getDefault()>: 56
<java.net.InetAddress: byte[] getAddress()>: 56
<android.database.sqlite.SQLiteStatement: void execute()>: 41
<android.graphics.Bitmap: int getHeight()>: 41
<android.graphics.Bitmap: int getWidth()>: 41
<android.database.sqlite.SQLiteStatement: long executeInsert()>: 41
<java.io.PrintStream: void println(java.lang.Object)>: 40
<java.io.PrintWriter: void println(java.lang.Object)>: 40
<android.database.SQLException: void <init>(java.lang.String)>: 40
<java.lang.Object: java.lang.String toString()>: 40
<java.net.URL: java.lang.String getHost()>: 37
<java.io.File: java.lang.String[] list()>: 37
<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>: 37
<android.database.sqlite.SQLiteDatabase: boolean isOpen()>: 37
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 37
<java.net.URI: java.lang.String getRawFragment()>: 37
<java.io.InputStream: void <init>()>: 37
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 37
<java.io.ByteArrayOutputStream: void <init>(int)>: 37
<java.io.BufferedInputStream: void close()>: 37
<java.io.File: boolean createNewFile()>: 37
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 37
<android.net.TrafficStats: void setThreadStatsTag(int)>: 37
<d.ac: void close()>: 37
<com.amazonaws.util.NamespaceRemovingInputStream: void <init>(java.io.InputStream)>: 37
<java.net.URL: java.lang.String getQuery()>: 37
<java.io.FileOutputStream: void close()>: 37
<java.io.DataInputStream: void <init>(java.io.InputStream)>: 37
<com.amazonaws.services.s3.internal.MD5DigestCalculatingInputStream: void <init>(java.io.InputStream)>: 37
<com.a.c.a.n: void write(byte[],int,int)>: 37
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 37
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 37
<java.io.FileInputStream: int read(byte[],int,int)>: 37
<java.net.URI: java.lang.String toString()>: 37
<java.io.Writer: void write(java.lang.String)>: 37
<android.graphics.Bitmap: int getByteCount()>: 37
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>: 37
<com.amazonaws.internal.SdkFilterInputStream: void close()>: 37
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>: 37
<java.io.FileInputStream: int read()>: 37
<java.io.FileNotFoundException: void <init>(java.lang.String)>: 37
<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>: 37
<com.dianxinos.b.c.c: void close()>: 37
<java.net.URLConnection: void setDoInput(boolean)>: 37
<java.net.URI: java.lang.String getRawPath()>: 37
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 37
<java.net.URLConnection: int getContentLength()>: 37
<java.io.FilterInputStream: int read()>: 37
<java.net.HttpURLConnection: boolean getFollowRedirects()>: 37
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 37
<java.net.URL: java.lang.String getPath()>: 37
<java.io.DataInputStream: void readFully(byte[])>: 37
<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>: 37
<java.io.ByteArrayInputStream: int available()>: 37
<java.net.Socket: void setSoTimeout(int)>: 37
<java.io.FileInputStream: long skip(long)>: 37
<com.dianxinos.b.c.c$c: void close()>: 37
<java.lang.Long: boolean equals(java.lang.Object)>: 37
<java.io.DataOutputStream: void <init>(java.io.OutputStream)>: 37
<java.net.URL: int getPort()>: 37
<com.google.e.d.c: void close()>: 37
<java.io.PrintWriter: void print(java.lang.String)>: 37
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 37
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>: 37
<java.io.FileWriter: void <init>(java.io.File)>: 37
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 37
<java.net.URI: java.net.URL toURL()>: 37
<com.a.c.a.n: void close()>: 37
<java.io.File: boolean renameTo(java.io.File)>: 37
<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>: 37
<java.net.URL: java.lang.String toString()>: 37
<java.net.SocketTimeoutException: void <init>(java.lang.String)>: 37
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>: 37
<java.net.URI: java.lang.String getRawUserInfo()>: 37
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 37
<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>: 37
<android.net.NetworkInfo: java.lang.String getSubtypeName()>: 37
<java.net.URL: java.net.URI toURI()>: 37
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 37
<java.io.FilterOutputStream: void close()>: 37
<io.b.j.b: void <init>(java.lang.String)>: 37
<java.io.BufferedOutputStream: void close()>: 37
<android.net.NetworkInfo: java.lang.String getTypeName()>: 37
<android.net.NetworkInfo: int getType()>: 36
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 36
<android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient newInstance(java.lang.String)>: 36
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 36
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 36
<android.net.NetworkInfo: int getSubtype()>: 35
<android.database.CursorWindow: long getLong(int,int)>: 33
<android.database.CursorWindow: java.lang.String getString(int,int)>: 33
<android.database.CursorWindow: short getShort(int,int)>: 33
<android.database.CursorWindow: int getStartPosition()>: 33
<android.database.CursorWindow: int getInt(int,int)>: 33
<android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 2
<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>: 2
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 2
<android.net.Proxy: java.lang.String getHost(android.content.Context)>: 1
<android.net.NetworkInfo: boolean isConnected()>: 1
<android.net.Proxy: int getPort(android.content.Context)>: 1
