Duration => 1505
UI Thread => 655
Worker Thread => 3067

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 214
<android.net.NetworkInfo: boolean isConnected()>: 43
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 37
<java.net.InetAddress: java.lang.String getHostAddress()>: 35
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>: 35
<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>: 35
<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>: 35
<java.net.InetAddress: boolean isLoopbackAddress()>: 35
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 11
<java.io.File: boolean exists()>: 11
<android.database.Cursor: void close()>: 11
<java.io.File: void <init>(java.lang.String)>: 9
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 8
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 6
<java.io.IOException: void <init>(java.lang.String)>: 6
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 5
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 5
<java.io.File: void <init>(java.io.File,java.lang.String)>: 5
<java.io.File: boolean delete()>: 5
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 4
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 4
<java.io.InputStream: void close()>: 4
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 4
<java.io.BufferedReader: java.lang.String readLine()>: 4
<java.io.ByteArrayOutputStream: void <init>()>: 4
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 4
<java.io.BufferedReader: void <init>(java.io.Reader)>: 4
<java.io.FileInputStream: void <init>(java.io.File)>: 3
<java.io.File: long length()>: 3
<java.io.OutputStream: void write(byte[],int,int)>: 3
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 3
<java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>: 3
<java.io.IOException: void <init>()>: 2
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 2
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 2
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>: 2
<java.lang.Object: boolean equals(java.lang.Object)>: 2
<java.io.File: boolean mkdir()>: 2
<java.io.Writer: void close()>: 2
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 2
<java.io.ByteArrayInputStream: void <init>(byte[])>: 2
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 2
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 2
<java.lang.Boolean: boolean equals(java.lang.Object)>: 2
<java.io.File: boolean mkdirs()>: 2
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<android.graphics.BitmapFactory$Options: void <init>()>: 1
<java.io.File: boolean renameTo(java.io.File)>: 1
<java.io.Closeable: void close()>: 1
<java.io.File: boolean isDirectory()>: 1
<java.io.InputStream: int read(byte[])>: 1
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 1
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 1
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: void close()>: 1
<java.lang.Integer: boolean equals(java.lang.Object)>: 1
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 1
<java.nio.charset.Charset: boolean equals(java.lang.Object)>: 1
<java.io.OutputStream: void flush()>: 1
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$2: void <init>()>: 1
<java.io.ByteArrayOutputStream: void <init>(int)>: 1
<java.io.Writer: void write(java.lang.String)>: 1
<java.io.BufferedInputStream: void close()>: 1
<android.database.sqlite.SQLiteOpenHelper: void close()>: 1
<java.io.InputStream: int read(byte[],int,int)>: 1
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<java.io.File: boolean createNewFile()>: 1
<com.ahplatform.swagger.model.ClientState: boolean equals(java.lang.Object)>: 1
<java.io.OutputStream: void <init>()>: 1
<java.nio.charset.UnsupportedCharsetException: void <init>(java.lang.String)>: 1
<java.io.File: java.io.File[] listFiles()>: 1
<java.io.ByteArrayOutputStream: void close()>: 1
<java.io.BufferedInputStream: int read(byte[],int,int)>: 1
<java.io.EOFException: void <init>()>: 1
<java.io.PrintStream: void println(java.lang.String)>: 1
<java.io.InputStream: int available()>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 1058
<java.lang.Object: boolean equals(java.lang.Object)>: 106
<java.io.InputStream: void close()>: 79
<java.net.URL: java.net.URLConnection openConnection()>: 70
<java.net.HttpURLConnection: int getResponseCode()>: 70
<java.net.URL: void <init>(java.lang.String)>: 70
<java.net.URLConnection: void setReadTimeout(int)>: 70
<java.net.URLConnection: java.io.InputStream getInputStream()>: 70
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 70
<java.net.URLConnection: void setConnectTimeout(int)>: 70
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 70
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 39
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 38
<android.database.Cursor: void close()>: 38
<java.io.OutputStream: void write(byte[],int,int)>: 37
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 36
<java.io.BufferedReader: java.lang.String readLine()>: 36
<java.io.File: java.lang.String getAbsolutePath()>: 36
<java.io.BufferedReader: void <init>(java.io.Reader)>: 36
<java.io.OutputStreamWriter: void close()>: 35
<java.net.URLConnection: void setDoOutput(boolean)>: 35
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 35
<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String)>: 35
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 35
<java.io.File: boolean exists()>: 35
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 35
<java.io.StringWriter: void <init>()>: 35
<java.io.PrintWriter: void <init>(java.io.Writer)>: 35
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 35
<java.io.File: void <init>(java.lang.String)>: 35
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 35
<java.io.OutputStreamWriter: void flush()>: 35
<java.io.StringWriter: java.lang.String toString()>: 35
<java.io.Writer: void write(java.lang.String)>: 35
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>: 35
<java.net.URLConnection: void setDoInput(boolean)>: 35
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 34
<java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>: 34
<java.io.ByteArrayOutputStream: void <init>()>: 34
<java.lang.Boolean: boolean equals(java.lang.Object)>: 34
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 27
<java.io.IOException: void <init>(java.lang.String)>: 18
<java.net.URI: java.net.URI create(java.lang.String)>: 9
<java.net.URI: void <init>(java.lang.String)>: 5
<java.io.ByteArrayInputStream: void <init>(byte[])>: 5
<java.net.Socket: void close()>: 5
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>: 4
<java.io.InputStream: void <init>()>: 4
<java.io.OutputStream: void flush()>: 4
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>: 4
<java.net.URI: boolean isAbsolute()>: 4
<java.net.URI: java.lang.String getScheme()>: 4
<android.net.wifi.WifiInfo: int getIpAddress()>: 4
<java.io.OutputStream: void write(byte[])>: 4
<android.net.wifi.WifiInfo: int getRssi()>: 4
<org.apache.http.HttpHost: boolean equals(java.lang.Object)>: 4
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>: 4
<android.net.wifi.WifiInfo: java.lang.String getBSSID()>: 4
<org.apache.http.MalformedChunkCodingException: void <init>(java.lang.String)>: 4
<android.net.wifi.WifiInfo: java.lang.String getSSID()>: 4
<android.net.wifi.WifiInfo: int getNetworkId()>: 4
<android.net.wifi.WifiInfo: int getLinkSpeed()>: 4
<android.net.NetworkInfo: java.lang.String getTypeName()>: 4
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 3
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 3
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 3
<java.net.URI: java.lang.String getHost()>: 3
<java.net.Socket: void setSoTimeout(int)>: 3
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 3
<java.net.URI: int getPort()>: 3
<java.io.InputStream: int read(byte[])>: 3
<android.database.sqlite.SQLiteOpenHelper: void close()>: 3
<java.io.OutputStream: void <init>()>: 3
<org.apache.http.conn.routing.HttpRoute: boolean equals(java.lang.Object)>: 3
<java.net.InetAddress: java.lang.String getHostName()>: 2
<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>: 2
<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>: 2
<java.net.Socket: void setTcpNoDelay(boolean)>: 2
<java.net.URI: java.lang.String toString()>: 2
<java.net.URI: java.lang.String toASCIIString()>: 2
<java.net.URI: java.lang.String getAuthority()>: 2
<java.io.InputStream: int read(byte[],int,int)>: 2
<java.net.URI: java.lang.String getFragment()>: 2
<java.net.URI: java.lang.String getPath()>: 2
<java.net.Socket: java.io.OutputStream getOutputStream()>: 2
<java.io.IOException: void <init>()>: 1
<java.net.ProtocolException: void <init>(java.lang.String)>: 1
<java.net.Socket: void shutdownOutput()>: 1
<java.io.File: long length()>: 1
<java.net.Socket: int getSendBufferSize()>: 1
<java.net.URI: java.lang.String getRawFragment()>: 1
<java.io.InputStream: int read()>: 1
<java.net.URI: java.net.URI resolve(java.net.URI)>: 1
<org.apache.http.client.ClientProtocolException: void <init>(java.lang.String)>: 1
<java.net.Socket: void setSoLinger(boolean,int)>: 1
<java.io.InterruptedIOException: void <init>()>: 1
<org.apache.http.impl.io.ContentLengthInputStream: int read(byte[])>: 1
<java.net.URISyntaxException: java.lang.String getMessage()>: 1
<java.io.FileInputStream: void close()>: 1
<java.net.Socket: int getSoTimeout()>: 1
<org.apache.http.impl.io.IdentityOutputStream: void write(byte[],int,int)>: 1
<java.net.URI: java.lang.String getRawQuery()>: 1
<java.io.InterruptedIOException: void <init>(java.lang.String)>: 1
<java.net.Socket: java.io.InputStream getInputStream()>: 1
<org.apache.http.impl.io.ChunkedInputStream: int read(byte[])>: 1
<java.net.Socket: void <init>(java.lang.String,int)>: 1
<org.apache.http.impl.io.ContentLengthOutputStream: void write(byte[],int,int)>: 1
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 1
<java.io.FileOutputStream: void close()>: 1
<java.io.DataInputStream: void <init>(java.io.InputStream)>: 1
<java.net.Socket: void shutdownInput()>: 1
<org.apache.http.impl.io.ContentLengthInputStream: int read(byte[],int,int)>: 1
<org.apache.http.impl.io.ChunkedOutputStream: void write(byte[],int,int)>: 1
<org.apache.http.impl.io.ChunkedInputStream: int read(byte[],int,int)>: 1
<java.net.InetAddress: java.net.InetAddress getLocalHost()>: 1
<java.io.OutputStream: void close()>: 1
<java.net.ConnectException: void <init>(java.lang.String)>: 1
<org.apache.http.ConnectionClosedException: void <init>(java.lang.String)>: 1
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 1
<org.apache.http.TruncatedChunkException: void <init>(java.lang.String)>: 1
<java.io.File: void <init>(java.io.File,java.lang.String)>: 1
<org.apache.http.NoHttpResponseException: void <init>(java.lang.String)>: 1
<java.io.File: boolean delete()>: 1
<java.net.InetAddress: boolean equals(java.lang.Object)>: 1
<org.apache.http.client.ClientProtocolException: void <init>(java.lang.Throwable)>: 1
<java.net.URI: java.lang.String getRawPath()>: 1
<java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>: 1
<java.io.FileOutputStream: void write(byte[])>: 1
<java.net.URI: java.lang.String getQuery()>: 1
<java.net.Socket: int getReceiveBufferSize()>: 1
