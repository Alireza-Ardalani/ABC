Duration => 850
UI Thread => 1010
Worker Thread => 30038

----------------StartUI----------------
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 62
<android.graphics.Bitmap: boolean isRecycled()>: 48
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 47
<android.graphics.Bitmap: void recycle()>: 45
<android.graphics.BitmapFactory$Options: void <init>()>: 42
<java.io.InputStream: void close()>: 40
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 37
<android.graphics.Bitmap: int getHeight()>: 33
<android.graphics.drawable.BitmapDrawable: void <init>()>: 30
<java.io.IOException: void <init>(java.lang.String)>: 30
<android.graphics.Bitmap: int getWidth()>: 27
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>: 27
<android.database.Cursor: void close()>: 25
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 23
<java.io.File: void <init>(java.io.File,java.lang.String)>: 22
<java.io.File: boolean delete()>: 22
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 20
<java.io.File: boolean exists()>: 16
<java.io.InputStream: int read(byte[])>: 16
<java.io.File: boolean isDirectory()>: 15
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 13
<java.io.PrintStream: void println(java.lang.String)>: 12
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 11
<java.io.ByteArrayOutputStream: void <init>()>: 11
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 11
<java.io.Closeable: void close()>: 10
<java.io.FileWriter: void <init>(java.io.File,boolean)>: 10
<com.b.b: void close()>: 10
<java.io.File: void <init>(java.lang.String)>: 10
<java.io.Writer: void close()>: 10
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 10
<java.io.FileInputStream: void <init>(java.io.File)>: 9
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>: 9
<java.io.File: java.lang.String getAbsolutePath()>: 8
<java.io.BufferedInputStream: int read()>: 7
<java.io.BufferedInputStream: int read(byte[],int,int)>: 7
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 7
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 7
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 6
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 6
<java.io.File: boolean mkdirs()>: 6
<java.io.IOException: void <init>()>: 5
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 5
<java.nio.charset.Charset: boolean equals(java.lang.Object)>: 5
<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>: 5
<java.io.ByteArrayOutputStream: void <init>(int)>: 5
<java.io.FileWriter: void <init>(java.io.File)>: 5
<android.net.http.HttpResponseCache: android.net.http.HttpResponseCache install(java.io.File,long)>: 5
<java.io.File: boolean renameTo(java.io.File)>: 5
<java.net.URL: void setURLStreamHandlerFactory(java.net.URLStreamHandlerFactory)>: 5
<com.b.d: void <init>()>: 5
<java.io.File: boolean equals(java.lang.Object)>: 5
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>: 5
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 5
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 5
<java.io.Writer: void write(java.lang.String)>: 5
<java.io.InputStream: int read(byte[],int,int)>: 5
<java.io.OutputStream: void <init>()>: 5
<java.io.File: java.io.File[] listFiles()>: 5
<java.io.File: java.lang.String toString()>: 5
<java.io.EOFException: void <init>()>: 5
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 4
<java.io.FileInputStream: int available()>: 4
<java.io.FileInputStream: void close()>: 4
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>: 4
<android.database.MatrixCursor: void addRow(java.lang.Object[])>: 4
<java.io.InputStream: int available()>: 4
<java.io.FileInputStream: int read(byte[],int,int)>: 4
<android.database.MatrixCursor: void <init>(java.lang.String[])>: 4
<android.database.sqlite.SQLiteOpenHelper: void close()>: 4
<android.graphics.drawable.BitmapDrawable: void setGravity(int)>: 3
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>: 3
<java.io.File: boolean canRead()>: 3
<java.io.FileOutputStream: void close()>: 3
<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>: 3
<java.io.FileOutputStream: void <init>(java.io.File)>: 3
<android.graphics.drawable.BitmapDrawable: void setTileModeXY(android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>: 3
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 3
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 2
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 2
<java.io.FileOutputStream: void write(byte[],int,int)>: 2
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>: 2
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 2
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>: 1
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 1
<java.io.File: java.lang.String getPath()>: 1
<java.io.File: boolean mkdir()>: 1
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 1
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 1
<android.net.NetworkInfo: java.lang.String getExtraInfo()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 1
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>: 1
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 1
<android.net.Uri$Builder: android.net.Uri build()>: 1
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 1
<android.net.NetworkInfo: int getType()>: 1
<android.net.Uri: boolean equals(java.lang.Object)>: 1
<android.database.ContentObserver: void <init>(android.os.Handler)>: 1
<java.io.OutputStream: void write(byte[])>: 1
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>: 1
<android.net.NetworkInfo: boolean isAvailable()>: 1
<android.net.NetworkInfo: boolean isConnected()>: 1
<android.graphics.BitmapFactory$Options: void requestCancelDecode()>: 1
<android.os.ParcelFileDescriptor: void close()>: 1
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>: 1
<android.graphics.drawable.Drawable: int getOpacity()>: 1
----------------StartWorker----------------
<java.io.InputStream: void close()>: 1910
<java.io.IOException: void <init>(java.lang.String)>: 1638
<java.net.URL: java.net.URLConnection openConnection()>: 1140
<java.net.URL: void <init>(java.lang.String)>: 1140
<java.net.URLConnection: java.io.InputStream getInputStream()>: 1140
<java.net.URLConnection: void setUseCaches(boolean)>: 1133
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 859
<java.io.BufferedReader: java.lang.String readLine()>: 859
<java.io.BufferedReader: void <init>(java.io.Reader)>: 859
<java.io.BufferedReader: void close()>: 856
<java.io.ByteArrayOutputStream: void <init>()>: 693
<java.net.URI: void <init>(java.lang.String)>: 546
<java.io.InputStream: int read(byte[])>: 519
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 409
<java.io.OutputStream: void write(byte[],int,int)>: 366
<java.io.OutputStream: void write(byte[])>: 365
<java.io.InputStream: void <init>()>: 364
<java.net.URI: java.net.URI create(java.lang.String)>: 364
<java.io.ByteArrayInputStream: void <init>(byte[])>: 364
<org.apache.http.MalformedChunkCodingException: void <init>(java.lang.String)>: 364
<java.net.Socket: void close()>: 364
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 317
<java.net.URLConnection: void setDoInput(boolean)>: 314
<java.net.URLConnection: void setDoOutput(boolean)>: 313
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 313
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 310
<java.io.DataOutputStream: void <init>(java.io.OutputStream)>: 310
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 310
<java.io.DataOutputStream: void writeBytes(java.lang.String)>: 310
<java.io.DataOutputStream: void flush()>: 310
<java.io.FilterOutputStream: void close()>: 310
<java.io.BufferedInputStream: int read()>: 293
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>: 277
<java.io.BufferedInputStream: void close()>: 274
<java.net.URI: java.lang.String getHost()>: 273
<java.net.Socket: void setSoTimeout(int)>: 273
<java.net.URI: int getPort()>: 273
<java.net.URI: java.lang.String getScheme()>: 273
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 273
<java.io.OutputStream: void <init>()>: 273
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 271
<java.io.InputStream: int read(byte[],int,int)>: 217
<java.io.OutputStream: void flush()>: 183
<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>: 182
<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>: 182
<java.net.URI: boolean isAbsolute()>: 182
<java.io.InterruptedIOException: void <init>(java.lang.String)>: 182
<java.io.FileOutputStream: void close()>: 182
<java.net.URI: java.lang.String toString()>: 182
<java.net.URI: java.lang.String toASCIIString()>: 182
<java.net.URI: java.lang.String getFragment()>: 182
<java.net.URI: java.lang.String getPath()>: 182
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 135
<android.graphics.BitmapFactory$Options: void <init>()>: 118
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 116
<android.graphics.Bitmap: int getHeight()>: 105
<android.graphics.Bitmap: int getWidth()>: 105
<android.graphics.Bitmap: void recycle()>: 95
<java.io.OutputStream: void close()>: 93
<java.io.IOException: void <init>()>: 91
<java.net.InetAddress: java.lang.String getHostName()>: 91
<java.net.ProtocolException: void <init>(java.lang.String)>: 91
<java.net.Socket: void shutdownOutput()>: 91
<java.net.URI: java.lang.String getRawFragment()>: 91
<java.net.Socket: int getSendBufferSize()>: 91
<java.io.InputStream: int read()>: 91
<java.net.URI: java.net.URI resolve(java.net.URI)>: 91
<org.apache.http.conn.ConnectionPoolTimeoutException: void <init>(java.lang.String)>: 91
<java.net.Socket: void setSoLinger(boolean,int)>: 91
<java.io.InterruptedIOException: void <init>()>: 91
<org.apache.http.impl.io.ContentLengthInputStream: int read(byte[])>: 91
<java.io.ByteArrayOutputStream: void <init>(int)>: 91
<java.net.URISyntaxException: java.lang.String getMessage()>: 91
<java.io.UnsupportedEncodingException: void <init>()>: 91
<java.net.Socket: int getSoTimeout()>: 91
<org.apache.http.impl.io.IdentityOutputStream: void write(byte[],int,int)>: 91
<java.net.URI: java.lang.String getRawQuery()>: 91
<java.io.ByteArrayOutputStream: void write(int)>: 91
<org.apache.http.impl.io.ChunkedInputStream: int read(byte[])>: 91
<java.net.Socket: java.io.InputStream getInputStream()>: 91
<org.apache.http.impl.io.ContentLengthOutputStream: void write(byte[],int,int)>: 91
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 91
<org.apache.http.conn.ConnectTimeoutException: void <init>(java.lang.String)>: 91
<java.net.Socket: void shutdownInput()>: 91
<org.apache.http.impl.io.ContentLengthInputStream: int read(byte[],int,int)>: 91
<org.apache.http.impl.io.ChunkedOutputStream: void write(byte[],int,int)>: 91
<org.apache.http.impl.io.ChunkedInputStream: int read(byte[],int,int)>: 91
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>: 91
<java.net.Socket: void setTcpNoDelay(boolean)>: 91
<java.net.ConnectException: void <init>(java.lang.String)>: 91
<org.apache.http.ConnectionClosedException: void <init>(java.lang.String)>: 91
<org.apache.http.TruncatedChunkException: void <init>(java.lang.String)>: 91
<java.net.URI: java.lang.String getAuthority()>: 91
<org.apache.http.NoHttpResponseException: void <init>(java.lang.String)>: 91
<java.net.Socket: java.io.OutputStream getOutputStream()>: 91
<org.apache.http.client.ClientProtocolException: void <init>(java.lang.Throwable)>: 91
<java.net.InetAddress: boolean equals(java.lang.Object)>: 91
<java.net.URI: java.lang.String getRawPath()>: 91
<java.net.InetAddress: byte[] getAddress()>: 91
<java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>: 91
<java.io.ByteArrayOutputStream: void close()>: 91
<java.net.URI: java.lang.String getQuery()>: 91
<java.net.Socket: int getReceiveBufferSize()>: 91
<java.io.File: void <init>(java.lang.String)>: 71
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 63
<android.database.Cursor: void close()>: 62
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 55
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>: 55
<java.io.File: long length()>: 46
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 45
<java.io.DataOutputStream: void write(byte[],int,int)>: 39
<java.io.InputStream: int available()>: 38
<java.io.File: java.lang.String toString()>: 31
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 30
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 30
<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>: 30
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 29
<android.graphics.drawable.Drawable: int getOpacity()>: 29
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 28
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 28
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 28
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 28
<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>: 23
<java.io.File: java.lang.String getAbsolutePath()>: 23
<java.io.File: boolean exists()>: 21
<java.io.File: boolean isDirectory()>: 19
<java.io.PrintStream: void println(java.lang.String)>: 18
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 18
<java.io.BufferedInputStream: int read(byte[],int,int)>: 16
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 16
<android.graphics.Bitmap: boolean isRecycled()>: 16
<java.io.File: boolean createNewFile()>: 15
<java.io.File: boolean delete()>: 15
<java.io.File: boolean mkdirs()>: 14
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 13
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 11
<java.io.PrintWriter: void <init>(java.io.OutputStream,boolean)>: 11
<java.io.FileInputStream: void <init>(java.io.File)>: 10
<java.io.FileInputStream: void close()>: 10
<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>: 9
<java.io.FileInputStream: void <init>(java.lang.String)>: 7
<java.io.File: java.lang.String getName()>: 5
<java.io.FileInputStream: int available()>: 5
<java.io.FileInputStream: int read(byte[],int,int)>: 5
<java.io.File: boolean isFile()>: 5
<java.io.File: void <init>(java.io.File,java.lang.String)>: 5
<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>: 4
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>: 3
<java.io.FileOutputStream: void write(byte[],int,int)>: 3
<android.database.sqlite.SQLiteOpenHelper: void close()>: 3
<java.io.FileNotFoundException: void <init>(java.lang.String)>: 3
<java.io.FileInputStream: java.io.FileDescriptor getFD()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 2
<java.io.FileOutputStream: void <init>(java.io.File)>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>: 1
<java.io.FileOutputStream: void <init>(java.lang.String)>: 1
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 1
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 1
<java.net.HttpURLConnection: int getResponseCode()>: 1
<android.net.Uri$Builder: android.net.Uri build()>: 1
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>: 1
<android.database.DatabaseUtils: void appendEscapedSQLString(java.lang.StringBuilder,java.lang.String)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>: 1
