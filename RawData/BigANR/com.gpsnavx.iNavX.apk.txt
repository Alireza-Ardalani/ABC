Duration => 3095
UI Thread => 262
Worker Thread => 2232

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 46
<android.database.Cursor: void close()>: 15
<com.gpsnavx.iNavX.db.DBHelper: void close()>: 14
<java.io.File: boolean exists()>: 10
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 9
<java.net.Socket: boolean isConnected()>: 9
<java.io.File: void <init>(java.lang.String)>: 9
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 7
<com.gpsnavx.iNavX.db.DBHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 7
<java.io.InputStream: int read(byte[])>: 6
<java.net.InetAddress: java.lang.String getHostAddress()>: 6
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>: 6
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 6
<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>: 6
<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>: 6
<android.net.NetworkInfo: boolean isConnected()>: 6
<java.net.InetAddress: boolean isLoopbackAddress()>: 6
<java.io.InputStream: void close()>: 5
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 5
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 5
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 5
<java.io.File: boolean mkdirs()>: 5
<java.io.OutputStream: void write(byte[],int,int)>: 4
<java.io.ByteArrayInputStream: void <init>(byte[])>: 4
<com.gpsnavx.iNavX.db.DBHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 4
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 3
<java.io.ByteArrayOutputStream: void <init>()>: 3
<java.io.ByteArrayOutputStream: void close()>: 3
<java.io.EOFException: void <init>()>: 3
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 2
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 2
<java.lang.Object: boolean equals(java.lang.Object)>: 2
<java.io.File: java.lang.String getPath()>: 2
<java.io.ObjectInputStream: java.lang.Object readObject()>: 2
<android.database.sqlite.SQLiteOpenHelper: void close()>: 2
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>: 2
<java.io.File: java.lang.String getAbsolutePath()>: 2
<java.io.InputStream: int available()>: 2
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 1
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<java.io.OutputStream: void close()>: 1
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>: 1
<java.util.zip.ZipFile: void close()>: 1
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 1
<java.io.FileOutputStream: void <init>(java.lang.String)>: 1
<android.database.sqlite.SQLiteProgram: void bindDouble(int,double)>: 1
<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>: 1
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 1
<java.net.Socket: void close()>: 1
<android.database.sqlite.SQLiteProgram: void bindLong(int,long)>: 1
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<android.database.sqlite.SQLiteProgram: void bindString(int,java.lang.String)>: 1
<com.gpsnavx.iNavX.db.DBHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<android.database.sqlite.SQLiteStatement: long executeInsert()>: 1
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 1
<android.database.sqlite.SQLiteClosable: void close()>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 183
<java.io.File: boolean exists()>: 170
<java.io.File: void <init>(java.lang.String)>: 145
<com.gpsnavx.iNavX.db.DBHelper: void close()>: 66
<java.io.File: boolean delete()>: 60
<java.io.ByteArrayInputStream: void <init>(byte[])>: 58
<java.io.File: boolean mkdirs()>: 58
<java.io.InputStream: int read(byte[])>: 48
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 43
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 43
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 43
<java.io.FileOutputStream: void <init>(java.io.File)>: 42
<java.io.File: java.lang.String getAbsolutePath()>: 42
<java.io.InputStream: void close()>: 41
<com.gpsnavx.iNavX.db.DBHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 33
<com.gpsnavx.iNavX.db.DBHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 30
<java.io.OutputStream: void flush()>: 29
<java.io.InputStream: int available()>: 29
<android.database.Cursor: void close()>: 29
<java.io.FileOutputStream: void close()>: 26
<java.io.OutputStreamWriter: void flush()>: 26
<java.io.Writer: void write(java.lang.String)>: 26
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 23
<java.lang.Object: boolean equals(java.lang.Object)>: 21
<java.io.FileOutputStream: void write(byte[])>: 21
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 21
<java.io.OutputStreamWriter: void close()>: 20
<java.io.FileWriter: void <init>(java.io.File)>: 20
<java.net.URL: java.net.URLConnection openConnection()>: 17
<java.net.URL: void <init>(java.lang.String)>: 17
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 17
<java.net.URLConnection: java.io.InputStream getInputStream()>: 17
<android.database.sqlite.SQLiteOpenHelper: void close()>: 16
<android.graphics.Bitmap: void recycle()>: 15
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>: 15
<java.io.File: java.lang.String getPath()>: 15
<java.io.File: boolean createNewFile()>: 15
<android.database.sqlite.SQLiteProgram: void bindString(int,java.lang.String)>: 15
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 15
<java.io.File: void <init>(java.io.File,java.lang.String)>: 15
<okhttp3.Response: void close()>: 15
<android.database.sqlite.SQLiteStatement: long executeInsert()>: 15
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 14
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 13
<java.net.HttpURLConnection: int getResponseCode()>: 12
<java.net.URLConnection: void setReadTimeout(int)>: 12
<java.net.URLConnection: void setConnectTimeout(int)>: 12
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 12
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 11
<java.io.BufferedReader: java.lang.String readLine()>: 11
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 11
<java.io.OutputStream: void close()>: 11
<java.io.ByteArrayOutputStream: void <init>()>: 11
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 11
<java.io.EOFException: void <init>()>: 11
<java.io.BufferedReader: void <init>(java.io.Reader)>: 11
<java.io.File: boolean isDirectory()>: 10
<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String)>: 10
<java.io.FileOutputStream: void write(byte[],int,int)>: 10
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 10
<java.io.File: boolean isFile()>: 10
<android.database.sqlite.SQLiteProgram: void bindDouble(int,double)>: 10
<java.io.FileInputStream: void <init>(java.lang.String)>: 10
<android.database.sqlite.SQLiteProgram: void bindLong(int,long)>: 10
<android.graphics.Bitmap: boolean isRecycled()>: 10
<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>: 8
<java.io.ByteArrayOutputStream: void reset()>: 8
<java.io.ByteArrayOutputStream: void <init>(int)>: 8
<java.net.Socket: java.io.InputStream getInputStream()>: 8
<java.net.Socket: void <init>(java.lang.String,int)>: 8
<android.graphics.BitmapFactory$Options: void <init>()>: 8
<java.io.OutputStream: void write(byte[])>: 8
<java.net.Socket: void setKeepAlive(boolean)>: 8
<java.net.Socket: java.io.OutputStream getOutputStream()>: 8
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 8
<java.net.URLConnection: void setDoOutput(boolean)>: 6
<java.io.OutputStream: void write(byte[],int,int)>: 6
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 6
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 6
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 6
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>: 6
<java.net.URLConnection: void setDoInput(boolean)>: 6
<java.io.ByteArrayOutputStream: void close()>: 6
<java.io.FileReader: void <init>(java.io.File)>: 5
<java.util.zip.ZipInputStream: void close()>: 5
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 5
<java.io.Closeable: void close()>: 5
<java.io.FileInputStream: void <init>(java.io.File)>: 5
<java.io.File: long length()>: 5
<java.io.File: java.lang.String getName()>: 5
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 5
<java.io.FileOutputStream: void <init>(java.lang.String)>: 5
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 5
<java.io.FileInputStream: void close()>: 5
<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>: 5
<java.lang.String: int hashCode()>: 5
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 5
<java.io.BufferedOutputStream: void flush()>: 5
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 5
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 5
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>: 5
<java.io.File: java.io.File getParentFile()>: 5
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 5
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 5
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,int,int,android.graphics.Bitmap$Config)>: 5
<android.database.sqlite.SQLiteDatabase: long replace(java.lang.String,java.lang.String,android.content.ContentValues)>: 5
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>: 5
<java.io.FileInputStream: int read(byte[],int,int)>: 5
<java.io.ObjectOutputStream: void flush()>: 5
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 5
<java.lang.Enum: boolean equals(java.lang.Object)>: 5
<android.graphics.RectF: boolean equals(java.lang.Object)>: 5
<android.graphics.Bitmap: int getHeight()>: 5
<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>: 5
<java.io.InputStream: int read(byte[],int,int)>: 5
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 5
<java.io.BufferedReader: void close()>: 5
<java.io.FilterOutputStream: void write(byte[])>: 5
<android.graphics.Bitmap: int getWidth()>: 5
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>: 5
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>: 5
<java.io.FilterOutputStream: void close()>: 5
<java.io.File: java.io.File[] listFiles()>: 5
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 5
<java.net.URLConnection: int getContentLength()>: 5
<android.database.sqlite.SQLiteClosable: void close()>: 5
<java.io.FilterInputStream: int read(byte[])>: 5
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 4
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 3
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 3
<java.io.ObjectInputStream: java.lang.Object readObject()>: 3
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 3
