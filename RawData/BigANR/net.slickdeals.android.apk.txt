Duration => 3761
UI Thread => 1561
Worker Thread => 10127

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 211
<java.io.Writer: void write(char[],int,int)>: 132
<java.io.OutputStream: void write(byte[],int,int)>: 96
<com.fasterxml.jackson.databind.JavaType: boolean equals(java.lang.Object)>: 96
<com.fasterxml.jackson.databind.JavaType: int hashCode()>: 84
<java.io.IOException: void <init>(java.lang.String)>: 70
<java.lang.String: int hashCode()>: 64
<com.fasterxml.jackson.core.JsonGenerator: void close()>: 48
<java.lang.Object: boolean equals(java.lang.Object)>: 41
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 39
<java.io.Writer: void write(java.lang.String)>: 27
<java.io.Closeable: void close()>: 26
<java.io.InputStream: int read(byte[],int,int)>: 26
<com.fasterxml.jackson.core.io.UTF8Writer: void write(int)>: 24
<java.io.OutputStream: void flush()>: 24
<java.net.InetAddress: java.lang.String toString()>: 24
<com.fasterxml.jackson.core.base.GeneratorBase: void close()>: 24
<com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>: 24
<java.io.OutputStream: void close()>: 24
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 17
<java.io.InputStream: void close()>: 16
<java.io.Writer: void close()>: 16
<java.lang.Object: int hashCode()>: 14
<java.io.OutputStream: void <init>()>: 14
<com.fasterxml.jackson.core.io.UTF8Writer: void write(java.lang.String,int,int)>: 12
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>: 12
<java.io.InputStream: void <init>()>: 12
<java.net.InetSocketAddress: int getPort()>: 12
<java.io.File: boolean exists()>: 12
<java.io.Writer: void flush()>: 12
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String,java.lang.Throwable)>: 12
<java.io.Writer: void <init>()>: 12
<java.net.InetSocketAddress: java.lang.String getHostName()>: 12
<com.fasterxml.jackson.databind.type.SimpleType: boolean equals(java.lang.Object)>: 12
<com.fasterxml.jackson.databind.util.TypeKey: int hashCode()>: 12
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String)>: 12
<com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>: 12
<java.net.InetSocketAddress: java.net.InetAddress getAddress()>: 12
<java.io.File: boolean delete()>: 11
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 10
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 10
<java.io.File: void <init>(java.io.File,java.lang.String)>: 9
<android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient newInstance(java.lang.String)>: 8
<java.io.DataInput: int readUnsignedByte()>: 8
<android.database.sqlite.SQLiteOpenHelper: void close()>: 7
<java.io.DataInput: java.lang.String readUTF()>: 6
<android.net.NetworkInfo: int getType()>: 5
<android.net.NetworkInfo: android.net.NetworkInfo$DetailedState getDetailedState()>: 5
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 5
<android.net.NetworkInfo: java.lang.String toString()>: 5
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 5
<java.io.IOException: void <init>()>: 4
<java.io.FileInputStream: void <init>(java.io.File)>: 4
<java.io.File: boolean isDirectory()>: 4
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 4
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>: 4
<org.joda.time.DateTimeZone: boolean equals(java.lang.Object)>: 4
<java.io.DataInputStream: void <init>(java.io.InputStream)>: 4
<java.io.DataInput: boolean readBoolean()>: 4
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 3
<java.io.FileOutputStream: void close()>: 3
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>: 3
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>: 3
<java.io.ObjectOutputStream: void close()>: 3
<java.io.EOFException: void <init>()>: 3
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 2
<com.a.a.a$2: void <init>()>: 2
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 2
<com.google.protobuf.l: boolean equals(java.lang.Object)>: 2
<java.nio.charset.Charset: boolean equals(java.lang.Object)>: 2
<java.io.DataInputStream: int readUnsignedShort()>: 2
<java.io.ByteArrayOutputStream: void <init>(int)>: 2
<java.io.ObjectInputStream: void close()>: 2
<java.io.DataInput: int readInt()>: 2
<java.io.FileInputStream: void close()>: 2
<java.io.FilterInputStream: void close()>: 2
<java.io.DataInput: long readLong()>: 2
<com.a.a.a: void close()>: 2
<java.io.DataInput: byte readByte()>: 2
<java.io.PrintStream: void println(java.lang.String)>: 2
<java.io.File: void <init>(java.lang.String)>: 2
<java.io.File: boolean renameTo(java.io.File)>: 2
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 2
<java.io.DataInput: int readUnsignedShort()>: 2
<java.io.ObjectInputStream: java.lang.Object readObject()>: 2
<java.io.FileOutputStream: void <init>(java.io.File)>: 2
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 2
<java.io.File: java.io.File[] listFiles()>: 2
<java.io.DataInputStream: java.lang.String readUTF()>: 2
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 2
<java.io.File: boolean mkdirs()>: 2
<java.io.FileReader: void <init>(java.io.File)>: 1
<java.io.BufferedReader: java.lang.String readLine()>: 1
<java.io.StringWriter: void <init>()>: 1
<java.io.PrintWriter: void <init>(java.io.Writer)>: 1
<java.io.BufferedWriter: void flush()>: 1
<java.io.FileWriter: void <init>(java.io.File)>: 1
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>: 1
<java.net.URL: void <init>(java.lang.String)>: 1
<java.io.BufferedWriter: void close()>: 1
<java.io.StringWriter: java.lang.String toString()>: 1
<java.io.RandomAccessFile: void readFully(byte[])>: 1
<java.io.BufferedReader: void close()>: 1
<java.io.File: java.lang.String getAbsolutePath()>: 1
<java.io.RandomAccessFile: long length()>: 1
<java.io.RandomAccessFile: void close()>: 1
<java.io.BufferedReader: void <init>(java.io.Reader)>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 1833
<java.lang.Object: boolean equals(java.lang.Object)>: 379
<java.io.IOException: void <init>(java.lang.String)>: 259
<java.lang.String: int hashCode()>: 182
<java.io.File: void <init>(java.io.File,java.lang.String)>: 163
<java.net.URLConnection: java.net.URL getURL()>: 156
<java.net.URL: void <init>(java.lang.String)>: 156
<java.net.HttpURLConnection: int getResponseCode()>: 156
<java.lang.Object: int hashCode()>: 139
<java.io.File: boolean exists()>: 137
<java.io.DataInput: int readUnsignedByte()>: 132
<java.io.OutputStream: void close()>: 131
<java.net.URLConnection: void setDoOutput(boolean)>: 130
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 130
<java.net.URLConnection: java.lang.String getContentType()>: 130
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 130
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 114
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 104
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 104
<java.lang.Enum: boolean equals(java.lang.Object)>: 104
<java.net.URLConnection: java.io.InputStream getInputStream()>: 104
<java.net.URLConnection: void setConnectTimeout(int)>: 104
<android.net.NetworkInfo: int getType()>: 99
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 99
<java.io.DataInput: java.lang.String readUTF()>: 99
<java.io.InputStream: void close()>: 96
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 89
<android.database.Cursor: void close()>: 79
<java.net.URL: java.lang.String getHost()>: 78
<java.net.URLConnection: java.util.Map getHeaderFields()>: 78
<java.net.HttpURLConnection: java.lang.String getRequestMethod()>: 78
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 78
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>: 78
<java.net.URLConnection: void setDoInput(boolean)>: 78
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 78
<java.net.URLConnection: int getContentLength()>: 78
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 78
<java.net.URL: java.net.URLConnection openConnection()>: 78
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>: 78
<java.net.URLConnection: void setReadTimeout(int)>: 78
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 78
<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>: 78
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>: 78
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 68
<java.io.DataInputStream: void <init>(java.io.InputStream)>: 66
<java.io.DataInput: boolean readBoolean()>: 66
<org.joda.time.DateTimeZone: boolean equals(java.lang.Object)>: 66
<java.io.FileInputStream: void <init>(java.io.File)>: 59
<java.io.File: boolean isDirectory()>: 59
<java.io.File: void <init>(java.lang.String)>: 59
<java.io.InputStream: void <init>()>: 56
<java.net.URI: java.lang.String getScheme()>: 56
<java.io.InputStream: int read(byte[])>: 55
<java.net.URI: java.lang.String getHost()>: 55
<java.net.URI: int getPort()>: 55
<java.io.InputStream: int read(byte[],int,int)>: 54
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 54
<java.io.BufferedReader: void <init>(java.io.Reader)>: 54
<java.io.BufferedReader: java.lang.String readLine()>: 53
<java.net.URI: java.lang.String getRawQuery()>: 53
<java.net.URLConnection: java.util.Map getRequestProperties()>: 52
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 52
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 52
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 52
<java.io.File: java.lang.String getAbsolutePath()>: 52
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 52
<java.net.URL: java.lang.String getPath()>: 52
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 52
<java.net.URL: int getPort()>: 52
<java.net.URL: java.lang.String getProtocol()>: 52
<java.io.FileOutputStream: void <init>(java.io.File)>: 52
<java.io.File: boolean delete()>: 52
<java.net.URLConnection: void setUseCaches(boolean)>: 52
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 42
<java.io.DataInputStream: int readUnsignedShort()>: 33
<java.io.DataInput: byte readByte()>: 33
<java.io.DataInputStream: java.lang.String readUTF()>: 33
<java.io.DataInput: int readInt()>: 33
<java.io.FilterInputStream: void close()>: 33
<java.io.DataInput: long readLong()>: 33
<java.io.DataInput: int readUnsignedShort()>: 33
<java.io.Writer: void write(java.lang.String)>: 32
<java.net.URI: void <init>(java.lang.String)>: 29
<java.io.OutputStream: void <init>()>: 29
<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String)>: 29
<android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient newInstance(java.lang.String)>: 29
<java.io.OutputStream: void flush()>: 29
<java.io.OutputStream: void write(byte[],int,int)>: 28
<java.io.OutputStream: void write(byte[])>: 28
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 27
<java.net.URI: java.lang.String getRawFragment()>: 27
<java.io.StringWriter: void <init>()>: 27
<java.io.BufferedReader: void close()>: 27
<java.net.URI: java.lang.String getRawPath()>: 27
<java.net.URL: java.io.InputStream openStream()>: 27
<java.io.StringWriter: java.lang.String toString()>: 27
<java.io.ByteArrayOutputStream: void <init>()>: 27
<java.net.HttpURLConnection: void <init>(java.net.URL)>: 26
<java.io.ObjectOutput: void close()>: 26
<com.newrelic.agent.android.instrumentation.HttpURLConnectionExtension: java.io.InputStream getErrorStream()>: 26
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 26
<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)>: 26
<java.io.PrintWriter: void <init>(java.io.Writer)>: 26
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>: 26
<java.io.Writer: void flush()>: 26
<javax.net.ssl.HttpsURLConnection: void <init>(java.net.URL)>: 26
<java.io.Writer: void close()>: 26
<java.io.ObjectInputStream: java.lang.Object readObject()>: 26
<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getErrorStream()>: 26
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 26
<android.net.NetworkInfo: boolean isConnected()>: 26
<java.io.EOFException: void <init>()>: 26
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>: 26
<android.graphics.Bitmap: int getPixel(int,int)>: 26
<java.io.Reader: void close()>: 26
<java.lang.Object: java.lang.String toString()>: 26
<java.io.ObjectInputStream: void close()>: 26
<android.database.DataSetObserver: void <init>()>: 26
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 26
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 26
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>: 26
<java.net.URL: java.lang.String toString()>: 26
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 26
<java.net.URI: java.lang.String getRawUserInfo()>: 26
<io.socket.utf8.UTF8Exception: void <init>(java.lang.String)>: 26
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 26
<java.net.URL: java.net.URI toURI()>: 26
<android.net.NetworkInfo: int getSubtype()>: 26
<java.io.ObjectOutput: void writeObject(java.lang.Object)>: 26
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 26
<android.net.NetworkInfo: java.lang.String getTypeName()>: 26
<android.net.NetworkInfo: android.net.NetworkInfo$DetailedState getDetailedState()>: 21
<android.net.NetworkInfo: java.lang.String toString()>: 21
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 14
<org.apache.http.k: boolean equals(java.lang.Object)>: 5
<org.apache.http.MalformedChunkCodingException: void <init>(java.lang.String)>: 4
<java.net.Socket: void close()>: 4
<java.net.URI: boolean isAbsolute()>: 3
<org.apache.http.conn.b.b: boolean equals(java.lang.Object)>: 3
<java.net.URI: java.net.URI create(java.lang.String)>: 3
<java.net.Socket: void setSoTimeout(int)>: 3
<java.io.ByteArrayInputStream: void <init>(byte[])>: 3
<java.io.PrintStream: void println(java.lang.String)>: 3
<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>: 2
<java.net.URI: java.lang.String toString()>: 2
<java.net.URI: java.lang.String toASCIIString()>: 2
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 2
<java.net.URI: java.lang.String getFragment()>: 2
<com.newrelic.agent.android.harvest.ConnectInformation: boolean equals(java.lang.Object)>: 2
<java.net.InetAddress: boolean equals(java.lang.Object)>: 2
<java.net.ProtocolException: void <init>(java.lang.String)>: 1
<java.io.Reader: int read(char[])>: 1
<java.net.Socket: int getSendBufferSize()>: 1
<java.net.URI: java.net.URI resolve(java.net.URI)>: 1
<java.io.PrintStream: void print(java.lang.String)>: 1
<java.net.Socket: void setSoLinger(boolean,int)>: 1
<java.net.URISyntaxException: java.lang.String getMessage()>: 1
<com.newrelic.com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>: 1
<org.apache.http.impl.c.e: int read(byte[],int,int)>: 1
<com.newrelic.com.google.gson.internal.bind.JsonTreeWriter$1: void <init>()>: 1
<org.apache.http.impl.c.h: void write(byte[],int,int)>: 1
<java.io.EOFException: void <init>(java.lang.String)>: 1
<java.io.Writer: void <init>()>: 1
<org.apache.http.impl.c.f: void write(byte[],int,int)>: 1
<com.newrelic.agent.android.harvest.DeviceInformation: boolean equals(java.lang.Object)>: 1
<java.net.ConnectException: void <init>(java.lang.String)>: 1
<org.apache.http.impl.c.g: int read(byte[],int,int)>: 1
<java.net.URI: java.lang.String getAuthority()>: 1
<com.newrelic.agent.android.harvest.ApplicationInformation: boolean equals(java.lang.Object)>: 1
<java.net.URI: java.lang.String getPath()>: 1
<java.net.Socket: java.io.OutputStream getOutputStream()>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 1
<java.net.URI: java.lang.String getQuery()>: 1
<java.io.RandomAccessFile: void close()>: 1
<java.net.Socket: int getReceiveBufferSize()>: 1
<org.apache.http.impl.c.m: void write(byte[],int,int)>: 1
<java.io.StringReader: void <init>(java.lang.String)>: 1
<java.io.Reader: int read(char[],int,int)>: 1
<java.io.IOException: void <init>()>: 1
<java.net.Socket: void shutdownOutput()>: 1
<java.io.InputStream: int read()>: 1
<java.io.InterruptedIOException: void <init>()>: 1
<org.apache.http.impl.c.g: int read(byte[])>: 1
<java.net.Socket: int getSoTimeout()>: 1
<java.io.InterruptedIOException: void <init>(java.lang.String)>: 1
<java.net.Socket: java.io.InputStream getInputStream()>: 1
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 1
<java.io.FileOutputStream: void <init>(java.lang.String,boolean)>: 1
<java.io.PrintStream: void flush()>: 1
<java.net.Socket: void shutdownInput()>: 1
<java.io.Writer: void write(int)>: 1
<java.io.PrintStream: void <init>(java.io.OutputStream)>: 1
<java.net.Socket: void setTcpNoDelay(boolean)>: 1
<java.io.Writer: java.io.Writer append(char)>: 1
<java.io.Writer: void write(java.lang.String,int,int)>: 1
<org.apache.http.NoHttpResponseException: void <init>(java.lang.String)>: 1
<org.apache.http.client.ClientProtocolException: void <init>(java.lang.Throwable)>: 1
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 1
