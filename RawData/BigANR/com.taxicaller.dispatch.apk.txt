Duration => 1433
UI Thread => 250
Worker Thread => 5665

----------------StartUI----------------
<java.io.PrintStream: void println(java.lang.String)>: 23
<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String)>: 19
<java.io.File: boolean exists()>: 12
<java.io.IOException: void <init>(java.lang.String)>: 10
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 8
<java.io.File: void <init>(java.lang.String)>: 8
<java.net.URL: java.lang.String toString()>: 6
<java.io.File: void <init>(java.io.File,java.lang.String)>: 6
<java.io.File: boolean delete()>: 6
<java.io.InputStream: void close()>: 5
<android.net.Uri$Builder: android.net.Uri build()>: 4
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 4
<java.io.InputStream: int read(byte[],int,int)>: 4
<java.io.File: java.lang.String getAbsolutePath()>: 4
<java.net.URL: void <init>(java.lang.String)>: 3
<java.io.File: long lastModified()>: 3
<java.net.URLDecoder: java.lang.String decode(java.lang.String)>: 3
<java.io.File: java.net.URI toURI()>: 3
<java.net.URL: java.lang.String getProtocol()>: 3
<java.net.URL: java.net.URLConnection openConnection()>: 3
<java.net.URL: java.lang.String getFile()>: 3
<java.net.URLConnection: java.io.InputStream getInputStream()>: 3
<java.io.File: boolean isFile()>: 3
<java.io.CharConversionException: void <init>(java.lang.String)>: 3
<java.net.URI: java.net.URL toURL()>: 3
<java.net.URLConnection: void setUseCaches(boolean)>: 3
<android.graphics.BitmapFactory$Options: void <init>()>: 2
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 2
<java.io.IOException: void <init>()>: 2
<java.io.File: boolean renameTo(java.io.File)>: 2
<android.net.NetworkInfo: int getType()>: 2
<java.io.OutputStream: void write(byte[],int,int)>: 2
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>: 2
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 2
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>: 2
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 2
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 2
<java.io.File: boolean mkdir()>: 2
<java.io.Writer: void write(java.lang.String)>: 2
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 2
<java.io.Writer: void close()>: 2
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 2
<android.net.NetworkInfo: boolean isAvailable()>: 2
<java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>: 2
<java.io.ByteArrayOutputStream: void <init>()>: 2
<java.nio.charset.UnsupportedCharsetException: void <init>(java.lang.String)>: 2
<java.io.File: java.io.File[] listFiles()>: 2
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 2
<java.io.StringReader: void <init>(java.lang.String)>: 2
<java.io.File: boolean mkdirs()>: 2
<com.fasterxml.jackson.core.base.ParserBase: void close()>: 2
<android.net.sip.SipManager: boolean isVoipSupported(android.content.Context)>: 1
<java.io.Writer: void <init>()>: 1
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<com.fasterxml.jackson.core.util.ByteArrayBuilder: void <init>()>: 1
<java.io.FileInputStream: void <init>(java.io.File)>: 1
<java.io.File: boolean isDirectory()>: 1
<java.io.InputStream: int read(byte[])>: 1
<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>: 1
<java.io.File: long length()>: 1
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>: 1
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void close()>: 1
<java.io.Reader: void <init>()>: 1
<android.net.Uri: java.lang.String decode(java.lang.String)>: 1
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 1
<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String,java.lang.Throwable)>: 1
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 1
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 1
<java.io.Reader: void close()>: 1
<java.io.InputStream: void <init>()>: 1
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 1
<java.nio.charset.Charset: boolean equals(java.lang.Object)>: 1
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void close()>: 1
<android.net.sip.SipManager: android.net.sip.SipManager newInstance(android.content.Context)>: 1
<com.c.a.a.a.a.a.a: void close()>: 1
<java.io.ByteArrayOutputStream: void <init>(int)>: 1
<android.net.sip.SipManager: boolean isApiSupported(android.content.Context)>: 1
<java.io.BufferedReader: java.lang.String readLine()>: 1
<com.fasterxml.jackson.core.io.BaseReader: void close()>: 1
<java.net.DatagramSocket: void <init>(int)>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<java.io.File: boolean createNewFile()>: 1
<java.io.BufferedReader: void close()>: 1
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String)>: 1
<java.io.FileInputStream: void <init>(java.lang.String)>: 1
<com.fasterxml.jackson.databind.util.TokenBuffer: void close()>: 1
<android.graphics.Bitmap: boolean isRecycled()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>: 1
<java.io.Writer: void flush()>: 1
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 1
<java.io.EOFException: void <init>()>: 1
<org.codehaus.jackson.JsonParser: void close()>: 1
<android.database.Cursor: void close()>: 1
<java.io.BufferedReader: void <init>(java.io.Reader)>: 1
<com.fasterxml.jackson.core.JsonParser: void close()>: 1
<java.io.Reader: int read(char[],int,int)>: 1
----------------StartWorker----------------
<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String)>: 592
<java.io.Writer: void write(char[],int,int)>: 341
<java.io.OutputStream: void write(byte[],int,int)>: 309
<java.io.PrintStream: void println(java.lang.String)>: 308
<java.io.IOException: void <init>(java.lang.String)>: 239
<java.io.Writer: void write(java.lang.String)>: 130
<org.codehaus.jackson.JsonGenerator: void close()>: 128
<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String,java.lang.Throwable)>: 124
<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String,java.lang.Throwable)>: 100
<java.io.Closeable: void close()>: 98
<java.io.OutputStream: void close()>: 93
<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String)>: 93
<java.io.File: void <init>(java.lang.String)>: 85
<java.net.URL: java.lang.String toString()>: 79
<java.io.PrintStream: void println(java.lang.Object)>: 75
<java.io.InputStream: void close()>: 75
<java.io.OutputStream: void <init>()>: 69
<org.codehaus.jackson.JsonGenerationException: void <init>(java.lang.String)>: 66
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 64
<java.net.InetAddress: java.lang.String toString()>: 64
<java.io.Writer: void <init>()>: 64
<java.io.Writer: void close()>: 64
<java.io.ByteArrayOutputStream: void <init>()>: 64
<java.io.OutputStream: void flush()>: 63
<com.fasterxml.jackson.core.io.UTF8Writer: void write(int)>: 62
<android.net.sip.SipProfile: java.lang.String getUriString()>: 62
<com.fasterxml.jackson.core.base.GeneratorBase: void close()>: 62
<com.fasterxml.jackson.core.JsonGenerator: void close()>: 62
<com.fasterxml.jackson.core.JsonGenerationException: void <init>(java.lang.String)>: 62
<java.io.File: boolean exists()>: 48
<java.io.PrintWriter: void println(java.lang.Object)>: 44
<java.net.URL: java.net.URLConnection openConnection()>: 42
<java.net.URL: void <init>(java.lang.String)>: 42
<java.net.URLConnection: java.io.InputStream getInputStream()>: 42
<java.io.File: long lastModified()>: 41
<java.net.URL: java.lang.String getFile()>: 41
<java.net.URI: java.net.URL toURL()>: 41
<java.net.URLDecoder: java.lang.String decode(java.lang.String)>: 41
<java.io.File: java.net.URI toURI()>: 41
<java.net.URL: java.lang.String getProtocol()>: 41
<java.io.File: boolean isFile()>: 41
<java.net.URLConnection: void setUseCaches(boolean)>: 41
<org.codehaus.jackson.JsonProcessingException: void <init>(java.lang.String,java.lang.Throwable)>: 37
<org.codehaus.jackson.JsonProcessingException: void <init>(java.lang.String)>: 37
<org.codehaus.jackson.impl.JsonParserBase: void close()>: 36
<java.io.Reader: void close()>: 36
<java.io.EOFException: void <init>(java.lang.String)>: 36
<org.codehaus.jackson.impl.ReaderBasedParser: void close()>: 36
<org.codehaus.jackson.util.ByteArrayBuilder: void <init>()>: 36
<java.io.Reader: int read(char[],int,int)>: 36
<java.io.File: void <init>(java.io.File,java.lang.String)>: 35
<org.codehaus.jackson.JsonParser: void close()>: 35
<java.io.StringReader: void <init>(java.lang.String)>: 35
<java.io.FileOutputStream: void <init>(java.io.File)>: 34
<java.io.DataOutputStream: void writeInt(int)>: 33
<java.io.DataOutputStream: void <init>(java.io.OutputStream)>: 33
<java.io.Writer: void flush()>: 33
<org.codehaus.jackson.impl.JsonGeneratorBase: void close()>: 33
<java.io.FilterOutputStream: void close()>: 33
<java.io.ByteArrayOutputStream: void close()>: 33
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 32
<java.io.FileReader: void <init>(java.io.File)>: 31
<com.fasterxml.jackson.core.io.UTF8Writer: void write(java.lang.String,int,int)>: 31
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>: 31
<java.io.BufferedReader: java.lang.String readLine()>: 31
<android.net.sip.SipManager: void open(android.net.sip.SipProfile)>: 31
<java.io.File: void deleteOnExit()>: 31
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String,java.lang.Throwable)>: 31
<java.io.InputStream: int read(byte[])>: 31
<android.net.NetworkInfo: int getType()>: 31
<java.io.OutputStream: void write(byte[])>: 31
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 31
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 31
<java.io.BufferedReader: void close()>: 31
<android.net.NetworkInfo: boolean isAvailable()>: 31
<java.io.File: java.lang.String toString()>: 31
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>: 31
<java.io.BufferedReader: void <init>(java.io.Reader)>: 31
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String)>: 30
<java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>: 29
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 29
<java.nio.charset.UnsupportedCharsetException: void <init>(java.lang.String)>: 29
<java.io.DataInputStream: int readInt()>: 8
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>: 4
<java.io.ByteArrayInputStream: void <init>(byte[])>: 4
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 4
<java.io.File: boolean delete()>: 4
<java.io.File: java.lang.String getAbsolutePath()>: 4
<android.graphics.Bitmap: void recycle()>: 3
<java.io.File: long length()>: 3
<java.io.DataInputStream: void readFully(byte[])>: 3
<java.io.File: boolean renameTo(java.io.File)>: 3
<java.io.DataInputStream: long readLong()>: 3
<android.graphics.Bitmap: int getHeight()>: 3
<java.io.InputStream: int read(byte[],int,int)>: 3
<java.io.DataInputStream: short readShort()>: 3
<com.c.a.a.a.a.a.a$2: void <init>()>: 2
<java.io.InputStream: void reset()>: 2
<java.net.HttpURLConnection: int getResponseCode()>: 2
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>: 2
<java.io.DataInputStream: void <init>(java.io.InputStream)>: 2
<android.graphics.BitmapFactory$Options: void <init>()>: 2
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 2
<java.io.DataOutputStream: void writeShort(int)>: 2
<java.io.DataInputStream: byte readByte()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 2
<android.graphics.Bitmap: int getWidth()>: 2
<java.io.InputStream: boolean markSupported()>: 2
<java.io.File: boolean mkdirs()>: 2
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 1
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<java.io.IOException: void <init>()>: 1
<java.io.FileInputStream: void <init>(java.io.File)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 1
<java.io.ByteArrayInputStream: void close()>: 1
<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>: 1
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 1
<java.io.InputStream: void <init>()>: 1
<java.net.DatagramPacket: int getLength()>: 1
<java.net.DatagramPacket: void <init>(byte[],int)>: 1
<java.net.DatagramPacket: java.net.InetAddress getAddress()>: 1
<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>: 1
<java.io.FilterInputStream: void close()>: 1
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 1
<java.io.DataOutputStream: void write(byte[],int,int)>: 1
<java.io.StringWriter: void <init>()>: 1
<java.io.PrintWriter: void <init>(java.io.Writer)>: 1
<android.graphics.Bitmap: int getRowBytes()>: 1
<java.io.FilterInputStream: void <init>(java.io.InputStream)>: 1
<com.c.a.b.a.d: void <init>(java.io.InputStream)>: 1
<com.c.a.a.a.a.a.e: void close()>: 1
<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>: 1
<java.io.InputStream: int available()>: 1
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 1
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>: 1
<java.net.DatagramPacket: byte[] getData()>: 1
<java.net.DatagramPacket: void setLength(int)>: 1
<java.net.URLConnection: void setReadTimeout(int)>: 1
<java.io.StringWriter: java.lang.String toString()>: 1
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 1
<java.net.DatagramSocket: void receive(java.net.DatagramPacket)>: 1
<java.net.DatagramSocket: void send(java.net.DatagramPacket)>: 1
<java.net.DatagramPacket: void <init>(byte[],int,java.net.InetAddress,int)>: 1
<java.net.URLConnection: void setConnectTimeout(int)>: 1
<java.io.DataOutputStream: void flush()>: 1
<java.io.FileInputStream: void <init>(java.lang.String)>: 1
<android.graphics.Bitmap: boolean isRecycled()>: 1
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 1
<android.database.Cursor: void close()>: 1
<java.net.URLConnection: int getContentLength()>: 1
