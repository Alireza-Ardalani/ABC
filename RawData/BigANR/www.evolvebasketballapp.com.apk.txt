Duration => 488
UI Thread => 1044
Worker Thread => 884

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 219
<java.lang.Object: boolean equals(java.lang.Object)>: 46
<java.io.File: void <init>(java.lang.String)>: 37
<java.io.BufferedReader: java.lang.String readLine()>: 28
<java.io.BufferedReader: void <init>(java.io.Reader)>: 28
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 26
<java.io.File: boolean exists()>: 26
<java.io.PrintStream: void println(java.lang.String)>: 26
<java.io.Writer: void write(int)>: 24
<java.io.InputStream: void close()>: 22
<java.io.File: void <init>(java.io.File,java.lang.String)>: 22
<java.io.File: java.lang.String getAbsolutePath()>: 22
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 21
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 20
<java.io.FileInputStream: void <init>(java.io.File)>: 18
<java.io.File: long length()>: 17
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 16
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 15
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 15
<java.io.Writer: void write(java.lang.String)>: 14
<java.io.BufferedReader: void close()>: 14
<java.lang.Object: int hashCode()>: 13
<java.io.IOException: void <init>(java.lang.String)>: 12
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 12
<android.database.Cursor: void close()>: 12
<java.io.File: boolean delete()>: 11
<com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 10
<java.net.URL: void <init>(java.lang.String)>: 9
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 9
<java.net.URI: void <init>(java.lang.String)>: 8
<java.net.URI: java.lang.String getHost()>: 8
<java.io.FileInputStream: void close()>: 8
<java.io.PrintStream: void <init>(java.io.File)>: 8
<java.io.StringWriter: java.lang.String toString()>: 8
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 8
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>: 8
<java.io.FileNotFoundException: void <init>(java.lang.String)>: 8
<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>: 8
<java.io.File: boolean mkdirs()>: 8
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>: 6
<java.io.File: boolean isDirectory()>: 6
<java.net.URLConnection: void setDoOutput(boolean)>: 6
<java.net.URI: java.net.URI create(java.lang.String)>: 6
<java.net.URL: java.io.InputStream openStream()>: 6
<java.net.URI: java.lang.String getSchemeSpecificPart()>: 6
<java.net.URI: java.lang.String getScheme()>: 6
<java.net.URI: java.net.URL toURL()>: 6
<java.lang.Enum: boolean equals(java.lang.Object)>: 6
<java.net.MalformedURLException: void <init>(java.lang.String)>: 6
<android.database.sqlite.SQLiteClosable: void close()>: 6
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[],android.os.CancellationSignal)>: 5
<android.database.sqlite.SQLiteStatement: long simpleQueryForLong()>: 4
<java.io.IOException: void <init>()>: 4
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 4
<com.google.gson.stream.JsonWriter: void close()>: 4
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>: 4
<java.io.File: boolean mkdir()>: 4
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 4
<java.io.StringWriter: void <init>()>: 4
<java.io.StringWriter: void <init>(int)>: 4
<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>: 4
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 4
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 4
<java.io.Writer: void close()>: 4
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 4
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 4
<java.net.URL: java.net.URLConnection openConnection()>: 3
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 3
<java.lang.Integer: boolean equals(java.lang.Object)>: 3
<java.net.URLConnection: void setDoInput(boolean)>: 3
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>: 3
<android.database.sqlite.SQLiteStatement: void execute()>: 2
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 2
<java.nio.charset.Charset: boolean equals(java.lang.Object)>: 2
<java.io.ByteArrayOutputStream: void <init>(int)>: 2
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 2
<java.io.File: boolean createNewFile()>: 2
<android.database.sqlite.SQLiteProgram: void bindString(int,java.lang.String)>: 2
<android.database.sqlite.SQLiteProgram: void bindBlob(int,byte[])>: 2
<android.database.sqlite.SQLiteProgram: void bindNull(int)>: 2
<android.graphics.BitmapFactory$Options: void <init>()>: 2
<java.io.File: boolean renameTo(java.io.File)>: 2
<android.net.Uri$Builder: android.net.Uri build()>: 2
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: void close()>: 2
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 2
<android.database.sqlite.SQLiteProgram: void bindDouble(int,double)>: 2
<java.io.InputStream: int read(byte[],int,int)>: 2
<java.io.FileOutputStream: void <init>(java.io.File)>: 2
<java.io.File: java.io.File[] listFiles()>: 2
<android.database.sqlite.SQLiteProgram: void bindLong(int,long)>: 2
<android.graphics.Bitmap: boolean isRecycled()>: 2
<android.database.sqlite.SQLiteStatement: long executeInsert()>: 2
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 2
<java.io.EOFException: void <init>()>: 2
<java.io.Closeable: void close()>: 1
<java.io.File: java.lang.String getName()>: 1
<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 1
<java.io.File: boolean equals(java.lang.Object)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 1
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 202
<java.lang.Object: boolean equals(java.lang.Object)>: 153
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 28
<java.net.URL: void <init>(java.lang.String)>: 23
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 23
<java.net.URL: java.lang.String toString()>: 22
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 18
<java.io.BufferedReader: java.lang.String readLine()>: 18
<java.io.BufferedReader: void <init>(java.io.Reader)>: 18
<java.io.InputStream: void close()>: 14
<com.otaliastudios.cameraview.Size: boolean equals(java.lang.Object)>: 14
<java.net.URLConnection: void setDoOutput(boolean)>: 14
<java.lang.Object: int hashCode()>: 14
<java.io.File: boolean exists()>: 13
<java.io.File: java.lang.String getAbsolutePath()>: 10
<java.net.URL: java.net.URLConnection openConnection()>: 9
<java.net.URI: java.net.URI create(java.lang.String)>: 9
<java.net.URL: java.io.InputStream openStream()>: 9
<java.net.MalformedURLException: void <init>(java.lang.String)>: 9
<java.io.BufferedReader: void close()>: 9
<java.net.URI: java.lang.String getSchemeSpecificPart()>: 9
<java.net.URI: java.lang.String getScheme()>: 9
<java.net.URI: java.net.URL toURL()>: 9
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>: 8
<java.io.File: void <init>(java.io.File,java.lang.String)>: 8
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 8
<java.io.File: void <init>(java.lang.String)>: 8
<java.io.File: boolean renameTo(java.io.File)>: 7
<java.io.File: long length()>: 7
<java.net.URLConnection: void setDoInput(boolean)>: 7
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 7
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>: 7
<android.graphics.BitmapFactory$Options: void <init>()>: 6
<android.graphics.Bitmap: void recycle()>: 6
<android.graphics.Bitmap: int getHeight()>: 6
<java.io.InputStream: int read(byte[],int,int)>: 6
<java.io.FileOutputStream: void <init>(java.io.File)>: 6
<java.io.File: boolean delete()>: 6
<java.io.Closeable: void close()>: 5
<java.io.Writer: void write(java.lang.String)>: 5
<java.io.Writer: void flush()>: 5
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 4
<java.io.InputStream: void reset()>: 4
<java.io.ByteArrayInputStream: void <init>(byte[])>: 4
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 4
<java.net.HttpURLConnection: int getResponseCode()>: 4
<android.graphics.Bitmap: int getWidth()>: 4
<java.io.ByteArrayOutputStream: void <init>()>: 4
<java.io.IOException: void <init>(java.lang.String)>: 4
<java.io.InputStream: boolean markSupported()>: 4
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>: 4
<java.io.File: boolean mkdirs()>: 4
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 3
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 3
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$2: void <init>()>: 3
<java.io.OutputStream: void <init>()>: 3
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 2
<java.io.FileInputStream: void <init>(java.io.File)>: 2
<java.io.File: boolean isDirectory()>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 2
<java.io.OutputStream: void write(byte[],int,int)>: 2
<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>: 2
<java.net.URLConnection: void setReadTimeout(int)>: 2
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot: void close()>: 2
<java.io.File: java.lang.String getName()>: 2
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 2
<java.io.InputStream: void <init>()>: 2
<java.io.File: java.lang.String getPath()>: 2
<java.io.OutputStream: void flush()>: 2
<java.net.URLConnection: java.io.InputStream getInputStream()>: 2
<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>: 2
<com.nostra13.universalimageloader.core.assist.FlushedInputStream: void <init>(java.io.InputStream)>: 2
<java.net.URLConnection: void setConnectTimeout(int)>: 2
<java.lang.String: int hashCode()>: 2
<java.io.FileInputStream: void <init>(java.lang.String)>: 2
<java.io.File: java.io.File[] listFiles()>: 2
<android.graphics.Bitmap: boolean isRecycled()>: 2
<android.graphics.Bitmap: int getRowBytes()>: 2
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 2
<java.io.FilterInputStream: void <init>(java.io.InputStream)>: 2
<java.net.URLConnection: int getContentLength()>: 2
<java.io.InputStream: int available()>: 2
<com.quickblox.core.exception.QBResponseException: void <init>(java.lang.String)>: 1
<java.io.IOException: void <init>()>: 1
