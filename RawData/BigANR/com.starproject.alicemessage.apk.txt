Duration => 145
UI Thread => 691
Worker Thread => 427

----------------StartUI----------------
<de.greenrobot.dao.DaoException: void <init>(java.lang.String)>: 114
<android.database.CursorWindow: int getNumRows()>: 44
<java.lang.String: boolean equals(java.lang.Object)>: 44
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 34
<android.database.Cursor: void close()>: 34
<android.database.SQLException: void <init>(java.lang.String)>: 32
<android.database.sqlite.SQLiteProgram: void bindLong(int,long)>: 30
<android.database.sqlite.SQLiteProgram: void bindString(int,java.lang.String)>: 30
<java.lang.Object: boolean equals(java.lang.Object)>: 25
<android.database.sqlite.SQLiteProgram: void clearBindings()>: 19
<android.database.CursorWindow: long getLong(int,int)>: 14
<android.database.CursorWindow: java.lang.String getString(int,int)>: 14
<android.database.CursorWindow: int getInt(int,int)>: 14
<android.database.CursorWindow: short getShort(int,int)>: 14
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 12
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 12
<android.database.sqlite.SQLiteStatement: void execute()>: 12
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 12
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 12
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 12
<android.database.CursorWindow: int getStartPosition()>: 11
<android.database.sqlite.SQLiteDatabase: boolean isOpen()>: 10
<android.database.sqlite.SQLiteClosable: void close()>: 10
<java.io.BufferedReader: void mark(int)>: 8
<java.io.BufferedReader: int read()>: 8
<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByCurrentThread()>: 8
<java.io.BufferedReader: void <init>(java.io.Reader)>: 7
<java.io.InputStream: void close()>: 6
<java.io.BufferedReader: void reset()>: 4
<android.graphics.Bitmap: void recycle()>: 4
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 4
<java.io.File: void <init>(java.lang.String)>: 4
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 3
<java.io.OutputStream: void write(byte[],int,int)>: 3
<java.io.File: boolean exists()>: 3
<android.graphics.Bitmap: int getHeight()>: 3
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 3
<android.graphics.Bitmap: int getWidth()>: 3
<java.io.IOException: void <init>(java.lang.String)>: 3
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 3
<android.graphics.BitmapFactory$Options: void <init>()>: 2
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 2
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 2
<java.lang.Enum: boolean equals(java.lang.Object)>: 2
<java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>: 2
<java.io.ByteArrayOutputStream: void <init>()>: 2
<java.nio.charset.UnsupportedCharsetException: void <init>(java.lang.String)>: 2
<java.io.BufferedReader: int read(char[],int,int)>: 2
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 2
<java.io.StringReader: void <init>(java.lang.String)>: 2
<java.nio.charset.CoderResult: void throwException()>: 1
<java.net.URI: void <init>(java.lang.String)>: 1
<java.io.InputStream: int read(byte[])>: 1
<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>: 1
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 1
<java.io.InputStream: int read()>: 1
<java.io.File: java.lang.String getName()>: 1
<java.io.StringWriter: java.lang.String toString()>: 1
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 1
<java.net.URI: java.net.URI create(java.lang.String)>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 1
<java.net.URI: java.lang.String getHost()>: 1
<java.io.BufferedInputStream: void close()>: 1
<java.io.FileInputStream: void close()>: 1
<java.io.File: void <init>(java.io.File,java.lang.String)>: 1
<java.io.BufferedReader: java.lang.String readLine()>: 1
<java.io.ByteArrayInputStream: void <init>(byte[])>: 1
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 1
<java.io.BufferedReader: void close()>: 1
<java.nio.charset.CoderResult: boolean isError()>: 1
<java.net.URI: java.lang.String getPath()>: 1
<java.util.UUID: int hashCode()>: 1
<java.io.StringWriter: void <init>()>: 1
<java.net.URI: int getPort()>: 1
<java.io.File: boolean delete()>: 1
<java.io.PrintWriter: void <init>(java.io.Writer)>: 1
<android.database.sqlite.SQLiteStatement: long executeInsert()>: 1
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 1
<java.net.URI: java.lang.String getQuery()>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 116
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 30
<java.io.PrintStream: void println(java.lang.String)>: 21
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 17
<java.io.BufferedReader: void mark(int)>: 12
<java.io.BufferedReader: int read()>: 12
<java.io.BufferedReader: void <init>(java.io.Reader)>: 12
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 9
<java.io.File: boolean exists()>: 8
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 8
<java.io.File: void <init>(java.lang.String)>: 8
<java.io.BufferedReader: void reset()>: 6
<java.net.URL: void <init>(java.lang.String)>: 6
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 6
<java.net.URI: java.lang.String getHost()>: 6
<java.io.OutputStream: void flush()>: 6
<java.net.URI: java.lang.String getScheme()>: 6
<java.io.InputStream: void close()>: 4
<java.lang.Object: boolean equals(java.lang.Object)>: 4
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>: 3
<android.graphics.BitmapFactory$Options: void <init>()>: 3
<java.io.IOException: void <init>()>: 3
<java.net.Socket: java.net.SocketAddress getLocalSocketAddress()>: 3
<java.net.Socket: void <init>(java.net.Proxy)>: 3
<java.net.Socket: void connect(java.net.SocketAddress,int)>: 3
<java.io.InputStream: int read(byte[])>: 3
<java.net.URL: java.lang.String toString()>: 3
<java.nio.CharBuffer: java.lang.String toString()>: 3
<java.net.URLConnection: void setReadTimeout(int)>: 3
<java.io.OutputStream: void write(byte[],int,int)>: 3
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 3
<java.net.URL: java.net.URLConnection openConnection()>: 3
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 3
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 3
<java.lang.Enum: boolean equals(java.lang.Object)>: 3
<java.net.Socket: boolean isClosed()>: 3
<java.net.URLConnection: java.io.InputStream getInputStream()>: 3
<javax.net.ssl.SSLException: void <init>(java.lang.Throwable)>: 3
<java.io.BufferedInputStream: void close()>: 3
<java.net.InetSocketAddress: int getPort()>: 3
<java.io.BufferedReader: java.lang.String readLine()>: 3
<java.nio.channels.Channel: void close()>: 3
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>: 3
<java.io.BufferedReader: void close()>: 3
<java.net.URLConnection: void setConnectTimeout(int)>: 3
<java.net.HttpURLConnection: int getResponseCode()>: 3
<java.net.URI: java.lang.String getPath()>: 3
<java.net.URL: java.lang.Object getContent()>: 3
<java.net.Socket: java.io.OutputStream getOutputStream()>: 3
<java.net.Socket: java.io.InputStream getInputStream()>: 3
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 3
<java.net.URI: int getPort()>: 3
<java.net.Socket: void close()>: 3
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 3
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 3
<java.io.BufferedReader: int read(char[],int,int)>: 3
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 3
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>: 3
<java.net.URI: java.lang.String getQuery()>: 3
<java.io.FileOutputStream: void close()>: 3
<java.net.Socket: boolean isBound()>: 3
<java.io.StringReader: void <init>(java.lang.String)>: 3
<java.net.URI: java.net.URI create(java.lang.String)>: 1
