Duration => 807
UI Thread => 1228
Worker Thread => 459

----------------StartUI----------------
<android.database.sqlite.SQLiteClosable: void close()>: 159
<com.peterhohsy.c.r: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 157
<android.database.sqlite.SQLiteOpenHelper: void close()>: 156
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 106
<android.database.Cursor: void close()>: 102
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 100
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 51
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 29
<java.io.File: void <init>(java.lang.String)>: 28
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>: 21
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 21
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 21
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 21
<android.database.sqlite.SQLiteProgram: void clearBindings()>: 21
<android.database.sqlite.SQLiteProgram: void bindLong(int,long)>: 21
<android.database.sqlite.SQLiteProgram: void bindString(int,java.lang.String)>: 21
<android.database.sqlite.SQLiteStatement: long executeInsert()>: 13
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 12
<android.database.sqlite.SQLiteProgram: void bindDouble(int,double)>: 12
<java.io.File: boolean exists()>: 11
<java.io.File: java.lang.String getAbsolutePath()>: 10
<java.io.File: boolean mkdirs()>: 10
<java.io.FileOutputStream: void <init>(java.io.File)>: 9
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 8
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 7
<android.database.sqlite.SQLiteStatement: int executeUpdateDelete()>: 7
<java.io.OutputStreamWriter: void close()>: 6
<java.io.File: boolean isDirectory()>: 6
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>: 6
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 6
<java.io.File: boolean createNewFile()>: 6
<java.io.FileOutputStream: void write(byte[])>: 6
<java.io.FileOutputStream: void close()>: 6
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 4
<java.io.File: boolean delete()>: 4
<java.io.File: java.lang.String toString()>: 4
<java.io.OutputStream: void close()>: 3
<java.io.FileInputStream: void <init>(java.io.File)>: 3
<java.io.InputStream: int read(byte[])>: 3
<java.io.InputStream: void close()>: 3
<java.io.OutputStream: void write(byte[],int,int)>: 3
<java.io.File: long lastModified()>: 2
<java.io.File: long length()>: 2
<java.io.File: java.lang.String getName()>: 2
<java.io.File: void <init>(java.io.File,java.lang.String)>: 2
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>: 2
<java.io.File: java.io.File[] listFiles()>: 2
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 2
<java.io.File: boolean canRead()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 2
<android.database.sqlite.SQLiteStatement: void execute()>: 1
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 1
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 1
<android.net.NetworkInfo: boolean isConnected()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 1
----------------StartWorker----------------
<android.database.Cursor: void close()>: 55
<android.database.sqlite.SQLiteClosable: void close()>: 55
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 54
<com.peterhohsy.c.r: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 49
<android.database.sqlite.SQLiteOpenHelper: void close()>: 45
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 35
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 34
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 15
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 7
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>: 7
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 7
<android.database.sqlite.SQLiteProgram: void clearBindings()>: 7
<android.database.sqlite.SQLiteProgram: void bindString(int,java.lang.String)>: 7
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 7
<android.database.sqlite.SQLiteProgram: void bindLong(int,long)>: 6
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 5
<java.io.FileOutputStream: void <init>(java.io.File)>: 5
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 5
<android.database.sqlite.SQLiteStatement: void execute()>: 4
<java.io.File: void <init>(java.lang.String)>: 4
<java.io.File: boolean createNewFile()>: 3
<java.io.File: boolean delete()>: 3
<android.database.sqlite.SQLiteStatement: long executeInsert()>: 3
<java.io.FileOutputStream: void close()>: 3
<android.database.sqlite.SQLiteProgram: void bindDouble(int,double)>: 3
<java.io.OutputStream: void close()>: 2
<java.io.FileInputStream: void <init>(java.io.File)>: 2
<java.io.OutputStreamWriter: void close()>: 2
<java.io.InputStream: int read(byte[])>: 2
<java.io.InputStream: void close()>: 2
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>: 2
<java.io.OutputStream: void write(byte[],int,int)>: 2
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 2
<java.io.FileOutputStream: void write(byte[])>: 2
<java.io.FilterOutputStream: void close()>: 1
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 1
<android.os.ParcelFileDescriptor: void close()>: 1
<java.io.BufferedOutputStream: void write(byte[],int,int)>: 1
<java.io.File: java.lang.String getAbsolutePath()>: 1
<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>: 1
<java.io.File: java.lang.String toString()>: 1
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 1
<java.io.FilterInputStream: int read(byte[])>: 1
<java.io.BufferedInputStream: void close()>: 1
<java.io.FileInputStream: void close()>: 1
<java.io.File: boolean mkdirs()>: 1
<java.io.File: boolean exists()>: 1
