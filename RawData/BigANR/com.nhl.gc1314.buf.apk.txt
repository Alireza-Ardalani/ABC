Duration => 8362
UI Thread => 628
Worker Thread => 23819

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 218
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 106
<android.net.Uri: java.lang.String decode(java.lang.String)>: 86
<java.lang.Object: boolean equals(java.lang.Object)>: 17
<java.io.ByteArrayInputStream: void <init>(byte[])>: 12
<android.graphics.Bitmap: int getWidth()>: 12
<java.lang.Object: int hashCode()>: 12
<android.graphics.Bitmap: int getHeight()>: 10
<android.graphics.BitmapFactory$Options: void <init>()>: 8
<java.lang.Enum: boolean equals(java.lang.Object)>: 8
<java.lang.String: int hashCode()>: 7
<java.io.StringWriter: java.lang.String toString()>: 6
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 6
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 6
<java.io.StringWriter: void <init>()>: 6
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>: 6
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 5
<java.io.ObjectInputStream: void close()>: 5
<java.io.FileInputStream: void close()>: 5
<java.io.ObjectInputStream: java.lang.Object readObject()>: 5
<java.io.ByteArrayOutputStream: void <init>()>: 5
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 5
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 4
<java.io.File: boolean delete()>: 4
<java.io.OutputStream: void close()>: 3
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>: 3
<java.io.OutputStream: void write(byte[])>: 3
<java.io.FileOutputStream: void <init>(java.io.File)>: 3
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>: 3
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 3
<java.io.ObjectOutputStream: void close()>: 3
<java.io.PrintStream: void println(java.lang.Object)>: 3
<java.io.FileOutputStream: void close()>: 3
<java.io.PrintStream: void println(java.lang.String)>: 3
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 2
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 2
<java.io.File: java.lang.String getPath()>: 2
<java.io.File: boolean exists()>: 2
<java.io.BufferedReader: java.lang.String readLine()>: 2
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 2
<java.io.BufferedReader: void <init>(java.io.Reader)>: 2
<java.io.File: void <init>(java.lang.String)>: 2
<android.support.v4.app.Fragment: int hashCode()>: 1
<android.graphics.Bitmap: void recycle()>: 1
<java.net.URL: java.lang.String getHost()>: 1
<android.net.Uri$Builder: android.net.Uri build()>: 1
<java.io.InputStream: int read(byte[])>: 1
<java.net.URL: void <init>(java.lang.String)>: 1
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>: 1
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 1
<com.yinzcam.common.android.util.Pair: boolean equals(java.lang.Object)>: 1
<java.io.BufferedReader: void close()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 1
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 1
<android.app.Fragment: int hashCode()>: 1
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 10676
<java.lang.String: int hashCode()>: 1307
<java.io.StringWriter: void <init>()>: 563
<java.io.StringWriter: java.lang.String toString()>: 563
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>: 456
<android.graphics.BitmapFactory$Options: void <init>()>: 456
<java.io.File: void <init>(java.lang.String)>: 383
<android.graphics.Bitmap: int getHeight()>: 381
<android.graphics.Bitmap: int getWidth()>: 381
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 378
<java.io.ByteArrayOutputStream: void <init>()>: 378
<java.io.OutputStream: void flush()>: 318
<java.io.OutputStream: void write(byte[])>: 318
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 313
<java.io.File: void <init>(java.io.File,java.lang.String)>: 306
<java.io.FileInputStream: void <init>(java.io.File)>: 305
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 303
<java.lang.Object: boolean equals(java.lang.Object)>: 300
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 235
<java.io.File: boolean mkdirs()>: 231
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 229
<java.io.FileOutputStream: void <init>(java.io.File)>: 229
<java.io.OutputStream: void close()>: 228
<java.io.InputStream: int read(byte[],int,int)>: 228
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 228
<java.lang.Enum: boolean equals(java.lang.Object)>: 223
<java.io.StringWriter: void write(java.lang.String)>: 168
<java.io.File: java.lang.String getAbsolutePath()>: 154
<android.net.wifi.WifiManager: boolean isWifiEnabled()>: 152
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 150
<java.io.PrintStream: void println(java.lang.String)>: 149
<java.io.PrintStream: void println(java.lang.Object)>: 107
<java.lang.Object: int hashCode()>: 92
<java.io.InputStream: int read(byte[])>: 92
<java.net.URL: java.net.URLConnection openConnection()>: 91
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>: 91
<java.net.HttpURLConnection: int getResponseCode()>: 91
<java.net.URL: void <init>(java.lang.String)>: 91
<java.net.URLConnection: java.io.InputStream getInputStream()>: 91
<java.net.URLConnection: void setDoOutput(boolean)>: 90
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 90
<java.net.HttpURLConnection: java.lang.String getRequestMethod()>: 90
<java.net.URLConnection: java.net.URL getURL()>: 90
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 90
<java.net.URL: java.lang.String toString()>: 90
<java.net.HttpURLConnection: long getHeaderFieldDate(java.lang.String,long)>: 90
<java.net.URLConnection: void setReadTimeout(int)>: 90
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 90
<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>: 90
<java.net.URLConnection: void setConnectTimeout(int)>: 90
<java.net.URLConnection: void setDoInput(boolean)>: 90
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 90
<java.io.ByteArrayInputStream: void <init>(byte[])>: 85
<java.io.StringWriter: void flush()>: 84
<java.io.File: boolean exists()>: 80
<java.io.File: java.lang.String getPath()>: 79
<java.io.InputStream: void close()>: 77
<android.graphics.Bitmap: void recycle()>: 76
<java.io.File: boolean isDirectory()>: 76
<android.net.wifi.WifiManager$WifiLock: void acquire()>: 76
<java.io.IOException: void <init>(java.lang.String)>: 76
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 76
<android.net.NetworkInfo: boolean isAvailable()>: 76
<android.net.NetworkInfo: boolean isConnected()>: 76
<android.net.wifi.WifiManager$WifiLock: void release()>: 76
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>: 75
<java.io.File: boolean delete()>: 74
<java.io.ObjectInputStream: void close()>: 3
<java.io.FileInputStream: void close()>: 3
<java.io.ObjectInputStream: java.lang.Object readObject()>: 3
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 3
<java.io.RandomAccessFile: void close()>: 3
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 2
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 2
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 2
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 2
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>: 2
<java.io.RandomAccessFile: java.lang.String readLine()>: 2
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 2
<android.database.Cursor: void close()>: 2
<android.net.wifi.WifiManager: android.net.wifi.WifiManager$WifiLock createWifiLock(int,java.lang.String)>: 2
<android.database.sqlite.SQLiteClosable: void close()>: 2
<java.nio.channels.spi.AbstractInterruptibleChannel: void close()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 1
<java.io.OutputStream: void write(byte[],int,int)>: 1
<java.io.FileOutputStream: void <init>(java.lang.String)>: 1
<java.io.File: java.io.File getParentFile()>: 1
<java.io.FileOutputStream: void close()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 1
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>: 1
<java.io.FileOutputStream: void write(byte[],int,int)>: 1
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>: 1
<android.graphics.Bitmap: void copyPixelsFromBuffer(java.nio.Buffer)>: 1
<android.graphics.Bitmap: void copyPixelsToBuffer(java.nio.Buffer)>: 1
<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>: 1
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>: 1
<java.net.URLConnection: int getContentLength()>: 1
