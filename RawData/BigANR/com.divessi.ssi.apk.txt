Duration => 23
UI Thread => 94
Worker Thread => 286

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 14
<java.io.File: boolean exists()>: 7
<java.io.InputStream: void close()>: 6
<java.io.File: void <init>(java.io.File,java.lang.String)>: 5
<java.io.PrintStream: void println(java.lang.String)>: 5
<java.io.File: java.lang.String getAbsolutePath()>: 4
<java.io.File: java.lang.String getPath()>: 3
<java.io.File: void <init>(java.lang.String)>: 3
<java.io.InputStream: int read(byte[])>: 2
<java.io.File: boolean mkdir()>: 2
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 2
<java.lang.Object: int hashCode()>: 2
<android.database.Cursor: void close()>: 2
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 1
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 1
<java.io.OutputStream: void close()>: 1
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>: 1
<java.io.File: boolean renameTo(java.io.File)>: 1
<java.io.Closeable: void close()>: 1
<java.io.FileInputStream: void <init>(java.io.File)>: 1
<java.net.ServerSocket: void close()>: 1
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 1
<java.io.File: boolean isDirectory()>: 1
<java.io.File: long length()>: 1
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 1
<android.net.wifi.WifiInfo: int getIpAddress()>: 1
<java.io.OutputStream: void write(byte[],int,int)>: 1
<android.net.NetworkRequest$Builder: void <init>()>: 1
<java.io.File: java.lang.String getName()>: 1
<java.lang.Object: boolean equals(java.lang.Object)>: 1
<java.net.ServerSocket: void <init>()>: 1
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 1
<android.net.NetworkRequest$Builder: android.net.NetworkRequest build()>: 1
<android.net.ConnectivityManager$NetworkCallback: void <init>()>: 1
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 1
<java.net.ServerSocket: void setReuseAddress(boolean)>: 1
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 1
<java.io.ByteArrayInputStream: void <init>(byte[])>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<java.io.File: boolean createNewFile()>: 1
<java.lang.String: int hashCode()>: 1
<java.net.Socket: void close()>: 1
<android.net.ConnectivityManager: void registerNetworkCallback(android.net.NetworkRequest,android.net.ConnectivityManager$NetworkCallback)>: 1
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 1
<java.io.File: java.io.File getParentFile()>: 1
<java.lang.Boolean: boolean equals(java.lang.Object)>: 1
<android.net.NetworkRequest$Builder: android.net.NetworkRequest$Builder addCapability(int)>: 1
<java.io.InputStream: int available()>: 1
<java.io.File: boolean mkdirs()>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 27
<java.io.PrintStream: void println(java.lang.String)>: 11
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>: 10
<android.database.sqlite.SQLiteProgram: void clearBindings()>: 9
<android.database.sqlite.SQLiteProgram: void bindString(int,java.lang.String)>: 7
<java.io.File: boolean exists()>: 6
<java.io.FileInputStream: void <init>(java.io.File)>: 5
<java.io.OutputStream: void write(byte[],int,int)>: 5
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 5
<java.io.ByteArrayInputStream: void <init>(byte[])>: 5
<java.io.File: void <init>(java.io.File,java.lang.String)>: 5
<java.io.File: java.lang.String getAbsolutePath()>: 5
<android.database.Cursor: void close()>: 5
<java.io.File: boolean mkdirs()>: 5
<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>: 4
<java.io.File: void <init>(java.lang.String)>: 4
<java.io.OutputStream: void write(byte[])>: 4
<android.database.sqlite.SQLiteStatement: long simpleQueryForLong()>: 3
<android.database.sqlite.SQLiteStatement: void execute()>: 3
<java.io.Closeable: void close()>: 3
<java.net.URL: java.net.URLConnection openConnection()>: 3
<java.io.OutputStream: void flush()>: 3
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 3
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 3
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 3
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 3
<java.net.URL: void <init>(java.lang.String)>: 3
<java.io.InputStream: void close()>: 3
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 3
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 3
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 3
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 3
<java.io.InputStream: int read(byte[],int,int)>: 3
<java.net.URLConnection: void setDoInput(boolean)>: 3
<android.database.sqlite.SQLiteProgram: void bindLong(int,long)>: 3
<android.database.sqlite.SQLiteStatement: long executeInsert()>: 3
<java.net.InetAddress: java.lang.String getHostName()>: 2
<java.io.File: long lastModified()>: 2
<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>: 2
<java.io.File: long length()>: 2
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>: 2
<java.net.ServerSocket: java.net.Socket accept()>: 2
<java.net.ServerSocket: boolean isClosed()>: 2
<java.net.InetAddress: java.lang.String getHostAddress()>: 2
<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>: 2
<java.lang.Object: boolean equals(java.lang.Object)>: 2
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 2
<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>: 2
<java.net.Socket: void setSoTimeout(int)>: 2
<java.io.FileInputStream: long skip(long)>: 2
<java.net.Socket: java.net.InetAddress getInetAddress()>: 2
<java.io.BufferedReader: java.lang.String readLine()>: 2
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>: 2
<java.lang.String: int hashCode()>: 2
<java.net.Socket: java.io.InputStream getInputStream()>: 2
<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>: 2
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 2
<java.io.BufferedInputStream: void mark(int)>: 2
<java.net.InetSocketAddress: void <init>(int)>: 2
<java.io.PrintWriter: void flush()>: 2
<java.io.PrintWriter: void print(java.lang.String)>: 2
<java.io.BufferedInputStream: int read(byte[],int,int)>: 2
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>: 2
<java.net.InetAddress: boolean isLoopbackAddress()>: 2
<java.net.InetAddress: boolean isAnyLocalAddress()>: 2
<java.net.ServerSocket: void close()>: 2
<fi.iki.elonen.NanoHTTPD$Response$ChunkedOutputStream: void <init>(java.io.OutputStream)>: 2
<java.io.File: java.lang.String getCanonicalPath()>: 2
<java.net.Socket: boolean isClosed()>: 2
<java.io.BufferedInputStream: long skip(long)>: 2
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 2
<java.net.SocketException: void <init>(java.lang.String)>: 2
<java.net.Socket: java.io.OutputStream getOutputStream()>: 2
<java.net.Socket: void close()>: 2
<java.io.File: boolean delete()>: 2
<java.net.ServerSocket: void bind(java.net.SocketAddress)>: 2
<java.io.EOFException: void <init>()>: 2
<java.io.BufferedReader: void <init>(java.io.Reader)>: 2
<java.io.BufferedInputStream: void reset()>: 2
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 1
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 1
<java.io.File: java.lang.String[] list()>: 1
<java.io.ObjectInputStream: void close()>: 1
<okio.Sink: void close()>: 1
<java.io.InterruptedIOException: void <init>(java.lang.String)>: 1
<java.io.File: boolean canRead()>: 1
<java.io.IOException: void <init>(java.lang.Throwable)>: 1
<java.io.OutputStream: void close()>: 1
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>: 1
<android.net.NetworkInfo: int getType()>: 1
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 1
<okio.Source: void close()>: 1
<java.io.ObjectInputStream: java.lang.Object readObject()>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<java.io.ObjectOutput: void writeObject(java.lang.Object)>: 1
<java.io.ByteArrayOutputStream: void <init>()>: 1
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 1
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>: 1
<java.io.ByteArrayOutputStream: void close()>: 1
