Duration => 121
UI Thread => 334
Worker Thread => 2166

----------------StartUI----------------
<android.database.Cursor: void close()>: 23
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 22
<android.net.NetworkInfo: boolean isConnected()>: 20
<java.io.File: boolean exists()>: 16
<java.io.File: void <init>(java.lang.String)>: 15
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 14
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 13
<java.io.File: boolean delete()>: 13
<java.io.IOException: void <init>(java.lang.String)>: 12
<java.io.File: void <init>(java.io.File,java.lang.String)>: 11
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>: 9
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 9
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 8
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 7
<java.io.File: java.lang.String getName()>: 7
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 7
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 7
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 7
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 7
<java.io.ByteArrayOutputStream: void <init>()>: 6
<java.io.File: java.lang.String getAbsolutePath()>: 6
<java.io.IOException: void <init>()>: 5
<java.io.File: boolean mkdirs()>: 5
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 4
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>: 4
<java.io.File: boolean mkdir()>: 4
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 4
<java.io.Writer: void close()>: 4
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 3
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 3
<java.io.FileInputStream: void <init>(java.io.File)>: 3
<java.io.File: java.lang.String getParent()>: 3
<java.io.FileOutputStream: void <init>(java.io.File)>: 3
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 3
<java.io.PrintStream: void println(java.lang.String)>: 3
<java.io.File: boolean renameTo(java.io.File)>: 2
<java.io.File: boolean isDirectory()>: 2
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>: 2
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: void close()>: 2
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 2
<java.nio.charset.Charset: boolean equals(java.lang.Object)>: 2
<java.io.ByteArrayOutputStream: void <init>(int)>: 2
<java.io.Writer: void write(java.lang.String)>: 2
<java.io.InputStream: int read(byte[],int,int)>: 2
<java.io.File: boolean createNewFile()>: 2
<java.io.File: java.io.File[] listFiles()>: 2
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 2
<java.io.EOFException: void <init>()>: 2
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 1
<java.io.OutputStream: void close()>: 1
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 1
<java.net.URI: void <init>(java.lang.String)>: 1
<java.io.InputStream: int read(byte[])>: 1
<java.io.InputStream: void close()>: 1
<java.io.OutputStream: void write(byte[],int,int)>: 1
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 1
<java.io.OutputStream: void flush()>: 1
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 1
<java.io.FileInputStream: void close()>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>: 1
<java.io.BufferedReader: java.lang.String readLine()>: 1
<java.io.BufferedReader: void close()>: 1
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 1
<android.graphics.Bitmap: boolean isRecycled()>: 1
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 1
<java.io.BufferedReader: void <init>(java.io.Reader)>: 1
----------------StartWorker----------------
<java.io.Writer: void write(java.lang.String)>: 438
<java.io.Writer: void write(int)>: 425
<com.cedarsoftware.util.io.FastPushbackReader: int read()>: 85
<java.lang.Object: java.lang.String toString()>: 68
<java.net.URL: void <init>(java.lang.String)>: 50
<java.io.BufferedReader: void <init>(java.io.Reader)>: 43
<java.io.File: void <init>(java.lang.String)>: 39
<com.cedarsoftware.util.io.JsonReader: void close()>: 34
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 34
<java.net.URL: java.net.URLConnection openConnection()>: 32
<java.net.HttpURLConnection: int getResponseCode()>: 32
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 30
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 30
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 29
<java.net.URLConnection: java.io.InputStream getInputStream()>: 28
<java.io.File: boolean exists()>: 27
<java.io.BufferedReader: java.lang.String readLine()>: 26
<java.io.BufferedReader: void close()>: 26
<java.io.Writer: void flush()>: 21
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 20
<java.io.ByteArrayOutputStream: void <init>()>: 20
<java.io.ByteArrayInputStream: void <init>(byte[])>: 19
<java.net.URLConnection: void setReadTimeout(int)>: 19
<java.net.URLConnection: void setConnectTimeout(int)>: 19
<java.io.File: java.lang.String getPath()>: 18
<android.net.NetworkInfo: boolean isConnected()>: 18
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>: 17
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>: 17
<java.io.Reader: int read()>: 17
<java.net.URLConnection: java.lang.String getContentType()>: 17
<com.cedarsoftware.util.io.JsonWriter: void close()>: 17
<com.cedarsoftware.util.io.FastPushbackReader: void <init>(java.io.Reader)>: 17
<java.io.OutputStream: void close()>: 17
<java.io.FilterReader: void <init>(java.io.Reader)>: 17
<java.io.OutputStream: void write(byte[])>: 17
<java.nio.charset.Charset: java.lang.String toString()>: 17
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 17
<java.io.Writer: void close()>: 17
<java.io.Writer: void write(char[])>: 17
<java.io.File: java.lang.String getAbsolutePath()>: 17
<java.io.FilterReader: void close()>: 17
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>: 17
<android.net.NetworkInfo: java.lang.String getTypeName()>: 17
<android.net.NetworkInfo: int getType()>: 16
<java.io.File: void <init>(java.io.File,java.lang.String)>: 16
<java.net.URLConnection: void setDoOutput(boolean)>: 13
<java.io.File: boolean delete()>: 13
<java.io.DataOutputStream: void <init>(java.io.OutputStream)>: 12
<java.io.FilterOutputStream: void write(byte[])>: 12
<java.io.DataOutputStream: void flush()>: 12
<java.io.FilterOutputStream: void close()>: 12
<java.io.File: boolean mkdirs()>: 11
<java.io.OutputStreamWriter: void close()>: 9
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 9
<java.io.OutputStreamWriter: void flush()>: 9
<java.io.File: long length()>: 5
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>: 5
<android.graphics.BitmapFactory$Options: void <init>()>: 5
<java.io.File: boolean renameTo(java.io.File)>: 5
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 5
<java.io.Closeable: void close()>: 4
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>: 4
<java.io.InputStream: void close()>: 4
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 4
<android.graphics.Bitmap: void recycle()>: 3
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$2: void <init>()>: 3
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 3
<android.graphics.Bitmap: int getHeight()>: 3
<java.io.InputStream: int read(byte[],int,int)>: 3
<java.io.FileOutputStream: void <init>(java.io.File)>: 3
<java.io.OutputStream: void <init>()>: 3
<java.io.OutputStream: void write(byte[],int,int)>: 2
<java.io.InputStream: void reset()>: 2
<java.io.IOException: void <init>(java.lang.String)>: 2
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 2
<android.graphics.Bitmap: int getWidth()>: 2
<java.io.InputStream: boolean markSupported()>: 2
<java.io.IOException: void <init>()>: 1
<java.net.Proxy: void <init>(java.net.Proxy$Type,java.net.SocketAddress)>: 1
<java.io.FileInputStream: void <init>(java.io.File)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 1
<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>: 1
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>: 1
<java.io.InputStream: void <init>()>: 1
<java.net.URI: java.lang.String getHost()>: 1
<java.io.OutputStream: void flush()>: 1
<java.net.URL: java.io.InputStream openStream()>: 1
<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>: 1
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>: 1
<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)>: 1
<java.io.BufferedOutputStream: void flush()>: 1
<android.graphics.Bitmap: int getRowBytes()>: 1
<java.io.FilterInputStream: void <init>(java.io.InputStream)>: 1
<java.io.FileOutputStream: void close()>: 1
<java.io.InputStream: int available()>: 1
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 1
<java.io.InputStream: int read(byte[])>: 1
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot: void close()>: 1
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 1
<com.nostra13.universalimageloader.core.assist.FlushedInputStream: void <init>(java.io.InputStream)>: 1
<java.io.FileInputStream: void <init>(java.lang.String)>: 1
<android.graphics.Bitmap: boolean isRecycled()>: 1
<java.io.FileOutputStream: void write(byte[])>: 1
<java.net.URLConnection: int getContentLength()>: 1
