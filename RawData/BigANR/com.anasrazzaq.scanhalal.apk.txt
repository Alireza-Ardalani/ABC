Duration => 274
UI Thread => 128
Worker Thread => 295

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 18
<java.net.URL: java.lang.String getPath()>: 6
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>: 6
<java.net.URL: java.lang.String getHost()>: 6
<java.net.URL: java.lang.String getRef()>: 6
<java.net.URL: void <init>(java.lang.String)>: 6
<java.net.URL: java.lang.String getUserInfo()>: 6
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 6
<java.net.URL: int getPort()>: 6
<java.net.URL: java.lang.String getProtocol()>: 6
<java.net.URI: java.net.URI create(java.lang.String)>: 6
<java.net.URL: java.lang.String getQuery()>: 6
<java.net.URI: java.lang.String toASCIIString()>: 6
<java.io.File: boolean exists()>: 5
<java.lang.Object: boolean equals(java.lang.Object)>: 4
<java.io.File: java.lang.String getAbsolutePath()>: 4
<android.graphics.BitmapFactory$Options: void <init>()>: 3
<java.lang.String: int hashCode()>: 3
<java.io.File: void <init>(java.lang.String)>: 3
<java.io.File: void <init>(java.io.File,java.lang.String)>: 3
<java.io.File: boolean mkdir()>: 2
<java.io.File: boolean mkdirs()>: 2
<android.graphics.Bitmap: int getHeight()>: 1
<android.graphics.Bitmap: void recycle()>: 1
<java.io.File: boolean createNewFile()>: 1
<android.graphics.Bitmap: int getWidth()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 1
<android.graphics.Bitmap: boolean isRecycled()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 1
----------------StartWorker----------------
<java.io.File: boolean exists()>: 15
<java.io.File: boolean delete()>: 14
<java.lang.String: boolean equals(java.lang.Object)>: 14
<java.io.IOException: void <init>(java.lang.String)>: 13
<java.io.File: void <init>(java.io.File,java.lang.String)>: 9
<java.io.File: boolean renameTo(java.io.File)>: 6
<java.io.File: void <init>(java.lang.String)>: 5
<java.io.Writer: void write(java.lang.String)>: 5
<android.graphics.Bitmap: int getHeight()>: 5
<java.io.InputStream: int read(byte[],int,int)>: 5
<java.io.FileOutputStream: void <init>(java.io.File)>: 5
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 5
<java.io.IOException: void <init>()>: 4
<java.io.FileInputStream: void <init>(java.io.File)>: 4
<java.io.File: long length()>: 4
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 4
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>: 4
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>: 4
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 4
<java.io.PrintStream: void println(java.lang.String)>: 4
<java.io.InputStream: void close()>: 4
<java.net.URL: void <init>(java.lang.String)>: 4
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 4
<java.io.Writer: void close()>: 4
<java.io.File: java.io.File[] listFiles()>: 4
<java.io.File: java.lang.String getAbsolutePath()>: 4
<java.io.File: boolean mkdirs()>: 4
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 3
<android.graphics.Bitmap: void recycle()>: 3
<java.net.URL: java.lang.String getPath()>: 3
<java.io.Closeable: void close()>: 3
<java.net.URL: java.lang.String getHost()>: 3
<java.net.URL: java.lang.String getRef()>: 3
<java.io.Reader: int read(char[])>: 3
<java.io.Reader: void close()>: 3
<java.lang.Object: boolean equals(java.lang.Object)>: 3
<java.net.URI: java.net.URI create(java.lang.String)>: 3
<java.io.ByteArrayInputStream: void <init>(byte[])>: 3
<java.net.URL: int getPort()>: 3
<java.io.Writer: void flush()>: 3
<java.net.URL: java.lang.String getQuery()>: 3
<android.graphics.BitmapFactory$Options: void <init>()>: 3
<java.net.URL: java.lang.String getProtocol()>: 3
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 3
<java.net.URI: java.lang.String toASCIIString()>: 3
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>: 3
<android.graphics.Bitmap: int getWidth()>: 3
<java.io.ByteArrayOutputStream: void <init>()>: 3
<java.net.URL: java.lang.String getUserInfo()>: 3
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 3
<java.io.File: boolean isDirectory()>: 2
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 2
<java.io.InputStream: void reset()>: 2
<java.nio.charset.Charset: boolean equals(java.lang.Object)>: 2
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$2: void <init>()>: 2
<java.io.ByteArrayOutputStream: void <init>(int)>: 2
<java.net.HttpURLConnection: int getResponseCode()>: 2
<android.graphics.Bitmap: int getRowBytes()>: 2
<java.lang.Object: int hashCode()>: 2
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>: 2
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: void close()>: 2
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 2
<java.io.OutputStream: void <init>()>: 2
<java.io.FileInputStream: void <init>(java.lang.String)>: 2
<java.io.InputStream: boolean markSupported()>: 2
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 2
<java.io.EOFException: void <init>()>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 1
<java.io.OutputStream: void write(byte[],int,int)>: 1
<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>: 1
<java.net.URL: java.net.URLConnection openConnection()>: 1
<java.io.InputStream: void <init>()>: 1
<java.io.OutputStream: void flush()>: 1
<java.io.Reader: int read()>: 1
<java.io.FileInputStream: void close()>: 1
<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>: 1
<java.lang.String: int hashCode()>: 1
<java.io.FilterInputStream: void <init>(java.io.InputStream)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 1
<java.io.InputStream: int available()>: 1
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 1
<java.io.Reader: boolean markSupported()>: 1
<java.net.URLConnection: void setReadTimeout(int)>: 1
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot: void close()>: 1
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 1
<java.net.URLConnection: java.io.InputStream getInputStream()>: 1
<java.io.File: boolean isFile()>: 1
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 1
<com.nostra13.universalimageloader.core.assist.FlushedInputStream: void <init>(java.io.InputStream)>: 1
<java.net.URLConnection: void setConnectTimeout(int)>: 1
<android.graphics.Bitmap: boolean isRecycled()>: 1
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 1
<java.io.BufferedReader: void <init>(java.io.Reader)>: 1
<java.net.URLConnection: int getContentLength()>: 1
<java.io.StringReader: void <init>(java.lang.String)>: 1
