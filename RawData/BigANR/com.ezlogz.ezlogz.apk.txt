Duration => 2409
UI Thread => 514
Worker Thread => 2843

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 91
<io.realm.Realm: void close()>: 29
<java.io.File: boolean exists()>: 27
<java.lang.Object: boolean equals(java.lang.Object)>: 25
<io.realm.internal.OsSharedRealm: void close()>: 23
<java.io.File: void <init>(java.io.File,java.lang.String)>: 20
<java.io.IOException: void <init>(java.lang.String)>: 18
<java.io.File: boolean delete()>: 18
<java.io.File: void <init>(java.lang.String)>: 15
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 10
<java.io.PrintStream: void println(java.lang.String)>: 9
<java.io.File: boolean mkdirs()>: 8
<java.net.URI: void <init>(java.lang.String)>: 7
<java.io.IOException: void <init>()>: 6
<java.io.File: boolean isDirectory()>: 6
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>: 6
<io.realm.internal.RealmProxyMediator: boolean equals(java.lang.Object)>: 6
<java.io.File: boolean equals(java.lang.Object)>: 6
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 6
<io.realm.RealmConfiguration: boolean equals(java.lang.Object)>: 6
<java.io.File: java.lang.String getName()>: 6
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>: 6
<java.io.Writer: void close()>: 6
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 6
<java.io.File: java.lang.String getAbsolutePath()>: 6
<java.lang.Boolean: boolean equals(java.lang.Object)>: 6
<io.realm.BaseRealm: void close()>: 5
<io.realm.internal.RealmNotifier: void close()>: 5
<java.io.File: java.io.File[] listFiles()>: 5
<java.io.PrintStream: void println()>: 5
<java.io.Closeable: void close()>: 4
<java.io.FileInputStream: void <init>(java.io.File)>: 4
<java.net.CookieManager: void setCookiePolicy(java.net.CookiePolicy)>: 4
<java.io.FileOutputStream: void <init>(java.io.File)>: 4
<java.net.CookieManager: void <init>()>: 4
<java.util.Date: boolean equals(java.lang.Object)>: 4
<java.io.EOFException: void <init>()>: 4
<java.io.File: boolean renameTo(java.io.File)>: 3
<java.io.InputStream: void close()>: 3
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 3
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: void close()>: 3
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 3
<java.nio.charset.Charset: boolean equals(java.lang.Object)>: 3
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 3
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$2: void <init>()>: 3
<java.io.ByteArrayOutputStream: void <init>(int)>: 3
<java.io.Writer: void write(java.lang.String)>: 3
<java.io.InputStream: int read(byte[],int,int)>: 3
<java.io.OutputStream: void <init>()>: 3
<java.lang.String: int hashCode()>: 3
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 3
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 2
<java.io.File: boolean mkdir()>: 2
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 2
<android.graphics.Bitmap: int getHeight()>: 2
<java.io.File: boolean createNewFile()>: 2
<android.graphics.Bitmap: int getRowBytes()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 2
<android.graphics.BitmapFactory$Options: void <init>()>: 1
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 1
<java.io.FileOutputStream: java.io.FileDescriptor getFD()>: 1
<java.net.URL: java.lang.String getPath()>: 1
<java.net.URL: java.lang.String getHost()>: 1
<java.io.InputStream: int read(byte[])>: 1
<java.net.URL: void <init>(java.lang.String)>: 1
<java.io.File: long length()>: 1
<java.io.File: boolean setExecutable(boolean,boolean)>: 1
<java.net.URI: java.lang.String getRawFragment()>: 1
<java.net.CookieHandler: void setDefault(java.net.CookieHandler)>: 1
<java.util.zip.ZipFile: void close()>: 1
<java.io.OutputStream: void write(byte[],int,int)>: 1
<java.net.URL: java.lang.String getProtocol()>: 1
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>: 1
<java.net.URI: java.lang.String getRawUserInfo()>: 1
<java.net.URI: java.lang.String getHost()>: 1
<java.io.OutputStream: void flush()>: 1
<java.io.File: java.lang.String getCanonicalPath()>: 1
<java.io.File: boolean setWritable(boolean)>: 1
<java.io.File: boolean setReadable(boolean,boolean)>: 1
<java.net.URI: java.lang.String getRawQuery()>: 1
<java.net.URL: java.net.URI toURI()>: 1
<java.net.URI: int getPort()>: 1
<java.net.URL: int getPort()>: 1
<java.io.FileDescriptor: void sync()>: 1
<java.net.CookieHandler: java.net.CookieHandler getDefault()>: 1
<android.content.res.AssetFileDescriptor: void close()>: 1
<java.net.URI: java.lang.String getRawPath()>: 1
<java.net.URL: java.lang.String getQuery()>: 1
<java.net.URI: java.lang.String getScheme()>: 1
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>: 1
----------------StartWorker----------------
<java.io.InputStream: int read()>: 309
<java.io.OutputStream: void write(int)>: 252
<java.io.IOException: void <init>(java.lang.String)>: 248
<java.io.OutputStream: void write(byte[])>: 144
<java.lang.String: boolean equals(java.lang.Object)>: 142
<java.io.InputStream: int read(byte[],int,int)>: 86
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 84
<java.lang.Object: boolean equals(java.lang.Object)>: 72
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 59
<java.net.Socket: java.io.OutputStream getOutputStream()>: 58
<java.net.Socket: java.io.InputStream getInputStream()>: 57
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 56
<java.io.ByteArrayOutputStream: void reset()>: 56
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 56
<io.realm.internal.OsSharedRealm: void close()>: 56
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 56
<java.io.ByteArrayInputStream: void <init>(byte[])>: 33
<java.net.Socket: void close()>: 33
<java.io.OutputStream: void flush()>: 32
<java.io.OutputStream: void write(byte[],int,int)>: 31
<java.io.InputStream: int read(byte[])>: 31
<java.net.Socket: void shutdownOutput()>: 29
<java.net.Socket: void <init>(java.lang.String,int)>: 29
<java.net.Socket: void shutdownInput()>: 29
<java.io.InputStream: void reset()>: 28
<java.io.ByteArrayOutputStream: void <init>(int)>: 28
<java.nio.ByteBuffer: boolean equals(java.lang.Object)>: 28
<java.io.ByteArrayOutputStream: int size()>: 28
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>: 28
<java.lang.String: int hashCode()>: 28
<java.io.BufferedOutputStream: void flush()>: 28
<java.net.Socket: void setSendBufferSize(int)>: 28
<java.io.File: void <init>(java.lang.String)>: 28
<java.io.EOFException: void <init>(java.lang.String)>: 28
<java.net.Socket: void connect(java.net.SocketAddress,int)>: 28
<java.io.InputStream: void mark(int)>: 28
<java.io.ByteArrayOutputStream: void <init>()>: 28
<java.io.InputStream: boolean markSupported()>: 28
<java.net.Socket: void <init>()>: 28
<java.net.URI: void <init>(java.lang.String)>: 20
<io.realm.Realm: void close()>: 19
<io.realm.internal.RealmNotifier: void close()>: 16
<java.io.File: void <init>(java.io.File,java.lang.String)>: 15
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>: 14
<java.io.File: java.lang.String getName()>: 14
<java.io.File: boolean exists()>: 14
<io.realm.internal.RealmProxyMediator: boolean equals(java.lang.Object)>: 14
<java.io.File: boolean equals(java.lang.Object)>: 14
<io.realm.RealmConfiguration: boolean equals(java.lang.Object)>: 14
<io.realm.BaseRealm: void close()>: 14
<java.lang.Boolean: boolean equals(java.lang.Object)>: 14
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 13
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 13
<java.io.InputStream: void close()>: 10
<java.net.URI: java.net.URI create(java.lang.String)>: 9
<java.net.URI: java.lang.String getScheme()>: 7
<java.net.URI: java.lang.String getHost()>: 6
<java.net.URI: int getPort()>: 6
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 5
<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>: 5
<android.graphics.Bitmap: int getHeight()>: 5
<android.graphics.Bitmap: int getWidth()>: 5
<java.io.InputStream: void <init>()>: 4
<java.net.URI: boolean isAbsolute()>: 4
<java.net.URI: java.lang.String getRawQuery()>: 4
<org.apache.http.HttpHost: boolean equals(java.lang.Object)>: 4
<org.apache.http.MalformedChunkCodingException: void <init>(java.lang.String)>: 4
<org.apache.http.conn.routing.HttpRoute: boolean equals(java.lang.Object)>: 4
<java.net.Socket: void setSoTimeout(int)>: 3
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 3
<java.util.Date: boolean equals(java.lang.Object)>: 3
<io.socket.utf8.UTF8Exception: void <init>(java.lang.String)>: 3
<okhttp3.Response: void close()>: 3
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 3
<java.io.OutputStream: void <init>()>: 3
<java.net.InetAddress: java.lang.String getHostName()>: 2
<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>: 2
<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>: 2
<java.io.InterruptedIOException: void <init>(java.lang.String)>: 2
<java.net.Socket: void setTcpNoDelay(boolean)>: 2
<java.net.URI: java.lang.String toString()>: 2
<java.net.URI: java.lang.String toASCIIString()>: 2
<java.net.URI: java.lang.String getAuthority()>: 2
<java.net.Proxy: java.net.Proxy$Type type()>: 2
<java.net.URI: java.lang.String getFragment()>: 2
<java.net.URI: java.lang.String getPath()>: 2
<android.database.Cursor: void close()>: 2
<java.io.IOException: void <init>()>: 1
<java.net.ProtocolException: void <init>(java.lang.String)>: 1
<java.io.File: long length()>: 1
<java.net.Socket: int getSendBufferSize()>: 1
<java.net.URI: java.lang.String getRawFragment()>: 1
<java.net.InetAddress: java.lang.String getHostAddress()>: 1
<java.net.URI: java.net.URI resolve(java.net.URI)>: 1
<org.apache.http.conn.ConnectionPoolTimeoutException: void <init>(java.lang.String)>: 1
<org.apache.http.client.ClientProtocolException: void <init>(java.lang.String)>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 1
<java.net.Socket: void setSoLinger(boolean,int)>: 1
<java.io.InterruptedIOException: void <init>()>: 1
<org.apache.http.impl.io.ContentLengthInputStream: int read(byte[])>: 1
<java.net.Proxy: java.net.SocketAddress address()>: 1
<java.net.URISyntaxException: java.lang.String getMessage()>: 1
<java.net.InetSocketAddress: int getPort()>: 1
<java.io.FileInputStream: void close()>: 1
<java.net.Socket: int getSoTimeout()>: 1
<java.io.BufferedReader: java.lang.String readLine()>: 1
<org.apache.http.impl.io.IdentityOutputStream: void write(byte[],int,int)>: 1
<org.apache.http.impl.io.ChunkedInputStream: int read(byte[])>: 1
<org.apache.http.impl.io.ContentLengthOutputStream: void write(byte[],int,int)>: 1
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 1
<java.io.FileOutputStream: void close()>: 1
<java.io.DataInputStream: void <init>(java.io.InputStream)>: 1
<org.apache.http.conn.ConnectTimeoutException: void <init>(java.lang.String)>: 1
<org.apache.http.impl.io.ContentLengthInputStream: int read(byte[],int,int)>: 1
<org.apache.http.impl.io.ChunkedOutputStream: void write(byte[],int,int)>: 1
<org.apache.http.impl.io.ChunkedInputStream: int read(byte[],int,int)>: 1
<java.net.InetAddress: java.net.InetAddress getLocalHost()>: 1
<java.io.OutputStream: void close()>: 1
<java.net.InetSocketAddress: java.lang.String getHostName()>: 1
<java.net.ConnectException: void <init>(java.lang.String)>: 1
<org.apache.http.ConnectionClosedException: void <init>(java.lang.String)>: 1
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 1
<java.net.Proxy$Type: java.net.Proxy$Type[] values()>: 1
<org.apache.http.TruncatedChunkException: void <init>(java.lang.String)>: 1
<java.net.ProxySelector: java.net.ProxySelector getDefault()>: 1
<org.apache.http.NoHttpResponseException: void <init>(java.lang.String)>: 1
<java.io.File: boolean delete()>: 1
<org.apache.http.client.ClientProtocolException: void <init>(java.lang.Throwable)>: 1
<java.net.InetAddress: boolean equals(java.lang.Object)>: 1
<java.net.URI: java.lang.String getRawPath()>: 1
<java.net.InetSocketAddress: boolean isUnresolved()>: 1
<java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>: 1
<java.io.FileOutputStream: void write(byte[])>: 1
<java.net.URI: java.lang.String getQuery()>: 1
<java.net.InetSocketAddress: java.net.InetAddress getAddress()>: 1
<java.io.BufferedReader: void <init>(java.io.Reader)>: 1
<java.net.Socket: int getReceiveBufferSize()>: 1
