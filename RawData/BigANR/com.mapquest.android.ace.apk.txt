Duration => 1617
UI Thread => 420
Worker Thread => 1336

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 135
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 43
<java.net.URL: java.lang.String toString()>: 26
<java.lang.Object: boolean equals(java.lang.Object)>: 24
<java.lang.Enum: boolean equals(java.lang.Object)>: 23
<android.net.Uri$Builder: android.net.Uri build()>: 12
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 12
<java.lang.String: int hashCode()>: 11
<android.database.Cursor: void close()>: 7
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 6
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 5
<android.graphics.drawable.Drawable: int getIntrinsicHeight()>: 5
<java.lang.Object: java.lang.String toString()>: 5
<java.io.File: boolean exists()>: 5
<android.graphics.drawable.Drawable: int getIntrinsicWidth()>: 5
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 4
<android.net.Uri$Builder: void <init>()>: 4
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 4
<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>: 3
<java.io.File: void <init>(java.io.File,java.lang.String)>: 3
<android.net.Uri$Builder: android.net.Uri$Builder appendEncodedPath(java.lang.String)>: 3
<java.io.BufferedReader: void <init>(java.io.Reader)>: 3
<android.net.Uri$Builder: android.net.Uri$Builder encodedPath(java.lang.String)>: 3
<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>: 2
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 2
<android.graphics.BitmapFactory$Options: void <init>()>: 2
<java.io.FileInputStream: void <init>(java.io.File)>: 2
<java.io.File: boolean isDirectory()>: 2
<java.io.InputStream: void close()>: 2
<java.net.URL: void <init>(java.lang.String)>: 2
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 2
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 2
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 2
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 2
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 2
<java.io.BufferedReader: java.lang.String readLine()>: 2
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 2
<java.io.BufferedReader: void close()>: 2
<java.io.IOException: void <init>(java.lang.String)>: 2
<java.io.File: java.lang.String getAbsolutePath()>: 2
<java.util.zip.ZipInputStream: void close()>: 1
<java.io.FileOutputStream: void write(byte[],int,int)>: 1
<java.io.File: java.lang.String[] list()>: 1
<java.net.URI: void <init>(java.lang.String)>: 1
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int,android.database.DatabaseErrorHandler)>: 1
<java.io.Reader: int read(char[])>: 1
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>: 1
<android.graphics.Bitmap: int getPixel(int,int)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>: 1
<java.lang.Integer: boolean equals(java.lang.Object)>: 1
<java.io.Reader: void close()>: 1
<java.io.Writer: void write(char[],int,int)>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>: 1
<java.io.FileInputStream: void close()>: 1
<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>: 1
<android.graphics.Bitmap: int getHeight()>: 1
<java.util.Calendar: boolean equals(java.lang.Object)>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<android.net.wifi.WifiManager: boolean isWifiEnabled()>: 1
<android.graphics.Bitmap: int getWidth()>: 1
<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>: 1
<java.io.StringWriter: void <init>()>: 1
<java.io.File: java.io.File[] listFiles()>: 1
<java.io.File: boolean delete()>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 1
<java.io.PrintStream: void println(java.lang.String)>: 1
<java.io.FileOutputStream: void close()>: 1
<com.fasterxml.jackson.core.JsonParser: void close()>: 1
<java.io.File: void <init>(java.lang.String)>: 1
<java.io.FilterInputStream: int read(byte[])>: 1
<java.io.StringReader: void <init>(java.lang.String)>: 1
<java.io.File: boolean mkdirs()>: 1
<com.fasterxml.jackson.core.base.ParserBase: void close()>: 1
<java.io.Reader: int read(char[],int,int)>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 203
<java.net.URL: java.lang.String toString()>: 83
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 81
<java.io.ByteArrayInputStream: void <init>(byte[])>: 30
<java.io.Writer: void write(char[],int,int)>: 27
<java.io.File: boolean exists()>: 25
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 24
<android.net.Uri$Builder: android.net.Uri build()>: 24
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>: 20
<java.io.StringWriter: void <init>()>: 18
<java.io.StringWriter: java.lang.String toString()>: 18
<java.io.File: void <init>(java.io.File,java.lang.String)>: 18
<java.lang.Object: boolean equals(java.lang.Object)>: 16
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 16
<java.io.FileInputStream: void <init>(java.io.File)>: 15
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>: 15
<java.io.BufferedReader: java.lang.String readLine()>: 15
<java.io.InputStream: void close()>: 15
<java.io.InputStream: boolean markSupported()>: 15
<java.io.BufferedReader: void <init>(java.io.Reader)>: 15
<java.io.IOException: void <init>(java.lang.String)>: 14
<java.lang.Enum: boolean equals(java.lang.Object)>: 12
<java.io.File: void <init>(java.lang.String)>: 11
<java.io.Writer: void write(java.lang.String)>: 11
<java.io.File: java.lang.String getAbsolutePath()>: 11
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 10
<java.io.File: long length()>: 10
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 10
<java.io.InputStream: void reset()>: 10
<java.net.URI: java.net.URI create(java.lang.String)>: 10
<java.net.URI: java.lang.String getHost()>: 10
<java.lang.Object: java.lang.String toString()>: 10
<java.net.URI: int getPort()>: 10
<java.net.URI: java.lang.String getScheme()>: 10
<java.io.InputStream: int read(byte[])>: 10
<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>: 10
<com.amazonaws.internal.SdkFilterInputStream: void <init>(java.io.InputStream)>: 10
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 10
<java.io.BufferedReader: void close()>: 10
<java.io.ByteArrayOutputStream: void <init>()>: 10
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 9
<android.graphics.Bitmap: int getPixel(int,int)>: 8
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>: 8
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 8
<java.io.File: boolean renameTo(java.io.File)>: 8
<java.io.Writer: void close()>: 8
<android.graphics.Bitmap: int getHeight()>: 8
<android.graphics.Bitmap: int getWidth()>: 8
<com.mapbox.mapboxsdk.camera.CameraPosition: boolean equals(java.lang.Object)>: 7
<com.mapbox.mapboxsdk.geometry.LatLng: boolean equals(java.lang.Object)>: 7
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 6
<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>: 6
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 6
<android.net.Uri$Builder: void <init>()>: 6
<android.net.Uri$Builder: android.net.Uri$Builder encodedPath(java.lang.String)>: 6
<java.net.URL: void <init>(java.lang.String)>: 6
<com.fasterxml.jackson.core.JsonGenerationException: void <init>(java.lang.String)>: 6
<android.net.Uri$Builder: android.net.Uri$Builder appendEncodedPath(java.lang.String)>: 6
<android.database.Cursor: void close()>: 6
<android.database.sqlite.SQLiteClosable: void close()>: 6
<java.io.BufferedWriter: void newLine()>: 5
<java.net.URLConnection: void setDoOutput(boolean)>: 5
<java.io.OutputStream: void write(byte[],int,int)>: 5
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 5
<com.google.gson.stream.JsonWriter: void close()>: 5
<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>: 5
<java.net.URL: java.net.URLConnection openConnection()>: 5
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 5
<java.io.OutputStream: void flush()>: 5
<java.net.URLConnection: java.util.Map getHeaderFields()>: 5
<java.io.FileInputStream: void close()>: 5
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 5
<java.io.File: boolean createNewFile()>: 5
<java.net.HttpURLConnection: int getResponseCode()>: 5
<java.io.PrintWriter: void flush()>: 5
<java.io.PrintWriter: void <init>(java.io.Writer)>: 5
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 5
<com.amazonaws.util.NamespaceRemovingInputStream: void <init>(java.io.InputStream)>: 5
<java.io.FilterInputStream: void <init>(java.io.InputStream)>: 5
<java.io.BufferedWriter: void flush()>: 5
<java.net.URI: java.net.URL toURL()>: 5
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 5
<java.io.OutputStream: void close()>: 5
<com.google.gson.stream.JsonReader: void close()>: 5
<java.net.URLConnection: void setReadTimeout(int)>: 5
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 5
<java.io.BufferedWriter: void close()>: 5
<com.amazonaws.util.CRC32ChecksumCalculatingInputStream: void <init>(java.io.InputStream)>: 5
<java.net.URI: java.lang.String toString()>: 5
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>: 5
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 5
<java.io.InputStream: void mark(int)>: 5
<java.net.URLConnection: java.io.InputStream getInputStream()>: 5
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 5
<java.net.URI: java.lang.String getAuthority()>: 5
<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>: 5
<java.io.PrintWriter: void close()>: 5
<com.amazonaws.internal.CRC32MismatchException: void <init>(java.lang.String)>: 5
<java.net.URLConnection: void setConnectTimeout(int)>: 5
<java.net.URI: java.lang.String getPath()>: 5
<java.io.PrintWriter: void println(java.lang.String)>: 5
<java.io.FileNotFoundException: void <init>(java.lang.String)>: 5
<java.io.File: boolean delete()>: 5
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 5
<java.io.ByteArrayOutputStream: void close()>: 5
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 5
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>: 5
<java.io.File: boolean mkdirs()>: 5
<java.net.URLConnection: void setUseCaches(boolean)>: 5
<java.io.File: java.lang.String getName()>: 3
<com.fasterxml.jackson.core.base.GeneratorBase: void close()>: 3
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 3
<java.io.File: boolean canWrite()>: 3
<java.io.Writer: void flush()>: 3
<java.io.File: boolean canRead()>: 3
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 3
<android.database.sqlite.SQLiteDatabase: boolean deleteDatabase(java.io.File)>: 3
<android.database.sqlite.SQLiteDatabase: int getVersion()>: 3
<com.fasterxml.jackson.core.JsonGenerator: void close()>: 3
<java.io.File: boolean isFile()>: 3
<android.database.sqlite.SQLiteOpenHelper: void close()>: 3
<java.io.Reader: void close()>: 2
<java.lang.String: int hashCode()>: 2
<com.fasterxml.jackson.core.base.ParserBase: void close()>: 2
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int,android.database.DatabaseErrorHandler)>: 2
<com.fasterxml.jackson.core.JsonParser: void close()>: 2
<java.io.StringReader: void <init>(java.lang.String)>: 2
<java.io.Reader: int read(char[],int,int)>: 2
