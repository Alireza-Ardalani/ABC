Duration => 554
UI Thread => 484
Worker Thread => 3962

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 178
<java.lang.StackTraceElement: boolean equals(java.lang.Object)>: 77
<java.net.URL: java.lang.String toString()>: 39
<java.lang.String: int hashCode()>: 26
<java.lang.Object: boolean equals(java.lang.Object)>: 12
<java.io.File: boolean exists()>: 10
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 9
<android.database.Cursor: void close()>: 8
<java.io.File: void <init>(java.io.File,java.lang.String)>: 7
<android.database.DatabaseUtils: java.lang.String dumpCursorToString(android.database.Cursor)>: 7
<java.io.PrintStream: void println(java.lang.String)>: 7
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 6
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 6
<java.io.IOException: void <init>(java.lang.String)>: 6
<java.io.File: void <init>(java.lang.String)>: 6
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 5
<java.io.File: boolean delete()>: 5
<android.graphics.BitmapFactory$Options: void <init>()>: 4
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 3
<java.io.File: boolean mkdir()>: 3
<java.io.Writer: void write(java.lang.String)>: 3
<java.io.IOException: void <init>()>: 2
<java.io.File: boolean renameTo(java.io.File)>: 2
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 2
<java.io.InputStream: void close()>: 2
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>: 2
<java.io.Writer: void close()>: 2
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 2
<java.io.File: boolean createNewFile()>: 2
<java.io.File: boolean mkdirs()>: 2
<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>: 1
<java.io.FileInputStream: void <init>(java.io.File)>: 1
<java.io.OutputStreamWriter: void close()>: 1
<java.io.File: boolean isDirectory()>: 1
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>: 1
<java.io.InputStream: int read(byte[])>: 1
<java.net.URL: void <init>(java.lang.String)>: 1
<java.io.File: long lastModified()>: 1
<java.io.File: long length()>: 1
<java.net.URLDecoder: java.lang.String decode(java.lang.String)>: 1
<java.io.File: java.net.URI toURI()>: 1
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 1
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>: 1
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: void close()>: 1
<java.net.URL: java.net.URLConnection openConnection()>: 1
<java.net.URL: java.lang.String getProtocol()>: 1
<java.net.URL: java.lang.String getFile()>: 1
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 1
<java.nio.charset.Charset: boolean equals(java.lang.Object)>: 1
<java.util.jar.JarFile: void close()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 1
<java.net.URLConnection: java.io.InputStream getInputStream()>: 1
<java.io.File: boolean isFile()>: 1
<java.io.ByteArrayOutputStream: void <init>(int)>: 1
<java.io.InputStream: int read(byte[],int,int)>: 1
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<java.io.File: java.io.File[] listFiles()>: 1
<android.net.NetworkInfo: boolean isConnected()>: 1
<java.io.Writer: void flush()>: 1
<java.io.File: java.lang.String getAbsolutePath()>: 1
<ch.qos.logback.core.joran.spi.ElementPath: boolean equals(java.lang.Object)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 1
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 1
<java.io.EOFException: void <init>()>: 1
<java.io.FileOutputStream: void close()>: 1
<java.io.InputStream: int available()>: 1
<java.net.URI: java.net.URL toURL()>: 1
<java.net.URLConnection: void setUseCaches(boolean)>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 437
<java.io.PrintStream: void println(java.lang.String)>: 222
<java.io.File: boolean exists()>: 137
<java.io.File: void <init>(java.lang.String)>: 127
<java.net.URL: java.net.URLConnection openConnection()>: 97
<java.net.URL: void <init>(java.lang.String)>: 97
<java.net.URLConnection: java.io.InputStream getInputStream()>: 85
<java.net.URL: java.lang.String toString()>: 77
<java.io.InputStream: void close()>: 68
<java.io.File: void <init>(java.io.File,java.lang.String)>: 52
<java.net.HttpURLConnection: int getResponseCode()>: 50
<android.graphics.Bitmap: int getHeight()>: 50
<java.net.URLConnection: void setReadTimeout(int)>: 49
<java.net.URLConnection: void setConnectTimeout(int)>: 49
<java.io.BufferedReader: java.lang.String readLine()>: 48
<java.io.BufferedReader: void <init>(java.io.Reader)>: 48
<java.net.URLConnection: void setUseCaches(boolean)>: 47
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 46
<java.io.BufferedReader: void close()>: 46
<java.io.Writer: void write(java.lang.String)>: 44
<java.io.FileInputStream: void <init>(java.io.File)>: 40
<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>: 40
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>: 40
<java.io.PrintWriter: void flush()>: 40
<java.io.FileOutputStream: void <init>(java.io.File)>: 40
<android.graphics.Bitmap: int getWidth()>: 40
<java.io.File: java.lang.String getAbsolutePath()>: 40
<java.net.URLConnection: java.net.URL getURL()>: 39
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>: 39
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 38
<java.io.File: boolean delete()>: 38
<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>: 37
<java.io.File: long lastModified()>: 37
<java.net.URL: java.lang.String getFile()>: 37
<java.lang.StackTraceElement: boolean equals(java.lang.Object)>: 37
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 37
<ch.qos.logback.core.joran.spi.ElementPath: boolean equals(java.lang.Object)>: 37
<java.net.URI: java.net.URL toURL()>: 37
<java.net.URLDecoder: java.lang.String decode(java.lang.String)>: 37
<java.io.File: java.net.URI toURI()>: 37
<java.net.URL: java.lang.String getProtocol()>: 37
<java.io.File: boolean isFile()>: 37
<java.io.OutputStream: void flush()>: 36
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 36
<android.graphics.BitmapFactory$Options: void <init>()>: 33
<java.io.InputStream: int read(byte[],int,int)>: 31
<android.graphics.Bitmap: void recycle()>: 30
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 30
<java.io.File: boolean renameTo(java.io.File)>: 29
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 28
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 27
<android.database.DatabaseUtils: java.lang.String dumpCursorToString(android.database.Cursor)>: 26
<java.net.URLConnection: void setDoOutput(boolean)>: 25
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 25
<java.io.FileOutputStream: void close()>: 23
<android.database.Cursor: void close()>: 23
<java.net.URLConnection: void setDoInput(boolean)>: 22
<java.io.Closeable: void close()>: 20
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>: 20
<java.io.OutputStream: void write(byte[],int,int)>: 20
<java.io.InputStream: void reset()>: 20
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>: 20
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 20
<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>: 20
<com.nostra13.universalimageloader.core.assist.FlushedInputStream: void <init>(java.io.InputStream)>: 20
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 20
<android.graphics.Bitmap: boolean isRecycled()>: 20
<java.io.File: boolean mkdirs()>: 20
<java.io.File: long length()>: 19
<java.io.IOException: void <init>(java.lang.String)>: 19
<java.io.Writer: void flush()>: 19
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 19
<java.lang.Object: boolean equals(java.lang.Object)>: 17
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>: 15
<java.io.OutputStreamWriter: void close()>: 13
<java.io.InputStreamReader: void close()>: 13
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 13
<java.io.File: boolean mkdir()>: 13
<java.net.URLConnection: java.lang.String getHeaderField(int)>: 13
<java.io.File: boolean createNewFile()>: 13
<java.io.OutputStream: void close()>: 13
<java.io.OutputStream: void write(byte[])>: 13
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 13
<java.net.URLConnection: java.lang.String getHeaderFieldKey(int)>: 13
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>: 13
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>: 13
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 11
<java.io.ByteArrayOutputStream: void <init>()>: 11
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 10
<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>: 10
<java.io.File: java.lang.String getName()>: 10
<java.io.InputStream: void <init>()>: 10
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 10
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$2: void <init>()>: 10
<java.io.FileInputStream: void close()>: 10
<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>: 10
<java.io.ByteArrayInputStream: void <init>(byte[])>: 10
<java.lang.String: int hashCode()>: 10
<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>: 10
<android.graphics.Bitmap: int getRowBytes()>: 10
<java.lang.Object: int hashCode()>: 10
<java.io.FilterInputStream: void <init>(java.io.InputStream)>: 10
<java.io.BufferedWriter: void flush()>: 10
<java.io.InputStream: int available()>: 10
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 10
<java.io.InputStream: int read(byte[])>: 10
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot: void close()>: 10
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 10
<java.net.URLConnection: java.lang.String guessContentTypeFromName(java.lang.String)>: 10
<java.io.BufferedWriter: void close()>: 10
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 10
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 10
<java.io.PrintWriter: void close()>: 10
<java.io.OutputStream: void <init>()>: 10
<java.io.FileInputStream: void <init>(java.lang.String)>: 10
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 10
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 10
<java.net.URLConnection: int getContentLength()>: 10
<java.io.IOException: void <init>()>: 9
<java.nio.charset.UnsupportedCharsetException: void <init>(java.lang.String)>: 3
<java.io.OutputStreamWriter: void flush()>: 2
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 1
