Duration => 339
UI Thread => 253
Worker Thread => 2930

----------------StartUI----------------
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 54
<android.database.Cursor: void close()>: 42
<java.io.File: void <init>(java.lang.String)>: 22
<java.io.File: boolean exists()>: 14
<java.io.File: java.lang.String getAbsolutePath()>: 13
<java.io.File: java.lang.String getPath()>: 13
<java.io.File: boolean mkdirs()>: 12
<android.net.Uri: java.lang.String encode(java.lang.String)>: 11
<java.io.File: java.io.File[] listFiles()>: 7
<java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>: 6
<java.io.OutputStreamWriter: void close()>: 6
<java.io.File: boolean delete()>: 6
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 6
<java.io.FileWriter: void <init>(java.lang.String)>: 6
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 5
<java.io.File: java.lang.String[] list()>: 4
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 2
<java.io.File: boolean mkdir()>: 2
<java.io.File: java.lang.String getParent()>: 1
<java.io.BufferedReader: java.lang.String readLine()>: 1
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 1
<java.io.FileReader: void <init>(java.io.File)>: 1
<java.io.BufferedReader: void <init>(java.io.Reader,int)>: 1
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 1
<java.io.BufferedReader: void close()>: 1
<java.io.FilterOutputStream: void write(byte[])>: 1
<java.io.InputStream: int read(byte[])>: 1
<java.io.InputStream: void close()>: 1
<ipcamsoft.com.database.DataBaseHelper: void close()>: 1
<java.io.FilterOutputStream: void close()>: 1
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 1
<java.io.File: java.lang.String getName()>: 1
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>: 1
<java.io.File: java.lang.String toString()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 1
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 1
<android.database.sqlite.SQLiteClosable: void close()>: 1
<android.database.sqlite.SQLiteOpenHelper: void close()>: 1
----------------StartWorker----------------
<java.io.FilterInputStream: void close()>: 180
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 99
<java.io.OutputStream: void flush()>: 91
<android.graphics.Bitmap: int getHeight()>: 90
<android.graphics.Bitmap: int getWidth()>: 90
<java.io.OutputStream: void write(byte[])>: 81
<java.io.OutputStream: void close()>: 64
<java.io.InputStream: int read(byte[])>: 63
<java.io.BufferedReader: void <init>(java.io.Reader)>: 63
<java.io.DataInputStream: void readFully(byte[])>: 54
<java.io.FileOutputStream: void <init>(java.lang.String)>: 46
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 46
<java.io.File: java.lang.String getAbsolutePath()>: 46
<java.net.URL: java.net.URLConnection openConnection()>: 45
<java.io.FilterInputStream: void reset()>: 45
<java.io.FilterInputStream: void mark(int)>: 45
<java.io.DataInputStream: int skipBytes(int)>: 45
<java.io.File: java.lang.String[] list()>: 38
<java.io.File: boolean exists()>: 37
<java.io.InputStreamReader: void close()>: 36
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>: 36
<java.io.BufferedReader: java.lang.String readLine()>: 36
<java.net.HttpURLConnection: int getResponseCode()>: 36
<java.io.IOException: void <init>(java.lang.String)>: 36
<java.io.FilterInputStream: void <init>(java.io.InputStream)>: 36
<java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>: 36
<android.net.Uri: java.lang.String encode(java.lang.String)>: 36
<java.io.File: void <init>(java.lang.String)>: 32
<java.io.InputStream: long skip(long)>: 27
<java.io.OutputStream: void write(byte[],int,int)>: 27
<ipcamsoft.com.camera_imageview.MjpegInputStream: void <init>(java.io.InputStream)>: 27
<java.io.ByteArrayOutputStream: void write(int)>: 27
<android.graphics.BitmapFactory$Options: void <init>()>: 27
<java.net.URL: void <init>(java.lang.String)>: 27
<java.net.URL: java.lang.String toString()>: 27
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 27
<java.net.URLConnection: void setConnectTimeout(int)>: 27
<java.io.ByteArrayOutputStream: void <init>()>: 27
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 20
<android.database.Cursor: void close()>: 20
<java.net.URL: java.lang.String getPath()>: 18
<java.net.URI: void <init>(java.lang.String)>: 18
<ipcamsoft.com.util.HttpDigestAuth$AuthenticationException: void <init>()>: 18
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 18
<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>: 18
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 18
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 18
<java.net.URI: java.lang.String getHost()>: 18
<com.sun.mail.util.QPDecoderStream: int read()>: 18
<java.net.URLConnection: java.lang.Object getContent()>: 18
<java.io.ByteArrayInputStream: void <init>(byte[])>: 18
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>: 18
<java.net.HttpURLConnection: java.lang.String getRequestMethod()>: 18
<java.io.DataInputStream: int readUnsignedByte()>: 18
<java.net.URLConnection: java.net.URL getURL()>: 18
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 18
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>: 18
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>: 18
<java.io.PrintStream: void println(java.lang.String)>: 18
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 18
<java.io.DataInputStream: void <init>(java.io.InputStream)>: 18
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 18
<java.net.Socket: void connect(java.net.SocketAddress,int)>: 18
<java.net.URLConnection: void setReadTimeout(int)>: 18
<java.io.PushbackInputStream: void unread(int)>: 18
<android.graphics.Bitmap: void copyPixelsFromBuffer(java.nio.Buffer)>: 18
<java.net.URLConnection: java.io.InputStream getInputStream()>: 18
<java.io.InputStream: int read(byte[],int,int)>: 18
<java.net.Socket: void setKeepAlive(boolean)>: 18
<java.io.BufferedReader: void close()>: 18
<java.net.Socket: java.io.OutputStream getOutputStream()>: 18
<java.net.URLConnection: void setDoInput(boolean)>: 18
<java.io.File: boolean delete()>: 18
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 18
<java.net.Socket: void <init>()>: 18
<java.io.File: java.lang.String getPath()>: 17
<java.net.Socket: boolean isConnected()>: 12
<java.net.Socket: void close()>: 12
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>: 10
<com.sun.mail.util.QPEncoderStream: void write(int)>: 9
<java.io.FileReader: void <init>(java.io.File)>: 9
<com.sun.mail.util.BASE64EncoderStream: void write(byte[],int,int)>: 9
<android.graphics.Bitmap: void recycle()>: 9
<java.net.URL: java.lang.String getHost()>: 9
<java.io.File: boolean isDirectory()>: 9
<com.sun.mail.util.BASE64EncoderStream: void flush()>: 9
<java.io.InputStream: int read()>: 9
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 9
<java.io.File: boolean mkdir()>: 9
<java.net.Socket: void setSoTimeout(int)>: 9
<com.sun.mail.util.LineInputStream: void <init>(java.io.InputStream)>: 9
<ipcamsoft.com.audionew.AudioInputStream: void <init>(java.io.InputStream)>: 9
<java.net.Socket: java.io.InputStream getInputStream()>: 9
<com.sun.mail.util.QPEncoderStream: void write(byte[],int,int)>: 9
<java.net.URL: int getPort()>: 9
<java.io.PushbackInputStream: void <init>(java.io.InputStream,int)>: 9
<java.io.InputStream: int available()>: 9
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>: 9
<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>: 9
<java.io.InputStream: void close()>: 9
<com.sun.mail.util.UUDecoderStream: int read()>: 9
<java.io.FileReader: void <init>(java.lang.String)>: 9
<java.net.URL: java.lang.String getProtocol()>: 9
<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>: 9
<com.sun.mail.util.BASE64DecoderStream: int read()>: 9
<android.graphics.Bitmap: void copyPixelsToBuffer(java.nio.Buffer)>: 9
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 9
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>: 9
<java.io.File: java.io.File[] listFiles()>: 9
<com.sun.mail.util.BASE64EncoderStream: void write(int)>: 9
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>: 9
<java.io.ByteArrayOutputStream: void close()>: 9
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>: 9
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 9
<java.io.PushbackInputStream: void <init>(java.io.InputStream)>: 9
<java.io.File: boolean mkdirs()>: 9
<java.io.PushbackInputStream: void unread(byte[])>: 9
<java.io.StringReader: void <init>(java.lang.String)>: 5
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 4
