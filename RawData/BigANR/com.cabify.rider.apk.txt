Duration => 762
UI Thread => 144
Worker Thread => 67

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 79
<android.graphics.Bitmap: int getHeight()>: 7
<java.lang.Object: boolean equals(java.lang.Object)>: 7
<java.lang.String: int hashCode()>: 7
<android.graphics.Bitmap: int getWidth()>: 7
<java.io.File: void <init>(java.lang.String)>: 6
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 4
<java.io.File: boolean exists()>: 4
<java.io.File: void <init>(java.io.File,java.lang.String)>: 4
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 3
<java.io.File: boolean delete()>: 2
<java.io.File: boolean createNewFile()>: 2
<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>: 2
<java.io.File: boolean mkdirs()>: 2
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>: 2
<android.graphics.Bitmap: int getPixel(int,int)>: 2
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<com.google.gson.stream.MalformedJsonException: void <init>(java.lang.Throwable)>: 1
<java.io.StringReader: void <init>(java.lang.String)>: 1
<org.jetbrains.anko.db.c: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
----------------StartWorker----------------
<android.database.sqlite.SQLiteOpenHelper: void close()>: 10
<java.lang.String: boolean equals(java.lang.Object)>: 8
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 5
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 4
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 3
<android.database.sqlite.SQLiteStatement: long simpleQueryForLong()>: 2
<java.io.OutputStream: void close()>: 2
<java.io.FileOutputStream: void <init>(java.io.File)>: 2
<java.io.FileInputStream: void <init>(java.io.File)>: 2
<java.io.File: boolean createNewFile()>: 2
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>: 2
<java.io.InputStream: int read(byte[])>: 2
<java.io.InputStream: void close()>: 2
<java.io.OutputStream: void write(byte[],int,int)>: 2
<java.io.File: java.lang.String getName()>: 2
<java.io.File: java.lang.String toString()>: 2
<android.database.Cursor: void close()>: 2
<android.database.sqlite.SQLiteClosable: void close()>: 2
<java.io.File: boolean mkdirs()>: 2
<java.io.File: void <init>(java.io.File,java.lang.String)>: 2
<java.io.File: boolean exists()>: 2
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 1
<java.io.File: boolean delete()>: 1
<android.database.sqlite.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)>: 1
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 1
