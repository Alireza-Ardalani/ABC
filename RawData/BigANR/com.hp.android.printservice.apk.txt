Duration => 34
UI Thread => 318
Worker Thread => 68

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 36
<android.net.Uri$Builder: android.net.Uri build()>: 29
<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>: 28
<java.lang.Enum: boolean equals(java.lang.Object)>: 28
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 28
<android.database.Cursor: void close()>: 28
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 11
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 10
<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>: 9
<android.database.DataSetObserver: void <init>()>: 8
<java.io.File: void <init>(java.io.File,java.lang.String)>: 7
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 5
<java.io.File: boolean exists()>: 5
<java.io.File: void <init>(java.lang.String)>: 5
<android.database.Observable: void registerObserver(java.lang.Object)>: 4
<java.lang.String: int hashCode()>: 4
<android.database.DataSetObservable: void <init>()>: 3
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 2
<android.net.NetworkInfo: int getType()>: 2
<android.database.Observable: void unregisterObserver(java.lang.Object)>: 2
<android.net.wifi.WifiManager$WifiLock: void acquire()>: 2
<java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>: 2
<java.io.File: java.lang.String getAbsolutePath()>: 2
<java.io.File: boolean canRead()>: 2
<android.net.wifi.WifiManager$WifiLock: void release()>: 2
<android.database.sqlite.SQLiteClosable: void close()>: 2
<java.io.FileReader: void <init>(java.io.File)>: 1
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 1
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>: 1
<java.io.FileOutputStream: java.io.FileDescriptor getFD()>: 1
<java.io.FileInputStream: void <init>(java.io.File)>: 1
<java.io.Closeable: void close()>: 1
<java.io.File: boolean isDirectory()>: 1
<java.io.InputStream: int read(byte[])>: 1
<java.io.File: long length()>: 1
<java.io.Reader: int read(char[])>: 1
<java.io.File: boolean setExecutable(boolean,boolean)>: 1
<java.util.zip.ZipFile: void close()>: 1
<java.net.InetAddress: java.lang.String getHostAddress()>: 1
<java.io.OutputStream: void write(byte[],int,int)>: 1
<java.io.InputStreamReader: void close()>: 1
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>: 1
<android.net.Uri$Builder: android.net.Uri$Builder path(java.lang.String)>: 1
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(android.net.Network)>: 1
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>: 1
<android.net.wifi.p2p.WifiP2pManager: android.net.wifi.p2p.WifiP2pManager$Channel initialize(android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager$ChannelListener)>: 1
<android.hardware.usb.UsbDevice: boolean equals(java.lang.Object)>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 1
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 1
<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>: 1
<java.io.OutputStream: void flush()>: 1
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 1
<java.io.BufferedReader: java.lang.String readLine()>: 1
<android.net.ConnectivityManager: android.net.Network[] getAllNetworks()>: 1
<java.io.File: boolean setReadable(boolean,boolean)>: 1
<java.io.File: boolean setWritable(boolean)>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<java.io.File: boolean createNewFile()>: 1
<android.net.wifi.WifiManager: boolean isWifiEnabled()>: 1
<java.io.ByteArrayOutputStream: void <init>()>: 1
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>: 1
<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>: 1
<android.net.wifi.WifiInfo: java.lang.String getSSID()>: 1
<java.io.FileDescriptor: void sync()>: 1
<java.io.File: java.io.File[] listFiles()>: 1
<java.io.File: boolean delete()>: 1
<android.net.Uri$Builder: void <init>()>: 1
<android.net.NetworkInfo: boolean isConnected()>: 1
<android.database.DataSetObservable: void notifyChanged()>: 1
<java.net.InetAddress: byte[] getAddress()>: 1
<android.net.wifi.WifiManager: android.net.DhcpInfo getDhcpInfo()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 1
<android.net.wifi.WifiManager$WifiLock: boolean isHeld()>: 1
<java.io.EOFException: void <init>()>: 1
<java.io.BufferedReader: void <init>(java.io.Reader)>: 1
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 1
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>: 1
----------------StartWorker----------------
<java.io.PrintStream: void println(java.lang.Object)>: 27
<java.net.URLConnection: boolean getDoOutput()>: 3
<android.net.wifi.p2p.WifiP2pManager: void removeGroup(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)>: 3
<java.net.HttpURLConnection: int getResponseCode()>: 2
<java.net.URL: void <init>(java.lang.String)>: 2
<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>: 1
<java.io.OutputStream: void close()>: 1
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 1
<java.io.FileInputStream: void <init>(java.io.File)>: 1
<java.net.URLConnection: void setConnectTimeout(int)>: 1
<java.net.HttpURLConnection: void setFixedLengthStreamingMode(long)>: 1
<java.net.URLConnection: java.lang.String getRequestProperty(java.lang.String)>: 1
<java.net.HttpURLConnection: java.lang.String getRequestMethod()>: 1
<java.io.Reader: int read(char[])>: 1
<java.io.File: long length()>: 1
<java.net.URLConnection: void setDoOutput(boolean)>: 1
<java.net.URLConnection: void setDoInput(boolean)>: 1
<java.net.URLConnection: java.util.Map getRequestProperties()>: 1
<java.io.OutputStream: void write(byte[],int,int)>: 1
<java.net.URLConnection: void setReadTimeout(int)>: 1
<java.lang.String: boolean equals(java.lang.Object)>: 1
<java.net.URL: java.net.URLConnection openConnection()>: 1
<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>: 1
<java.io.Reader: void close()>: 1
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 1
<java.net.URLConnection: java.net.URL getURL()>: 1
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 1
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>: 1
<java.net.URLConnection: int getContentLength()>: 1
<java.net.URLConnection: java.io.InputStream getInputStream()>: 1
<java.net.URLConnection: java.util.Map getHeaderFields()>: 1
<java.io.FileInputStream: int read(byte[])>: 1
<java.io.FileInputStream: void close()>: 1
<java.net.URLConnection: void setUseCaches(boolean)>: 1
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 1
