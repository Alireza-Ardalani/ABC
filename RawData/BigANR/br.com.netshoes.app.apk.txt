Duration => 438
UI Thread => 302
Worker Thread => 991

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 109
<java.lang.Object: boolean equals(java.lang.Object)>: 87
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 38
<java.lang.String: int hashCode()>: 5
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 4
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 2
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 2
<java.io.File: boolean isDirectory()>: 2
<android.net.UrlQuerySanitizer: void setAllowUnregisteredParamaters(boolean)>: 2
<java.io.InputStream: void close()>: 2
<android.net.UrlQuerySanitizer: void <init>()>: 2
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 2
<android.net.UrlQuerySanitizer: java.lang.String getValue(java.lang.String)>: 2
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 2
<java.io.File: boolean exists()>: 2
<java.io.File: void <init>(java.io.File,java.lang.String)>: 2
<android.net.UrlQuerySanitizer: void parseUrl(java.lang.String)>: 2
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>: 2
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 2
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<java.io.FileReader: void <init>(java.io.File)>: 1
<java.io.OutputStream: void close()>: 1
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 1
<java.net.URI: void <init>(java.lang.String)>: 1
<java.io.OutputStream: void write(byte[],int,int)>: 1
<java.io.BufferedWriter: void close()>: 1
<java.io.File: java.lang.String getName()>: 1
<java.net.URL: java.lang.String getFile()>: 1
<java.io.File: java.lang.String getPath()>: 1
<java.io.OutputStream: void flush()>: 1
<java.io.Writer: void write(java.lang.String)>: 1
<java.util.Formatter: void close()>: 1
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 1
<java.io.BufferedReader: java.lang.String readLine()>: 1
<java.io.InputStream: int read(byte[],int,int)>: 1
<java.net.URI: java.lang.String getRawQuery()>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<java.io.BufferedReader: void close()>: 1
<java.io.ByteArrayOutputStream: void write(int)>: 1
<java.io.ByteArrayOutputStream: void <init>()>: 1
<java.io.File: java.io.File[] listFiles()>: 1
<java.lang.Object: int hashCode()>: 1
<java.io.File: java.lang.String getAbsolutePath()>: 1
<java.io.BufferedWriter: void flush()>: 1
<java.io.File: java.io.File getParentFile()>: 1
<android.database.Cursor: void close()>: 1
<java.io.BufferedReader: void <init>(java.io.Reader)>: 1
<java.io.FileWriter: void <init>(java.io.File)>: 1
<java.io.File: void <init>(java.lang.String)>: 1
<java.io.File: boolean mkdirs()>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 89
<java.lang.Object: int hashCode()>: 85
<java.net.URL: void <init>(java.lang.String)>: 30
<java.io.IOException: void <init>(java.lang.String)>: 19
<java.net.URLConnection: java.net.URL getURL()>: 18
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 18
<java.io.InputStream: void close()>: 16
<java.net.URL: java.lang.String getHost()>: 15
<java.net.HttpURLConnection: int getResponseCode()>: 15
<android.net.NetworkInfo: int getType()>: 15
<java.io.ByteArrayOutputStream: void <init>()>: 13
<java.net.URLConnection: void setDoOutput(boolean)>: 12
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 12
<java.net.URLConnection: java.lang.String getContentType()>: 12
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 12
<java.net.URLConnection: java.io.InputStream getInputStream()>: 12
<java.io.Writer: void write(java.lang.String)>: 12
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 12
<java.net.URLConnection: void setConnectTimeout(int)>: 12
<java.net.URLConnection: void setDoInput(boolean)>: 12
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 12
<android.database.Cursor: void close()>: 12
<java.io.PrintStream: void println(java.lang.Object)>: 10
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 9
<java.net.URI: java.lang.String getHost()>: 9
<java.net.URLConnection: java.util.Map getHeaderFields()>: 9
<java.io.BufferedReader: java.lang.String readLine()>: 9
<java.io.ByteArrayOutputStream: void write(int)>: 9
<java.net.HttpURLConnection: java.lang.String getRequestMethod()>: 9
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 9
<java.io.OutputStream: void close()>: 9
<java.net.URL: java.lang.String toString()>: 9
<java.net.URLConnection: void setReadTimeout(int)>: 9
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>: 9
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 9
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 9
<java.net.URLConnection: void setAllowUserInteraction(boolean)>: 9
<android.net.NetworkInfo: boolean isConnected()>: 9
<java.net.URLConnection: int getContentLength()>: 9
<java.net.URLConnection: void setUseCaches(boolean)>: 9
<java.io.StringWriter: void <init>()>: 7
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 7
<java.io.StringWriter: java.lang.String toString()>: 7
<java.io.BufferedReader: void <init>(java.io.Reader)>: 7
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 6
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 6
<java.net.URL: java.lang.String getPath()>: 6
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>: 6
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>: 6
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 6
<java.net.URL: java.net.URLConnection openConnection()>: 6
<java.lang.Object: boolean equals(java.lang.Object)>: 6
<java.io.InputStream: void <init>()>: 6
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 6
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>: 6
<java.net.URI: int getPort()>: 6
<java.net.URL: int getPort()>: 6
<java.io.PrintWriter: void <init>(java.io.Writer)>: 6
<java.net.URI: java.lang.String getScheme()>: 6
<java.net.URI: java.lang.String toString()>: 6
<java.net.URL: java.lang.String getProtocol()>: 6
<java.io.Writer: void close()>: 6
<java.io.InputStream: int read(byte[],int,int)>: 6
<java.io.FilterOutputStream: void write(byte[])>: 6
<java.net.URI: java.lang.String getPath()>: 6
<java.net.URI: java.lang.String getQuery()>: 6
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 4
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 4
<java.io.RandomAccessFile: void close()>: 4
<java.io.BufferedReader: void <init>(java.io.Reader,int)>: 3
<java.nio.channels.Selector: void close()>: 3
<java.nio.channels.spi.AbstractInterruptibleChannel: void close()>: 3
<java.io.DataOutputStream: void writeInt(int)>: 3
<java.net.URI: void <init>(java.lang.String)>: 3
<java.net.Socket: int getPort()>: 3
<java.net.HttpURLConnection: void <init>(java.net.URL)>: 3
<java.net.URL: void <init>(java.lang.String,java.lang.String,java.lang.String)>: 3
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 3
<java.io.Reader: void close()>: 3
<java.net.ServerSocket: void bind(java.net.SocketAddress,int)>: 3
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(android.net.Network)>: 3
<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>: 3
<java.net.ServerSocket: void <init>(int)>: 3
<java.lang.Object: java.lang.String toString()>: 3
<com.newrelic.agent.android.instrumentation.HttpURLConnectionExtension: java.io.InputStream getErrorStream()>: 3
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 3
<java.io.File: boolean exists()>: 3
<android.net.ConnectivityManager: android.net.Network[] getAllNetworks()>: 3
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 3
<java.io.DataOutputStream: void <init>(java.io.OutputStream)>: 3
<java.net.Socket: java.io.InputStream getInputStream()>: 3
<java.nio.channels.Selector: java.nio.channels.Selector open()>: 3
<java.io.BufferedOutputStream: void flush()>: 3
<java.io.Writer: void flush()>: 3
<java.net.URL: java.lang.String getQuery()>: 3
<java.io.PrintStream: void println(java.lang.String)>: 3
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 3
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>: 3
<java.net.ServerSocket: void close()>: 3
<javax.net.ssl.HttpsURLConnection: void <init>(java.net.URL)>: 3
<android.net.http.AndroidHttpClient: java.io.InputStream getUngzippedContent(org.apache.http.HttpEntity)>: 3
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 3
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 3
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 3
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 3
<java.net.ServerSocket: int getLocalPort()>: 3
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>: 3
<java.io.File: void <init>(java.io.File,java.lang.String)>: 3
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 3
<android.database.sqlite.SQLiteOpenHelper: void close()>: 3
<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getErrorStream()>: 3
<java.io.RandomAccessFile: void readFully(byte[])>: 3
<java.io.DataOutputStream: void writeLong(long)>: 3
<android.net.NetworkInfo: int getSubtype()>: 3
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 3
<java.io.BufferedReader: void close()>: 3
<java.io.OutputStream: void <init>()>: 3
<java.nio.channels.ServerSocketChannel: java.nio.channels.ServerSocketChannel open()>: 3
<java.util.zip.DeflaterOutputStream: void close()>: 3
<java.net.Socket: java.io.OutputStream getOutputStream()>: 3
<java.io.FilterOutputStream: void close()>: 3
<java.io.File: boolean delete()>: 3
<java.io.RandomAccessFile: long length()>: 3
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 3
<android.net.NetworkInfo: java.lang.String getTypeName()>: 3
<android.database.sqlite.SQLiteClosable: void close()>: 3
<java.io.FilterInputStream: int read(byte[])>: 3
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 2
<com.newrelic.agent.android.harvest.ConnectInformation: boolean equals(java.lang.Object)>: 2
<java.io.Reader: int read(char[])>: 1
<com.newrelic.com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>: 1
<com.newrelic.com.google.gson.internal.bind.JsonTreeWriter$1: void <init>()>: 1
<java.io.EOFException: void <init>(java.lang.String)>: 1
<java.io.Writer: void <init>()>: 1
<java.io.Writer: void write(int)>: 1
<com.newrelic.agent.android.harvest.DeviceInformation: boolean equals(java.lang.Object)>: 1
<java.io.Writer: java.io.Writer append(char)>: 1
<java.io.Writer: void write(java.lang.String,int,int)>: 1
<com.newrelic.agent.android.harvest.ApplicationInformation: boolean equals(java.lang.Object)>: 1
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 1
<java.io.StringReader: void <init>(java.lang.String)>: 1
<java.io.Reader: int read(char[],int,int)>: 1
