Duration => 1326
UI Thread => 686
Worker Thread => 2017

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 76
<java.io.File: java.lang.String getAbsolutePath()>: 47
<android.database.Cursor: void close()>: 39
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 37
<java.io.InputStream: void close()>: 26
<java.io.PrintStream: void println(java.lang.String)>: 26
<java.net.URL: void <init>(java.lang.String)>: 19
<java.net.URLConnection: void setReadTimeout(int)>: 19
<java.net.URL: java.net.URLConnection openConnection()>: 19
<java.net.URLConnection: java.io.InputStream getInputStream()>: 19
<java.net.URLConnection: void setConnectTimeout(int)>: 19
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 18
<java.io.File: boolean exists()>: 17
<java.io.DataInputStream: int read(byte[])>: 17
<java.io.DataInputStream: void <init>(java.io.InputStream)>: 16
<java.io.DataInputStream: byte readByte()>: 15
<java.io.DataInputStream: short readShort()>: 15
<java.io.File: void <init>(java.lang.String)>: 15
<java.io.FileInputStream: void <init>(java.lang.String)>: 14
<java.io.DataInputStream: int readInt()>: 13
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>: 12
<java.lang.Object: boolean equals(java.lang.Object)>: 12
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 12
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 8
<android.graphics.Bitmap: int getHeight()>: 7
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>: 6
<java.io.InputStream: int read(byte[])>: 6
<java.io.OutputStream: void flush()>: 6
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 5
<android.content.res.AssetFileDescriptor: void close()>: 5
<java.io.OutputStream: void close()>: 4
<android.graphics.Bitmap: void recycle()>: 4
<java.io.OutputStream: void write(byte[],int,int)>: 4
<java.io.DataInputStream: float readFloat()>: 4
<java.io.FilterInputStream: void close()>: 4
<java.net.HttpURLConnection: int getResponseCode()>: 4
<android.graphics.BitmapFactory$Options: void <init>()>: 3
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 3
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>: 3
<java.io.File: java.lang.String getName()>: 3
<java.io.FileOutputStream: void <init>(java.lang.String)>: 3
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 3
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 3
<java.io.FileOutputStream: void <init>(java.io.File)>: 3
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 3
<android.net.NetworkInfo: boolean isConnected()>: 3
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 2
<java.io.File: boolean renameTo(java.io.File)>: 2
<java.io.FileInputStream: void <init>(java.io.File)>: 2
<java.io.FileOutputStream: void write(byte[],int,int)>: 2
<android.graphics.drawable.BitmapDrawable: void setTargetDensity(int)>: 2
<java.io.File: long lastModified()>: 2
<java.net.URL: java.lang.String toString()>: 2
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 2
<java.io.InputStream: int read()>: 2
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 2
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 2
<java.io.File: boolean mkdir()>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 2
<java.net.URLConnection: java.util.Map getHeaderFields()>: 2
<java.io.ObjectInputStream: void close()>: 2
<java.io.FileInputStream: void close()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory$Options)>: 2
<java.io.ObjectInputStream: java.lang.Object readObject()>: 2
<java.io.BufferedReader: java.lang.String readLine()>: 2
<java.io.File: boolean createNewFile()>: 2
<java.io.ByteArrayOutputStream: void <init>()>: 2
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 2
<java.io.DataInputStream: int readUnsignedByte()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>: 2
<java.io.File: boolean delete()>: 2
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 2
<java.io.FileOutputStream: void close()>: 2
<java.io.BufferedReader: void <init>(java.io.Reader)>: 2
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 2
<java.io.File: boolean mkdirs()>: 2
<java.io.File: long length()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 1
<java.lang.String: int hashCode()>: 1
<android.graphics.Bitmap: int getWidth()>: 1
<java.lang.Object: int hashCode()>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 90
<java.net.URL: java.net.URLConnection openConnection()>: 75
<java.net.URL: void <init>(java.lang.String)>: 75
<java.net.URLConnection: void setReadTimeout(int)>: 66
<java.net.URLConnection: void setConnectTimeout(int)>: 66
<java.net.HttpURLConnection: int getResponseCode()>: 53
<java.io.InputStream: void close()>: 46
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 44
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>: 42
<java.net.URLConnection: void setDoOutput(boolean)>: 42
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 42
<java.io.BufferedWriter: void close()>: 42
<java.io.Writer: void write(java.lang.String)>: 42
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 42
<java.io.File: void <init>(java.lang.String)>: 41
<java.net.URLConnection: java.io.InputStream getInputStream()>: 39
<java.io.File: boolean exists()>: 38
<android.database.Cursor: void close()>: 38
<java.io.PrintStream: void println(java.lang.String)>: 36
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 35
<java.io.File: java.lang.String getAbsolutePath()>: 35
<java.io.DataOutputStream: void <init>(java.io.OutputStream)>: 32
<java.io.DataOutputStream: void flush()>: 32
<java.io.FilterOutputStream: void close()>: 32
<java.net.URLConnection: void setUseCaches(boolean)>: 32
<java.io.OutputStream: void close()>: 31
<java.io.InputStream: int read(byte[])>: 29
<java.io.FileOutputStream: void <init>(java.lang.String)>: 25
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 25
<java.io.ByteArrayOutputStream: void <init>()>: 25
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 23
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 22
<android.net.Uri$Builder: void <init>()>: 22
<java.io.BufferedWriter: void flush()>: 22
<android.net.Uri$Builder: android.net.Uri build()>: 22
<android.graphics.Bitmap: void recycle()>: 21
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 21
<java.io.OutputStream: void flush()>: 20
<android.graphics.Bitmap: int getHeight()>: 16
<java.io.FilterOutputStream: void write(byte[])>: 16
<android.graphics.Bitmap: int getWidth()>: 16
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 15
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 15
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 15
<java.io.File: boolean delete()>: 15
<java.net.InetAddress: java.lang.String getHostAddress()>: 13
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>: 13
<java.io.PrintStream: void print(java.lang.String)>: 13
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 13
<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>: 13
<java.net.InetAddress: boolean isLoopbackAddress()>: 13
<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>: 13
<java.io.FileOutputStream: void <init>(java.io.File)>: 13
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 12
<com.mobimento.caponate.util.db.DbHelper: void close()>: 12
<android.database.sqlite.SQLiteOpenHelper: void close()>: 12
<android.database.sqlite.SQLiteClosable: void close()>: 12
<java.lang.Integer: boolean equals(java.lang.Object)>: 10
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>: 10
<java.io.OutputStream: void write(byte[],int,int)>: 9
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 9
<java.io.BufferedReader: java.lang.String readLine()>: 9
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 9
<java.io.BufferedReader: void <init>(java.io.Reader)>: 9
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 8
<java.io.File: java.lang.String getName()>: 8
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 8
<java.lang.Object: boolean equals(java.lang.Object)>: 8
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 8
<java.io.ByteArrayOutputStream: void close()>: 8
<java.net.URL: java.io.InputStream openStream()>: 7
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 6
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>: 6
<java.io.FileOutputStream: void close()>: 6
<java.net.Socket: void close()>: 6
<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>: 5
<java.io.ByteArrayInputStream: void <init>(byte[])>: 5
<java.io.FilterOutputStream: void flush()>: 4
<java.net.URI: java.net.URI create(java.lang.String)>: 4
<java.net.Socket: java.io.InputStream getInputStream()>: 4
<android.graphics.BitmapFactory$Options: void <init>()>: 4
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>: 4
<java.io.OutputStream: void write(byte[])>: 4
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 4
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>: 4
<java.net.Socket: java.io.OutputStream getOutputStream()>: 4
<java.io.ObjectOutputStream: void close()>: 4
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 3
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 3
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 3
<java.io.File: void <init>(java.io.File,java.lang.String)>: 3
<java.io.InputStream: int read(byte[],int,int)>: 3
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 3
<java.util.zip.ZipInputStream: void close()>: 2
<java.io.FileInputStream: void <init>(java.io.File)>: 2
<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>: 2
<java.io.InputStream: int read()>: 2
<java.net.URI: java.lang.String getRawAuthority()>: 2
<java.net.URI: java.lang.String getHost()>: 2
<java.io.ObjectInputStream: void close()>: 2
<java.io.FileInputStream: void close()>: 2
<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>: 2
<java.io.ByteArrayOutputStream: int size()>: 2
<java.net.URI: java.lang.String getRawQuery()>: 2
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>: 2
<java.io.ByteArrayOutputStream: void write(int)>: 2
<java.net.URI: java.lang.String getUserInfo()>: 2
<java.net.URI: int getPort()>: 2
<java.io.IOException: void <init>(java.lang.String)>: 2
<java.io.FilterInputStream: void <init>(java.io.InputStream)>: 2
<java.net.URI: java.lang.String getScheme()>: 2
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 2
<java.io.EOFException: void <init>(java.lang.String)>: 2
<java.io.File: boolean setLastModified(long)>: 2
<java.io.File: boolean renameTo(java.io.File)>: 2
<java.io.FileOutputStream: void write(byte[],int,int)>: 2
<java.io.FilterInputStream: int read(byte[],int,int)>: 2
<java.net.Socket: void connect(java.net.SocketAddress,int)>: 2
<instantcoffee.bw: void <init>(java.io.InputStream)>: 2
<org.altbeacon.beacon.Beacon: int hashCode()>: 2
<java.io.FilterInputStream: long skip(long)>: 2
<java.net.URI: java.lang.String toString()>: 2
<java.io.FilterOutputStream: void write(int)>: 2
<instantcoffee.by: void <init>(java.io.OutputStream)>: 2
<java.io.ObjectInputStream: java.lang.Object readObject()>: 2
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 2
<java.net.URI: java.lang.String getRawPath()>: 2
<java.io.FilterInputStream: int read(byte[])>: 2
<java.io.File: java.lang.String[] list()>: 1
<java.io.File: boolean isDirectory()>: 1
<java.io.File: long length()>: 1
<java.io.File: boolean mkdir()>: 1
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 1
<java.lang.Object: int hashCode()>: 1
<java.io.DataInputStream: void <init>(java.io.InputStream)>: 1
<java.util.zip.ZipInputStream: int available()>: 1
<java.io.FileInputStream: void <init>(java.lang.String)>: 1
<java.net.URLConnection: int getContentLength()>: 1
