Duration => 1220
UI Thread => 1593
Worker Thread => 1207

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 297
<java.io.PrintStream: void println(java.lang.String)>: 103
<java.lang.String: int hashCode()>: 75
<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String)>: 65
<java.lang.Object: java.lang.String toString()>: 50
<java.io.File: void <init>(java.lang.String)>: 50
<java.io.File: boolean exists()>: 37
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 36
<android.net.NetworkInfo: boolean isConnected()>: 36
<java.io.IOException: void <init>(java.lang.String)>: 32
<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String,java.lang.Throwable)>: 30
<java.io.InputStream: void close()>: 27
<java.lang.Object: boolean equals(java.lang.Object)>: 23
<java.lang.Object: int hashCode()>: 21
<com.fasterxml.jackson.databind.JavaType: int hashCode()>: 20
<java.io.OutputStream: void write(byte[],int,int)>: 18
<java.io.FileOutputStream: void <init>(java.io.File)>: 18
<java.io.File: boolean isDirectory()>: 17
<java.io.InputStream: int read(byte[],int,int)>: 16
<java.net.URI: java.net.URI create(java.lang.String)>: 15
<java.io.CharConversionException: void <init>(java.lang.String)>: 15
<com.fasterxml.jackson.core.JsonGenerationException: void <init>(java.lang.String)>: 15
<java.io.InputStream: int read(byte[])>: 14
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 14
<java.io.File: boolean mkdirs()>: 14
<java.io.File: java.lang.String getPath()>: 13
<java.io.File: void <init>(java.io.File,java.lang.String)>: 13
<java.io.FilterOutputStream: void close()>: 11
<java.io.File: boolean delete()>: 11
<java.io.InputStream: void <init>()>: 10
<java.net.InetAddress: java.lang.String toString()>: 10
<com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>: 10
<com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey: int hashCode()>: 10
<java.util.Locale: boolean equals(java.lang.Object)>: 10
<java.io.FileOutputStream: void close()>: 10
<com.fasterxml.jackson.core.base.ParserBase: void close()>: 10
<com.fasterxml.jackson.databind.JavaType: boolean equals(java.lang.Object)>: 10
<com.fasterxml.jackson.core.util.ByteArrayBuilder: void <init>()>: 10
<java.net.URL: void <init>(java.lang.String)>: 10
<java.io.OutputStream: void write(byte[])>: 10
<java.io.OutputStream: void <init>()>: 10
<com.fasterxml.jackson.core.sym.Name: int hashCode()>: 10
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 9
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 9
<java.io.ByteArrayOutputStream: void <init>()>: 9
<java.io.ByteArrayOutputStream: void close()>: 9
<android.database.Cursor: void close()>: 9
<java.io.File: boolean canRead()>: 8
<java.io.File: java.lang.String getAbsolutePath()>: 8
<java.io.StringWriter: void <init>()>: 7
<java.io.PrintWriter: void <init>(java.io.Writer)>: 7
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 7
<java.io.StringWriter: java.lang.String toString()>: 7
<java.io.FileOutputStream: void write(byte[])>: 7
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 7
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 6
<java.io.OutputStream: void close()>: 6
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>: 6
<java.io.FilterOutputStream: void write(byte[])>: 6
<java.io.FilterInputStream: int read(byte[])>: 6
<java.io.Closeable: void close()>: 5
<java.math.BigInteger: int hashCode()>: 5
<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>: 5
<java.io.Reader: void <init>()>: 5
<java.io.ByteArrayInputStream: void close()>: 5
<java.io.Reader: void close()>: 5
<java.io.BufferedOutputStream: void write(byte[],int,int)>: 5
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 5
<java.net.InetSocketAddress: int getPort()>: 5
<java.io.ByteArrayInputStream: void <init>(byte[])>: 5
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>: 5
<java.io.File: boolean createNewFile()>: 5
<java.util.zip.GZIPInputStream: void close()>: 5
<com.fasterxml.jackson.databind.util.TokenBuffer: void close()>: 5
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String,java.lang.Throwable)>: 5
<java.net.InetSocketAddress: java.lang.String getHostName()>: 5
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>: 5
<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>: 5
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 5
<java.io.File: boolean isFile()>: 5
<android.graphics.Bitmap: int getWidth()>: 5
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String)>: 5
<com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>: 5
<com.fasterxml.jackson.databind.deser.UnresolvedForwardReference: void <init>(java.lang.String)>: 5
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 5
<java.net.InetSocketAddress: java.net.InetAddress getAddress()>: 5
<java.lang.Double: int hashCode()>: 5
<com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey: boolean equals(java.lang.Object)>: 5
<com.fasterxml.jackson.core.JsonParser: void close()>: 5
<java.io.Reader: int read(char[],int,int)>: 5
<android.graphics.Bitmap: void recycle()>: 4
<com.couchbase.lite.internal.database.sqlite.SQLiteClosable: void close()>: 4
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 4
<android.graphics.BitmapFactory$Options: void <init>()>: 4
<java.io.File: boolean renameTo(java.io.File)>: 4
<android.graphics.Bitmap: int getHeight()>: 4
<java.io.FileInputStream: void <init>(java.io.File)>: 3
<java.io.File: java.lang.String getName()>: 3
<java.io.OutputStream: void flush()>: 3
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>: 3
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 3
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>: 3
<android.net.Uri: boolean equals(java.lang.Object)>: 2
<android.net.NetworkInfo: boolean isAvailable()>: 2
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 2
<android.net.ConnectivityManager: boolean getBackgroundDataSetting()>: 2
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<java.util.zip.ZipInputStream: void close()>: 1
<java.io.File: boolean isAbsolute()>: 1
<java.nio.channels.spi.AbstractInterruptibleChannel: void close()>: 1
<java.io.File: java.lang.String[] list()>: 1
<java.io.File: long length()>: 1
<java.io.File: boolean mkdir()>: 1
<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>: 1
<com.couchbase.lite.internal.database.sqlite.SQLiteConnectionPool: void close()>: 1
<java.io.File: void deleteOnExit()>: 1
<java.io.File: boolean canWrite()>: 1
<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>: 1
<java.io.FileOutputStream: void write(byte[],int,int)>: 1
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>: 1
<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 1
<java.io.File: java.io.File[] listFiles()>: 1
<android.graphics.Bitmap: boolean isRecycled()>: 1
<android.graphics.BitmapFactory$Options: void requestCancelDecode()>: 1
<java.io.File: java.lang.String toString()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 1
<android.database.sqlite.SQLiteClosable: void close()>: 1
<com.couchbase.lite.internal.database.cursor.Cursor: void close()>: 1
----------------StartWorker----------------
<java.io.IOException: void <init>(java.lang.String)>: 123
<java.lang.Object: java.lang.String toString()>: 118
<java.lang.String: boolean equals(java.lang.Object)>: 97
<java.io.InputStream: void close()>: 72
<java.net.URI: java.net.URI create(java.lang.String)>: 58
<java.io.PrintStream: void println(java.lang.String)>: 46
<android.graphics.Bitmap: int getHeight()>: 36
<org.apache.http.MalformedChunkCodingException: void <init>(java.lang.String)>: 36
<android.graphics.Bitmap: int getWidth()>: 36
<java.lang.Enum: boolean equals(java.lang.Object)>: 32
<com.fasterxml.jackson.databind.JavaType: boolean equals(java.lang.Object)>: 28
<android.graphics.Bitmap: void recycle()>: 27
<java.net.Socket: void close()>: 22
<java.io.InputStream: int read(byte[],int,int)>: 21
<java.io.ByteArrayInputStream: void <init>(byte[])>: 20
<java.io.InputStream: void <init>()>: 17
<java.io.InputStream: int read(byte[])>: 14
<java.lang.String: int hashCode()>: 13
<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String)>: 13
<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>: 12
<java.io.Closeable: void close()>: 10
<java.net.URI: void <init>(java.lang.String)>: 10
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 9
<java.io.OutputStream: void write(byte[],int,int)>: 9
<java.io.InputStream: int read()>: 9
<java.lang.Object: boolean equals(java.lang.Object)>: 9
<org.apache.http.impl.io.ContentLengthInputStream: int read(byte[])>: 9
<org.apache.http.impl.io.ChunkedInputStream: int read(byte[])>: 9
<java.io.FileOutputStream: void close()>: 9
<org.apache.http.impl.io.ContentLengthInputStream: int read(byte[],int,int)>: 9
<org.apache.http.impl.io.ChunkedInputStream: int read(byte[],int,int)>: 9
<org.apache.http.ConnectionClosedException: void <init>(java.lang.String)>: 9
<org.apache.http.TruncatedChunkException: void <init>(java.lang.String)>: 9
<java.io.FileOutputStream: void <init>(java.io.File)>: 9
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 9
<java.io.FileOutputStream: void write(byte[])>: 9
<java.net.URI: boolean isAbsolute()>: 8
<java.net.URI: java.lang.String getScheme()>: 8
<org.apache.http.HttpHost: boolean equals(java.lang.Object)>: 8
<java.io.OutputStream: void <init>()>: 8
<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String,java.lang.Throwable)>: 6
<java.net.URI: java.lang.String getHost()>: 6
<java.net.Socket: void setSoTimeout(int)>: 6
<java.net.URI: int getPort()>: 6
<org.apache.http.conn.routing.HttpRoute: boolean equals(java.lang.Object)>: 6
<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>: 4
<java.lang.Object: int hashCode()>: 4
<com.fasterxml.jackson.databind.JavaType: int hashCode()>: 4
<java.net.URL: void <init>(java.lang.String)>: 4
<java.net.URI: java.lang.String toString()>: 4
<java.io.OutputStream: void write(byte[])>: 4
<java.net.URI: java.lang.String toASCIIString()>: 4
<java.net.URI: java.lang.String getAuthority()>: 4
<java.net.URI: java.lang.String getFragment()>: 4
<java.net.URI: java.lang.String getPath()>: 4
<java.io.CharConversionException: void <init>(java.lang.String)>: 3
<java.io.OutputStream: void close()>: 3
<com.fasterxml.jackson.core.JsonGenerationException: void <init>(java.lang.String)>: 3
<java.io.IOException: void <init>()>: 2
<java.net.InetAddress: java.lang.String getHostName()>: 2
<java.net.ProtocolException: void <init>(java.lang.String)>: 2
<java.net.Socket: void shutdownOutput()>: 2
<java.net.URI: java.lang.String getRawFragment()>: 2
<java.net.Socket: int getSendBufferSize()>: 2
<java.net.URI: java.net.URI resolve(java.net.URI)>: 2
<java.net.URL: java.net.URLConnection openConnection()>: 2
<org.apache.http.client.ClientProtocolException: void <init>(java.lang.String)>: 2
<java.net.Socket: void setSoLinger(boolean,int)>: 2
<java.io.OutputStream: void flush()>: 2
<java.io.InterruptedIOException: void <init>()>: 2
<java.net.InetAddress: java.lang.String toString()>: 2
<java.net.URISyntaxException: java.lang.String getMessage()>: 2
<java.net.Socket: int getSoTimeout()>: 2
<org.apache.http.impl.io.IdentityOutputStream: void write(byte[],int,int)>: 2
<java.net.URI: java.lang.String getRawQuery()>: 2
<java.io.InterruptedIOException: void <init>(java.lang.String)>: 2
<java.net.HttpURLConnection: int getResponseCode()>: 2
<java.net.Socket: java.io.InputStream getInputStream()>: 2
<org.apache.http.impl.io.ContentLengthOutputStream: void write(byte[],int,int)>: 2
<com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>: 2
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 2
<com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey: int hashCode()>: 2
<java.util.Locale: boolean equals(java.lang.Object)>: 2
<com.fasterxml.jackson.core.base.ParserBase: void close()>: 2
<java.net.URLConnection: long getDate()>: 2
<java.net.Socket: void shutdownInput()>: 2
<org.apache.http.impl.io.ChunkedOutputStream: void write(byte[],int,int)>: 2
<com.fasterxml.jackson.core.util.ByteArrayBuilder: void <init>()>: 2
<java.net.Socket: void setTcpNoDelay(boolean)>: 2
<java.net.ConnectException: void <init>(java.lang.String)>: 2
<java.math.BigInteger: boolean equals(java.lang.Object)>: 2
<org.apache.http.NoHttpResponseException: void <init>(java.lang.String)>: 2
<java.net.Socket: java.io.OutputStream getOutputStream()>: 2
<org.apache.http.client.ClientProtocolException: void <init>(java.lang.Throwable)>: 2
<java.net.InetAddress: boolean equals(java.lang.Object)>: 2
<java.net.URI: java.lang.String getRawPath()>: 2
<java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>: 2
<java.net.URI: java.lang.String getQuery()>: 2
<com.fasterxml.jackson.core.sym.Name: int hashCode()>: 2
<java.net.Socket: int getReceiveBufferSize()>: 2
<java.math.BigInteger: int hashCode()>: 1
<java.io.Reader: void <init>()>: 1
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 1
<java.io.Reader: void close()>: 1
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 1
<java.net.InetSocketAddress: int getPort()>: 1
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>: 1
<com.fasterxml.jackson.databind.util.TokenBuffer: void close()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 1
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String,java.lang.Throwable)>: 1
<java.io.File: void <init>(java.lang.String)>: 1
<java.net.InetSocketAddress: java.lang.String getHostName()>: 1
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>: 1
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 1
<java.io.ByteArrayOutputStream: void <init>()>: 1
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String)>: 1
<com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>: 1
<com.fasterxml.jackson.databind.deser.UnresolvedForwardReference: void <init>(java.lang.String)>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 1
<java.io.ByteArrayOutputStream: void close()>: 1
<java.net.InetSocketAddress: java.net.InetAddress getAddress()>: 1
<java.lang.Double: int hashCode()>: 1
<com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey: boolean equals(java.lang.Object)>: 1
<com.fasterxml.jackson.core.JsonParser: void close()>: 1
<java.io.Reader: int read(char[],int,int)>: 1
