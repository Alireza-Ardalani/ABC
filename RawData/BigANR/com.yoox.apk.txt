Duration => 2060
UI Thread => 135
Worker Thread => 201

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 60
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 10
<java.lang.Object: boolean equals(java.lang.Object)>: 5
<java.io.File: boolean exists()>: 5
<java.io.File: void <init>(java.io.File,java.lang.String)>: 4
<java.io.File: java.lang.String getAbsolutePath()>: 4
<java.io.File: void <init>(java.lang.String)>: 3
<com.fasterxml.jackson.core.JsonParser: void close()>: 2
<java.io.File: boolean mkdirs()>: 2
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 1
<java.io.FileOutputStream: java.io.FileDescriptor getFD()>: 1
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>: 1
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>: 1
<java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>: 1
<java.io.FileInputStream: void <init>(java.io.File)>: 1
<java.io.Closeable: void close()>: 1
<android.net.Uri$Builder: android.net.Uri build()>: 1
<java.io.File: boolean isDirectory()>: 1
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>: 1
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>: 1
<java.io.InputStream: int read(byte[])>: 1
<java.net.URL: void <init>(java.lang.String)>: 1
<java.io.File: long length()>: 1
<java.io.File: boolean setExecutable(boolean,boolean)>: 1
<java.util.zip.ZipFile: void close()>: 1
<java.net.InetAddress: java.lang.String getHostAddress()>: 1
<java.io.OutputStream: void write(byte[],int,int)>: 1
<java.io.File: java.lang.String getName()>: 1
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>: 1
<java.io.OutputStream: void flush()>: 1
<java.io.File: java.lang.String getCanonicalPath()>: 1
<java.lang.Object: java.lang.String toString()>: 1
<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>: 1
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 1
<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>: 1
<java.io.File: boolean setWritable(boolean)>: 1
<java.io.File: boolean setReadable(boolean,boolean)>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<java.io.File: boolean createNewFile()>: 1
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>: 1
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 1
<java.io.FileDescriptor: void sync()>: 1
<java.io.File: boolean delete()>: 1
<java.io.EOFException: void <init>()>: 1
<java.io.StringReader: void <init>(java.lang.String)>: 1
<java.net.InetAddress: boolean isLoopbackAddress()>: 1
<com.fasterxml.jackson.core.base.ParserBase: void close()>: 1
<com.fasterxml.jackson.databind.JavaType: boolean equals(java.lang.Object)>: 1
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 51
<java.lang.Object: boolean equals(java.lang.Object)>: 18
<java.lang.String: int hashCode()>: 12
<java.lang.Object: java.lang.String toString()>: 9
<java.lang.Boolean: boolean equals(java.lang.Object)>: 9
<java.lang.Object: int hashCode()>: 8
<com.fasterxml.jackson.databind.JavaType: boolean equals(java.lang.Object)>: 8
<com.fasterxml.jackson.databind.JavaType: int hashCode()>: 6
<java.io.IOException: void <init>(java.lang.String)>: 5
<java.io.InputStream: void close()>: 4
<java.io.InputStream: int read(byte[],int,int)>: 4
<java.io.OutputStream: void write(byte[],int,int)>: 3
<java.net.URI: java.net.URI create(java.lang.String)>: 3
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 3
<java.io.CharConversionException: void <init>(java.lang.String)>: 3
<com.fasterxml.jackson.core.JsonParser: void close()>: 3
<com.fasterxml.jackson.core.base.ParserBase: void close()>: 3
<com.fasterxml.jackson.core.util.ByteArrayBuilder: void <init>()>: 2
<java.io.Closeable: void close()>: 2
<java.net.URL: void <init>(java.lang.String)>: 2
<android.net.SSLCertificateSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getHttpSocketFactory(int,android.net.SSLSessionCache)>: 2
<java.io.OutputStream: void write(byte[])>: 2
<java.io.InputStream: void <init>()>: 2
<java.net.InetAddress: java.lang.String toString()>: 2
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>: 2
<java.io.OutputStream: void <init>()>: 2
<com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>: 2
<java.util.Locale: boolean equals(java.lang.Object)>: 2
<android.net.SSLSessionCache: void <init>(android.content.Context)>: 2
<java.io.OutputStream: void close()>: 1
<java.net.InetSocketAddress: java.lang.String getHostName()>: 1
<java.net.Proxy: void <init>(java.net.Proxy$Type,java.net.SocketAddress)>: 1
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>: 1
<com.fasterxml.jackson.core.io.MergedStream: int read(byte[],int,int)>: 1
<java.io.InputStream: int read(byte[])>: 1
<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>: 1
<java.math.BigInteger: int hashCode()>: 1
<java.net.InetAddress: java.lang.String getHostAddress()>: 1
<java.io.Reader: void <init>()>: 1
<java.io.Reader: void close()>: 1
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 1
<java.net.InetSocketAddress: int getPort()>: 1
<com.fasterxml.jackson.databind.type.TypeBindings: boolean equals(java.lang.Object)>: 1
<com.fasterxml.jackson.databind.util.TypeKey: int hashCode()>: 1
<android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient newInstance(java.lang.String,android.content.Context)>: 1
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String)>: 1
<com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>: 1
<java.io.File: java.lang.String getAbsolutePath()>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 1
<java.net.InetSocketAddress: java.net.InetAddress getAddress()>: 1
<java.lang.Double: int hashCode()>: 1
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String,java.lang.Throwable)>: 1
<java.io.File: void <init>(java.lang.String)>: 1
<java.io.Reader: int read(char[],int,int)>: 1
