Duration => 6915
UI Thread => 1152
Worker Thread => 2938

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 525
<java.lang.Object: boolean equals(java.lang.Object)>: 90
<com.alibaba.fastjson.parser.JSONLexerBase: void close()>: 81
<java.lang.Object: java.lang.String toString()>: 45
<java.lang.String: int hashCode()>: 31
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 19
<java.io.File: boolean exists()>: 19
<java.io.ByteArrayOutputStream: void <init>()>: 19
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 19
<java.io.File: void <init>(java.lang.String)>: 19
<java.io.File: long length()>: 13
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 11
<java.io.ByteArrayInputStream: void <init>(byte[])>: 10
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>: 9
<java.io.InputStream: int read(byte[])>: 9
<java.io.InputStream: void close()>: 9
<java.net.URL: void <init>(java.lang.String)>: 9
<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>: 9
<java.net.URI: java.net.URI create(java.lang.String)>: 9
<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>: 9
<java.sql.Time: java.sql.Time valueOf(java.lang.String)>: 9
<java.io.FilterInputStream: int read(byte[])>: 9
<com.alibaba.fastjson.parser.DefaultJSONParser: void close()>: 9
<java.io.File: boolean renameTo(java.io.File)>: 8
<java.io.File: java.lang.String getAbsolutePath()>: 8
<java.io.File: boolean isFile()>: 7
<java.io.File: void <init>(java.io.File,java.lang.String)>: 7
<java.io.File: boolean createNewFile()>: 7
<java.io.File: boolean delete()>: 7
<java.io.IOException: void <init>(java.lang.String)>: 6
<java.io.RandomAccessFile: void write(byte[])>: 6
<java.io.RandomAccessFile: void seek(long)>: 6
<java.io.RandomAccessFile: void close()>: 6
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>: 6
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 5
<java.io.PrintStream: void println(java.lang.String)>: 5
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 4
<android.graphics.Bitmap: int getHeight()>: 4
<android.graphics.Bitmap: int getWidth()>: 4
<android.graphics.BitmapFactory$Options: void <init>()>: 3
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>: 3
<java.io.File: java.io.File[] listFiles()>: 3
<android.net.NetworkInfo: boolean isConnected()>: 3
<java.io.EOFException: void <init>()>: 3
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>: 3
<android.database.Cursor: void close()>: 3
<java.io.File: boolean mkdirs()>: 3
<java.io.IOException: void <init>()>: 2
<android.graphics.Bitmap: void recycle()>: 2
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 2
<java.io.File: long lastModified()>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 2
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 2
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>: 2
<java.io.File: boolean mkdir()>: 2
<java.io.Writer: void write(java.lang.String)>: 2
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 2
<java.io.Writer: void close()>: 2
<android.graphics.Bitmap: boolean isRecycled()>: 2
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<java.io.FileInputStream: void <init>(java.io.File)>: 1
<java.io.File: boolean isDirectory()>: 1
<com.lib.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: void close()>: 1
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 1
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 1
<java.nio.charset.Charset: boolean equals(java.lang.Object)>: 1
<java.io.ByteArrayOutputStream: void <init>(int)>: 1
<java.io.ObjectInputStream: void close()>: 1
<java.io.ObjectInputStream: java.lang.Object readObject()>: 1
<java.io.InputStream: int read(byte[],int,int)>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<android.net.NetworkInfo: boolean isAvailable()>: 1
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 1
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 1
<java.io.Writer: void flush()>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 570
<com.alibaba.fastjson.serializer.SerializeWriter: void write(int)>: 315
<com.alibaba.fastjson.serializer.SerializeWriter: void write(java.lang.String)>: 207
<java.lang.Object: java.lang.String toString()>: 135
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 90
<java.io.File: java.lang.String getAbsolutePath()>: 87
<java.io.File: boolean exists()>: 75
<java.lang.Object: boolean equals(java.lang.Object)>: 63
<java.io.File: void <init>(java.io.File,java.lang.String)>: 60
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 48
<java.io.PrintStream: void println(java.lang.String)>: 45
<android.database.Cursor: void close()>: 45
<java.io.File: void <init>(java.lang.String)>: 40
<com.alibaba.fastjson.serializer.SerializeWriter: void close()>: 36
<java.io.File: boolean delete()>: 35
<java.io.File: boolean mkdirs()>: 31
<java.io.StringWriter: void <init>()>: 28
<java.io.StringReader: void <init>(java.lang.String)>: 28
<java.io.File: long length()>: 27
<java.net.URI: java.lang.String getHost()>: 27
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 27
<java.io.Writer: void write(char[])>: 27
<java.io.Closeable: void close()>: 23
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 21
<com.alibaba.fastjson.serializer.SerializeWriter: void write(java.lang.String,int,int)>: 18
<com.alibaba.fastjson.serializer.SerializeWriter: void <init>()>: 18
<java.io.File: java.lang.String getPath()>: 18
<java.net.InetSocketAddress: int getPort()>: 18
<com.alibaba.fastjson.parser.DefaultJSONParser: void close()>: 18
<java.lang.Enum: boolean equals(java.lang.Object)>: 18
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 15
<java.io.File: boolean isFile()>: 15
<java.io.InputStream: int read(byte[],int,int)>: 15
<android.net.NetworkInfo: boolean isConnected()>: 15
<java.io.InputStream: void close()>: 14
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 13
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>: 13
<java.io.ByteArrayOutputStream: void <init>()>: 13
<java.io.File: boolean renameTo(java.io.File)>: 12
<java.io.FileInputStream: void <init>(java.io.File)>: 11
<java.io.OutputStream: void write(byte[],int,int)>: 11
<java.io.OutputStream: void flush()>: 11
<java.lang.String: int hashCode()>: 11
<java.lang.Object: int hashCode()>: 11
<java.io.File: boolean isDirectory()>: 10
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>: 9
<java.net.Socket: java.net.SocketAddress getLocalSocketAddress()>: 9
<java.net.Socket: void <init>(java.net.Proxy)>: 9
<java.io.File: long lastModified()>: 9
<java.nio.CharBuffer: java.lang.String toString()>: 9
<java.net.InetAddress: java.lang.String getHostAddress()>: 9
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 9
<java.io.File: java.lang.String getName()>: 9
<java.io.Reader: void close()>: 9
<java.net.URI: java.net.URI create(java.lang.String)>: 9
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket()>: 9
<android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getDefault(int,android.net.SSLSessionCache)>: 9
<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>: 9
<java.net.URL: java.io.InputStream openStream()>: 9
<java.io.BufferedReader: java.lang.String readLine()>: 9
<java.nio.channels.Channel: void close()>: 9
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>: 9
<java.net.Socket: java.io.InputStream getInputStream()>: 9
<java.net.URI: int getPort()>: 9
<java.net.Socket: boolean isBound()>: 9
<java.net.URI: java.lang.String getScheme()>: 9
<java.io.Writer: void <init>()>: 9
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 9
<java.net.Socket: void connect(java.net.SocketAddress,int)>: 9
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>: 9
<java.io.InputStream: int read(byte[])>: 9
<java.net.URL: java.lang.String toString()>: 9
<java.net.URI: java.lang.String toString()>: 9
<java.net.Socket: boolean isClosed()>: 9
<com.alibaba.fastjson.parser.JSONLexerBase: void close()>: 9
<java.io.FilterOutputStream: void write(byte[])>: 9
<java.net.URI: java.lang.String getPath()>: 9
<java.net.Socket: java.io.OutputStream getOutputStream()>: 9
<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>: 9
<java.net.Socket: void close()>: 9
<java.io.FileOutputStream: void write(byte[])>: 9
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 9
<java.net.URI: java.lang.String getQuery()>: 9
<java.net.InetSocketAddress: java.net.InetAddress getAddress()>: 9
<java.io.BufferedReader: void <init>(java.io.Reader)>: 9
<android.net.SSLSessionCache: void <init>(android.content.Context)>: 9
<android.graphics.Bitmap: void recycle()>: 8
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>: 8
<android.graphics.Bitmap: int getHeight()>: 8
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 8
<java.io.File: boolean createNewFile()>: 6
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>: 6
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>: 6
<java.io.FileOutputStream: void <init>(java.io.File)>: 6
<android.graphics.Bitmap: int getWidth()>: 6
<java.io.RandomAccessFile: void write(byte[])>: 6
<android.graphics.Bitmap: boolean isRecycled()>: 6
<java.io.RandomAccessFile: void seek(long)>: 6
<java.io.RandomAccessFile: void close()>: 6
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>: 6
<android.graphics.BitmapFactory$Options: void <init>()>: 5
<java.io.InputStream: void reset()>: 4
<java.io.ByteArrayInputStream: void <init>(byte[])>: 4
<java.net.HttpURLConnection: int getResponseCode()>: 4
<java.io.IOException: void <init>(java.lang.String)>: 4
<java.io.Writer: void flush()>: 4
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 4
<java.io.Writer: void write(java.lang.String)>: 4
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 4
<java.io.InputStream: boolean markSupported()>: 4
<com.lib.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$2: void <init>()>: 3
<java.io.OutputStream: void <init>()>: 3
<java.io.IOException: void <init>()>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 2
<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>: 2
<java.net.URL: java.net.URLConnection openConnection()>: 2
<java.io.InputStream: void <init>()>: 2
<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>: 2
<android.graphics.Bitmap: int getRowBytes()>: 2
<com.lib.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot: void close()>: 2
<java.io.FilterInputStream: void <init>(java.io.InputStream)>: 2
<java.io.InputStream: int available()>: 2
<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>: 2
<java.net.URL: void <init>(java.lang.String)>: 2
<com.lib.nostra13.universalimageloader.core.assist.FlushedInputStream: void <init>(java.io.InputStream)>: 2
<java.net.URLConnection: void setReadTimeout(int)>: 2
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 2
<java.net.URLConnection: java.io.InputStream getInputStream()>: 2
<java.net.URLConnection: void setConnectTimeout(int)>: 2
<java.io.FileInputStream: void <init>(java.lang.String)>: 2
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 2
<java.net.URLConnection: int getContentLength()>: 2
