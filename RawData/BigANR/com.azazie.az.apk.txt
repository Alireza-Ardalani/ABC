Duration => 37
UI Thread => 302
Worker Thread => 104

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 63
<java.lang.Object: boolean equals(java.lang.Object)>: 27
<java.io.File: void <init>(java.lang.String)>: 14
<java.io.File: boolean exists()>: 12
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 10
<java.io.PrintStream: void println(java.lang.String)>: 10
<io.realm.internal.OsSharedRealm: void close()>: 9
<java.io.ByteArrayInputStream: void <init>(byte[])>: 8
<java.io.ObjectInputStream: void close()>: 7
<java.io.ObjectInputStream: java.lang.Object readObject()>: 7
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 7
<java.io.File: boolean delete()>: 7
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 6
<java.io.File: boolean isDirectory()>: 6
<java.io.File: void <init>(java.io.File,java.lang.String)>: 6
<java.io.File: java.lang.String getAbsolutePath()>: 6
<java.lang.Object: java.lang.String toString()>: 5
<io.realm.internal.RealmNotifier: void close()>: 5
<java.io.File: java.io.File[] listFiles()>: 5
<java.io.File: java.lang.String getName()>: 4
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>: 3
<java.io.InputStream: int read(byte[])>: 3
<io.realm.Realm: void close()>: 3
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 3
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>: 3
<io.realm.BaseRealm: void close()>: 3
<android.net.NetworkInfo: boolean isConnected()>: 3
<java.io.FileInputStream: void <init>(java.io.File)>: 2
<java.io.Closeable: void close()>: 2
<java.net.URI: void <init>(java.lang.String)>: 2
<java.io.File: boolean setExecutable(boolean,boolean)>: 2
<io.realm.internal.RealmProxyMediator: boolean equals(java.lang.Object)>: 2
<java.util.zip.ZipFile: void close()>: 2
<java.io.OutputStream: void write(byte[],int,int)>: 2
<java.io.File: boolean equals(java.lang.Object)>: 2
<io.realm.RealmConfiguration: boolean equals(java.lang.Object)>: 2
<java.io.File: boolean setWritable(boolean)>: 2
<java.io.File: boolean setReadable(boolean,boolean)>: 2
<java.io.FileOutputStream: void <init>(java.io.File)>: 2
<android.content.res.AssetFileDescriptor: void close()>: 2
<android.graphics.Bitmap: void setHasAlpha(boolean)>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 2
<java.lang.Boolean: boolean equals(java.lang.Object)>: 2
<java.io.File: boolean mkdirs()>: 2
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>: 2
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 1
<java.io.FileOutputStream: java.io.FileDescriptor getFD()>: 1
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 1
<java.io.File: long length()>: 1
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>: 1
<android.net.http.SslError: android.net.http.SslCertificate getCertificate()>: 1
<java.io.OutputStream: void flush()>: 1
<java.io.File: java.lang.String getCanonicalPath()>: 1
<java.io.File: boolean isFile()>: 1
<java.io.FileInputStream: void close()>: 1
<java.io.File: boolean createNewFile()>: 1
<java.io.ByteArrayOutputStream: void <init>()>: 1
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 1
<java.io.FileDescriptor: void sync()>: 1
<java.io.ByteArrayOutputStream: void close()>: 1
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 1
<java.io.File: java.io.File getParentFile()>: 1
<java.io.EOFException: void <init>()>: 1
<android.database.Cursor: void close()>: 1
<java.io.InputStream: int available()>: 1
<java.io.FileInputStream: int read(byte[])>: 1
----------------StartWorker----------------
<java.io.File: java.lang.String getAbsolutePath()>: 13
<java.io.File: void <init>(java.io.File,java.lang.String)>: 8
<android.graphics.BitmapFactory$Options: void <init>()>: 6
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 6
<java.io.FileOutputStream: void <init>(java.io.File)>: 5
<android.graphics.Bitmap: int getHeight()>: 3
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 3
<android.graphics.Bitmap: void recycle()>: 3
<java.io.File: boolean isDirectory()>: 3
<android.graphics.Bitmap: int getWidth()>: 3
<java.io.ByteArrayOutputStream: void <init>()>: 3
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 3
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 3
<java.io.ByteArrayOutputStream: void close()>: 3
<java.io.FileOutputStream: void write(byte[])>: 3
<java.io.OutputStream: void flush()>: 3
<java.io.FileOutputStream: void close()>: 3
<java.io.File: boolean mkdirs()>: 3
<java.io.File: boolean exists()>: 3
<java.io.File: boolean setWritable(boolean)>: 2
<java.io.File: boolean setReadable(boolean,boolean)>: 2
<java.io.Closeable: void close()>: 2
<java.io.InputStream: int read(byte[])>: 2
<java.io.File: boolean setExecutable(boolean,boolean)>: 2
<java.util.zip.ZipFile: void close()>: 2
<java.io.OutputStream: void write(byte[],int,int)>: 2
<java.io.File: boolean delete()>: 2
<java.io.File: java.io.File getParentFile()>: 2
<java.io.File: boolean isFile()>: 2
<java.io.File: void <init>(java.lang.String)>: 2
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>: 2
