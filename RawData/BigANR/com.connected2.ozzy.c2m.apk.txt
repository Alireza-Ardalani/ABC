Duration => 3065
UI Thread => 385
Worker Thread => 3686

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 134
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 24
<java.io.File: void <init>(java.lang.String)>: 20
<java.net.InetAddress: java.lang.String getHostAddress()>: 14
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>: 14
<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>: 14
<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>: 14
<android.net.NetworkInfo: boolean isConnected()>: 14
<java.net.InetAddress: boolean isLoopbackAddress()>: 14
<java.lang.Object: boolean equals(java.lang.Object)>: 12
<java.io.File: boolean exists()>: 7
<java.io.File: java.lang.String getAbsolutePath()>: 7
<java.io.File: boolean delete()>: 6
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 5
<android.graphics.Bitmap: int getHeight()>: 5
<android.graphics.Bitmap: int getWidth()>: 5
<android.graphics.BitmapFactory$Options: void <init>()>: 4
<java.io.File: long length()>: 4
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 4
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 4
<java.io.File: boolean mkdirs()>: 4
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 3
<java.io.FileOutputStream: void <init>(java.io.File)>: 3
<java.io.File: boolean createNewFile()>: 3
<java.lang.Long: boolean equals(java.lang.Object)>: 3
<java.io.FileOutputStream: void write(byte[])>: 3
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 3
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 2
<android.graphics.Bitmap: void recycle()>: 2
<java.io.FileInputStream: void <init>(java.io.File)>: 2
<java.io.InputStream: int read(byte[])>: 2
<java.io.InputStream: void close()>: 2
<java.io.File: java.lang.String getName()>: 2
<java.io.FileOutputStream: void <init>(java.lang.String)>: 2
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 2
<java.lang.String: int hashCode()>: 2
<java.io.ByteArrayOutputStream: void <init>()>: 2
<android.database.Cursor: void close()>: 2
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 2
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<java.io.File: boolean isDirectory()>: 1
<java.util.zip.ZipFile: void close()>: 1
<java.io.File: boolean equals(java.lang.Object)>: 1
<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>: 1
<java.io.FileInputStream: void close()>: 1
<java.io.File: void <init>(java.io.File,java.lang.String)>: 1
<java.io.ByteArrayInputStream: void <init>(byte[])>: 1
<java.io.IOException: void <init>(java.lang.String)>: 1
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>: 1
<java.io.FileOutputStream: void close()>: 1
<java.io.FileInputStream: int read(byte[])>: 1
<java.io.InputStream: int available()>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 691
<java.lang.Object: boolean equals(java.lang.Object)>: 122
<android.database.Cursor: void close()>: 80
<java.net.URL: java.net.URLConnection openConnection()>: 71
<java.net.URL: void <init>(java.lang.String)>: 71
<java.net.URLConnection: void setReadTimeout(int)>: 71
<java.net.URLConnection: java.io.InputStream getInputStream()>: 71
<java.net.URLConnection: void setConnectTimeout(int)>: 71
<java.io.File: void <init>(java.lang.String)>: 69
<java.io.IOException: void <init>(java.lang.String)>: 60
<java.net.HttpURLConnection: int getResponseCode()>: 57
<java.lang.String: int hashCode()>: 57
<java.net.URLConnection: void setDoOutput(boolean)>: 56
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 56
<java.io.OutputStream: void write(byte[])>: 56
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 45
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 43
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 42
<java.net.URI: void <init>(java.lang.String)>: 42
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 42
<java.net.URI: java.lang.String getScheme()>: 42
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 42
<java.net.Socket: boolean isConnected()>: 42
<java.net.Socket: java.io.OutputStream getOutputStream()>: 42
<java.net.URLConnection: void setDoInput(boolean)>: 42
<com.leanplum.internal.HybiParser$ProtocolError: void <init>(java.lang.String)>: 42
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 37
<java.io.File: boolean exists()>: 37
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 36
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 32
<java.io.InputStream: void close()>: 32
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 30
<java.io.BufferedReader: java.lang.String readLine()>: 30
<java.io.BufferedReader: void <init>(java.io.Reader)>: 30
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 29
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>: 28
<android.database.sqlite.SQLiteDatabase: boolean isOpen()>: 28
<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String)>: 28
<java.io.ByteArrayOutputStream: void reset()>: 28
<java.net.URI: java.lang.String getHost()>: 28
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 28
<java.net.URISyntaxException: java.lang.String getMessage()>: 28
<java.net.Socket: java.io.InputStream getInputStream()>: 28
<java.net.URI: int getPort()>: 28
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 28
<java.io.DataInputStream: void <init>(java.io.InputStream)>: 28
<java.net.URI: java.lang.String toString()>: 28
<java.io.Writer: void write(java.lang.String)>: 28
<java.io.ByteArrayOutputStream: void <init>()>: 28
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 28
<java.lang.Boolean: boolean equals(java.lang.Object)>: 28
<java.io.File: java.lang.String getAbsolutePath()>: 22
<java.io.File: long length()>: 20
<android.database.sqlite.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)>: 18
<java.io.InputStream: int read(byte[])>: 17
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 16
<java.io.File: java.lang.String getPath()>: 16
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 16
<java.io.OutputStream: void flush()>: 15
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>: 15
<java.io.OutputStream: void close()>: 15
<android.net.NetworkInfo: int getType()>: 15
<java.io.PrintWriter: void <init>(java.io.OutputStream)>: 14
<java.io.DataInputStream: int read(byte[],int,int)>: 14
<java.io.OutputStreamWriter: void close()>: 14
<de.tavendo.autobahn.NoCopyByteArrayOutputStream: void <init>(int)>: 14
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>: 14
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String)>: 14
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 14
<android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient newInstance(java.lang.String)>: 14
<android.database.sqlite.SQLiteDatabase: void setLockingEnabled(boolean)>: 14
<java.io.ByteArrayOutputStream: void <init>(int)>: 14
<java.io.ByteArrayOutputStream: int size()>: 14
<java.io.StringWriter: void <init>()>: 14
<java.io.PrintWriter: void flush()>: 14
<java.io.PrintWriter: void print(java.lang.String)>: 14
<java.io.PrintWriter: void <init>(java.io.Writer)>: 14
<java.io.DataInputStream: int read(byte[])>: 14
<java.io.InputStream: int available()>: 14
<java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>: 14
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 14
<java.io.OutputStreamWriter: void flush()>: 14
<java.io.StringWriter: java.lang.String toString()>: 14
<java.lang.Integer: boolean equals(java.lang.Object)>: 14
<java.net.Socket: boolean isClosed()>: 14
<java.io.DataInputStream: byte readByte()>: 14
<java.io.FilterInputStream: int available()>: 14
<android.database.sqlite.SQLiteOpenHelper: void close()>: 14
<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>: 14
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>: 14
<java.io.BufferedReader: void close()>: 14
<android.net.wifi.WifiInfo: java.lang.String getBSSID()>: 14
<java.net.URI: java.lang.String getPath()>: 14
<com.leanplum.internal.HybiParser$HappyDataInputStream: void <init>(java.io.InputStream)>: 14
<android.net.wifi.WifiInfo: java.lang.String getSSID()>: 14
<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>: 14
<java.net.Socket: void close()>: 14
<android.net.NetworkInfo: boolean isConnected()>: 14
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 14
<java.net.URI: java.lang.String getQuery()>: 14
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 14
<java.net.URLConnection: void setUseCaches(boolean)>: 14
<java.io.FilterInputStream: int read()>: 14
<java.io.File: boolean delete()>: 5
<java.io.File: boolean isDirectory()>: 4
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 4
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 2
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 2
<java.io.File: boolean createNewFile()>: 2
<java.io.File: boolean renameTo(java.io.File)>: 2
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 2
<java.io.File: void <init>(java.io.File,java.lang.String)>: 2
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 2
<android.graphics.Bitmap: int getHeight()>: 2
<android.graphics.Bitmap: int getWidth()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 2
<java.io.File: java.lang.String[] list()>: 1
<java.io.File: boolean canExecute()>: 1
<java.net.URLConnection: java.util.Map getRequestProperties()>: 1
<java.io.File: java.lang.String getName()>: 1
<java.io.BufferedOutputStream: void write(byte[],int,int)>: 1
<java.io.File: boolean setExecutable(boolean)>: 1
<java.net.URLConnection: java.util.Map getHeaderFields()>: 1
<java.io.RandomAccessFile: java.io.FileDescriptor getFD()>: 1
<java.io.RandomAccessFile: void setLength(long)>: 1
<java.io.BufferedOutputStream: void flush()>: 1
<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)>: 1
<java.lang.Object: int hashCode()>: 1
<java.io.File: java.io.File getParentFile()>: 1
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 1
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>: 1
<java.io.FileOutputStream: void write(byte[],int,int)>: 1
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 1
<java.lang.Enum: boolean equals(java.lang.Object)>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>: 1
<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>: 1
<java.io.FileInputStream: void <init>(java.lang.String)>: 1
<java.io.FileDescriptor: void sync()>: 1
<java.io.FilterOutputStream: void close()>: 1
<java.io.File: java.io.File[] listFiles()>: 1
<java.io.RandomAccessFile: void seek(long)>: 1
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 1
<java.io.File: boolean mkdirs()>: 1
