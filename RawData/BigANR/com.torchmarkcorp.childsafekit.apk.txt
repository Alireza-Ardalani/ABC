Duration => 580
UI Thread => 184
Worker Thread => 2159

----------------StartUI----------------
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 12
<java.io.DataOutputStream: void writeLong(long)>: 12
<java.io.DataOutputStream: void writeInt(int)>: 12
<java.io.FilterOutputStream: void write(byte[])>: 12
<java.io.DataOutputStream: void <init>(java.io.OutputStream)>: 12
<java.io.ByteArrayOutputStream: void <init>()>: 12
<java.io.FilterOutputStream: void close()>: 12
<java.io.IOException: void <init>(java.lang.String)>: 12
<android.net.NetworkRequest$Builder: void <init>()>: 12
<android.net.ConnectivityManager: void registerNetworkCallback(android.net.NetworkRequest,android.net.ConnectivityManager$NetworkCallback)>: 12
<android.net.NetworkRequest$Builder: android.net.NetworkRequest build()>: 12
<android.net.NetworkRequest$Builder: android.net.NetworkRequest$Builder addCapability(int)>: 12
<android.net.ConnectivityManager$NetworkCallback: void <init>()>: 12
<java.io.BufferedReader: java.lang.String readLine()>: 3
<java.io.BufferedReader: void <init>(java.io.Reader,int)>: 3
<java.io.BufferedReader: void close()>: 3
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 3
<java.io.File: void <init>(java.lang.String)>: 3
<android.graphics.Bitmap: int getHeight()>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<java.io.FileOutputStream: void write(byte[],int,int)>: 1
<java.io.InputStream: int read(byte[])>: 1
<android.graphics.Bitmap: int getWidth()>: 1
<java.io.InputStream: void close()>: 1
<java.io.FileOutputStream: void close()>: 1
<android.database.Cursor: void close()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 1
<java.io.File: boolean mkdirs()>: 1
<java.io.File: boolean exists()>: 1
<java.io.File: void <init>(java.io.File,java.lang.String)>: 1
----------------StartWorker----------------
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>: 130
<android.database.sqlite.SQLiteProgram: void clearBindings()>: 117
<android.database.sqlite.SQLiteProgram: void bindString(int,java.lang.String)>: 91
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 74
<java.io.File: java.lang.String getAbsolutePath()>: 73
<java.io.File: void <init>(java.io.File,java.lang.String)>: 70
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 65
<android.database.Cursor: void close()>: 65
<java.io.ByteArrayOutputStream: void <init>(int)>: 45
<java.io.File: void <init>(java.lang.String)>: 45
<java.io.ByteArrayOutputStream: void <init>()>: 44
<java.io.InputStream: void close()>: 43
<java.io.InputStream: int read(byte[],int,int)>: 43
<java.io.FileOutputStream: void <init>(java.io.File)>: 43
<java.io.File: boolean exists()>: 41
<android.database.sqlite.SQLiteStatement: long simpleQueryForLong()>: 39
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 39
<android.database.sqlite.SQLiteStatement: void execute()>: 39
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 39
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 39
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 39
<android.database.sqlite.SQLiteProgram: void bindLong(int,long)>: 39
<android.database.sqlite.SQLiteStatement: long executeInsert()>: 39
<java.io.OutputStream: void write(int)>: 30
<java.io.ByteArrayOutputStream: int size()>: 30
<java.io.ByteArrayOutputStream: void write(int)>: 30
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 30
<java.io.FileOutputStream: void close()>: 30
<java.io.OutputStream: void flush()>: 28
<java.io.ByteArrayInputStream: void <init>(byte[])>: 28
<java.io.File: boolean mkdirs()>: 28
<java.io.File: boolean delete()>: 27
<java.io.EOFException: void <init>()>: 26
<android.graphics.pdf.PdfDocument$PageInfo$Builder: android.graphics.pdf.PdfDocument$PageInfo create()>: 15
<android.graphics.Bitmap: void recycle()>: 15
<java.util.zip.DeflaterOutputStream: void write(byte[],int,int)>: 15
<android.graphics.pdf.PdfDocument: void writeTo(java.io.OutputStream)>: 15
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 15
<java.io.File: boolean isDirectory()>: 15
<android.graphics.Bitmap: void eraseColor(int)>: 15
<android.graphics.pdf.PdfDocument: void close()>: 15
<android.graphics.pdf.PdfDocument: android.graphics.pdf.PdfDocument$Page startPage(android.graphics.pdf.PdfDocument$PageInfo)>: 15
<android.graphics.pdf.PdfDocument: void finishPage(android.graphics.pdf.PdfDocument$Page)>: 15
<android.graphics.pdf.PdfDocument: void <init>()>: 15
<android.graphics.pdf.PdfDocument$Page: android.graphics.Canvas getCanvas()>: 15
<java.io.ByteArrayOutputStream: void writeTo(java.io.OutputStream)>: 15
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 15
<android.graphics.pdf.PdfDocument$PageInfo$Builder: void <init>(int,int,int)>: 15
<android.graphics.Bitmap: boolean isRecycled()>: 15
<java.io.PrintStream: void println(java.lang.String)>: 15
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 15
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 13
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 13
<java.io.OutputStream: void close()>: 13
<java.io.FileInputStream: void <init>(java.io.File)>: 13
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>: 13
<java.io.Closeable: void close()>: 13
<java.io.File: java.lang.String[] list()>: 13
<android.net.NetworkInfo: int getType()>: 13
<java.io.OutputStream: void write(byte[],int,int)>: 13
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 13
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 13
<b.t: void close()>: 13
<java.io.ObjectInputStream: void close()>: 13
<java.io.ObjectInputStream: java.lang.Object readObject()>: 13
<java.io.InterruptedIOException: void <init>(java.lang.String)>: 13
<java.io.ObjectOutput: void writeObject(java.lang.Object)>: 13
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 13
<b.s: void close()>: 13
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>: 13
<java.io.ByteArrayOutputStream: void close()>: 13
<java.io.File: boolean canRead()>: 13
<java.io.IOException: void <init>(java.lang.Throwable)>: 13
<java.io.DataOutputStream: void writeInt(int)>: 1
<java.io.OutputStreamWriter: void close()>: 1
<java.net.URL: void <init>(java.lang.String)>: 1
<android.net.NetworkRequest$Builder: void <init>()>: 1
<android.net.NetworkRequest$Builder: android.net.NetworkRequest build()>: 1
<android.net.ConnectivityManager$NetworkCallback: void <init>()>: 1
<java.io.Writer: void write(java.lang.String)>: 1
<java.io.DataOutputStream: void writeLong(long)>: 1
<java.io.FilterOutputStream: void write(byte[])>: 1
<java.io.DataOutputStream: void <init>(java.io.OutputStream)>: 1
<java.io.FilterOutputStream: void close()>: 1
<java.io.IOException: void <init>(java.lang.String)>: 1
<android.net.ConnectivityManager: void registerNetworkCallback(android.net.NetworkRequest,android.net.ConnectivityManager$NetworkCallback)>: 1
<java.io.FileWriter: void <init>(java.io.File)>: 1
<android.net.NetworkRequest$Builder: android.net.NetworkRequest$Builder addCapability(int)>: 1
