Duration => 331
UI Thread => 591
Worker Thread => 701

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 108
<java.io.File: boolean exists()>: 84
<java.io.File: boolean mkdirs()>: 82
<java.io.File: java.io.File[] listFiles()>: 45
<java.io.File: boolean canWrite()>: 41
<java.io.File: void <init>(java.io.File,java.lang.String)>: 41
<java.io.OutputStream: void write(byte[])>: 18
<java.io.ByteArrayOutputStream: void <init>()>: 12
<java.net.URL: java.lang.String getPath()>: 11
<java.net.URL: java.lang.String getHost()>: 11
<java.net.URL: void <init>(java.lang.String)>: 11
<java.net.URL: java.lang.String getUserInfo()>: 11
<java.net.URL: java.lang.String toString()>: 11
<java.net.URL: void <init>(java.lang.String,java.lang.String,java.lang.String)>: 11
<java.net.URL: java.lang.String getProtocol()>: 11
<java.net.URL: java.lang.String getQuery()>: 11
<java.io.File: java.lang.String getName()>: 10
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 6
<java.io.InputStream: int read(byte[])>: 6
<java.io.InputStream: void close()>: 6
<java.io.OutputStream: void flush()>: 6
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 6
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 5
<java.io.File: boolean isDirectory()>: 4
<java.lang.String: int hashCode()>: 4
<java.io.File: java.lang.String getPath()>: 4
<android.net.Uri: java.lang.String encode(java.lang.String)>: 4
<java.io.FileInputStream: void <init>(java.io.File)>: 2
<java.io.File: boolean delete()>: 2
<java.io.File: void <init>(java.lang.String)>: 2
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 1
<android.graphics.Bitmap: void recycle()>: 1
<android.net.Uri$Builder: android.net.Uri build()>: 1
<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>: 1
<java.io.File: java.lang.String getAbsolutePath()>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 241
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>: 21
<java.net.DatagramSocket: void close()>: 18
<java.net.DatagramSocket: void receive(java.net.DatagramPacket)>: 18
<java.net.DatagramSocket: void <init>()>: 18
<java.net.DatagramPacket: void <init>(byte[],int)>: 18
<java.net.DatagramSocket: void send(java.net.DatagramPacket)>: 18
<java.net.DatagramPacket: void <init>(byte[],int,java.net.InetAddress,int)>: 18
<java.net.DatagramSocket: void setSoTimeout(int)>: 18
<java.io.File: boolean delete()>: 13
<java.net.URL: void <init>(java.lang.String)>: 12
<java.lang.Enum: boolean equals(java.lang.Object)>: 12
<java.lang.String: int hashCode()>: 12
<java.io.OutputStream: void close()>: 9
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>: 9
<java.net.URLConnection: void setDoOutput(boolean)>: 9
<java.net.URLConnection: void setReadTimeout(int)>: 9
<java.io.BufferedWriter: void close()>: 9
<java.net.URL: java.net.URLConnection openConnection()>: 9
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 9
<java.net.URLConnection: java.io.InputStream getInputStream()>: 9
<java.io.Writer: void write(java.lang.String)>: 9
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 9
<java.io.BufferedReader: java.lang.String readLine()>: 9
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 9
<java.net.URLConnection: void setConnectTimeout(int)>: 9
<java.net.URLConnection: void setDoInput(boolean)>: 9
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 9
<java.io.BufferedWriter: void flush()>: 9
<java.io.BufferedReader: void <init>(java.io.Reader)>: 9
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 9
<java.io.File: void <init>(java.lang.String)>: 7
<java.io.File: boolean exists()>: 6
<java.io.File: void <init>(java.io.File,java.lang.String)>: 6
<java.io.RandomAccessFile: void readFully(byte[])>: 6
<java.net.HttpURLConnection: int getResponseCode()>: 6
<java.io.RandomAccessFile: long length()>: 6
<java.io.RandomAccessFile: void close()>: 6
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>: 6
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 5
<java.io.InputStream: void close()>: 4
<java.net.URL: java.lang.String toString()>: 3
<java.net.InetAddress: java.lang.String getHostAddress()>: 3
<java.net.URL: java.io.InputStream openStream()>: 3
<com.kahuna.sdk.location.KahunaIBeacon: boolean equals(java.lang.Object)>: 3
<android.graphics.Bitmap: int getHeight()>: 3
<java.io.ByteArrayInputStream: void <init>(byte[])>: 3
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 3
<java.io.BufferedReader: void close()>: 3
<android.graphics.Bitmap: int getWidth()>: 3
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 3
<com.listia.android.fix.FlushedInputStream: void <init>(java.io.InputStream)>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 2
<android.graphics.BitmapFactory$Options: void <init>()>: 1
<android.graphics.Bitmap: void recycle()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>: 1
<java.io.FileOutputStream: void <init>(java.lang.String)>: 1
<java.io.OutputStream: void flush()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 1
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 1
<java.io.FilterInputStream: void <init>(java.io.InputStream)>: 1
<java.io.FileOutputStream: void close()>: 1
