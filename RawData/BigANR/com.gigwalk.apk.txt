Duration => 284
UI Thread => 75
Worker Thread => 253

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 35
<de.greenrobot.event.SubscriberMethod: boolean equals(java.lang.Object)>: 9
<de.greenrobot.event.Subscription: boolean equals(java.lang.Object)>: 9
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 4
<java.io.File: java.lang.String getAbsolutePath()>: 3
<android.graphics.Bitmap: int getHeight()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 2
<android.graphics.Bitmap: int getWidth()>: 2
<java.io.File: void <init>(java.lang.String)>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 2
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>: 1
<android.net.NetworkInfo: boolean isAvailable()>: 1
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 1
<java.io.File: boolean exists()>: 1
----------------StartWorker----------------
<java.io.InputStream: void close()>: 14
<java.io.IOException: void <init>(java.lang.String)>: 13
<org.apache.http.HttpConnection: void close()>: 10
<java.lang.String: boolean equals(java.lang.Object)>: 7
<java.net.URI: java.net.URI create(java.lang.String)>: 6
<java.net.URI: boolean isAbsolute()>: 6
<java.net.URI: void <init>(java.lang.String)>: 5
<java.io.InputStream: void <init>()>: 5
<java.io.InterruptedIOException: void <init>()>: 5
<java.io.ByteArrayInputStream: void <init>(byte[])>: 4
<java.io.InterruptedIOException: void <init>(java.lang.String)>: 4
<java.io.InputStream: int read(byte[])>: 4
<org.apache.http.HttpHost: boolean equals(java.lang.Object)>: 4
<org.apache.http.MalformedChunkCodingException: void <init>(java.lang.String)>: 4
<java.net.Socket: void close()>: 4
<org.apache.http.conn.routing.HttpRoute: boolean equals(java.lang.Object)>: 4
<java.io.OutputStream: void write(byte[],int,int)>: 3
<java.net.Socket: void setSoTimeout(int)>: 3
<java.net.URI: java.lang.String getScheme()>: 3
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 3
<java.net.URI: java.lang.String toASCIIString()>: 3
<java.io.InputStream: int read(byte[],int,int)>: 3
<java.net.URI: boolean isOpaque()>: 3
<java.io.OutputStream: void <init>()>: 3
<java.net.URI: java.lang.String getPath()>: 3
<java.io.ByteArrayOutputStream: void <init>()>: 3
<java.io.ByteArrayOutputStream: void close()>: 3
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>: 2
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 2
<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>: 2
<java.net.URLConnection: void setDoOutput(boolean)>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 2
<java.net.URI: java.lang.String getRawFragment()>: 2
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 2
<java.net.URL: java.net.URLConnection openConnection()>: 2
<java.lang.Object: boolean equals(java.lang.Object)>: 2
<java.nio.charset.Charset: boolean equals(java.lang.Object)>: 2
<java.net.URI: java.lang.String getHost()>: 2
<java.io.OutputStream: void flush()>: 2
<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>: 2
<java.net.URI: java.lang.String getRawQuery()>: 2
<java.nio.charset.CoderResult: boolean isError()>: 2
<java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>: 2
<java.net.URI: java.lang.String getUserInfo()>: 2
<java.net.URI: int getPort()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>: 2
<android.graphics.BitmapFactory$Options: void <init>()>: 2
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 2
<java.nio.charset.CoderResult: void throwException()>: 2
<java.net.URL: void <init>(java.lang.String)>: 2
<java.net.URI: java.lang.String toString()>: 2
<org.apache.http.ConnectionClosedException: void <init>(java.lang.String)>: 2
<java.io.OutputStream: void write(byte[])>: 2
<java.net.URLConnection: java.io.InputStream getInputStream()>: 2
<java.net.URI: java.lang.String getAuthority()>: 2
<android.graphics.Bitmap: int getHeight()>: 2
<org.apache.http.NoHttpResponseException: void <init>(java.lang.String)>: 2
<java.net.URI: java.lang.String getFragment()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 2
<java.net.URLConnection: void setConnectTimeout(int)>: 2
<android.graphics.Bitmap: int getWidth()>: 2
<java.net.URLConnection: void setDoInput(boolean)>: 2
<java.net.InetAddress: boolean equals(java.lang.Object)>: 2
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 2
<java.net.URLConnection: void setUseCaches(boolean)>: 2
<java.io.IOException: void <init>()>: 1
<java.net.InetAddress: java.lang.String getHostName()>: 1
<java.net.Socket: void shutdownOutput()>: 1
<java.nio.CharBuffer: java.lang.String toString()>: 1
<java.net.Socket: int getSendBufferSize()>: 1
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 1
<org.apache.http.impl.io.EmptyInputStream: void <init>()>: 1
<java.net.URI: java.lang.String getRawAuthority()>: 1
<java.io.InputStream: int read()>: 1
<java.net.URI: java.net.URI resolve(java.net.URI)>: 1
<org.apache.http.conn.ConnectionPoolTimeoutException: void <init>(java.lang.String)>: 1
<org.apache.http.client.ClientProtocolException: void <init>(java.lang.String)>: 1
<java.net.Socket: void setSoLinger(boolean,int)>: 1
<org.apache.http.impl.io.ContentLengthInputStream: int read(byte[])>: 1
<java.nio.charset.CharacterCodingException: void <init>()>: 1
<java.net.URISyntaxException: java.lang.String getMessage()>: 1
<java.net.Socket: int getSoTimeout()>: 1
<org.apache.http.impl.io.IdentityOutputStream: void write(byte[],int,int)>: 1
<org.apache.http.impl.io.ChunkedInputStream: int read(byte[])>: 1
<java.net.Socket: java.io.InputStream getInputStream()>: 1
<org.apache.http.impl.io.ContentLengthOutputStream: void write(byte[],int,int)>: 1
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 1
<org.apache.http.impl.SocketHttpClientConnection: void close()>: 1
<org.apache.http.conn.EofSensorInputStream: int read(byte[],int,int)>: 1
<java.net.URI: java.net.URI normalize()>: 1
<org.apache.http.conn.ConnectTimeoutException: void <init>(java.lang.String)>: 1
<java.net.Socket: void shutdownInput()>: 1
<org.apache.http.MessageConstraintException: void <init>(java.lang.String)>: 1
<org.apache.http.impl.io.ContentLengthInputStream: int read(byte[],int,int)>: 1
<org.apache.http.impl.io.ChunkedOutputStream: void write(byte[],int,int)>: 1
<org.apache.http.impl.io.ChunkedInputStream: int read(byte[],int,int)>: 1
<java.io.OutputStream: void close()>: 1
<java.net.Socket: void setTcpNoDelay(boolean)>: 1
<java.net.URI: java.lang.String getRawSchemeSpecificPart()>: 1
<java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>: 1
<java.net.URI: java.lang.String getRawUserInfo()>: 1
<org.apache.http.TruncatedChunkException: void <init>(java.lang.String)>: 1
<java.nio.CharBuffer: java.nio.CharBuffer wrap(char[],int,int)>: 1
<org.apache.http.conn.UnsupportedSchemeException: void <init>(java.lang.String)>: 1
<java.net.Socket: java.io.OutputStream getOutputStream()>: 1
<org.apache.http.client.ClientProtocolException: void <init>(java.lang.Throwable)>: 1
<java.net.URI: java.lang.String getRawPath()>: 1
<java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>: 1
<java.net.URI: java.lang.String getQuery()>: 1
<java.net.Socket: int getReceiveBufferSize()>: 1
