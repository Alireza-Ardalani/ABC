Duration => 1028
UI Thread => 752
Worker Thread => 2448

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 341
<java.io.File: void <init>(java.io.File,java.lang.String)>: 39
<java.io.File: boolean exists()>: 36
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 25
<android.graphics.BitmapFactory$Options: void <init>()>: 23
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 23
<java.io.File: java.lang.String getPath()>: 20
<java.io.File: java.lang.String getAbsolutePath()>: 14
<java.io.FileOutputStream: void <init>(java.io.File)>: 12
<java.lang.Object: boolean equals(java.lang.Object)>: 11
<android.graphics.Bitmap: int getHeight()>: 10
<android.graphics.Bitmap: int getWidth()>: 10
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 9
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 8
<android.net.NetworkInfo: boolean isConnected()>: 8
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 8
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 7
<java.io.FileInputStream: void close()>: 7
<java.io.File: boolean delete()>: 7
<java.io.FileOutputStream: void close()>: 7
<java.io.File: boolean renameTo(java.io.File)>: 6
<java.io.FileInputStream: void <init>(java.io.File)>: 6
<android.database.Cursor: void close()>: 6
<java.io.OutputStream: void close()>: 5
<java.io.InputStream: void close()>: 5
<java.io.File: long length()>: 5
<java.io.File: void <init>(java.lang.String)>: 5
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 4
<java.io.InputStream: int read(byte[])>: 4
<java.io.FileInputStream: java.io.FileDescriptor getFD()>: 4
<java.io.OutputStream: void write(byte[],int,int)>: 4
<java.io.FileOutputStream: void <init>(java.lang.String)>: 4
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 4
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor)>: 4
<android.graphics.Bitmap: void recycle()>: 3
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 3
<java.io.BufferedWriter: void close()>: 3
<java.io.File: boolean mkdir()>: 3
<java.io.Writer: void write(java.lang.String)>: 3
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 3
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>: 3
<java.io.File: boolean createNewFile()>: 3
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>: 3
<android.database.sqlite.SQLiteClosable: void close()>: 3
<java.io.FileOutputStream: void write(byte[],int,int)>: 2
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 2
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 2
<java.io.OutputStream: void flush()>: 2
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 2
<java.io.BufferedReader: java.lang.String readLine()>: 2
<java.io.FileInputStream: void <init>(java.lang.String)>: 2
<android.net.wifi.WifiManager$WifiLock: void release()>: 2
<java.io.BufferedReader: void <init>(java.io.Reader)>: 2
<java.io.FileInputStream: int read(byte[])>: 2
<java.io.File: boolean mkdirs()>: 2
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 1
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 1
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>: 1
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>: 1
<android.net.wifi.WifiManager$WifiLock: void acquire()>: 1
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 1
<java.io.PrintStream: void println(java.lang.String)>: 1
<android.net.wifi.WifiManager: android.net.wifi.WifiManager$WifiLock createWifiLock(int,java.lang.String)>: 1
----------------StartWorker----------------
<java.io.IOException: void <init>(java.lang.String)>: 180
<java.io.InputStream: void close()>: 136
<java.lang.String: boolean equals(java.lang.Object)>: 74
<java.net.URL: java.net.URLConnection openConnection()>: 60
<java.net.URL: void <init>(java.lang.String)>: 60
<java.net.URLConnection: java.io.InputStream getInputStream()>: 60
<java.net.URLConnection: void setReadTimeout(int)>: 59
<java.net.URLConnection: void setConnectTimeout(int)>: 59
<java.net.URLConnection: void setDoInput(boolean)>: 59
<java.io.OutputStream: void write(byte[],int,int)>: 49
<java.net.URI: void <init>(java.lang.String)>: 48
<java.io.InputStream: void <init>()>: 48
<org.apache.a.l: boolean equals(java.lang.Object)>: 48
<java.net.URI: boolean isAbsolute()>: 48
<java.io.ByteArrayInputStream: void <init>(byte[])>: 48
<java.net.URI: java.lang.String getScheme()>: 48
<org.apache.a.u: void <init>(java.lang.String)>: 48
<java.net.Socket: void close()>: 48
<java.io.InputStream: int read(byte[])>: 38
<java.io.BufferedReader: java.lang.String readLine()>: 37
<java.io.BufferedReader: void <init>(java.io.Reader)>: 37
<org.apache.a.c.b.b: boolean equals(java.lang.Object)>: 36
<java.net.URI: java.net.URI create(java.lang.String)>: 36
<java.net.URI: java.lang.String getHost()>: 36
<java.net.Socket: void setSoTimeout(int)>: 36
<java.net.URI: int getPort()>: 36
<java.io.OutputStream: void <init>()>: 36
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 35
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 31
<java.io.OutputStream: void flush()>: 25
<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>: 24
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 24
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 24
<java.net.URI: java.lang.String toString()>: 24
<java.io.OutputStream: void write(byte[])>: 24
<java.net.URI: java.lang.String toASCIIString()>: 24
<java.net.URI: java.lang.String getAuthority()>: 24
<java.io.InputStream: int read(byte[],int,int)>: 24
<java.net.URI: java.lang.String getFragment()>: 24
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 21
<java.io.FileOutputStream: void <init>(java.io.File)>: 21
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 16
<java.io.File: void <init>(java.io.File,java.lang.String)>: 16
<java.io.ByteArrayOutputStream: void <init>()>: 16
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 15
<java.io.OutputStream: void close()>: 13
<java.io.IOException: void <init>()>: 12
<java.net.ProtocolException: void <init>(java.lang.String)>: 12
<java.net.Socket: void shutdownOutput()>: 12
<org.apache.a.w: void <init>(java.lang.String)>: 12
<java.net.URI: java.lang.String getRawFragment()>: 12
<java.net.Socket: int getSendBufferSize()>: 12
<java.io.InputStream: int read()>: 12
<java.net.URI: java.net.URI resolve(java.net.URI)>: 12
<java.lang.Object: boolean equals(java.lang.Object)>: 12
<java.net.Socket: void setSoLinger(boolean,int)>: 12
<java.io.InterruptedIOException: void <init>()>: 12
<org.apache.a.f.f.h: void write(byte[],int,int)>: 12
<java.net.URISyntaxException: java.lang.String getMessage()>: 12
<java.net.Socket: int getSoTimeout()>: 12
<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>: 12
<java.net.URI: java.lang.String getRawQuery()>: 12
<java.io.InterruptedIOException: void <init>(java.lang.String)>: 12
<java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>: 12
<org.apache.a.f.f.m: void write(byte[],int,int)>: 12
<org.apache.a.f.f.f: void write(byte[],int,int)>: 12
<java.net.Socket: java.io.InputStream getInputStream()>: 12
<org.apache.a.f.f.e: int read(byte[])>: 12
<org.apache.a.f.f.g: int read(byte[])>: 12
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 12
<org.apache.a.f.f.g: int read(byte[],int,int)>: 12
<java.net.Socket: void shutdownInput()>: 12
<org.apache.a.ae: void <init>(java.lang.String)>: 12
<java.net.Socket: void setTcpNoDelay(boolean)>: 12
<java.net.ConnectException: void <init>(java.lang.String)>: 12
<org.apache.a.f.f.e: int read(byte[],int,int)>: 12
<java.net.URI: java.lang.String getPath()>: 12
<java.net.Socket: java.io.OutputStream getOutputStream()>: 12
<java.net.InetAddress: boolean equals(java.lang.Object)>: 12
<java.net.URI: java.lang.String getRawPath()>: 12
<java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>: 12
<java.net.URI: java.lang.String getQuery()>: 12
<java.net.Socket: int getReceiveBufferSize()>: 12
<org.apache.a.b.d: void <init>(java.lang.Throwable)>: 12
<org.apache.a.b.d: void <init>(java.lang.String)>: 12
<java.io.FileOutputStream: void close()>: 11
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 6
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 4
<android.graphics.BitmapFactory$Options: void <init>()>: 3
<java.io.Reader: int read(char[])>: 2
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>: 2
<java.io.File: java.lang.String getName()>: 2
<java.io.Reader: void close()>: 2
<java.io.File: void <init>(java.lang.String)>: 2
<android.graphics.Bitmap: boolean hasAlpha()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 2
<android.net.NetworkInfo: boolean isConnected()>: 2
<java.io.File: java.lang.String getPath()>: 1
<java.net.URLConnection: java.util.Map getHeaderFields()>: 1
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 1
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 1
<java.io.FileOutputStream: void write(byte[],int,int)>: 1
<java.io.File: boolean delete()>: 1
