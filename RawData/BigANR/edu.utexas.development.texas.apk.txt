Duration => 103
UI Thread => 239
Worker Thread => 143

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 23
<java.io.ObjectInputStream: void close()>: 22
<java.io.FileInputStream: void close()>: 22
<java.io.ObjectInputStream: java.lang.Object readObject()>: 22
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 22
<java.io.File: void <init>(java.io.File,java.lang.String)>: 7
<java.io.File: boolean exists()>: 5
<java.io.File: boolean delete()>: 5
<java.io.FileOutputStream: void close()>: 5
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>: 4
<java.net.URI: void <init>(java.lang.String)>: 4
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>: 4
<java.io.ObjectOutputStream: void close()>: 4
<java.net.URL: void <init>(java.lang.String)>: 3
<java.net.URI: java.lang.String toString()>: 3
<java.lang.Object: boolean equals(java.lang.Object)>: 3
<java.net.URI: java.lang.String getFragment()>: 3
<java.net.URI: java.lang.String getPath()>: 3
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 3
<com.ticketmaster.presencesdk.event_tickets.TmxEventTicketsResponseBody$EventTicket: boolean equals(java.lang.Object)>: 3
<java.net.URI: java.lang.String getScheme()>: 3
<java.io.File: boolean mkdirs()>: 3
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 2
<android.net.Uri$Builder: android.net.Uri build()>: 2
<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>: 2
<java.io.File: java.lang.String getName()>: 2
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 2
<java.io.File: boolean isFile()>: 2
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 2
<java.net.URI: java.lang.String getAuthority()>: 2
<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>: 2
<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>: 2
<java.io.File: java.io.File[] listFiles()>: 2
<android.net.Uri$Builder: void <init>()>: 2
<android.net.NetworkInfo: boolean isConnected()>: 2
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 2
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 1
<java.io.OutputStream: void close()>: 1
<java.io.IOException: void <init>()>: 1
<java.io.FileInputStream: void <init>(java.io.File)>: 1
<java.io.InputStream: int read(byte[])>: 1
<java.io.InputStream: void close()>: 1
<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>: 1
<java.nio.CharBuffer: java.lang.String toString()>: 1
<java.net.URI: java.lang.String getRawFragment()>: 1
<java.net.URI: java.lang.String getRawAuthority()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>: 1
<java.net.URI: java.lang.String getRawSchemeSpecificPart()>: 1
<java.io.FileOutputStream: void <init>(java.lang.String)>: 1
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 1
<java.io.OutputStream: void write(byte[])>: 1
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 1
<java.net.URI: java.lang.String getRawUserInfo()>: 1
<java.io.File: java.lang.String getPath()>: 1
<java.net.URI: java.lang.String getHost()>: 1
<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>: 1
<java.io.OutputStream: void flush()>: 1
<android.graphics.Bitmap: int getHeight()>: 1
<java.net.URI: java.lang.String getRawQuery()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>: 1
<android.graphics.Bitmap: int getWidth()>: 1
<java.io.ByteArrayOutputStream: void <init>()>: 1
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 1
<java.net.URI: java.lang.String getUserInfo()>: 1
<java.net.URI: int getPort()>: 1
<java.net.URI: java.lang.String getRawPath()>: 1
<java.io.ByteArrayOutputStream: void close()>: 1
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 1
<java.io.PrintStream: void println(java.lang.String)>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 17
<android.net.NetworkInfo: boolean isConnected()>: 9
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 9
<java.net.URL: void <init>(java.lang.String)>: 7
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 7
<java.net.URL: java.net.URLConnection openConnection()>: 7
<java.io.ObjectInputStream: void close()>: 7
<java.io.FileInputStream: void close()>: 7
<java.io.ObjectInputStream: java.lang.Object readObject()>: 7
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 7
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 3
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 3
<java.net.URLConnection: void setConnectTimeout(int)>: 3
<java.net.HttpURLConnection: int getResponseCode()>: 3
<java.io.InputStream: int read(byte[])>: 3
<java.io.DataOutputStream: void <init>(java.io.OutputStream)>: 3
<java.io.ByteArrayOutputStream: void <init>()>: 3
<java.net.URL: java.lang.String toString()>: 3
<java.io.DataOutputStream: void flush()>: 3
<java.io.FilterOutputStream: void close()>: 3
<java.net.URLConnection: void setReadTimeout(int)>: 3
<java.net.URL: java.lang.String getProtocol()>: 3
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 3
<java.io.DataOutputStream: void writeBytes(java.lang.String)>: 3
<java.io.OutputStream: void flush()>: 3
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 3
<java.net.URLConnection: java.io.InputStream getInputStream()>: 3
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>: 3
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 1
<java.net.URLConnection: void setDoInput(boolean)>: 1
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 1
<android.graphics.Bitmap: void setPixel(int,int,int)>: 1
