Duration => 777
UI Thread => 574
Worker Thread => 2761

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 49
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 44
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 44
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 34
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 34
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 34
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 34
<android.support.v4.app.Fragment: int hashCode()>: 24
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 14
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 14
<java.io.File: void <init>(java.lang.String)>: 13
<java.net.URI: java.net.URI create(java.lang.String)>: 11
<java.io.InputStream: void close()>: 10
<java.io.File: boolean exists()>: 10
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>: 9
<java.io.File: java.lang.String getAbsolutePath()>: 8
<android.graphics.BitmapFactory$Options: void <init>()>: 7
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 7
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 7
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>: 7
<java.net.URI: java.net.URI normalize()>: 6
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 5
<com.probits.argo.Utils.DBHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 5
<java.io.File: boolean delete()>: 5
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 5
<java.net.URL: java.lang.String getPath()>: 4
<java.net.URL: java.lang.String getHost()>: 4
<java.net.URL: java.lang.String getRef()>: 4
<java.net.URL: void <init>(java.lang.String)>: 4
<java.net.URL: java.lang.String getProtocol()>: 4
<java.net.URI: java.lang.String toASCIIString()>: 4
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>: 4
<java.net.URL: java.lang.String getUserInfo()>: 4
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 4
<java.net.URL: int getPort()>: 4
<java.net.URL: java.lang.String getQuery()>: 4
<android.graphics.Bitmap: void recycle()>: 3
<java.io.FileNotFoundException: void <init>()>: 3
<java.io.InputStream: int read(byte[])>: 3
<java.io.OutputStream: void write(byte[])>: 3
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 3
<java.io.File: boolean mkdir()>: 3
<java.io.FileOutputStream: void close()>: 3
<java.io.File: boolean mkdirs()>: 3
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 2
<java.io.FileOutputStream: void write(byte[],int,int)>: 2
<java.io.FileInputStream: void <init>(java.io.File)>: 2
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 2
<java.io.File: java.lang.String[] list()>: 2
<java.io.File: long length()>: 2
<java.io.File: java.lang.String getName()>: 2
<java.io.OutputStream: void flush()>: 2
<java.io.File: void <init>(java.io.File,java.lang.String)>: 2
<java.io.BufferedReader: java.lang.String readLine()>: 2
<java.io.FileOutputStream: void <init>(java.io.File)>: 2
<java.io.ByteArrayOutputStream: void <init>()>: 2
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 2
<java.io.BufferedReader: void <init>(java.io.Reader)>: 2
<android.database.sqlite.SQLiteClosable: void close()>: 2
<java.util.zip.ZipInputStream: void close()>: 1
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 1
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 1
<java.io.File: boolean isDirectory()>: 1
<android.net.NetworkInfo: int getType()>: 1
<java.io.File: long lastModified()>: 1
<java.io.Reader: int read(char[])>: 1
<java.io.InputStreamReader: void close()>: 1
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 1
<java.io.FileOutputStream: void <init>(java.lang.String)>: 1
<java.io.StringWriter: java.lang.String toString()>: 1
<java.io.FileInputStream: int available()>: 1
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 1
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 1
<java.net.URL: java.io.InputStream openStream()>: 1
<java.io.BufferedInputStream: void close()>: 1
<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>: 1
<java.net.MalformedURLException: void <init>(java.lang.String)>: 1
<java.io.File: java.lang.String getParent()>: 1
<java.io.BufferedReader: void close()>: 1
<java.lang.String: int hashCode()>: 1
<java.io.FileInputStream: void <init>(java.lang.String)>: 1
<java.io.StringWriter: void <init>()>: 1
<java.nio.charset.UnsupportedCharsetException: void <init>(java.lang.String)>: 1
<java.io.File: java.io.File[] listFiles()>: 1
<java.io.PrintWriter: void <init>(java.io.Writer)>: 1
<java.net.URI: java.lang.String getSchemeSpecificPart()>: 1
<java.lang.Object: int hashCode()>: 1
<java.io.FileOutputStream: void write(byte[])>: 1
<java.io.BufferedInputStream: int read(byte[],int,int)>: 1
<android.database.sqlite.SQLiteDatabase: int updateWithOnConflict(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[],int)>: 1
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 1
<java.net.URI: java.lang.String getScheme()>: 1
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 1
<java.io.FilterInputStream: int read(byte[])>: 1
<java.net.URI: java.net.URL toURL()>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 349
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 176
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 176
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 176
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 176
<java.lang.Object: int hashCode()>: 136
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 108
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 108
<java.lang.String: int hashCode()>: 81
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 61
<java.io.OutputStream: void write(byte[])>: 57
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 55
<java.net.Socket: boolean isConnected()>: 45
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 42
<java.io.File: java.lang.String getAbsolutePath()>: 37
<android.support.v4.app.Fragment: int hashCode()>: 36
<java.net.URI: java.lang.String getScheme()>: 35
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 31
<java.net.URI: void <init>(java.lang.String)>: 30
<java.net.URISyntaxException: java.lang.String getMessage()>: 30
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 29
<java.io.InputStream: int read(byte[])>: 29
<android.database.sqlite.SQLiteDatabase: int updateWithOnConflict(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[],int)>: 29
<java.io.ByteArrayOutputStream: void <init>()>: 28
<java.io.PrintStream: void println(java.lang.String)>: 25
<android.graphics.BitmapFactory$Options: void <init>()>: 21
<java.io.InputStream: void close()>: 21
<java.net.Socket: java.io.OutputStream getOutputStream()>: 21
<java.net.Socket: java.io.InputStream getInputStream()>: 21
<android.net.NetworkInfo: int getType()>: 16
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 16
<java.io.BufferedReader: void <init>(java.io.Reader)>: 16
<java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>: 15
<de.tavendo.autobahn.NoCopyByteArrayOutputStream: void <init>(int)>: 15
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 15
<java.io.ByteArrayOutputStream: void reset()>: 15
<java.net.URI: java.lang.String getHost()>: 15
<java.net.Socket: boolean isClosed()>: 15
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 15
<java.io.ByteArrayOutputStream: void <init>(int)>: 15
<java.io.ByteArrayOutputStream: int size()>: 15
<java.net.URI: int getPort()>: 15
<java.io.FileInputStream: void <init>(java.io.File)>: 14
<java.io.File: long length()>: 14
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 14
<java.io.File: java.lang.String getName()>: 14
<java.net.URI: java.net.URI create(java.lang.String)>: 14
<java.io.OutputStream: void flush()>: 14
<java.io.BufferedInputStream: void close()>: 14
<java.nio.charset.UnsupportedCharsetException: void <init>(java.lang.String)>: 14
<java.io.BufferedInputStream: int read(byte[],int,int)>: 14
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 14
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 13
<android.database.sqlite.SQLiteClosable: void close()>: 13
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 12
<java.io.File: void <init>(java.lang.String)>: 12
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 10
<java.io.BufferedReader: java.lang.String readLine()>: 10
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>: 9
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>: 9
<java.net.URI: java.net.URI normalize()>: 9
<java.io.OutputStream: void close()>: 6
<android.graphics.Bitmap: void recycle()>: 6
<java.net.Socket: int getPort()>: 6
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>: 6
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 6
<java.io.Writer: void write(java.lang.String)>: 6
<java.io.Writer: void close()>: 6
<java.io.File: boolean exists()>: 6
<android.graphics.Bitmap: int getHeight()>: 6
<java.io.ByteArrayInputStream: void <init>(byte[])>: 6
<java.io.FileOutputStream: void <init>(java.io.File)>: 6
<java.io.File: boolean createNewFile()>: 6
<android.graphics.Bitmap: int getWidth()>: 6
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 6
<java.io.FileInputStream: void <init>(java.lang.String)>: 6
<java.net.Socket: void close()>: 6
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>: 6
<java.io.Writer: void flush()>: 6
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 6
<java.io.File: boolean mkdirs()>: 6
<java.net.URL: java.io.InputStream openStream()>: 5
<java.net.MalformedURLException: void <init>(java.lang.String)>: 5
<java.io.BufferedReader: void close()>: 5
<java.net.URI: java.lang.String getSchemeSpecificPart()>: 5
<java.net.URI: java.net.URL toURL()>: 5
<java.net.Socket: void connect(java.net.SocketAddress,int)>: 3
<java.net.UnknownHostException: void <init>(java.lang.String)>: 3
<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>: 3
<java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>: 3
