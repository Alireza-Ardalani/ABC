Duration => 101
UI Thread => 209
Worker Thread => 150

----------------StartUI----------------
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 32
<java.net.InetAddress: java.lang.String getHostAddress()>: 14
<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>: 14
<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>: 14
<java.net.InetAddress: boolean isLoopbackAddress()>: 14
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 10
<io.realm.internal.OsSharedRealm: void close()>: 10
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 8
<java.io.File: boolean exists()>: 7
<java.io.File: void <init>(java.lang.String)>: 7
<java.io.File: void <init>(java.io.File,java.lang.String)>: 6
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 5
<io.realm.internal.RealmNotifier: void close()>: 4
<android.net.NetworkInfo: boolean isConnected()>: 4
<java.io.File: java.lang.String getAbsolutePath()>: 4
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>: 3
<java.net.URI: void <init>(java.lang.String)>: 3
<java.io.File: boolean equals(java.lang.Object)>: 3
<java.io.File: java.lang.String getName()>: 3
<java.io.InputStream: int read(byte[])>: 2
<android.net.NetworkInfo: int getType()>: 2
<java.util.zip.ZipFile: void close()>: 2
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>: 2
<java.io.File: boolean mkdirs()>: 2
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<io.realm.b: void close()>: 1
<java.io.FileOutputStream: java.io.FileDescriptor getFD()>: 1
<java.io.Closeable: void close()>: 1
<java.io.FileInputStream: void <init>(java.io.File)>: 1
<java.io.OutputStreamWriter: void close()>: 1
<java.io.File: boolean isDirectory()>: 1
<java.io.InputStream: void close()>: 1
<java.io.File: long length()>: 1
<java.io.File: boolean setExecutable(boolean,boolean)>: 1
<com.truckerpath.managers.installation.d$a: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<java.io.OutputStream: void write(byte[],int,int)>: 1
<android.net.NetworkRequest$Builder: void <init>()>: 1
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>: 1
<java.io.OutputStream: void flush()>: 1
<java.io.File: java.lang.String getCanonicalPath()>: 1
<android.net.NetworkRequest$Builder: android.net.NetworkRequest build()>: 1
<android.net.ConnectivityManager$NetworkCallback: void <init>()>: 1
<java.io.Writer: void write(java.lang.String)>: 1
<android.graphics.drawable.BitmapDrawable: void <init>()>: 1
<java.io.File: boolean setWritable(boolean)>: 1
<java.io.File: boolean setReadable(boolean,boolean)>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<java.io.File: boolean createNewFile()>: 1
<android.database.DataSetObserver: void <init>()>: 1
<java.io.FileDescriptor: void sync()>: 1
<java.io.File: boolean delete()>: 1
<io.realm.x: void close()>: 1
<android.net.ConnectivityManager: void registerNetworkCallback(android.net.NetworkRequest,android.net.ConnectivityManager$NetworkCallback)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 1
<java.io.EOFException: void <init>()>: 1
<java.io.InputStream: int available()>: 1
<android.net.NetworkRequest$Builder: android.net.NetworkRequest$Builder addCapability(int)>: 1
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>: 1
----------------StartWorker----------------
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>: 10
<android.database.sqlite.SQLiteProgram: void clearBindings()>: 9
<android.database.sqlite.SQLiteProgram: void bindString(int,java.lang.String)>: 7
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 5
<android.database.Cursor: void close()>: 5
<java.net.URL: void <init>(java.lang.String)>: 4
<java.net.URLConnection: void setReadTimeout(int)>: 4
<java.net.URL: java.net.URLConnection openConnection()>: 4
<java.net.URLConnection: java.io.InputStream getInputStream()>: 4
<java.net.URLConnection: void setConnectTimeout(int)>: 4
<java.net.HttpURLConnection: int getResponseCode()>: 4
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 4
<android.database.sqlite.SQLiteStatement: long simpleQueryForLong()>: 3
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 3
<android.database.sqlite.SQLiteStatement: void execute()>: 3
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 3
<java.io.File: void <init>(java.io.File,java.lang.String)>: 3
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 3
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 3
<android.database.sqlite.SQLiteProgram: void bindLong(int,long)>: 3
<android.database.sqlite.SQLiteStatement: long executeInsert()>: 3
<java.net.URLConnection: void setDoOutput(boolean)>: 2
<java.io.OutputStreamWriter: void flush()>: 2
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 2
<java.io.Writer: void write(java.lang.String)>: 2
<java.io.File: boolean exists()>: 2
<java.io.BufferedReader: java.lang.String readLine()>: 2
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>: 2
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 2
<java.net.URLConnection: void setDoInput(boolean)>: 2
<java.io.File: boolean delete()>: 2
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 2
<java.io.EOFException: void <init>()>: 2
<java.io.BufferedReader: void <init>(java.io.Reader)>: 2
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 2
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 1
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 1
<java.io.OutputStream: void close()>: 1
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>: 1
<java.io.Closeable: void close()>: 1
<java.io.FileInputStream: void <init>(java.io.File)>: 1
<java.io.File: java.lang.String[] list()>: 1
<android.net.NetworkInfo: int getType()>: 1
<java.io.InputStream: void close()>: 1
<okio.p: void close()>: 1
<java.io.OutputStream: void write(byte[],int,int)>: 1
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 1
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 1
<java.io.OutputStream: void flush()>: 1
<java.io.ObjectInputStream: void close()>: 1
<java.io.ObjectInputStream: java.lang.Object readObject()>: 1
<java.io.InputStream: int read(byte[],int,int)>: 1
<java.io.ByteArrayInputStream: void <init>(byte[])>: 1
<java.io.InterruptedIOException: void <init>(java.lang.String)>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<java.io.ObjectOutput: void writeObject(java.lang.Object)>: 1
<okio.o: void close()>: 1
<java.io.ByteArrayOutputStream: void <init>()>: 1
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 1
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>: 1
<java.io.File: java.lang.String getAbsolutePath()>: 1
<java.io.ByteArrayOutputStream: void close()>: 1
<java.io.File: boolean canRead()>: 1
<java.io.IOException: void <init>(java.lang.Throwable)>: 1
<java.io.File: boolean mkdirs()>: 1
