Duration => 3973
UI Thread => 930
Worker Thread => 4082

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 194
<java.lang.Object: boolean equals(java.lang.Object)>: 94
<java.lang.String: int hashCode()>: 40
<java.io.File: boolean exists()>: 29
<java.io.File: void <init>(java.lang.String)>: 24
<java.lang.Boolean: boolean equals(java.lang.Object)>: 21
<java.lang.Object: java.lang.String toString()>: 20
<com.fasterxml.jackson.databind.JavaType: int hashCode()>: 20
<java.io.IOException: void <init>(java.lang.String)>: 17
<com.fasterxml.jackson.databind.JavaType: boolean equals(java.lang.Object)>: 17
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 16
<java.io.File: void <init>(java.io.File,java.lang.String)>: 16
<io.realm.internal.OsSharedRealm: void close()>: 12
<java.io.PrintStream: void println(java.lang.String)>: 12
<java.io.InputStream: void close()>: 12
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 10
<java.lang.Object: int hashCode()>: 10
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 10
<java.io.OutputStream: void write(byte[],int,int)>: 9
<java.io.InputStream: int read(byte[],int,int)>: 9
<com.fasterxml.jackson.core.base.ParserBase: void close()>: 8
<java.io.File: java.lang.String getAbsolutePath()>: 8
<java.io.File: boolean mkdirs()>: 8
<java.io.Closeable: void close()>: 7
<java.io.File: boolean isDirectory()>: 7
<java.net.URI: java.net.URI create(java.lang.String)>: 7
<java.io.InputStream: int read(byte[])>: 7
<java.io.File: boolean delete()>: 7
<com.fasterxml.jackson.core.JsonParser: void close()>: 7
<java.io.File: java.lang.String getName()>: 6
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 6
<java.io.FileInputStream: void <init>(java.io.File)>: 5
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 5
<java.io.File: boolean mkdir()>: 5
<java.io.CharConversionException: void <init>(java.lang.String)>: 5
<java.io.FileOutputStream: void close()>: 5
<com.fasterxml.jackson.core.JsonGenerator: void close()>: 5
<java.io.Writer: void write(java.lang.String)>: 5
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>: 4
<java.net.URI: void <init>(java.lang.String)>: 4
<java.io.File: java.lang.String getPath()>: 4
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 4
<java.net.InetAddress: java.lang.String toString()>: 4
<io.realm.internal.RealmNotifier: void close()>: 4
<com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>: 4
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 4
<java.util.Locale: boolean equals(java.lang.Object)>: 4
<java.io.InputStream: int available()>: 4
<com.fasterxml.jackson.core.util.ByteArrayBuilder: void <init>()>: 4
<android.graphics.BitmapFactory$Options: void <init>()>: 4
<java.net.URL: void <init>(java.lang.String)>: 4
<java.io.OutputStream: void write(byte[])>: 4
<java.io.Writer: void close()>: 4
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 4
<java.io.OutputStream: void <init>()>: 4
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 3
<java.io.File: java.lang.String[] list()>: 3
<java.io.File: long length()>: 3
<java.io.InputStream: void <init>()>: 3
<java.io.FileInputStream: void close()>: 3
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>: 3
<java.io.FileOutputStream: void write(byte[],int,int)>: 3
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>: 3
<io.realm.internal.RealmProxyMediator: boolean equals(java.lang.Object)>: 3
<io.realm.Realm: void close()>: 3
<java.io.File: boolean equals(java.lang.Object)>: 3
<io.realm.RealmConfiguration: boolean equals(java.lang.Object)>: 3
<java.io.RandomAccessFile: void readFully(byte[])>: 3
<io.realm.BaseRealm: void close()>: 3
<java.io.RandomAccessFile: long length()>: 3
<java.io.File: java.lang.String toString()>: 3
<java.io.RandomAccessFile: void close()>: 3
<java.io.FileInputStream: int read(byte[])>: 3
<java.io.BufferedWriter: void <init>(java.io.Writer,int)>: 2
<java.math.BigInteger: int hashCode()>: 2
<java.net.InetAddress: java.lang.String getHostAddress()>: 2
<java.io.FileWriter: void <init>(java.io.File,boolean)>: 2
<java.io.Reader: void close()>: 2
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 2
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 2
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 2
<java.net.InetSocketAddress: int getPort()>: 2
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 2
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>: 2
<com.fasterxml.jackson.core.base.GeneratorBase: void close()>: 2
<java.io.File: boolean canWrite()>: 2
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String,java.lang.Throwable)>: 2
<java.io.OutputStream: void close()>: 2
<java.net.InetSocketAddress: java.lang.String getHostName()>: 2
<com.fasterxml.jackson.core.io.MergedStream: int read(byte[],int,int)>: 2
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>: 2
<android.net.NetworkInfo: int getType()>: 2
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 2
<com.fasterxml.jackson.databind.type.TypeBindings: boolean equals(java.lang.Object)>: 2
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 2
<com.fasterxml.jackson.databind.util.TypeKey: int hashCode()>: 2
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String)>: 2
<com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>: 2
<java.io.FileOutputStream: void write(byte[])>: 2
<java.net.InetSocketAddress: java.net.InetAddress getAddress()>: 2
<java.io.EOFException: void <init>()>: 2
<android.database.Cursor: void close()>: 2
<java.lang.Double: int hashCode()>: 2
<java.io.Reader: int read(char[],int,int)>: 2
<java.io.IOException: void <init>()>: 1
<java.io.FileOutputStream: java.io.FileDescriptor getFD()>: 1
<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>: 1
<java.io.File: boolean setExecutable(boolean,boolean)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 1
<java.io.Reader: void <init>()>: 1
<java.net.URI: java.lang.String getRawAuthority()>: 1
<java.io.InputStream: int read()>: 1
<com.freshchat.consumer.sdk.j.a.b: void close()>: 1
<java.net.URI: java.lang.String getHost()>: 1
<java.io.OutputStream: void flush()>: 1
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 1
<java.io.File: boolean setWritable(boolean)>: 1
<java.net.URI: java.lang.String getRawQuery()>: 1
<java.io.File: boolean createNewFile()>: 1
<java.net.URI: java.lang.String getUserInfo()>: 1
<java.net.URI: int getPort()>: 1
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>: 1
<java.io.FileWriter: void <init>(java.io.File)>: 1
<java.net.URI: java.lang.String getScheme()>: 1
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>: 1
<java.io.Writer: void <init>()>: 1
<java.io.File: boolean renameTo(java.io.File)>: 1
<android.net.Uri$Builder: android.net.Uri build()>: 1
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 1
<java.util.zip.ZipFile: void close()>: 1
<java.net.URI: java.lang.String toString()>: 1
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>: 1
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 1
<java.io.File: java.lang.String getCanonicalPath()>: 1
<android.graphics.Bitmap: int getHeight()>: 1
<java.io.File: boolean setReadable(boolean,boolean)>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<java.io.File: long getUsableSpace()>: 1
<android.graphics.Bitmap: int getWidth()>: 1
<java.io.FileDescriptor: void sync()>: 1
<java.io.File: java.io.File[] listFiles()>: 1
<java.net.URI: java.lang.String getRawPath()>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 1
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 1
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 1
----------------StartWorker----------------
<java.lang.Object: boolean equals(java.lang.Object)>: 419
<java.lang.String: boolean equals(java.lang.Object)>: 370
<java.io.File: boolean exists()>: 309
<java.io.File: java.lang.String getName()>: 180
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 99
<java.io.File: long length()>: 80
<java.io.File: void <init>(java.lang.String)>: 78
<java.io.File: java.lang.String getAbsolutePath()>: 75
<java.lang.Object: int hashCode()>: 72
<java.io.File: boolean isDirectory()>: 60
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 60
<android.graphics.Rect: boolean equals(java.lang.Object)>: 54
<java.io.FileInputStream: void <init>(java.io.File)>: 54
<java.io.FileInputStream: void close()>: 54
<java.io.File: boolean renameTo(java.io.File)>: 54
<java.io.FileInputStream: int read(byte[])>: 54
<java.io.PrintStream: void println(java.lang.String)>: 50
<java.io.File: void <init>(java.io.File,java.lang.String)>: 43
<java.io.FileOutputStream: void close()>: 42
<android.graphics.Bitmap: int getHeight()>: 42
<android.graphics.Bitmap: int getWidth()>: 42
<java.io.FileOutputStream: void write(byte[])>: 42
<java.lang.String: int hashCode()>: 41
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 41
<com.fasterxml.jackson.databind.JavaType: int hashCode()>: 41
<android.database.sqlite.SQLiteDatabase: long replace(java.lang.String,java.lang.String,android.content.ContentValues)>: 40
<java.io.File: boolean delete()>: 37
<java.io.File: java.io.File getAbsoluteFile()>: 36
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 36
<java.io.BufferedReader: java.lang.String readLine()>: 36
<java.io.BufferedReader: void close()>: 36
<java.io.BufferedReader: void <init>(java.io.Reader)>: 36
<java.lang.Boolean: boolean equals(java.lang.Object)>: 36
<java.io.IOException: void <init>(java.lang.String)>: 33
<java.io.ByteArrayOutputStream: void <init>()>: 27
<java.net.URL: java.lang.String toString()>: 26
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 25
<java.io.File: boolean mkdirs()>: 24
<java.net.URL: void <init>(java.lang.String)>: 23
<java.io.ByteArrayOutputStream: void close()>: 23
<java.io.OutputStream: void write(byte[])>: 22
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 21
<java.io.OutputStream: void flush()>: 20
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 20
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 20
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 20
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 19
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 19
<java.util.zip.DeflaterOutputStream: void write(byte[],int,int)>: 18
<java.io.File: java.lang.String[] list()>: 18
<java.net.URI: void <init>(java.lang.String)>: 18
<java.net.DatagramSocket: void close()>: 18
<java.net.URLConnection: void setDoOutput(boolean)>: 18
<android.graphics.Bitmap: int getPixel(int,int)>: 18
<java.io.InputStreamReader: void close()>: 18
<java.net.URL: java.net.URLConnection openConnection()>: 18
<java.io.FileInputStream: int available()>: 18
<java.net.DatagramPacket: void <init>(byte[],int)>: 18
<java.net.DatagramSocket: void <init>()>: 18
<java.net.URLConnection: java.util.Map getHeaderFields()>: 18
<java.net.HttpCookie: java.util.List parse(java.lang.String)>: 18
<java.io.FileInputStream: long skip(long)>: 18
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>: 18
<java.net.CookieManager: void <init>(java.net.CookieStore,java.net.CookiePolicy)>: 18
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 18
<java.net.CookieManager: java.net.CookieStore getCookieStore()>: 18
<java.net.DatagramSocket: void setSoTimeout(int)>: 18
<java.net.HttpURLConnection: int getResponseCode()>: 18
<java.net.HttpCookie: java.lang.String toString()>: 18
<java.net.URLConnection: java.net.URL getURL()>: 18
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 18
<com.appsee.Dimension: boolean equals(java.lang.Object)>: 18
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 18
<java.io.OutputStream: void close()>: 18
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 18
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>: 18
<android.net.NetworkInfo: int getType()>: 18
<java.io.InputStream: void close()>: 18
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>: 18
<java.net.URLConnection: void setReadTimeout(int)>: 18
<java.lang.Integer: boolean equals(java.lang.Object)>: 18
<java.net.URL: java.lang.String getProtocol()>: 18
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 18
<java.net.DatagramSocket: void receive(java.net.DatagramPacket)>: 18
<java.net.URLConnection: java.io.InputStream getInputStream()>: 18
<java.net.DatagramSocket: void send(java.net.DatagramPacket)>: 18
<java.net.DatagramPacket: void <init>(byte[],int,java.net.InetAddress,int)>: 18
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 18
<java.net.URLConnection: void setConnectTimeout(int)>: 18
<java.util.zip.DeflaterOutputStream: void close()>: 18
<java.net.URLConnection: void setDoInput(boolean)>: 18
<java.io.File: java.io.File[] listFiles()>: 18
<android.net.NetworkInfo: boolean isConnected()>: 18
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 18
<java.io.File: java.lang.String toString()>: 18
<java.io.FilterOutputStream: void write(int)>: 8
<java.net.Socket: void close()>: 8
<android.graphics.BitmapFactory$Options: void <init>()>: 7
<android.graphics.Bitmap: void recycle()>: 5
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>: 5
<java.io.BufferedInputStream: void close()>: 5
<java.net.URL: java.lang.Object getContent()>: 5
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>: 5
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>: 5
<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>: 5
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 5
<java.io.FilterInputStream: int read(byte[])>: 5
<java.io.FilterOutputStream: void flush()>: 4
<java.net.Socket: java.io.InputStream getInputStream()>: 4
<java.io.FilterOutputStream: void write(byte[])>: 4
<java.net.Socket: java.io.OutputStream getOutputStream()>: 4
<java.io.EOFException: void <init>()>: 4
<java.io.Closeable: void close()>: 3
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 3
<java.io.ByteArrayInputStream: int read()>: 3
<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>: 2
<java.io.InputStream: int read()>: 2
<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>: 2
<java.io.ByteArrayOutputStream: int size()>: 2
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>: 2
<java.io.ByteArrayOutputStream: void write(int)>: 2
<java.io.FilterInputStream: void <init>(java.io.InputStream)>: 2
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 2
<java.io.EOFException: void <init>(java.lang.String)>: 2
<java.io.FilterInputStream: int read(byte[],int,int)>: 2
<java.net.Socket: void connect(java.net.SocketAddress,int)>: 2
<java.io.FilterInputStream: long skip(long)>: 2
<com.neovisionaries.ws.client.WebSocketInputStream: void <init>(java.io.InputStream)>: 2
<com.freshchat.consumer.sdk.j.ac$a: long skip(long)>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 2
<com.neovisionaries.ws.client.WebSocketOutputStream: void <init>(java.io.OutputStream)>: 2
<java.io.FileInputStream: void <init>(java.lang.String)>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 1
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 1
<java.io.DataInputStream: int readUnsignedShort()>: 1
<java.io.ByteArrayInputStream: void <init>(byte[])>: 1
<java.io.ByteArrayInputStream: int read(byte[],int,int)>: 1
<java.io.DataInputStream: int read(byte[])>: 1
<java.io.DataInputStream: void <init>(java.io.InputStream)>: 1
<java.io.InputStream: int read(byte[])>: 1
<com.freshchat.consumer.sdk.j.ac$a: void <init>(byte[])>: 1
<java.io.ByteArrayInputStream: void reset()>: 1
<java.io.DataInputStream: byte readByte()>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<java.io.ByteArrayInputStream: long skip(long)>: 1
<java.io.DataInputStream: int skipBytes(int)>: 1
