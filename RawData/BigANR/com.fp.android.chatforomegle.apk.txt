Duration => 194
UI Thread => 113
Worker Thread => 996

----------------StartUI----------------
<java.io.File: boolean exists()>: 8
<java.io.File: void <init>(java.io.File,java.lang.String)>: 7
<java.io.IOException: void <init>(java.lang.String)>: 7
<java.io.File: boolean delete()>: 7
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 4
<java.io.BufferedReader: java.lang.String readLine()>: 4
<java.io.BufferedReader: void <init>(java.io.Reader)>: 4
<android.database.sqlite.SQLiteOpenHelper: void close()>: 3
<java.io.File: java.io.File[] listFiles()>: 3
<java.io.File: boolean mkdirs()>: 3
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 2
<java.io.IOException: void <init>()>: 2
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 2
<java.io.File: boolean isDirectory()>: 2
<java.io.InputStream: void close()>: 2
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 2
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>: 2
<java.io.File: boolean mkdir()>: 2
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 2
<java.io.Writer: void close()>: 2
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 2
<java.io.File: void <init>(java.lang.String)>: 2
<android.graphics.BitmapFactory$Options: void <init>()>: 1
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<java.io.File: boolean renameTo(java.io.File)>: 1
<java.io.Closeable: void close()>: 1
<java.io.FileInputStream: void <init>(java.io.File)>: 1
<android.net.Uri$Builder: android.net.Uri build()>: 1
<java.net.URI: void <init>(java.lang.String)>: 1
<java.io.File: long length()>: 1
<java.io.File: java.net.URI toURI()>: 1
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 1
<java.io.File: java.lang.String getName()>: 1
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: void close()>: 1
<java.net.URI: java.lang.String toString()>: 1
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 1
<android.database.sqlite.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)>: 1
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 1
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 1
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 1
<java.nio.charset.Charset: boolean equals(java.lang.Object)>: 1
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 1
<java.net.URI: java.lang.String getHost()>: 1
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$2: void <init>()>: 1
<java.io.ByteArrayOutputStream: void <init>(int)>: 1
<java.io.Writer: void write(java.lang.String)>: 1
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 1
<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>: 1
<java.io.InputStream: int read(byte[],int,int)>: 1
<java.net.URI: java.lang.String getRawQuery()>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<java.io.File: boolean createNewFile()>: 1
<java.io.OutputStream: void <init>()>: 1
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 1
<java.net.URI: int getPort()>: 1
<android.graphics.Bitmap: boolean isRecycled()>: 1
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 1
<java.io.EOFException: void <init>()>: 1
<java.io.PrintStream: void println(java.lang.String)>: 1
<android.database.Cursor: void close()>: 1
<java.net.URI: java.lang.String getScheme()>: 1
----------------StartWorker----------------
<android.database.sqlite.SQLiteOpenHelper: void close()>: 137
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 68
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 55
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 41
<android.database.sqlite.SQLiteStatement: long simpleQueryForLong()>: 28
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>: 28
<android.database.sqlite.SQLiteClosable: void close()>: 28
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 27
<android.database.Cursor: void close()>: 27
<java.io.BufferedReader: java.lang.String readLine()>: 26
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 26
<java.io.BufferedReader: void <init>(java.io.Reader)>: 26
<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>: 15
<java.io.OutputStream: void close()>: 15
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 15
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 15
<java.io.BufferedReader: void close()>: 15
<java.net.URLConnection: void setConnectTimeout(int)>: 15
<java.net.URLConnection: java.lang.String getContentType()>: 15
<java.net.HttpURLConnection: int getResponseCode()>: 15
<java.io.InputStream: int read(byte[])>: 15
<java.io.InputStream: void close()>: 15
<java.net.URL: void <init>(java.lang.String)>: 15
<java.net.URLConnection: void setDoOutput(boolean)>: 15
<java.net.URLConnection: void setDoInput(boolean)>: 15
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 15
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 15
<java.net.URL: java.net.URLConnection openConnection()>: 15
<java.io.OutputStream: void write(byte[])>: 15
<java.io.OutputStream: void flush()>: 15
<java.net.URLConnection: java.io.InputStream getInputStream()>: 15
<java.net.URLConnection: java.util.Map getHeaderFields()>: 15
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 15
<java.net.URLConnection: void setUseCaches(boolean)>: 15
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 15
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>: 15
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 14
<java.io.File: boolean delete()>: 14
<java.net.URI: java.lang.String getRawQuery()>: 13
<java.net.URI: void <init>(java.lang.String)>: 13
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 13
<java.net.URI: int getPort()>: 13
<android.database.sqlite.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)>: 13
<java.net.URI: java.lang.String getHost()>: 13
<java.net.URI: java.lang.String getScheme()>: 13
