Duration => 10346
UI Thread => 871
Worker Thread => 6622

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 465
<java.io.File: void <init>(java.lang.String)>: 33
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 27
<android.net.NetworkInfo: boolean isConnected()>: 27
<java.io.File: boolean exists()>: 26
<android.net.NetworkInfo: int getType()>: 25
<android.net.NetworkInfo: java.lang.String getSubtypeName()>: 25
<android.net.NetworkInfo: int getSubtype()>: 25
<android.net.NetworkInfo: java.lang.String getTypeName()>: 25
<java.io.File: void <init>(java.io.File,java.lang.String)>: 21
<java.io.File: java.lang.String getAbsolutePath()>: 14
<android.database.Cursor: void close()>: 12
<java.io.FileInputStream: void <init>(java.io.File)>: 11
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 10
<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>: 10
<java.io.File: boolean delete()>: 7
<java.io.IOException: void <init>(java.lang.String)>: 6
<java.io.File: boolean isDirectory()>: 5
<java.io.File: long length()>: 4
<java.io.File: java.io.File[] listFiles()>: 4
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 3
<java.io.File: boolean mkdir()>: 3
<java.io.Writer: void write(java.lang.String)>: 3
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 3
<java.io.FileOutputStream: void <init>(java.io.File)>: 3
<java.io.File: boolean mkdirs()>: 3
<java.io.FileReader: void <init>(java.io.File)>: 2
<android.graphics.BitmapFactory$Options: void <init>()>: 2
<java.io.IOException: void <init>()>: 2
<java.io.File: boolean renameTo(java.io.File)>: 2
<java.io.InputStream: void close()>: 2
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 2
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>: 2
<android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getDefault(int,android.net.SSLSessionCache)>: 2
<java.io.Writer: void close()>: 2
<java.io.BufferedReader: java.lang.String readLine()>: 2
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>: 2
<java.io.File: boolean createNewFile()>: 2
<java.io.BufferedReader: void close()>: 2
<java.io.File: java.lang.String toString()>: 2
<java.io.RandomAccessFile: void close()>: 2
<java.io.FileOutputStream: void close()>: 2
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>: 2
<java.io.BufferedReader: void <init>(java.io.Reader)>: 2
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<java.io.FileOutputStream: void write(byte[],int,int)>: 1
<java.io.InputStream: int read(byte[])>: 1
<java.net.URL: void <init>(java.lang.String)>: 1
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>: 1
<android.net.SSLCertificateSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getHttpSocketFactory(int,android.net.SSLSessionCache)>: 1
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 1
<java.io.BufferedWriter: void close()>: 1
<java.io.File: java.lang.String getName()>: 1
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: void close()>: 1
<java.io.OutputStream: void write(byte[])>: 1
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 1
<java.nio.charset.Charset: boolean equals(java.lang.Object)>: 1
<java.io.File: java.lang.String getPath()>: 1
<java.io.ByteArrayOutputStream: void <init>(int)>: 1
<java.io.InputStream: int read(byte[],int,int)>: 1
<java.io.RandomAccessFile: void readFully(byte[])>: 1
<java.io.StringWriter: void <init>()>: 1
<android.graphics.Bitmap: boolean isRecycled()>: 1
<java.io.PrintWriter: void <init>(java.io.Writer)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 1
<android.os.ParcelFileDescriptor: void close()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 1
<java.io.Writer: void flush()>: 1
<java.io.RandomAccessFile: java.lang.String readLine()>: 1
<java.io.RandomAccessFile: long length()>: 1
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 1
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 1
<java.io.File: java.io.File getParentFile()>: 1
<java.io.PrintStream: void println(java.lang.String)>: 1
<java.io.EOFException: void <init>()>: 1
<java.io.FileWriter: void <init>(java.io.File)>: 1
<android.net.SSLSessionCache: void <init>(android.content.Context)>: 1
<java.io.InputStream: int available()>: 1
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 725
<java.io.File: void <init>(java.io.File,java.lang.String)>: 273
<java.io.File: boolean exists()>: 218
<java.net.URL: java.net.URLConnection openConnection()>: 187
<java.net.URL: void <init>(java.lang.String)>: 187
<java.io.OutputStream: void write(byte[])>: 174
<java.net.URLConnection: void setConnectTimeout(int)>: 165
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 164
<java.net.HttpURLConnection: int getResponseCode()>: 144
<java.net.URLConnection: void setReadTimeout(int)>: 143
<java.net.URLConnection: void setDoOutput(boolean)>: 142
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 142
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 142
<java.lang.Object: boolean equals(java.lang.Object)>: 140
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 132
<java.io.DataOutputStream: void <init>(java.io.OutputStream)>: 110
<java.io.DataOutputStream: void flush()>: 110
<java.io.FilterOutputStream: void close()>: 110
<java.io.File: void <init>(java.lang.String)>: 103
<java.io.BufferedReader: java.lang.String readLine()>: 101
<java.io.BufferedReader: void <init>(java.io.Reader)>: 101
<java.net.URLConnection: java.io.InputStream getInputStream()>: 99
<java.io.File: java.lang.String getAbsolutePath()>: 98
<java.io.File: boolean isDirectory()>: 96
<java.io.File: boolean mkdirs()>: 87
<java.io.File: boolean delete()>: 69
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 66
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 66
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 66
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>: 66
<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>: 66
<java.io.File: long length()>: 60
<android.database.Cursor: void close()>: 60
<java.io.BufferedReader: void close()>: 57
<java.io.InputStream: int read(byte[])>: 56
<java.io.File: java.io.File[] listFiles()>: 56
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 55
<android.net.NetworkInfo: boolean isConnected()>: 55
<java.io.IOException: void <init>(java.lang.String)>: 52
<java.io.InputStream: void close()>: 48
<java.io.FileOutputStream: void <init>(java.io.File)>: 47
<java.io.FileOutputStream: void write(byte[],int,int)>: 46
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 44
<java.io.BufferedOutputStream: void flush()>: 44
<java.io.File: java.io.File getParentFile()>: 44
<java.io.ByteArrayOutputStream: void <init>()>: 44
<java.io.FileNotFoundException: void <init>(java.lang.String)>: 42
<java.io.FileReader: void <init>(java.io.File)>: 35
<java.net.URLConnection: int getContentLength()>: 33
<java.lang.String: int hashCode()>: 31
<java.io.OutputStream: void close()>: 30
<java.io.Closeable: void close()>: 25
<java.io.InputStream: int available()>: 25
<java.io.File: boolean createNewFile()>: 24
<java.io.StringWriter: void <init>()>: 24
<java.io.PrintWriter: void <init>(java.io.Writer)>: 24
<java.io.FileOutputStream: void close()>: 24
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>: 24
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 24
<java.io.RandomAccessFile: java.lang.String readLine()>: 24
<java.io.RandomAccessFile: void close()>: 24
<java.nio.channels.spi.AbstractInterruptibleChannel: void close()>: 22
<java.io.BufferedOutputStream: void write(byte[],int,int)>: 22
<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>: 22
<java.io.BufferedInputStream: void close()>: 22
<java.io.BufferedInputStream: int read(byte[],int,int)>: 22
<java.io.BufferedInputStream: int available()>: 22
<android.net.NetworkInfo: int getType()>: 22
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 22
<java.lang.Integer: boolean equals(java.lang.Object)>: 22
<java.net.URL: java.lang.String getProtocol()>: 22
<android.graphics.drawable.BitmapDrawable: void setTileModeXY(android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>: 22
<java.util.zip.DeflaterOutputStream: void close()>: 22
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>: 22
<java.io.BufferedOutputStream: void close()>: 22
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 22
<java.io.File: java.lang.String toString()>: 21
<java.io.File: java.lang.String[] list()>: 20
<java.lang.Throwable: java.lang.String getMessage()>: 20
<android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getDefault(int,android.net.SSLSessionCache)>: 18
<android.graphics.Bitmap: void recycle()>: 13
<java.io.Writer: void write(java.lang.String)>: 13
<android.graphics.Bitmap: int getHeight()>: 13
<java.io.ByteArrayInputStream: void <init>(byte[])>: 12
<android.graphics.Bitmap: int getWidth()>: 12
<java.io.FileInputStream: void <init>(java.io.File)>: 11
<java.io.OutputStream: void write(byte[],int,int)>: 11
<java.io.OutputStream: void flush()>: 11
<java.io.FileWriter: void <init>(java.io.File)>: 11
<java.io.BufferedWriter: void close()>: 11
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 11
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 11
<java.io.File: java.io.File getAbsoluteFile()>: 10
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 10
<java.io.File: long lastModified()>: 10
<java.io.File: java.lang.String getName()>: 10
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 10
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 10
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 10
<java.net.URLConnection: java.util.Map getHeaderFields()>: 10
<java.io.File: java.lang.String getParent()>: 10
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 10
<java.net.URLConnection: java.lang.String getContentType()>: 10
<java.net.HttpURLConnection: void setFixedLengthStreamingMode(long)>: 10
<android.net.http.AndroidHttpClient: void modifyRequestToAcceptGzipResponse(org.apache.http.HttpRequest)>: 10
<java.io.File: boolean canWrite()>: 10
<java.lang.Object: int hashCode()>: 10
<java.io.File: boolean canRead()>: 10
<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>: 10
<android.net.http.AndroidHttpClient: java.io.InputStream getUngzippedContent(org.apache.http.HttpEntity)>: 10
<java.net.URL: java.lang.String toString()>: 10
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 10
<java.io.File: boolean equals(java.lang.Object)>: 10
<android.database.sqlite.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)>: 10
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>: 10
<java.net.URL: void <init>(java.net.URL,java.lang.String)>: 10
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 10
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 10
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>: 10
<java.net.URLConnection: void setDoInput(boolean)>: 10
<java.io.File: java.io.File getCanonicalFile()>: 10
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 10
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 10
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>: 10
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>: 10
<android.database.sqlite.SQLiteClosable: void close()>: 10
<android.net.SSLCertificateSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getHttpSocketFactory(int,android.net.SSLSessionCache)>: 9
<android.net.SSLSessionCache: void <init>(android.content.Context)>: 9
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>: 4
<android.graphics.BitmapFactory$Options: void <init>()>: 3
<java.io.File: boolean renameTo(java.io.File)>: 3
<java.io.InputStream: int read(byte[],int,int)>: 3
<java.io.InputStream: void reset()>: 2
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$2: void <init>()>: 2
<java.io.Writer: void flush()>: 2
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>: 2
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 2
<java.io.OutputStream: void <init>()>: 2
<java.io.InputStream: boolean markSupported()>: 2
<java.io.IOException: void <init>()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 1
<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>: 1
<java.io.InputStream: void <init>()>: 1
<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>: 1
<android.graphics.Bitmap: int getRowBytes()>: 1
<java.io.FilterInputStream: void <init>(java.io.InputStream)>: 1
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 1
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot: void close()>: 1
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 1
<com.nostra13.universalimageloader.core.assist.FlushedInputStream: void <init>(java.io.InputStream)>: 1
<java.io.FileInputStream: void <init>(java.lang.String)>: 1
<android.graphics.Bitmap: boolean isRecycled()>: 1
