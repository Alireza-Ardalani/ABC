Duration => 2770
UI Thread => 647
Worker Thread => 17407

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 251
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 35
<java.io.File: java.lang.String getPath()>: 19
<java.net.HttpCookie: java.lang.String getName()>: 15
<java.net.HttpCookie: java.lang.String getDomain()>: 15
<java.net.HttpCookie: java.lang.String getValue()>: 15
<java.io.File: void <init>(java.io.File,java.lang.String)>: 13
<java.io.File: void <init>(java.lang.String)>: 13
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>: 11
<java.io.File: boolean exists()>: 11
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 10
<java.net.CookieHandler: void setDefault(java.net.CookieHandler)>: 9
<java.io.ObjectInputStream: java.lang.Object readObject()>: 9
<java.net.CookieManager: void <init>(java.net.CookieStore,java.net.CookiePolicy)>: 9
<java.io.ByteArrayInputStream: void <init>(byte[])>: 9
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 9
<java.io.File: java.lang.String getAbsolutePath()>: 6
<android.database.Cursor: void close()>: 6
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 6
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 5
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 5
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 5
<java.lang.Integer: boolean equals(java.lang.Object)>: 5
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 5
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 5
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 5
<java.net.HttpCookie: void <init>(java.lang.String,java.lang.String)>: 5
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 5
<java.io.File: boolean delete()>: 5
<android.database.sqlite.SQLiteClosable: void close()>: 5
<android.graphics.BitmapFactory$Options: void <init>()>: 4
<java.io.OutputStream: void flush()>: 4
<java.io.BufferedReader: java.lang.String readLine()>: 4
<java.lang.Object: int hashCode()>: 4
<android.net.NetworkInfo: java.lang.String getTypeName()>: 4
<java.io.BufferedReader: void <init>(java.io.Reader)>: 4
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 3
<java.io.InputStream: void close()>: 3
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 3
<java.io.FileOutputStream: void <init>(java.io.File)>: 3
<java.io.BufferedReader: void close()>: 3
<java.lang.String: int hashCode()>: 3
<java.io.ByteArrayOutputStream: void <init>()>: 3
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 3
<java.io.PrintStream: void println(java.lang.String)>: 3
<java.io.OutputStream: void close()>: 2
<java.io.FileInputStream: void <init>(java.io.File)>: 2
<android.net.Uri$Builder: android.net.Uri build()>: 2
<java.io.File: java.lang.String getName()>: 2
<java.io.FileOutputStream: void <init>(java.lang.String)>: 2
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 2
<java.io.File: boolean mkdir()>: 2
<java.io.OutputStream: void write(int)>: 2
<android.net.Uri$Builder: java.lang.String toString()>: 2
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 2
<android.graphics.Bitmap: int getHeight()>: 2
<android.graphics.Bitmap: int getWidth()>: 2
<java.io.FileNotFoundException: void <init>(java.lang.String)>: 2
<java.io.BufferedOutputStream: void flush()>: 2
<java.io.FilterOutputStream: void close()>: 2
<java.io.ByteArrayOutputStream: void close()>: 2
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 2
<java.io.File: java.lang.String toString()>: 2
<java.io.FileOutputStream: void close()>: 2
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 2
<java.io.File: boolean mkdirs()>: 2
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 1
<java.io.FileReader: void <init>(java.io.File)>: 1
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>: 1
<java.io.File: boolean isDirectory()>: 1
<android.database.ContentObserver: void <init>(android.os.Handler)>: 1
<java.io.FileInputStream: java.io.FileDescriptor getFD()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 1
<java.util.zip.ZipFile: void close()>: 1
<java.io.OutputStream: void write(byte[],int,int)>: 1
<java.io.BufferedWriter: void close()>: 1
<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>: 1
<java.io.File: boolean setWritable(boolean,boolean)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 1
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>: 1
<java.io.Writer: void write(java.lang.String)>: 1
<java.io.FileInputStream: void close()>: 1
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 1
<java.io.RandomAccessFile: void readFully(byte[])>: 1
<java.io.File: boolean setReadable(boolean,boolean)>: 1
<java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>: 1
<android.net.NetworkInfo: boolean isConnected()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>: 1
<java.io.RandomAccessFile: long length()>: 1
<java.io.BufferedWriter: void flush()>: 1
<java.io.RandomAccessFile: void close()>: 1
<java.io.File: java.io.File getParentFile()>: 1
<java.io.FileWriter: void <init>(java.io.File)>: 1
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 1231
<java.lang.Object: int hashCode()>: 942
<java.net.URLConnection: java.net.URL getURL()>: 886
<java.io.IOException: void <init>(java.lang.String)>: 707
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 533
<java.net.HttpURLConnection: int getResponseCode()>: 532
<java.net.HttpURLConnection: java.lang.String getRequestMethod()>: 531
<android.net.NetworkInfo: int getType()>: 531
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 531
<java.net.URLConnection: int getContentLength()>: 531
<java.net.URL: void <init>(java.lang.String)>: 356
<java.net.URLConnection: java.io.InputStream getInputStream()>: 356
<java.net.URL: java.lang.String getHost()>: 354
<java.io.InputStream: int read(byte[],int,int)>: 354
<java.net.URLConnection: void setDoOutput(boolean)>: 353
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 353
<java.io.InputStream: void <init>()>: 353
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 353
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 353
<java.net.URLConnection: void setReadTimeout(int)>: 353
<java.net.URLConnection: void setConnectTimeout(int)>: 353
<java.net.URLConnection: void setDoInput(boolean)>: 353
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 353
<java.net.URLConnection: java.util.Map getHeaderFields()>: 350
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>: 350
<java.net.URLConnection: java.lang.String getContentType()>: 350
<java.net.URLConnection: java.lang.String getContentEncoding()>: 350
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>: 350
<java.net.URLConnection: void setUseCaches(boolean)>: 350
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 181
<android.net.NetworkInfo: java.lang.String getTypeName()>: 181
<java.net.URL: java.lang.String getPath()>: 177
<java.net.HttpURLConnection: void <init>(java.net.URL)>: 177
<java.net.URL: int getPort()>: 177
<javax.net.ssl.HttpsURLConnection: void <init>(java.net.URL)>: 177
<java.net.URL: java.lang.String toString()>: 177
<java.net.URL: java.lang.String getProtocol()>: 177
<android.net.NetworkInfo: int getSubtype()>: 177
<android.net.NetworkInfo: boolean isConnected()>: 177
<java.io.OutputStream: void <init>()>: 176
<java.net.CookieManager: void <init>(java.net.CookieStore,java.net.CookiePolicy)>: 166
<java.io.ByteArrayInputStream: void <init>(byte[])>: 166
<java.net.CookieHandler: void setDefault(java.net.CookieHandler)>: 166
<java.io.File: void <init>(java.io.File,java.lang.String)>: 166
<java.io.ObjectInputStream: java.lang.Object readObject()>: 166
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 166
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 132
<android.net.Uri$Builder: java.lang.String toString()>: 129
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 129
<android.net.Uri$Builder: android.net.Uri build()>: 129
<java.io.PrintStream: void println(java.lang.String)>: 98
<java.net.HttpCookie: void <init>(java.lang.String,java.lang.String)>: 39
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>: 33
<java.io.File: java.lang.String getPath()>: 13
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 8
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 7
<java.io.Writer: void write(java.lang.String)>: 7
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 5
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 4
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 4
<java.lang.Integer: boolean equals(java.lang.Object)>: 4
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 4
<android.database.sqlite.SQLiteClosable: void close()>: 4
<java.io.BufferedReader: void <init>(java.io.Reader)>: 3
<java.net.URL: java.net.URLConnection openConnection()>: 2
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 2
<java.io.BufferedReader: java.lang.String readLine()>: 2
<java.io.OutputStream: void close()>: 2
<android.database.sqlite.SQLiteDatabase: long replace(java.lang.String,java.lang.String,android.content.ContentValues)>: 2
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 2
<com.newrelic.agent.android.harvest.ConnectInformation: boolean equals(java.lang.Object)>: 2
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 1
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>: 1
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>: 1
<java.io.Reader: int read(char[])>: 1
<java.io.Reader: void close()>: 1
<java.lang.Object: java.lang.String toString()>: 1
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>: 1
<com.newrelic.com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>: 1
<java.io.StringWriter: void <init>()>: 1
<com.newrelic.com.google.gson.internal.bind.JsonTreeWriter$1: void <init>()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 1
<java.io.Writer: void flush()>: 1
<java.io.EOFException: void <init>(java.lang.String)>: 1
<java.io.Writer: void <init>()>: 1
<android.graphics.BitmapFactory$Options: void <init>()>: 1
<java.io.Writer: void write(int)>: 1
<java.net.HttpCookie: java.lang.String getName()>: 1
<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>: 1
<com.newrelic.agent.android.harvest.DeviceInformation: boolean equals(java.lang.Object)>: 1
<java.io.InputStream: void close()>: 1
<java.io.StringWriter: java.lang.String toString()>: 1
<java.io.Writer: java.io.Writer append(char)>: 1
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 1
<java.io.Writer: void write(java.lang.String,int,int)>: 1
<java.io.Writer: void close()>: 1
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 1
<java.net.HttpCookie: java.lang.String getDomain()>: 1
<android.graphics.Bitmap: int getHeight()>: 1
<com.newrelic.agent.android.harvest.ApplicationInformation: boolean equals(java.lang.Object)>: 1
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 1
<java.io.BufferedReader: void close()>: 1
<android.graphics.Bitmap: int getWidth()>: 1
<java.io.ByteArrayOutputStream: void <init>()>: 1
<java.net.HttpCookie: java.lang.String getValue()>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 1
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 1
<java.io.RandomAccessFile: void close()>: 1
<java.io.StringReader: void <init>(java.lang.String)>: 1
<java.io.Reader: int read(char[],int,int)>: 1
