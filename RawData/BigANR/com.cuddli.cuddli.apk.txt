Duration => 166
UI Thread => 128
Worker Thread => 619

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 26
<java.io.File: void <init>(java.lang.String)>: 8
<android.net.NetworkInfo: int getType()>: 6
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 6
<java.io.File: boolean exists()>: 6
<java.lang.String: int hashCode()>: 5
<android.database.sqlite.SQLiteClosable: void close()>: 4
<java.io.InputStream: void close()>: 3
<android.graphics.Bitmap: int getHeight()>: 3
<android.graphics.Bitmap: int getWidth()>: 3
<java.io.PrintStream: void println(java.lang.String)>: 3
<android.database.Cursor: void close()>: 3
<java.io.File: boolean mkdirs()>: 3
<android.graphics.BitmapFactory$Options: void <init>()>: 2
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 2
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 2
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 2
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 2
<java.io.File: java.lang.String getAbsolutePath()>: 2
<java.io.FileOutputStream: void close()>: 2
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 1
<java.io.OutputStream: void close()>: 1
<android.graphics.Bitmap: void recycle()>: 1
<android.database.sqlite.SQLiteDatabase: int getVersion()>: 1
<java.io.InputStream: int read(byte[])>: 1
<android.database.sqlite.SQLiteDatabase: boolean isOpen()>: 1
<android.net.Uri: boolean equals(java.lang.Object)>: 1
<java.io.OutputStream: void write(byte[],int,int)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>: 1
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 1
<java.io.FileOutputStream: void <init>(java.lang.String)>: 1
<com.cuddli.cuddli.database.DatabaseHelper: void close()>: 1
<android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient newInstance(java.lang.String)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>: 1
<java.io.OutputStream: void flush()>: 1
<java.net.CookieManager: void setCookiePolicy(java.net.CookiePolicy)>: 1
<java.io.File: boolean isFile()>: 1
<android.database.sqlite.SQLiteOpenHelper: void close()>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<java.io.File: boolean createNewFile()>: 1
<java.net.CookieManager: java.net.CookieStore getCookieStore()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 1
<android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat valueOf(java.lang.String)>: 1
<java.net.CookieManager: void <init>()>: 1
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 1
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 1
<java.io.File: boolean delete()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 1
<android.os.ParcelFileDescriptor: void close()>: 1
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 80
<java.lang.String: int hashCode()>: 43
<android.graphics.Bitmap: int getHeight()>: 41
<android.graphics.Bitmap: int getWidth()>: 41
<android.graphics.Bitmap: boolean isRecycled()>: 40
<android.graphics.Bitmap: void recycle()>: 30
<java.io.File: void <init>(java.lang.String)>: 29
<java.io.File: boolean exists()>: 28
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 21
<java.io.File: java.lang.String toString()>: 21
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 17
<java.lang.Object: boolean equals(java.lang.Object)>: 14
<java.io.FileOutputStream: void <init>(java.io.File)>: 14
<android.graphics.drawable.BitmapDrawable: void setTileModeXY(android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>: 14
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 14
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 14
<java.io.File: boolean mkdirs()>: 14
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 13
<java.io.File: java.lang.String getName()>: 12
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 11
<java.io.File: java.lang.String getParent()>: 11
<java.io.Closeable: void close()>: 10
<java.io.OutputStream: void write(byte[])>: 10
<java.io.File: java.lang.String getAbsolutePath()>: 7
<java.io.InputStream: void close()>: 5
<java.io.FileOutputStream: void close()>: 5
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 4
<java.io.BufferedOutputStream: void write(byte[],int,int)>: 3
<java.io.File: boolean createNewFile()>: 3
<java.io.FilterOutputStream: void close()>: 3
<android.database.Cursor: void close()>: 3
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 3
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 2
<java.io.FileInputStream: void <init>(java.io.File)>: 2
<java.io.InputStream: int read(byte[])>: 2
<java.net.URL: void <init>(java.lang.String)>: 2
<java.io.FileOutputStream: void <init>(java.lang.String)>: 2
<java.net.URL: java.net.URLConnection openConnection()>: 2
<java.io.OutputStream: void flush()>: 2
<java.net.URLConnection: java.io.InputStream getInputStream()>: 2
<java.io.InputStream: int read(byte[],int,int)>: 2
<java.net.HttpURLConnection: int getResponseCode()>: 2
<java.io.ByteArrayOutputStream: void <init>()>: 2
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 2
<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>: 1
<android.graphics.BitmapFactory$Options: void <init>()>: 1
<java.nio.channels.spi.AbstractInterruptibleChannel: void close()>: 1
<java.io.FileOutputStream: void write(byte[],int,int)>: 1
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>: 1
<java.io.File: long lastModified()>: 1
<java.io.File: long length()>: 1
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 1
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>: 1
<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>: 1
<java.io.FileInputStream: void close()>: 1
<java.io.BufferedOutputStream: void flush()>: 1
<java.io.File: java.io.File[] listFiles()>: 1
<java.io.File: boolean delete()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 1
<java.io.FileInputStream: int read(byte[])>: 1
<java.io.FilterInputStream: int read(byte[])>: 1
