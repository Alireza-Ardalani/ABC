Duration => 363
UI Thread => 95
Worker Thread => 1307

----------------StartUI----------------
<android.net.NetworkInfo: boolean isConnected()>: 21
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 21
<android.net.NetworkInfo: int getType()>: 14
<android.net.ConnectivityManager: android.net.Network[] getAllNetworks()>: 7
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(android.net.Network)>: 7
<android.net.NetworkInfo: boolean isAvailable()>: 7
<java.lang.String: boolean equals(java.lang.Object)>: 4
<okhttp3.Response: void close()>: 3
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 3
<okhttp3.ResponseBody: void close()>: 3
<java.lang.String: int hashCode()>: 2
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>: 2
<io.requery.android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 32
<io.requery.android.database.sqlite.SQLiteClosable: void releaseReference()>: 30
<io.requery.android.database.sqlite.SQLiteClosable: void acquireReference()>: 27
<io.requery.android.database.sqlite.SQLiteClosable: void close()>: 21
<android.database.Cursor: void close()>: 17
<io.requery.android.database.sqlite.SQLiteDatabaseConfiguration: boolean isInMemoryDb()>: 17
<java.io.File: void <init>(java.lang.String)>: 14
<android.database.sqlite.SQLiteException: void <init>(java.lang.String)>: 13
<io.requery.android.database.sqlite.SQLiteConnectionPool: void closeConnectionAndLogExceptionsLocked(io.requery.android.database.sqlite.SQLiteConnection)>: 13
<io.requery.android.database.sqlite.SQLiteConnection$OperationLog: int beginOperation(java.lang.String,java.lang.String,java.lang.Object[])>: 12
<io.requery.android.database.sqlite.SQLiteConnection$OperationLog: void endOperation(int)>: 12
<io.requery.android.database.sqlite.SQLiteDatabase: io.requery.android.database.sqlite.SQLiteSession getThreadSession()>: 12
<io.requery.android.database.sqlite.SQLiteConnectionPool: io.requery.android.database.sqlite.SQLiteConnection openConnectionLocked(io.requery.android.database.sqlite.SQLiteDatabaseConfiguration,boolean)>: 10
<java.lang.String: int hashCode()>: 10
<io.requery.android.database.sqlite.CloseGuard: io.requery.android.database.sqlite.CloseGuard get()>: 10
<java.io.IOException: void <init>(java.lang.String)>: 10
<io.requery.android.database.sqlite.SQLiteConnection: void bindArguments(io.requery.android.database.sqlite.SQLiteConnection$PreparedStatement,java.lang.Object[])>: 9
<io.requery.android.database.sqlite.CloseGuard: void close()>: 9
<io.requery.android.database.sqlite.SQLiteConnection: void throwIfStatementForbidden(io.requery.android.database.sqlite.SQLiteConnection$PreparedStatement)>: 9
<io.requery.android.database.sqlite.SQLiteConnection$OperationLog: void failOperation(int,java.lang.Exception)>: 9
<io.requery.android.database.sqlite.SQLiteConnection: void releasePreparedStatement(io.requery.android.database.sqlite.SQLiteConnection$PreparedStatement)>: 9
<io.requery.android.database.sqlite.SQLiteConnection$OperationLog: io.requery.android.database.sqlite.SQLiteConnection$Operation getOperationLocked(int)>: 9
<io.requery.android.database.sqlite.SQLiteConnection: void applyBlockGuardPolicy(io.requery.android.database.sqlite.SQLiteConnection$PreparedStatement)>: 9
<io.requery.android.database.sqlite.CloseGuard: void warnIfOpen()>: 9
<io.requery.android.database.sqlite.SQLiteConnection: io.requery.android.database.sqlite.SQLiteConnection$PreparedStatement acquirePreparedStatement(java.lang.String)>: 9
<android.database.sqlite.SQLiteDatabase: boolean isOpen()>: 8
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 8
<io.requery.android.database.sqlite.SQLiteProgram: void onCorruption()>: 8
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 8
<java.io.DataInput: int readUnsignedByte()>: 8
<io.requery.android.database.sqlite.SQLiteProgram: java.lang.Object[] getBindArgs()>: 8
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 8
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>: 8
<io.requery.android.database.sqlite.SQLiteProgram: java.lang.String getSql()>: 8
<io.requery.android.database.sqlite.SQLiteClosable: void <init>()>: 8
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>: 8
<java.io.File: boolean exists()>: 8
<io.requery.android.database.sqlite.SQLiteDatabase: int getThreadDefaultConnectionFlags(boolean)>: 8
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 8
<io.requery.android.database.sqlite.SQLiteProgram: io.requery.android.database.sqlite.SQLiteSession getSession()>: 8
<io.requery.android.database.sqlite.SQLiteProgram: int getConnectionFlags()>: 8
<io.requery.android.database.sqlite.SQLiteCursor: void fillWindow(int)>: 7
<io.requery.android.database.sqlite.CloseGuard: void open(java.lang.String)>: 7
<io.requery.android.database.sqlite.SQLiteDatabase: boolean isOpen()>: 7
<io.requery.android.database.sqlite.SQLiteDatabaseConfiguration: void updateParametersFrom(io.requery.android.database.sqlite.SQLiteDatabaseConfiguration)>: 7
<io.requery.android.database.AbstractCursor: void onDeactivateOrClose()>: 6
<java.io.File: java.lang.String getName()>: 6
<java.io.BufferedReader: java.lang.String readLine()>: 6
<io.requery.android.database.CursorWindow: int getNumRows()>: 6
<io.requery.android.database.sqlite.CloseGuard: void <init>()>: 6
<io.requery.android.database.sqlite.SQLiteConnectionPool: void finishAcquireConnectionLocked(io.requery.android.database.sqlite.SQLiteConnection,int)>: 6
<io.requery.android.database.sqlite.SQLiteStatementType: int getSqlStatementType(java.lang.String)>: 6
<okhttp3.Response: void close()>: 6
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 6
<java.io.DataInput: java.lang.String readUTF()>: 6
<io.requery.android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>: 6
<io.requery.android.database.sqlite.SQLiteConnection: void nativeFinalizeStatement(long,long)>: 6
<io.requery.android.database.sqlite.SQLiteConnection: void dispose(boolean)>: 6
<io.requery.android.database.AbstractWindowedCursor: void closeWindow()>: 6
<io.requery.android.database.AbstractCursor: int getCount()>: 6
<java.io.BufferedReader: void <init>(java.io.Reader)>: 6
<io.requery.android.database.sqlite.SQLiteConnection: void nativeRegisterCustomFunction(long,io.requery.android.database.sqlite.SQLiteCustomFunction)>: 5
<java.io.File: java.lang.String getPath()>: 5
<io.requery.android.database.sqlite.SQLiteConnectionPool: void closeAvailableConnectionsAndLogExceptionsLocked()>: 5
<io.requery.android.database.AbstractCursor: boolean moveToPosition(int)>: 5
<io.requery.android.database.sqlite.SQLiteConnectionPool: void closeAvailableNonPrimaryConnectionsAndLogExceptionsLocked()>: 5
<io.requery.android.database.sqlite.SQLiteConnection: void setLocaleFromConfiguration()>: 5
<io.requery.android.database.sqlite.SQLiteConnection: boolean nativeHasCodec()>: 5
<io.requery.android.database.sqlite.SQLiteDatabase: java.lang.String getLabel()>: 5
<io.requery.android.database.sqlite.SQLiteConnectionPool: void wakeConnectionWaitersLocked()>: 5
<io.requery.android.database.sqlite.SQLiteConnection: void setWalModeFromConfiguration()>: 5
<io.requery.android.database.sqlite.SQLiteStatement: void <init>(io.requery.android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Object[])>: 5
<io.requery.android.database.sqlite.SQLiteConnectionPool: void throwIfClosedLocked()>: 5
<io.requery.android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.Object[])>: 5
<io.requery.android.database.sqlite.SQLiteDatabase: int executeSql(java.lang.String,java.lang.Object[])>: 5
<java.io.File: java.io.File getParentFile()>: 5
<io.requery.android.database.sqlite.SQLiteDatabase: void onCorruption()>: 5
<io.requery.android.database.sqlite.SQLiteDatabaseConfiguration: void <init>(io.requery.android.database.sqlite.SQLiteDatabaseConfiguration)>: 5
<io.requery.android.database.sqlite.SQLiteConnection: void setForeignKeyModeFromConfiguration()>: 5
<java.io.OutputStreamWriter: void close()>: 4
<io.requery.android.database.sqlite.SQLiteDatabase: void endTransaction()>: 4
<java.net.URLConnection: void setDoOutput(boolean)>: 4
<io.requery.android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 4
<java.lang.Object: boolean equals(java.lang.Object)>: 4
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 4
<io.requery.android.database.sqlite.SQLiteConnectionPool: void setMaxConnectionPoolSizeLocked()>: 4
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 4
<java.io.DataInputStream: void <init>(java.io.InputStream)>: 4
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 4
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 4
<android.net.NetworkInfo: int getType()>: 4
<java.net.URL: void <init>(java.lang.String)>: 4
<io.requery.android.database.sqlite.SQLiteDatabase: void <init>(io.requery.android.database.sqlite.SQLiteDatabaseConfiguration,io.requery.android.database.sqlite.SQLiteDatabase$CursorFactory,io.requery.android.database.DatabaseErrorHandler)>: 4
<io.requery.android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 4
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 4
<java.io.Writer: void write(java.lang.String)>: 4
<io.requery.android.database.sqlite.SQLiteDatabase: boolean isReadOnlyLocked()>: 4
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>: 4
<java.io.BufferedReader: void close()>: 4
<java.net.URLConnection: void setDoInput(boolean)>: 4
<java.io.DataInput: boolean readBoolean()>: 4
<android.net.NetworkInfo: boolean isConnected()>: 4
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 4
<java.net.URL: java.net.URLConnection openConnection()>: 4
<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String)>: 4
<org.joda.time.DateTimeZone: boolean equals(java.lang.Object)>: 4
<android.database.sqlite.SQLiteDatabase: void setLockingEnabled(boolean)>: 4
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 4
<java.io.PrintStream: void println(java.lang.String)>: 4
<java.net.URLConnection: void setReadTimeout(int)>: 4
<io.requery.android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 4
<java.net.URLConnection: java.io.InputStream getInputStream()>: 4
<android.database.sqlite.SQLiteOpenHelper: void close()>: 4
<io.requery.android.database.sqlite.SQLiteDatabase: void open()>: 4
<java.net.URLConnection: void setConnectTimeout(int)>: 4
<android.net.wifi.WifiInfo: java.lang.String getBSSID()>: 4
<io.requery.android.database.sqlite.SQLiteConnectionPool: void markAcquiredConnectionsLocked(io.requery.android.database.sqlite.SQLiteConnectionPool$AcquiredConnectionStatus)>: 4
<android.net.wifi.WifiInfo: java.lang.String getSSID()>: 4
<io.requery.android.database.sqlite.SQLiteDatabaseConfiguration: void <init>(java.lang.String,int)>: 4
<io.requery.android.database.sqlite.SQLiteCursor: void setWindow(io.requery.android.database.CursorWindow)>: 3
<io.requery.android.database.sqlite.SQLiteConnection: io.requery.android.database.sqlite.SQLiteConnection$PreparedStatement obtainPreparedStatement(java.lang.String,long,int,int,boolean)>: 3
<io.requery.android.database.AbstractWindowedCursor: void setWindow(io.requery.android.database.CursorWindow)>: 3
<io.requery.android.database.sqlite.SQLiteConnection: void nativeRegisterLocalizedCollators(long,java.lang.String)>: 3
<io.requery.android.database.sqlite.SQLiteConnection$OperationLog: void logOperationLocked(int,java.lang.String)>: 3
<android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException: void <init>(java.lang.String)>: 3
<io.requery.android.database.sqlite.SQLiteDatabase: boolean deleteDatabase(java.io.File)>: 3
<io.requery.android.database.CursorWindow: void nativeClear(long)>: 3
<io.requery.android.database.sqlite.SQLiteProgram: void clearBindings()>: 3
<android.database.Cursor: boolean moveToNext()>: 3
<io.requery.android.database.sqlite.SQLiteConnection: boolean isCacheable(int)>: 3
<android.database.CursorIndexOutOfBoundsException: void <init>(int,int)>: 3
<io.requery.android.database.sqlite.SQLiteConnection$OperationLog: boolean endOperationDeferLogLocked(int)>: 3
<io.requery.android.database.DatabaseErrorHandler: void onCorruption(io.requery.android.database.sqlite.SQLiteDatabase)>: 3
<io.requery.android.database.sqlite.SQLiteDatabase: void dispose(boolean)>: 3
<io.requery.android.database.sqlite.SQLiteConnection$OperationLog: void <init>()>: 3
<io.requery.android.database.sqlite.SQLiteConnection: void setAutoCheckpointInterval()>: 3
<io.requery.android.database.sqlite.SQLiteCursorDriver: android.database.Cursor query(io.requery.android.database.sqlite.SQLiteDatabase$CursorFactory,java.lang.Object[])>: 3
<io.requery.android.database.AbstractWindowedCursor: void checkPosition()>: 3
<io.requery.android.database.sqlite.SQLiteConnection: void setJournalSizeLimit()>: 3
<io.requery.android.database.sqlite.SQLiteConnectionPool: io.requery.android.database.sqlite.SQLiteConnection tryAcquirePrimaryConnectionLocked(int)>: 3
<io.requery.android.database.CursorWindowAllocationException: void <init>(java.lang.String)>: 3
<io.requery.android.database.sqlite.SQLiteConnection$OperationLog: int newOperationCookieLocked(int)>: 3
<io.requery.android.database.sqlite.SQLiteConnectionPool: void close()>: 3
<io.requery.android.database.AbstractWindowedCursor: void clearOrCreateWindow(java.lang.String)>: 3
<io.requery.android.database.sqlite.SQLiteCursorDriver: void cursorClosed()>: 3
<io.requery.android.database.sqlite.SQLiteConnection: java.lang.String trimSqlForDisplay(java.lang.String)>: 3
<io.requery.android.database.AbstractCursor: void close()>: 3
<io.requery.android.database.sqlite.SQLiteConnection: void setJournalMode(java.lang.String)>: 3
<android.database.Cursor: java.lang.String getString(int)>: 3
<io.requery.android.database.sqlite.SQLiteGlobal: int getJournalSizeLimit()>: 3
<android.database.ContentObservable: void <init>()>: 3
<io.requery.android.database.sqlite.SQLiteConnection: boolean nativeIsReadOnly(long,long)>: 3
<io.requery.android.database.sqlite.SQLiteConnection: void open()>: 3
<io.requery.android.database.CursorWindow: void nativeDispose(long)>: 3
<io.requery.android.database.CursorWindow: java.lang.String nativeGetString(long,int,int)>: 3
<io.requery.android.database.sqlite.SQLiteConnection: java.lang.String canonicalizeSyncMode(java.lang.String)>: 3
<io.requery.android.database.sqlite.SQLiteConnection: void nativeClose(long)>: 3
<io.requery.android.database.AbstractCursor: void <init>()>: 3
<io.requery.android.database.sqlite.SQLiteGlobal: java.lang.String getWALSyncMode()>: 3
<io.requery.android.database.sqlite.SQLiteConnection: void <init>(io.requery.android.database.sqlite.SQLiteConnectionPool,io.requery.android.database.sqlite.SQLiteDatabaseConfiguration,int,boolean)>: 3
<io.requery.android.database.sqlite.SQLiteConnection: void recyclePreparedStatement(io.requery.android.database.sqlite.SQLiteConnection$PreparedStatement)>: 3
<io.requery.android.database.sqlite.SQLiteGlobal: int getWALAutoCheckpoint()>: 3
<io.requery.android.database.sqlite.SQLiteStatementInfo: void <init>()>: 3
<io.requery.android.database.sqlite.SQLiteGlobal: java.lang.String getDefaultJournalMode()>: 3
<io.requery.android.database.sqlite.SQLiteConnection$PreparedStatementCache: void <init>(io.requery.android.database.sqlite.SQLiteConnection,int)>: 3
<io.requery.android.database.CursorWindow: java.lang.String getString(int,int)>: 3
<io.requery.android.database.CursorWindow: int getStartPosition()>: 3
<io.requery.android.database.sqlite.CloseGuard$DefaultReporter: void <init>()>: 3
<io.requery.android.database.sqlite.SQLiteConnection: java.lang.String nativeExecuteForString(long,long)>: 3
<io.requery.android.database.sqlite.SQLiteCursor: int cursorPickFillWindowStartPosition(int,int)>: 3
<io.requery.android.database.sqlite.SQLiteCursor: io.requery.android.database.sqlite.SQLiteDatabase getDatabase()>: 3
<io.requery.android.database.DefaultDatabaseErrorHandler: void deleteDatabaseFile(java.lang.String)>: 3
<io.requery.android.database.sqlite.SQLiteConnection: io.requery.android.database.sqlite.SQLiteConnection open(io.requery.android.database.sqlite.SQLiteConnectionPool,io.requery.android.database.sqlite.SQLiteDatabaseConfiguration,int,boolean)>: 3
<io.requery.android.database.sqlite.SQLiteConnection: void nativeBindNull(long,long,int)>: 3
<io.requery.android.database.sqlite.CloseGuard$Reporter: void report(java.lang.String,java.lang.Throwable)>: 3
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>: 3
<io.requery.android.database.sqlite.SQLiteConnection: boolean isPreparedStatementInCache(java.lang.String)>: 3
<io.requery.android.database.sqlite.SQLiteProgram: java.lang.String[] getColumnNames()>: 3
<io.requery.android.database.sqlite.SQLiteConnection: void nativeBindString(long,long,int,java.lang.String)>: 3
<android.database.Observable: void unregisterAll()>: 3
<android.database.StaleDataException: void <init>(java.lang.String)>: 3
<android.database.DataSetObservable: void <init>()>: 3
<io.requery.android.database.sqlite.SQLiteConnection: void setPageSize()>: 3
<io.requery.android.database.sqlite.SQLiteStatement: int executeUpdateDelete()>: 3
<io.requery.android.database.CursorWindow: void <init>(java.lang.String)>: 3
<io.requery.android.database.sqlite.SQLiteConnection: void nativeBindDouble(long,long,int,double)>: 3
<io.requery.android.database.sqlite.SQLiteConnection: long nativeExecuteForLong(long,long)>: 3
<io.requery.android.database.sqlite.SQLiteConnection: java.lang.String access$300(java.lang.String)>: 3
<io.requery.android.database.CursorWindow: long nativeCreate(java.lang.String,int)>: 3
<io.requery.android.database.sqlite.SQLiteConnection$Operation: void <init>(io.requery.android.database.sqlite.SQLiteConnection$1)>: 3
<io.requery.android.database.sqlite.SQLiteConnection$Operation: void describe(java.lang.StringBuilder,boolean)>: 3
<io.requery.android.database.sqlite.SQLiteDatabase: boolean isMainThread()>: 3
<io.requery.android.database.sqlite.SQLiteConnection: int getTypeOfObject(java.lang.Object)>: 3
<io.requery.android.database.sqlite.SQLiteConnection$PreparedStatement: void <init>(io.requery.android.database.sqlite.SQLiteConnection$1)>: 3
<io.requery.android.database.sqlite.SQLiteConnection: int nativeGetParameterCount(long,long)>: 3
<io.requery.android.database.CursorWindow: int nativeGetNumRows(long)>: 3
<io.requery.android.database.sqlite.SQLiteConnection$PreparedStatement: void <init>()>: 3
<io.requery.android.database.sqlite.SQLiteConnection: void finalizePreparedStatement(io.requery.android.database.sqlite.SQLiteConnection$PreparedStatement)>: 3
<io.requery.android.database.sqlite.SQLiteConnection: byte[] access$500()>: 3
<io.requery.android.database.sqlite.SQLiteConnection: void nativeBindLong(long,long,int,long)>: 3
<io.requery.android.database.sqlite.SQLiteDatabase$2: void <init>(java.lang.String)>: 3
<io.requery.android.database.sqlite.SQLiteConnectionPool$AcquiredConnectionStatus: void <init>(java.lang.String,int)>: 3
<io.requery.android.database.sqlite.SQLiteConnectionPool: io.requery.android.database.sqlite.SQLiteConnection tryAcquireNonPrimaryConnectionLocked(java.lang.String,int)>: 3
<io.requery.android.database.AbstractCursor: boolean onMove(int,int)>: 3
<io.requery.android.database.sqlite.SQLiteConnection$Operation: java.lang.String getStatus()>: 3
<io.requery.android.database.sqlite.SQLiteConnectionPool: void dispose(boolean)>: 3
<io.requery.android.database.sqlite.SQLiteClosable: void onAllReferencesReleased()>: 3
<io.requery.android.database.sqlite.SQLiteConnection: long nativePrepareStatement(long,java.lang.String)>: 3
<android.database.DataSetObservable: void notifyInvalidated()>: 3
<io.requery.android.database.sqlite.SQLiteCursor: void <init>(io.requery.android.database.sqlite.SQLiteCursorDriver,java.lang.String,io.requery.android.database.sqlite.SQLiteQuery)>: 3
<io.requery.android.database.sqlite.SQLiteConnection$OperationLog: void <init>(io.requery.android.database.sqlite.SQLiteConnection$1)>: 3
<io.requery.android.database.sqlite.SQLiteGlobal: int getDefaultPageSize()>: 3
<io.requery.android.database.sqlite.SQLiteProgram: io.requery.android.database.sqlite.SQLiteDatabase getDatabase()>: 3
<io.requery.android.database.sqlite.SQLiteConnection: boolean isPrimaryConnection()>: 3
<io.requery.android.database.sqlite.SQLiteConnection$Operation: void <init>()>: 3
<io.requery.android.database.sqlite.SQLiteConnection: void nativeLoadExtension(long,java.lang.String,java.lang.String)>: 3
<io.requery.android.database.sqlite.SQLiteConnection: void setOnlyAllowReadOnlyOperations(boolean)>: 3
<io.requery.android.database.CursorWindow: void dispose()>: 3
<io.requery.android.database.sqlite.SQLiteConnection: void nativeBindBlob(long,long,int,byte[])>: 3
<io.requery.android.database.sqlite.SQLiteConnection: long nativeOpen(java.lang.String,int,java.lang.String,boolean,boolean)>: 3
<java.io.File: boolean delete()>: 3
<io.requery.android.database.sqlite.SQLiteConnection: void nativeResetStatementAndClearBindings(long,long)>: 3
<io.requery.android.database.sqlite.CloseGuard$DefaultReporter: void <init>(io.requery.android.database.sqlite.CloseGuard$1)>: 3
<io.requery.android.database.sqlite.SQLiteConnection: void close()>: 3
<io.requery.android.database.sqlite.SQLiteConnection: void nativeExecute(long,long)>: 3
<io.requery.android.database.sqlite.SQLiteConnection: void setSyncMode(java.lang.String)>: 3
<io.requery.android.database.AbstractWindowedCursor: void <init>()>: 3
<io.requery.android.database.CursorWindow: void clear()>: 3
<io.requery.android.database.sqlite.SQLiteConnectionPool: void reconfigureAllConnectionsLocked()>: 2
<io.requery.android.database.sqlite.SQLiteConnectionPool: void open()>: 2
<io.requery.android.database.AbstractCursor: void checkPosition()>: 2
<java.io.FileInputStream: void <init>(java.io.File)>: 2
<java.io.File: boolean isDirectory()>: 2
<io.requery.android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>: 2
<okhttp3.ResponseBody: void close()>: 2
<io.requery.android.database.sqlite.SQLiteDatabase: void reopenReadWrite()>: 2
<io.requery.android.database.sqlite.SQLiteProgram: void bindAllArgsAsStrings(java.lang.String[])>: 2
<io.requery.android.database.sqlite.SQLiteConnectionPool: io.requery.android.database.sqlite.SQLiteConnectionPool open(io.requery.android.database.sqlite.SQLiteDatabaseConfiguration)>: 2
<io.requery.android.database.sqlite.SQLiteOpenHelper: io.requery.android.database.sqlite.SQLiteDatabase getDatabaseLocked(boolean)>: 2
<java.io.DataInputStream: int readUnsignedShort()>: 2
<io.requery.android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,io.requery.android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 2
<io.requery.android.database.sqlite.SQLiteDatabase: io.requery.android.database.sqlite.SQLiteDatabase create(io.requery.android.database.sqlite.SQLiteDatabase$CursorFactory)>: 2
<io.requery.android.database.sqlite.SQLiteGlobal: int getWALConnectionPoolSize()>: 2
<io.requery.android.database.sqlite.SQLiteConnectionPool: void <init>(io.requery.android.database.sqlite.SQLiteDatabaseConfiguration)>: 2
<java.io.File: boolean createNewFile()>: 2
<java.io.DataInput: byte readByte()>: 2
<java.util.Locale: boolean equals(java.lang.Object)>: 2
<io.requery.android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,io.requery.android.database.sqlite.SQLiteDatabase$CursorFactory,int,io.requery.android.database.DatabaseErrorHandler)>: 2
<io.requery.android.database.sqlite.SQLiteDatabase: java.lang.String findEditTable(java.lang.String)>: 2
<io.requery.android.database.sqlite.SQLiteDatabase: boolean isReadOnly()>: 2
<io.requery.android.database.sqlite.SQLiteConnectionPool: void discardAcquiredConnectionsLocked()>: 2
<io.requery.android.database.sqlite.SQLiteQuery: int fillWindow(io.requery.android.database.CursorWindow,int,int,boolean)>: 2
<io.requery.android.database.sqlite.SQLiteDatabase: void ensureFile(java.lang.String)>: 2
<java.io.File: void <init>(java.io.File,java.lang.String)>: 2
<io.requery.android.database.sqlite.SQLiteOpenHelper: io.requery.android.database.sqlite.SQLiteDatabaseConfiguration createConfiguration(java.lang.String,int)>: 2
<io.requery.android.database.sqlite.SQLiteDatabase: int getVersion()>: 2
<io.requery.android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildQueryString(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 2
<java.io.DataInputStream: java.lang.String readUTF()>: 2
<io.requery.android.database.sqlite.SQLiteConnectionPool: void closeExcessConnectionsAndLogExceptionsLocked()>: 2
<io.requery.android.database.sqlite.SQLiteConnectionPool: void reconfigure(io.requery.android.database.sqlite.SQLiteDatabaseConfiguration)>: 2
<io.requery.android.database.sqlite.SQLiteDatabase: io.requery.android.database.sqlite.SQLiteDatabase openDatabase(io.requery.android.database.sqlite.SQLiteDatabaseConfiguration,io.requery.android.database.sqlite.SQLiteDatabase$CursorFactory,io.requery.android.database.DatabaseErrorHandler)>: 2
<io.requery.android.database.sqlite.SQLiteSession: void setTransactionSuccessful()>: 2
<io.requery.android.database.sqlite.SQLiteConnection: void reconfigure(io.requery.android.database.sqlite.SQLiteDatabaseConfiguration)>: 2
<io.requery.android.database.sqlite.SQLiteDatabase: long longForQuery(java.lang.String,java.lang.String[])>: 2
<io.requery.android.database.sqlite.SQLiteDatabase: io.requery.android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>: 2
<io.requery.android.database.sqlite.SQLiteDatabaseConfiguration: java.lang.String stripPathForLogs(java.lang.String)>: 2
<io.requery.android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.Object[],java.lang.String,java.lang.String,java.lang.String)>: 2
<io.requery.android.database.sqlite.SQLiteOpenHelper: void onConfigure(io.requery.android.database.sqlite.SQLiteDatabase)>: 2
<io.requery.android.database.sqlite.SQLiteOpenHelper: io.requery.android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 2
<io.requery.android.database.sqlite.SQLiteQueryBuilder: void appendClause(java.lang.StringBuilder,java.lang.String,java.lang.String)>: 2
<java.io.DataInput: int readInt()>: 2
<io.requery.android.database.sqlite.SQLiteOpenHelper: void onOpen(io.requery.android.database.sqlite.SQLiteDatabase)>: 2
<java.io.FilterInputStream: void close()>: 2
<java.io.DataInput: long readLong()>: 2
<io.requery.android.database.sqlite.SQLiteStatement: long simpleQueryForLong()>: 2
<io.requery.android.database.sqlite.SQLiteDatabase: void throwIfNotOpenLocked()>: 2
<android.database.Cursor: boolean moveToFirst()>: 2
<io.requery.android.database.sqlite.SQLiteDatabase: io.requery.android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,io.requery.android.database.sqlite.SQLiteDatabase$CursorFactory,int,io.requery.android.database.DatabaseErrorHandler)>: 2
<android.database.Cursor: int getCount()>: 2
<io.requery.android.database.sqlite.SQLiteDatabase: void openInner()>: 2
<io.requery.android.database.sqlite.SQLiteDatabase: io.requery.android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,io.requery.android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 2
<io.requery.android.database.DefaultDatabaseErrorHandler: void <init>()>: 2
<java.io.InputStream: void close()>: 2
<io.requery.android.database.sqlite.SQLiteDatabase: java.util.List getAttachedDbs()>: 2
<io.requery.android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.Object[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 2
<io.requery.android.database.sqlite.SQLiteDatabase: boolean hasCodec()>: 2
<java.io.DataInput: int readUnsignedShort()>: 2
<io.requery.android.database.sqlite.SQLiteDatabase: void beginTransaction(android.database.sqlite.SQLiteTransactionListener,int)>: 2
<io.requery.android.database.sqlite.SQLiteDatabase: long longForQuery(io.requery.android.database.sqlite.SQLiteStatement,java.lang.String[])>: 2
<io.requery.android.database.sqlite.SQLiteOpenHelper: void onDowngrade(io.requery.android.database.sqlite.SQLiteDatabase,int,int)>: 2
<io.requery.android.database.sqlite.SQLiteConnection: void nativeRegisterFunction(long,io.requery.android.database.sqlite.SQLiteFunction)>: 2
<io.requery.android.database.sqlite.SQLiteConnection: boolean hasCodec()>: 2
<io.requery.android.database.sqlite.SQLiteDatabase$1: void <init>(io.requery.android.database.sqlite.SQLiteDatabase)>: 2
<java.io.File: boolean mkdirs()>: 2
<io.requery.android.database.sqlite.SQLiteDatabase: void setVersion(int)>: 2
<io.requery.android.database.AbstractWindowedCursor: java.lang.String getString(int)>: 1
<io.requery.android.database.DefaultDatabaseErrorHandler: void onCorruption(io.requery.android.database.sqlite.SQLiteDatabase)>: 1
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
