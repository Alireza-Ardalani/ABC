Duration => 117
UI Thread => 254
Worker Thread => 8

----------------StartUI----------------
<de.greenrobot.dao.DaoException: void <init>(java.lang.String)>: 45
<android.database.CursorWindow: int getNumRows()>: 33
<android.database.SQLException: void <init>(java.lang.String)>: 12
<java.lang.Object: boolean equals(java.lang.Object)>: 12
<android.database.CursorWindow: long getLong(int,int)>: 11
<android.database.CursorWindow: short getShort(int,int)>: 11
<android.database.CursorWindow: float getFloat(int,int)>: 11
<android.database.CursorWindow: java.lang.String getString(int,int)>: 11
<android.database.Cursor: void close()>: 11
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 11
<android.database.CursorWindow: int getInt(int,int)>: 11
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 8
<java.io.ObjectInputStream: java.lang.Object readObject()>: 8
<java.lang.String: boolean equals(java.lang.Object)>: 5
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>: 4
<com.thehomedepot.coloryourworld.model.ColorItem: boolean equals(java.lang.Object)>: 4
<java.io.InputStream: void close()>: 4
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>: 4
<java.io.ObjectOutputStream: void close()>: 4
<java.lang.Enum: boolean equals(java.lang.Object)>: 4
<java.io.File: void <init>(java.lang.String)>: 3
<android.graphics.BitmapFactory$Options: void <init>()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 2
<java.lang.String: int hashCode()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 2
<java.io.File: boolean exists()>: 2
<android.graphics.Bitmap: int getHeight()>: 1
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<java.io.OutputStream: void close()>: 1
<java.io.File: boolean renameTo(java.io.File)>: 1
<android.graphics.Bitmap: void recycle()>: 1
<java.io.InputStream: int read(byte[])>: 1
<android.graphics.Bitmap: int getWidth()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 1
<java.io.OutputStream: void write(byte[],int,int)>: 1
<java.io.FileOutputStream: void <init>(java.lang.String)>: 1
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>: 1
<java.io.File: java.lang.String getAbsolutePath()>: 1
<java.io.File: boolean mkdir()>: 1
<java.io.OutputStream: void flush()>: 1
<java.io.FileInputStream: void close()>: 1
<java.io.File: void <init>(java.io.File,java.lang.String)>: 1
----------------StartWorker----------------
<java.io.InputStream: void close()>: 2
<android.graphics.BitmapFactory$Options: void <init>()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 2
<java.io.FileOutputStream: void close()>: 1
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 1
