Duration => 134
UI Thread => 723
Worker Thread => 1305

----------------StartUI----------------
<android.database.sqlite.SQLiteDatabase: boolean isOpen()>: 76
<android.database.sqlite.SQLiteOpenHelper: void close()>: 74
<java.lang.String: boolean equals(java.lang.Object)>: 71
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 49
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 39
<android.database.sqlite.SQLiteDatabase: boolean isReadOnly()>: 37
<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>: 32
<java.io.File: boolean exists()>: 19
<java.io.File: void <init>(java.lang.String)>: 17
<java.io.File: void <init>(java.io.File,java.lang.String)>: 16
<java.io.ObjectInputStream: java.lang.Object readObject()>: 16
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 16
<android.graphics.Bitmap: int getHeight()>: 14
<android.graphics.Bitmap: int getWidth()>: 14
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 12
<java.io.ByteArrayInputStream: void <init>(byte[])>: 11
<android.database.Cursor: void close()>: 11
<java.io.File: boolean delete()>: 9
<android.graphics.BitmapFactory$Options: void <init>()>: 7
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>: 7
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>: 7
<java.io.File: java.lang.String getAbsolutePath()>: 7
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 7
<android.graphics.Bitmap: void recycle()>: 6
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 6
<java.io.InputStream: void close()>: 6
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 6
<java.io.IOException: void <init>(java.lang.String)>: 6
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 5
<java.io.FileInputStream: void <init>(java.lang.String)>: 5
<java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>: 4
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 4
<java.io.OutputStream: void close()>: 4
<java.io.FileInputStream: void <init>(java.io.File)>: 4
<java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>: 4
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 4
<java.io.ByteArrayOutputStream: void <init>()>: 4
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 3
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>: 3
<java.io.File: boolean mkdir()>: 3
<java.io.FileOutputStream: void <init>(java.io.File)>: 3
<java.lang.String: int hashCode()>: 3
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>: 3
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 3
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 3
<java.io.IOException: void <init>()>: 2
<java.io.File: boolean renameTo(java.io.File)>: 2
<java.io.File: boolean isDirectory()>: 2
<java.io.InputStream: int read(byte[])>: 2
<java.io.File: long length()>: 2
<java.nio.IntBuffer: java.nio.IntBuffer wrap(int[])>: 2
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 2
<android.database.sqlite.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)>: 2
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>: 2
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 2
<java.io.File: java.lang.String getPath()>: 2
<android.graphics.Bitmap: void copyPixelsFromBuffer(java.nio.Buffer)>: 2
<java.io.Writer: void write(java.lang.String)>: 2
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 2
<java.io.Writer: void close()>: 2
<java.nio.IntBuffer: java.nio.IntBuffer allocate(int)>: 2
<java.io.File: boolean createNewFile()>: 2
<android.graphics.Bitmap: boolean isRecycled()>: 2
<android.graphics.drawable.BitmapDrawable: void draw(android.graphics.Canvas)>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 2
<java.io.File: boolean mkdirs()>: 2
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>: 1
<android.net.Uri: boolean equals(java.lang.Object)>: 1
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 1
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: void close()>: 1
<java.io.OutputStream: void write(byte[])>: 1
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 1
<java.nio.charset.Charset: boolean equals(java.lang.Object)>: 1
<java.io.OutputStream: void flush()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 1
<java.io.ByteArrayOutputStream: void <init>(int)>: 1
<java.io.InputStream: int read(byte[],int,int)>: 1
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 1
<java.io.File: java.io.File[] listFiles()>: 1
<java.io.File: boolean canWrite()>: 1
<java.io.ObjectOutputStream: void close()>: 1
<java.io.Writer: void flush()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>: 1
<java.io.PrintStream: void println(java.lang.String)>: 1
<java.io.FileOutputStream: void close()>: 1
<java.io.EOFException: void <init>()>: 1
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 122
<android.database.sqlite.SQLiteOpenHelper: void close()>: 89
<android.database.sqlite.SQLiteDatabase: boolean isOpen()>: 78
<java.io.File: void <init>(java.lang.String)>: 45
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 42
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 42
<java.io.File: java.lang.String getAbsolutePath()>: 42
<android.database.sqlite.SQLiteDatabase: boolean isReadOnly()>: 39
<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>: 36
<java.io.File: boolean exists()>: 27
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 23
<java.io.FileOutputStream: void <init>(java.io.File)>: 23
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 20
<android.graphics.Bitmap: int getHeight()>: 19
<java.io.InputStream: int read(byte[])>: 18
<android.graphics.Bitmap: int getWidth()>: 18
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 16
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 16
<java.io.InputStream: void close()>: 16
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>: 15
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>: 15
<java.io.OutputStream: void flush()>: 13
<java.io.FileOutputStream: void close()>: 13
<android.graphics.BitmapFactory$Options: void <init>()>: 13
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 13
<android.database.Cursor: void close()>: 13
<java.io.File: boolean isDirectory()>: 12
<java.io.BufferedInputStream: void close()>: 12
<java.net.URLConnection: java.lang.String guessContentTypeFromStream(java.io.InputStream)>: 12
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 12
<java.io.FilterInputStream: int read(byte[])>: 12
<android.graphics.Bitmap: void recycle()>: 11
<java.io.File: long length()>: 11
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 11
<java.io.OutputStream: void write(byte[])>: 10
<java.io.ByteArrayOutputStream: void <init>()>: 10
<java.io.IOException: void <init>(java.lang.String)>: 9
<java.io.OutputStream: void close()>: 9
<java.io.FileInputStream: void <init>(java.lang.String)>: 9
<android.database.sqlite.SQLiteClosable: void close()>: 9
<java.io.FileInputStream: void <init>(java.io.File)>: 8
<java.io.File: java.lang.String getName()>: 8
<java.io.FileOutputStream: void <init>(java.lang.String)>: 8
<java.io.BufferedOutputStream: void write(byte[],int,int)>: 8
<java.io.File: boolean mkdir()>: 8
<java.io.File: java.lang.String getParent()>: 8
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 8
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 8
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 8
<java.io.File: boolean canWrite()>: 7
<java.io.InputStream: int available()>: 7
<java.io.File: void <init>(java.io.File,java.lang.String)>: 7
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>: 7
<java.io.Closeable: void close()>: 6
<java.net.URI: void <init>(java.lang.String)>: 6
<java.io.Reader: int read(char[])>: 6
<java.net.URL: java.net.URLConnection openConnection()>: 6
<java.io.ByteArrayOutputStream: void <init>(int)>: 6
<java.io.ByteArrayOutputStream: int size()>: 6
<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>: 6
<java.net.URL: void <init>(java.lang.String)>: 6
<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>: 6
<java.net.URLConnection: java.io.InputStream getInputStream()>: 6
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>: 6
<java.io.ByteArrayOutputStream: void close()>: 6
<java.io.File: boolean mkdirs()>: 6
<java.io.OutputStream: void write(byte[],int,int)>: 5
<java.io.FileInputStream: void close()>: 5
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 5
<java.io.File: boolean delete()>: 5
<java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>: 4
<java.io.File: long lastModified()>: 4
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>: 4
<java.io.File: boolean createNewFile()>: 4
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 4
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>: 4
<java.io.File: java.io.File getParentFile()>: 4
<java.io.File: boolean setLastModified(long)>: 4
<java.io.FileOutputStream: void write(byte[],int,int)>: 4
<android.net.Uri: java.lang.String decode(java.lang.String)>: 4
<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>: 4
<java.io.File: java.lang.String getCanonicalPath()>: 4
<java.io.FileNotFoundException: void <init>(java.lang.String)>: 4
<java.io.BufferedReader: java.lang.String readLine()>: 3
<java.net.HttpURLConnection: int getResponseCode()>: 3
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 3
<java.io.InputStream: int read(byte[],int,int)>: 3
<java.io.BufferedReader: void <init>(java.io.Reader)>: 3
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>: 2
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 2
<java.io.InputStream: void reset()>: 2
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 2
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 2
<java.io.ByteArrayInputStream: void <init>(byte[])>: 2
<java.lang.Object: int hashCode()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>: 2
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>: 2
<java.io.File: boolean renameTo(java.io.File)>: 2
<java.net.URLConnection: void setReadTimeout(int)>: 2
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 2
<java.io.Writer: void write(java.lang.String)>: 2
<android.database.sqlite.SQLiteDatabase: int releaseMemory()>: 2
<java.net.URLConnection: void setConnectTimeout(int)>: 2
<java.io.InputStream: boolean markSupported()>: 2
<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>: 1
<java.net.URLConnection: void setDoOutput(boolean)>: 1
<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>: 1
<java.io.InputStreamReader: void close()>: 1
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 1
<java.io.InputStream: void <init>()>: 1
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$2: void <init>()>: 1
<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>: 1
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 1
<java.lang.String: int hashCode()>: 1
<java.io.PrintWriter: void <init>(java.io.Writer)>: 1
<android.graphics.Bitmap: int getRowBytes()>: 1
<java.io.Writer: void flush()>: 1
<java.io.FilterInputStream: void <init>(java.io.InputStream)>: 1
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 1
<java.net.URL: java.lang.String toString()>: 1
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>: 1
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot: void close()>: 1
<java.io.BufferedWriter: void close()>: 1
<android.database.sqlite.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)>: 1
<java.net.URL: java.lang.String getProtocol()>: 1
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 1
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 1
<java.io.PrintWriter: void close()>: 1
<java.io.BufferedReader: void close()>: 1
<com.nostra13.universalimageloader.core.assist.FlushedInputStream: void <init>(java.io.InputStream)>: 1
<java.io.OutputStream: void <init>()>: 1
<java.net.URLConnection: void setDoInput(boolean)>: 1
<android.graphics.Bitmap: boolean isRecycled()>: 1
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 1
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>: 1
<java.net.URLConnection: int getContentLength()>: 1
