Duration => 11150
UI Thread => 414
Worker Thread => 4216

----------------StartUI----------------
<java.io.File: boolean exists()>: 27
<android.graphics.Bitmap: int getHeight()>: 22
<android.graphics.Bitmap: int getWidth()>: 22
<java.io.File: java.lang.String getPath()>: 17
<java.io.File: void <init>(java.lang.String)>: 12
<fr.pcsoft.wdjava.ui.e.f: void <init>()>: 9
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 9
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>: 8
<java.io.PrintStream: void println(java.lang.String)>: 7
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 7
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 6
<java.io.File: boolean isDirectory()>: 6
<android.graphics.drawable.Drawable: int getIntrinsicHeight()>: 5
<android.graphics.drawable.BitmapDrawable: void setGravity(int)>: 5
<java.io.ByteArrayInputStream: void <init>(byte[])>: 5
<android.graphics.drawable.Drawable: int getIntrinsicWidth()>: 5
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 5
<java.io.ByteArrayOutputStream: void <init>()>: 5
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>: 4
<android.graphics.Bitmap: boolean isMutable()>: 4
<java.io.File: boolean createNewFile()>: 4
<java.io.BufferedInputStream: void mark(int)>: 4
<java.io.IOException: void <init>(java.lang.String)>: 4
<java.io.File: java.io.File getParentFile()>: 4
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 4
<java.io.InputStream: int read(byte[])>: 4
<java.io.ByteArrayOutputStream: void close()>: 4
<android.database.sqlite.SQLiteClosable: void close()>: 4
<java.io.FileReader: void <init>(java.io.File)>: 3
<java.io.FileInputStream: void <init>(java.io.File)>: 3
<java.io.ByteArrayInputStream: void close()>: 3
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 3
<java.io.OutputStream: void flush()>: 3
<android.graphics.drawable.BitmapDrawable: int getIntrinsicHeight()>: 3
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory$Options)>: 3
<java.io.BufferedReader: java.lang.String readLine()>: 3
<android.graphics.Bitmap: void setDensity(int)>: 3
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>: 3
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 3
<java.io.InputStream: void close()>: 3
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>: 3
<java.io.InputStream: int read(byte[],int,int)>: 3
<android.graphics.Bitmap: int getDensity()>: 3
<java.io.BufferedReader: void close()>: 3
<android.graphics.drawable.BitmapDrawable: void setTileModeXY(android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>: 3
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 3
<java.io.File: boolean delete()>: 3
<android.graphics.drawable.BitmapDrawable: int getIntrinsicWidth()>: 3
<java.io.File: java.lang.String getAbsolutePath()>: 3
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 3
<android.database.Cursor: void close()>: 3
<java.io.BufferedReader: void <init>(java.io.Reader)>: 3
<java.io.File: boolean mkdirs()>: 3
<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>: 2
<android.graphics.Bitmap$Config: android.graphics.Bitmap$Config[] values()>: 2
<java.nio.channels.spi.AbstractInterruptibleChannel: void close()>: 2
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>: 2
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>: 2
<java.io.BufferedInputStream: boolean markSupported()>: 2
<java.io.File: long length()>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 2
<java.io.File: java.lang.String getName()>: 2
<java.net.URL: java.net.URLConnection openConnection()>: 2
<fr.pcsoft.wdjava.ui.e.i: void <init>(java.io.InputStream)>: 2
<java.io.ByteArrayOutputStream: void write(int)>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 2
<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.Drawable mutate()>: 2
<java.io.InputStream: int available()>: 2
<java.io.OutputStream: void close()>: 2
<java.net.URL: void <init>(java.lang.String)>: 2
<android.graphics.Bitmap: boolean hasAlpha()>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 2
<android.graphics.Bitmap: void copyPixelsFromBuffer(java.nio.Buffer)>: 2
<java.net.URLConnection: java.io.InputStream getInputStream()>: 2
<java.io.File: void <init>(java.io.File,java.lang.String)>: 2
<android.graphics.Bitmap: void copyPixelsToBuffer(java.nio.Buffer)>: 2
<java.io.PushbackInputStream: int read(byte[],int,int)>: 2
<java.io.File: boolean isHidden()>: 2
<java.io.FileOutputStream: void <init>(java.io.File)>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>: 2
<java.net.URLConnection: void setDoInput(boolean)>: 2
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>: 2
<java.io.RandomAccessFile: void write(byte[])>: 2
<android.graphics.Bitmap: boolean isRecycled()>: 2
<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>: 2
<android.graphics.drawable.BitmapDrawable: void draw(android.graphics.Canvas)>: 2
<java.io.File: java.lang.String toString()>: 2
<java.io.RandomAccessFile: void close()>: 2
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>: 2
<java.io.BufferedInputStream: void reset()>: 2
<android.database.sqlite.SQLiteStatement: long simpleQueryForLong()>: 1
<java.io.File: boolean isAbsolute()>: 1
<android.database.sqlite.SQLiteStatement: void execute()>: 1
<android.graphics.Bitmap: void recycle()>: 1
<java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>: 1
<java.io.Closeable: void close()>: 1
<java.io.File: long lastModified()>: 1
<java.io.PushbackInputStream: int available()>: 1
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 1
<java.io.FileOutputStream: void <init>(java.lang.String)>: 1
<java.io.File: boolean mkdir()>: 1
<java.io.RandomAccessFile: void write(byte[],int,int)>: 1
<java.nio.charset.Charset: boolean isSupported(java.lang.String)>: 1
<java.io.ByteArrayOutputStream: void <init>(int)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>: 1
<fr.pcsoft.wdjava.ui.k.k: void <init>(android.graphics.Bitmap)>: 1
<java.io.ByteArrayInputStream: int read(byte[],int,int)>: 1
<java.io.StringWriter: void <init>()>: 1
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<java.io.File: boolean canWrite()>: 1
<java.io.File: boolean canRead()>: 1
<java.io.StringWriter: void close()>: 1
<android.database.sqlite.SQLiteProgram: void bindBlob(int,byte[])>: 1
<java.io.FileOutputStream: void close()>: 1
<android.database.sqlite.SQLiteProgram: void bindNull(int)>: 1
<java.io.RandomAccessFile: void writeBytes(java.lang.String)>: 1
<android.graphics.BitmapFactory$Options: void <init>()>: 1
<java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>: 1
<java.util.zip.ZipFile: void close()>: 1
<java.io.PushbackInputStream: void close()>: 1
<java.io.StringWriter: java.lang.String toString()>: 1
<java.io.OutputStream: void write(byte[])>: 1
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 1
<android.graphics.drawable.Drawable: void setAlpha(int)>: 1
<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>: 1
<java.io.RandomAccessFile: void seek(long)>: 1
<fr.pcsoft.wdjava.ui.e.b.b: void <init>(android.graphics.Bitmap)>: 1
<java.io.RandomAccessFile: long length()>: 1
<java.io.FileOutputStream: void write(byte[])>: 1
<android.database.sqlite.SQLiteStatement: long executeInsert()>: 1
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 1
----------------StartWorker----------------
<java.io.File: boolean exists()>: 279
<java.io.File: java.lang.String getPath()>: 269
<java.io.PrintStream: void println(java.lang.String)>: 145
<android.graphics.Bitmap: int getHeight()>: 125
<android.graphics.Bitmap: int getWidth()>: 112
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 99
<java.io.File: void <init>(java.lang.String)>: 87
<java.io.File: boolean isDirectory()>: 85
<java.io.ByteArrayInputStream: void <init>(byte[])>: 73
<android.database.Cursor: void close()>: 62
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 60
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 58
<java.io.FileOutputStream: void <init>(java.io.File)>: 50
<java.io.FileInputStream: void <init>(java.io.File)>: 49
<java.io.File: java.io.File getParentFile()>: 49
<java.io.InputStream: void close()>: 49
<java.io.File: boolean mkdirs()>: 49
<java.io.File: boolean createNewFile()>: 48
<java.io.BufferedInputStream: void mark(int)>: 48
<java.io.InputStream: int read(byte[])>: 48
<android.database.sqlite.SQLiteClosable: void close()>: 48
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 46
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>: 46
<java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>: 41
<java.io.FilterInputStream: int read(byte[])>: 39
<java.io.File: long length()>: 37
<java.io.File: void <init>(java.io.File,java.lang.String)>: 37
<java.io.File: java.lang.String toString()>: 37
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 36
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 36
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 36
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 36
<java.io.File: boolean delete()>: 36
<java.io.File: java.lang.String getAbsolutePath()>: 36
<android.graphics.drawable.Drawable: int getIntrinsicHeight()>: 35
<android.graphics.drawable.Drawable: int getIntrinsicWidth()>: 35
<fr.pcsoft.wdjava.ui.e.f: void <init>()>: 34
<java.io.ByteArrayOutputStream: void <init>()>: 34
<android.graphics.Bitmap: void recycle()>: 26
<java.io.Closeable: void close()>: 26
<java.io.BufferedOutputStream: void write(byte[],int,int)>: 26
<java.io.PushbackInputStream: void unread(byte[],int,int)>: 26
<java.io.PushbackInputStream: void <init>(java.io.InputStream,int)>: 26
<java.io.BufferedOutputStream: void flush()>: 26
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 26
<android.graphics.BitmapFactory$Options: void <init>()>: 26
<java.io.PushbackInputStream: void close()>: 26
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>: 24
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>: 24
<java.io.BufferedInputStream: boolean markSupported()>: 24
<java.io.File: java.lang.String getName()>: 24
<java.io.InputStream: int available()>: 24
<java.io.OutputStream: void close()>: 24
<android.graphics.Bitmap: boolean hasAlpha()>: 24
<java.io.PushbackInputStream: int read(byte[],int,int)>: 24
<java.io.File: boolean isHidden()>: 24
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 24
<java.io.RandomAccessFile: void write(byte[])>: 24
<android.graphics.Bitmap: boolean isRecycled()>: 24
<java.io.BufferedInputStream: void reset()>: 24
<java.io.ByteArrayInputStream: void close()>: 23
<java.io.OutputStream: void flush()>: 23
<android.graphics.Bitmap: void setDensity(int)>: 23
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>: 23
<java.io.InputStream: int read(byte[],int,int)>: 23
<android.graphics.Bitmap: int getDensity()>: 23
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 23
<android.graphics.Bitmap: boolean isMutable()>: 22
<java.io.IOException: void <init>(java.lang.String)>: 22
<java.io.ByteArrayOutputStream: void close()>: 22
<java.nio.charset.Charset: boolean isSupported(java.lang.String)>: 20
<android.database.sqlite.SQLiteDatabase: boolean isOpen()>: 13
<java.io.InputStream: void <init>()>: 13
<java.lang.Object: java.lang.String toString()>: 13
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 13
<java.io.BufferedInputStream: void close()>: 13
<android.graphics.Bitmap: int getRowBytes()>: 13
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>: 13
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>: 13
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 13
<fr.pcsoft.wdjava.ui.k.o: void <init>(java.io.InputStream)>: 13
<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>: 13
<java.io.File: boolean isFile()>: 13
<java.io.FilterOutputStream: void close()>: 13
<fr.pcsoft.wdjava.ui.e.b.b: void <init>(android.graphics.Bitmap)>: 13
<java.io.PushbackInputStream: long skip(long)>: 13
<android.database.sqlite.SQLiteStatement: long simpleQueryForLong()>: 12
<java.io.File: boolean isAbsolute()>: 12
<android.database.sqlite.SQLiteStatement: void execute()>: 12
<java.io.File: long lastModified()>: 12
<java.io.PushbackInputStream: int available()>: 12
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>: 12
<java.io.FileOutputStream: void <init>(java.lang.String)>: 12
<java.io.File: boolean mkdir()>: 12
<java.io.RandomAccessFile: void write(byte[],int,int)>: 12
<java.io.ByteArrayOutputStream: void <init>(int)>: 12
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>: 12
<fr.pcsoft.wdjava.ui.k.k: void <init>(android.graphics.Bitmap)>: 12
<java.io.ByteArrayInputStream: int read(byte[],int,int)>: 12
<java.io.StringWriter: void <init>()>: 12
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 12
<java.io.File: boolean canWrite()>: 12
<java.io.File: boolean canRead()>: 12
<java.io.StringWriter: void close()>: 12
<android.database.sqlite.SQLiteProgram: void bindBlob(int,byte[])>: 12
<java.io.FileOutputStream: void close()>: 12
<android.database.sqlite.SQLiteProgram: void bindNull(int)>: 12
<java.io.RandomAccessFile: void writeBytes(java.lang.String)>: 12
<java.util.zip.ZipFile: void close()>: 12
<java.io.StringWriter: java.lang.String toString()>: 12
<java.io.OutputStream: void write(byte[])>: 12
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 12
<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>: 12
<java.io.RandomAccessFile: void seek(long)>: 12
<java.io.RandomAccessFile: long length()>: 12
<java.io.FileOutputStream: void write(byte[])>: 12
<android.database.sqlite.SQLiteStatement: long executeInsert()>: 12
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 12
<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>: 11
<android.graphics.Bitmap$Config: android.graphics.Bitmap$Config[] values()>: 11
<java.nio.channels.spi.AbstractInterruptibleChannel: void close()>: 11
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 11
<java.net.URL: java.net.URLConnection openConnection()>: 11
<fr.pcsoft.wdjava.ui.e.i: void <init>(java.io.InputStream)>: 11
<android.graphics.drawable.BitmapDrawable: int getIntrinsicHeight()>: 11
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory$Options)>: 11
<java.io.ByteArrayOutputStream: void write(int)>: 11
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 11
<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.Drawable mutate()>: 11
<java.net.URL: void <init>(java.lang.String)>: 11
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 11
<android.graphics.Bitmap: void copyPixelsFromBuffer(java.nio.Buffer)>: 11
<java.net.URLConnection: java.io.InputStream getInputStream()>: 11
<android.graphics.Bitmap: void copyPixelsToBuffer(java.nio.Buffer)>: 11
<android.graphics.drawable.BitmapDrawable: void setTileModeXY(android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>: 11
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>: 11
<java.net.URLConnection: void setDoInput(boolean)>: 11
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>: 11
<android.graphics.drawable.BitmapDrawable: int getIntrinsicWidth()>: 11
<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>: 11
<android.graphics.drawable.BitmapDrawable: void draw(android.graphics.Canvas)>: 11
<java.io.RandomAccessFile: void close()>: 11
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>: 11
<java.io.FileReader: void <init>(java.io.File)>: 10
<java.io.BufferedReader: java.lang.String readLine()>: 10
<java.io.BufferedReader: void close()>: 10
<java.io.BufferedReader: void <init>(java.io.Reader)>: 10
