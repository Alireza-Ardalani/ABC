Duration => 1779
UI Thread => 1435
Worker Thread => 8592

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 490
<java.lang.Object: boolean equals(java.lang.Object)>: 106
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 99
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 94
<java.lang.String: int hashCode()>: 79
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 69
<android.database.ContentObserver: void <init>(android.os.Handler)>: 57
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 54
<android.database.Cursor: void close()>: 50
<android.net.Uri$Builder: android.net.Uri build()>: 31
<java.lang.Enum: boolean equals(java.lang.Object)>: 27
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 21
<android.net.NetworkInfo: int getType()>: 20
<android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient newInstance(java.lang.String)>: 20
<com.kroger.mobile.store.model.KrogerStore: boolean equals(java.lang.Object)>: 20
<java.io.PrintStream: void println(java.lang.Object)>: 20
<java.io.PrintStream: void println(java.lang.String)>: 20
<android.net.NetworkInfo: java.lang.String getTypeName()>: 20
<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>: 10
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 6
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 6
<android.database.SQLException: void <init>(java.lang.String)>: 6
<android.graphics.BitmapFactory$Options: void <init>()>: 5
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory$Options)>: 5
<java.io.File: void <init>(java.lang.String)>: 5
<java.io.Closeable: void close()>: 4
<android.database.sqlite.SQLiteDatabase: boolean deleteDatabase(java.io.File)>: 4
<java.io.File: java.lang.String getName()>: 4
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 4
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 4
<android.database.sqlite.SQLiteClosable: void close()>: 4
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 3
<java.io.InputStream: void close()>: 3
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 3
<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>: 3
<java.lang.Object: int hashCode()>: 3
<android.graphics.Bitmap: void recycle()>: 2
<java.nio.charset.CoderResult: java.lang.String toString()>: 2
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>: 2
<java.net.URLDecoder: java.lang.String decode(java.lang.String)>: 2
<java.io.OutputStream: void write(byte[],int,int)>: 2
<android.database.sqlite.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)>: 2
<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>: 2
<java.io.OutputStream: void flush()>: 2
<java.nio.CharBuffer: java.nio.CharBuffer wrap(char[],int,int)>: 2
<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>: 2
<java.nio.charset.CoderResult: boolean isError()>: 2
<java.io.ByteArrayOutputStream: void <init>()>: 2
<java.io.IOException: void <init>(java.lang.String)>: 2
<android.graphics.Bitmap: boolean isRecycled()>: 2
<android.content.res.AssetFileDescriptor: void close()>: 2
<com.kroger.mobile.store.model.Location: boolean equals(java.lang.Object)>: 2
<java.io.ByteArrayOutputStream: void close()>: 2
<java.nio.charset.CoderResult: boolean isOverflow()>: 2
<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>: 1
<java.nio.channels.spi.AbstractInterruptibleChannel: void close()>: 1
<java.io.FileInputStream: void <init>(java.io.File)>: 1
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>: 1
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int,android.database.DatabaseErrorHandler)>: 1
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 1
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 1
<java.io.FileInputStream: void close()>: 1
<java.io.File: boolean exists()>: 1
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<java.io.File: boolean createNewFile()>: 1
<android.database.sqlite.SQLiteStatement: int executeUpdateDelete()>: 1
<android.database.sqlite.SQLiteProgram: void bindLong(int,long)>: 1
<com.kroger.mobile.store.model.ShoppingContext: boolean equals(java.lang.Object)>: 1
<java.io.File: java.lang.String getAbsolutePath()>: 1
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 1
<java.io.FileOutputStream: void close()>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 1426
<android.database.Cursor: void close()>: 829
<android.net.Uri$Builder: android.net.Uri build()>: 345
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 340
<java.io.InputStream: void close()>: 210
<java.net.URL: void <init>(java.lang.String)>: 208
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 207
<java.net.URL: java.lang.String toString()>: 205
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 145
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 142
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 140
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 138
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 138
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 138
<java.io.ByteArrayOutputStream: void <init>()>: 138
<java.lang.Object: boolean equals(java.lang.Object)>: 103
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 103
<java.io.StringReader: void <init>(java.lang.String)>: 77
<java.lang.String: int hashCode()>: 73
<java.io.BufferedReader: java.lang.String readLine()>: 72
<java.net.URLConnection: void setDoOutput(boolean)>: 71
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 71
<java.net.URL: java.net.URLConnection openConnection()>: 71
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 71
<java.net.HttpURLConnection: int getResponseCode()>: 71
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 71
<java.net.URLConnection: java.io.InputStream getInputStream()>: 71
<java.io.BufferedReader: void close()>: 71
<java.net.URLConnection: void setConnectTimeout(int)>: 71
<java.io.BufferedReader: void <init>(java.io.Reader)>: 71
<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>: 70
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 70
<java.io.DataOutputStream: void <init>(java.io.OutputStream)>: 70
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 70
<java.io.OutputStream: void close()>: 70
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 70
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>: 70
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 70
<java.io.FilterOutputStream: void write(byte[])>: 70
<android.net.NetworkInfo: boolean isAvailable()>: 70
<java.net.URLConnection: void setDoInput(boolean)>: 70
<java.io.FilterOutputStream: void close()>: 70
<android.net.NetworkInfo: boolean isConnected()>: 70
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 70
<android.database.sqlite.SQLiteClosable: void close()>: 70
<java.io.DataOutputStream: void writeInt(int)>: 69
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>: 69
<java.net.URLConnection: java.util.Map getHeaderFields()>: 69
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 69
<java.io.ByteArrayInputStream: void <init>(byte[])>: 69
<java.io.IOException: void <init>(java.lang.String)>: 69
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 69
<java.io.Writer: void write(java.lang.String)>: 69
<java.io.Writer: void close()>: 69
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>: 69
<android.database.sqlite.SQLiteOpenHelper: void close()>: 69
<java.io.DataOutputStream: void writeLong(long)>: 69
<java.net.URLConnection: void setAllowUserInteraction(boolean)>: 69
<java.util.zip.DeflaterOutputStream: void close()>: 69
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 69
<java.net.URLConnection: void setUseCaches(boolean)>: 69
<java.net.URL: void <init>(java.lang.String,java.lang.String,java.lang.String)>: 68
<java.io.OutputStream: void flush()>: 68
<java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String)>: 68
<com.kroger.mobile.store.model.Location: boolean equals(java.lang.Object)>: 68
<java.io.InputStream: int read(byte[],int,int)>: 68
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 68
<java.io.PrintStream: void println(java.lang.Object)>: 50
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 34
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 7
<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>: 5
<android.database.DatabaseUtils: java.lang.String sqlEscapeString(java.lang.String)>: 4
<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>: 3
<java.io.File: void <init>(java.lang.String)>: 3
<java.io.File: boolean exists()>: 2
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 2
<java.io.InputStream: int read(byte[])>: 2
<org.altbeacon.beacon.Beacon: int hashCode()>: 2
<java.net.URLConnection: void setReadTimeout(int)>: 2
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 2
<java.io.File: boolean delete()>: 2
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 2
<java.io.BufferedReader: void <init>(java.io.Reader,int)>: 1
<java.io.File: long lastModified()>: 1
<java.io.File: java.lang.String getName()>: 1
<android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient newInstance(java.lang.String)>: 1
<java.io.BufferedInputStream: void close()>: 1
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>: 1
<java.io.File: boolean createNewFile()>: 1
<java.io.File: void deleteOnExit()>: 1
<android.net.NetworkInfo: boolean isRoaming()>: 1
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 1
<android.database.sqlite.SQLiteDatabase: boolean deleteDatabase(java.io.File)>: 1
<android.net.NetworkInfo: int getType()>: 1
<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>: 1
<java.io.FileReader: void <init>(java.lang.String)>: 1
<java.io.OutputStream: void write(byte[])>: 1
<android.net.NetworkInfo: java.lang.String getSubtypeName()>: 1
<android.net.NetworkInfo: int getSubtype()>: 1
<java.io.DataOutputStream: void flush()>: 1
<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>: 1
<java.io.File: java.lang.String toString()>: 1
<android.net.Uri: java.lang.String encode(java.lang.String)>: 1
