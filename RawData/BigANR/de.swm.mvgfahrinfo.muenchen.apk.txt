Duration => 1376
UI Thread => 316
Worker Thread => 1943

----------------StartUI----------------
<android.database.Cursor: void close()>: 30
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 23
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 15
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 13
<de.eosuptrade.mticket.database.DatabaseProvider: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 11
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 10
<java.io.StringWriter: java.lang.String toString()>: 8
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 8
<java.io.StringWriter: void <init>()>: 8
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 7
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 7
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 7
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 7
<java.io.IOException: void <init>(java.lang.String)>: 7
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 6
<de.eosuptrade.mticket.database.DatabaseProvider: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 6
<java.io.ByteArrayInputStream: void <init>(byte[])>: 6
<java.io.ByteArrayOutputStream: void <init>()>: 6
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 6
<java.io.Writer: void <init>()>: 5
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 5
<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>: 5
<java.io.ByteArrayInputStream: void close()>: 5
<android.database.sqlite.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)>: 5
<java.io.File: boolean exists()>: 5
<java.util.zip.GZIPInputStream: void close()>: 5
<java.io.ByteArrayOutputStream: void close()>: 5
<java.io.FilterInputStream: int read(byte[])>: 5
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 4
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 4
<java.io.PrintWriter: void close()>: 4
<java.io.PrintWriter: void <init>(java.io.Writer)>: 4
<java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>: 3
<java.io.File: void <init>(java.lang.String)>: 3
<java.io.Closeable: void close()>: 2
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>: 2
<java.io.File: boolean isDirectory()>: 2
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 2
<java.io.File: java.lang.String getPath()>: 2
<java.io.Writer: void write(java.lang.String)>: 2
<java.io.PrintWriter: void println()>: 2
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 2
<java.io.File: java.lang.String getAbsolutePath()>: 2
<java.io.File: java.io.File getParentFile()>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 2
<android.database.sqlite.SQLiteStatement: long simpleQueryForLong()>: 1
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 1
<java.io.OutputStream: void close()>: 1
<java.io.FileInputStream: void <init>(java.io.File)>: 1
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 1
<java.io.InputStream: int read(byte[])>: 1
<java.io.Reader: int read(char[])>: 1
<java.net.CookieHandler: void setDefault(java.net.CookieHandler)>: 1
<java.io.Reader: void <init>()>: 1
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 1
<java.io.OutputStream: void write(byte[])>: 1
<java.io.File: java.lang.String[] list(java.io.FilenameFilter)>: 1
<de.eosuptrade.gson.internal.bind.JsonTreeReader$1: void <init>()>: 1
<java.io.Writer: void write(char[],int,int)>: 1
<java.io.File: boolean mkdir()>: 1
<de.eosuptrade.mticket.database.DatabaseProvider: void close()>: 1
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>: 1
<java.io.File: void <init>(java.io.File,java.lang.String)>: 1
<android.database.sqlite.SQLiteProgram: void bindDouble(int,double)>: 1
<java.io.BufferedReader: java.lang.String readLine()>: 1
<java.net.CookieManager: void <init>(java.net.CookieStore,java.net.CookiePolicy)>: 1
<java.io.BufferedReader: void close()>: 1
<org.apache.commons.io.output.StringBuilderWriter: void <init>()>: 1
<java.io.FileNotFoundException: void <init>(java.lang.String)>: 1
<android.database.sqlite.SQLiteProgram: void clearBindings()>: 1
<android.database.sqlite.SQLiteProgram: void bindLong(int,long)>: 1
<java.io.File: boolean delete()>: 1
<java.io.File: boolean canWrite()>: 1
<android.database.sqlite.SQLiteProgram: void bindString(int,java.lang.String)>: 1
<android.database.sqlite.SQLiteStatement: long executeInsert()>: 1
<java.io.File: boolean canRead()>: 1
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 1
<java.io.BufferedReader: void <init>(java.io.Reader)>: 1
<java.io.StringReader: void <init>(java.lang.String)>: 1
<java.io.File: boolean mkdirs()>: 1
----------------StartWorker----------------
<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String)>: 91
<java.io.Writer: void write(java.lang.String)>: 89
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 75
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 75
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 75
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 72
<java.lang.Object: java.lang.String toString()>: 70
<android.database.Cursor: void close()>: 57
<java.io.IOException: void <init>(java.lang.String)>: 46
<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String,java.lang.Throwable)>: 42
<com.fasterxml.jackson.core.JsonGenerationException: void <init>(java.lang.String)>: 42
<de.eosuptrade.mticket.database.DatabaseProvider: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 36
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 36
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 36
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 36
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>: 24
<android.database.sqlite.SQLiteProgram: void bindString(int,java.lang.String)>: 24
<android.database.sqlite.SQLiteProgram: void clearBindings()>: 24
<android.database.sqlite.SQLiteStatement: long executeInsert()>: 24
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 22
<java.net.URI: java.net.URI create(java.lang.String)>: 21
<java.lang.Object: int hashCode()>: 21
<android.database.sqlite.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)>: 20
<java.io.Closeable: void close()>: 19
<java.io.StringWriter: void <init>()>: 19
<java.io.StringWriter: java.lang.String toString()>: 19
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 18
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 18
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 18
<java.io.Reader: int read(char[],int,int)>: 18
<java.io.File: void <init>(java.lang.String)>: 17
<java.io.StringReader: void <init>(java.lang.String)>: 17
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 15
<java.io.ByteArrayInputStream: void close()>: 15
<java.io.ByteArrayInputStream: void <init>(byte[])>: 15
<java.util.zip.GZIPInputStream: void close()>: 15
<java.io.Writer: void <init>()>: 15
<java.io.ByteArrayOutputStream: void <init>()>: 15
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 15
<java.io.FilterInputStream: int read(byte[])>: 15
<java.io.OutputStream: void write(byte[],int,int)>: 14
<java.net.InetAddress: java.lang.String toString()>: 14
<com.fasterxml.jackson.core.util.ByteArrayBuilder: void <init>()>: 14
<java.net.URL: void <init>(java.lang.String)>: 14
<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>: 14
<java.io.OutputStream: void <init>()>: 14
<java.io.ByteArrayOutputStream: void close()>: 14
<java.io.File: boolean exists()>: 12
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 12
<android.net.NetworkInfo: int getType()>: 12
<com.fasterxml.jackson.core.JsonGenerator: void close()>: 12
<android.database.sqlite.SQLiteProgram: void bindDouble(int,double)>: 12
<android.database.sqlite.SQLiteProgram: void bindLong(int,long)>: 12
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 11
<de.eosuptrade.gson.stream.MalformedJsonException: void <init>(java.lang.String)>: 11
<java.io.EOFException: void <init>(java.lang.String)>: 11
<java.io.Writer: void write(int)>: 11
<java.lang.Appendable: java.lang.Appendable append(char)>: 11
<java.io.Writer: java.io.Writer append(char)>: 11
<java.io.Writer: void write(java.lang.String,int,int)>: 11
<java.io.Reader: void <init>()>: 10
<de.eosuptrade.gson.internal.bind.JsonTreeReader$1: void <init>()>: 10
<java.io.InputStream: void close()>: 8
<java.io.Reader: void close()>: 7
<java.io.InputStream: void <init>()>: 7
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 7
<java.net.InetSocketAddress: int getPort()>: 7
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>: 7
<com.fasterxml.jackson.databind.util.TokenBuffer: void close()>: 7
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String,java.lang.Throwable)>: 7
<com.fasterxml.jackson.core.base.ParserBase: void close()>: 7
<java.io.OutputStream: void close()>: 7
<java.net.InetSocketAddress: java.lang.String getHostName()>: 7
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>: 7
<java.io.OutputStream: void write(byte[])>: 7
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 7
<java.io.InputStream: int read(byte[],int,int)>: 7
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String)>: 7
<com.fasterxml.jackson.databind.deser.UnresolvedForwardReference: void <init>(java.lang.String)>: 7
<java.net.InetSocketAddress: java.net.InetAddress getAddress()>: 7
<com.fasterxml.jackson.core.JsonParser: void close()>: 7
<java.net.URL: java.lang.String getHost()>: 6
<java.io.File: long length()>: 6
<java.net.URLConnection: void setDoOutput(boolean)>: 6
<java.io.File: java.lang.String getName()>: 6
<java.net.URL: java.net.URLConnection openConnection()>: 6
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 6
<java.net.URL: int getDefaultPort()>: 6
<java.io.File: java.lang.String getParent()>: 6
<android.database.sqlite.SQLiteDatabase: long getMaximumSize()>: 6
<java.net.URL: int getPort()>: 6
<com.fasterxml.jackson.core.base.GeneratorBase: void close()>: 6
<android.database.sqlite.SQLiteProgram: void bindBlob(int,byte[])>: 6
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 6
<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>: 6
<java.net.URLConnection: void setReadTimeout(int)>: 6
<java.io.Writer: void close()>: 6
<java.io.File: void <init>(java.io.File,java.lang.String)>: 6
<java.io.FileOutputStream: void <init>(java.io.File)>: 6
<java.net.URLConnection: void setConnectTimeout(int)>: 6
<android.net.NetworkInfo: boolean isAvailable()>: 6
<java.net.URLConnection: void setDoInput(boolean)>: 6
<java.io.File: boolean delete()>: 6
<java.net.Socket: void close()>: 6
<java.io.FileOutputStream: void write(byte[])>: 6
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 6
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 6
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>: 6
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>: 6
<java.net.URLConnection: void setUseCaches(boolean)>: 6
<java.io.FileInputStream: void <init>(java.io.File)>: 4
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 3
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 3
<de.eosuptrade.mticket.database.DatabaseProvider: void close()>: 3
<android.graphics.Bitmap: int getHeight()>: 3
<android.graphics.Bitmap: int getWidth()>: 3
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 1
<java.io.InputStream: int read(byte[])>: 1
<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>: 1
