Duration => 14260
UI Thread => 359
Worker Thread => 2845

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 61
<java.io.File: boolean exists()>: 23
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 20
<java.io.File: void <init>(java.io.File,java.lang.String)>: 15
<android.net.Uri$Builder: void <init>()>: 13
<java.io.File: void <init>(java.lang.String)>: 12
<android.net.Uri$Builder: android.net.Uri$Builder encodedPath(java.lang.String)>: 12
<java.io.File: java.lang.String getAbsolutePath()>: 9
<java.lang.Object: boolean equals(java.lang.Object)>: 8
<java.io.File: boolean delete()>: 8
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 7
<android.net.NetworkInfo: int getType()>: 7
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 7
<android.net.NetworkInfo: boolean isConnected()>: 7
<android.net.Uri$Builder: android.net.Uri$Builder appendEncodedPath(java.lang.String)>: 6
<java.io.InputStream: int read(byte[])>: 5
<java.io.StringWriter: java.lang.String toString()>: 5
<java.io.FileOutputStream: void <init>(java.io.File)>: 5
<java.io.StringWriter: void <init>()>: 5
<java.io.File: boolean isDirectory()>: 4
<io.realm.internal.SharedRealm: void close()>: 4
<java.lang.Enum: boolean equals(java.lang.Object)>: 4
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 4
<io.realm.a: void close()>: 4
<java.io.PrintWriter: void <init>(java.io.Writer)>: 4
<java.io.PrintStream: void println(java.lang.String)>: 4
<java.io.FileInputStream: void <init>(java.io.File)>: 3
<android.net.Uri$Builder: android.net.Uri build()>: 3
<java.io.InputStream: void close()>: 3
<android.net.Uri$Builder: java.lang.String toString()>: 3
<java.io.File: java.io.File[] listFiles()>: 3
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 3
<java.io.File: boolean mkdirs()>: 3
<java.io.FileOutputStream: java.io.FileDescriptor getFD()>: 2
<java.io.FileOutputStream: void write(byte[],int,int)>: 2
<java.io.Closeable: void close()>: 2
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>: 2
<java.io.File: long length()>: 2
<java.io.File: boolean setExecutable(boolean,boolean)>: 2
<java.util.zip.ZipFile: void close()>: 2
<java.io.OutputStream: void write(byte[],int,int)>: 2
<java.io.File: boolean equals(java.lang.Object)>: 2
<java.io.File: java.lang.String getName()>: 2
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>: 2
<java.io.OutputStream: void flush()>: 2
<java.io.File: java.lang.String getCanonicalPath()>: 2
<io.realm.m: boolean equals(java.lang.Object)>: 2
<java.io.File: boolean setWritable(boolean)>: 2
<java.io.File: boolean setReadable(boolean,boolean)>: 2
<java.io.File: boolean createNewFile()>: 2
<io.realm.c: void close()>: 2
<io.realm.internal.RealmNotifier: void close()>: 2
<java.io.FileNotFoundException: void <init>(java.lang.String)>: 2
<java.io.FileDescriptor: void sync()>: 2
<java.io.IOException: void <init>(java.lang.String)>: 2
<io.realm.j: void close()>: 2
<java.io.EOFException: void <init>()>: 2
<java.io.FileOutputStream: void close()>: 2
<java.lang.Boolean: boolean equals(java.lang.Object)>: 2
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>: 2
<io.realm.internal.m: boolean equals(java.lang.Object)>: 2
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 1
<android.database.sqlite.SQLiteDatabase: boolean deleteDatabase(java.io.File)>: 1
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>: 1
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 1
<android.net.Uri$Builder: android.net.Uri$Builder path(java.lang.String)>: 1
<java.io.File: java.lang.String getPath()>: 1
<java.io.File: boolean isFile()>: 1
<java.io.BufferedInputStream: void close()>: 1
<java.io.Writer: void write(java.lang.String)>: 1
<java.io.File: java.lang.String getParent()>: 1
<java.lang.String: int hashCode()>: 1
<java.io.ByteArrayOutputStream: void <init>()>: 1
<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>: 1
<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>: 1
<java.util.Locale: boolean equals(java.lang.Object)>: 1
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 1
<java.io.File: java.io.File getParentFile()>: 1
<android.database.Cursor: void close()>: 1
<com.fasterxml.jackson.jr.a.a: int hashCode()>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 404
<android.database.Cursor: void close()>: 161
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 147
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 140
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 126
<java.io.File: boolean exists()>: 98
<java.io.File: void <init>(java.lang.String)>: 98
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>: 77
<android.database.sqlite.SQLiteClosable: void close()>: 77
<java.io.File: boolean isFile()>: 60
<jp.profilepassport.android.obfuscated.m.a: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 56
<java.io.File: boolean mkdirs()>: 51
<java.io.FileInputStream: void <init>(java.io.File)>: 49
<java.io.FileInputStream: void close()>: 49
<android.database.DatabaseUtils: java.lang.String sqlEscapeString(java.lang.String)>: 49
<android.database.sqlite.SQLiteStatement: void execute()>: 42
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 42
<android.database.sqlite.SQLiteOpenHelper: void close()>: 42
<java.io.BufferedReader: java.lang.String readLine()>: 36
<java.io.BufferedReader: void <init>(java.io.Reader)>: 36
<java.io.InputStreamReader: void close()>: 35
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 35
<java.io.File: java.lang.String getPath()>: 35
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 35
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 35
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 35
<java.io.BufferedReader: void close()>: 35
<java.io.File: boolean canRead()>: 28
<java.io.FileOutputStream: void close()>: 28
<java.lang.Enum: boolean equals(java.lang.Object)>: 28
<android.net.wifi.WifiManager: boolean isWifiEnabled()>: 28
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>: 28
<java.io.File: java.lang.String getAbsolutePath()>: 23
<java.io.File: boolean delete()>: 22
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 21
<android.net.Uri$Builder: void <init>()>: 21
<java.io.File: boolean canWrite()>: 21
<android.database.sqlite.SQLiteProgram: void bindString(int,java.lang.String)>: 21
<java.io.File: java.io.File getParentFile()>: 21
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 21
<android.net.NetworkInfo: boolean isConnected()>: 21
<java.io.File: void <init>(java.io.File,java.lang.String)>: 18
<android.database.sqlite.SQLiteStatement: long simpleQueryForLong()>: 14
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 14
<java.io.OutputStream: void flush()>: 14
<java.io.FileOutputStream: void <init>(java.lang.String,boolean)>: 14
<android.net.Uri$Builder: android.net.Uri build()>: 14
<java.io.OutputStream: void write(byte[])>: 14
<android.database.sqlite.SQLiteStatement: long executeInsert()>: 14
<android.net.NetworkInfo: java.lang.String getTypeName()>: 14
<java.lang.String: int hashCode()>: 12
<java.io.IOException: void <init>(java.lang.String)>: 11
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 10
<java.io.InputStream: void close()>: 9
<java.io.FileInputStream: void <init>(java.lang.String)>: 8
<java.nio.channels.spi.AbstractInterruptibleChannel: void close()>: 7
<java.io.FileOutputStream: void <init>(java.lang.String)>: 7
<java.io.ObjectInputStream: void close()>: 7
<android.net.wifi.WifiManager: boolean startScan()>: 7
<android.database.sqlite.SQLiteStatement: int executeUpdateDelete()>: 7
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 7
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 7
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>: 7
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 7
<android.database.sqlite.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)>: 7
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>: 7
<java.io.ObjectInputStream: java.lang.Object readObject()>: 7
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 7
<java.io.FileOutputStream: void <init>(java.io.File)>: 7
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>: 7
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 7
<android.net.wifi.WifiManager: java.util.List getScanResults()>: 7
<android.database.sqlite.SQLiteDatabase: boolean inTransaction()>: 7
<java.io.ObjectOutputStream: void close()>: 7
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 7
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 7
<java.io.Writer: void write(java.lang.String)>: 6
<com.fasterxml.jackson.jr.ob.JSONObjectException: void <init>(java.lang.String)>: 5
<com.fasterxml.jackson.core.JsonGenerationException: void <init>(java.lang.String)>: 4
<java.io.Writer: void close()>: 4
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 3
<java.io.Closeable: void close()>: 3
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>: 3
<java.io.CharConversionException: void <init>(java.lang.String)>: 3
<java.io.InputStream: int read(byte[],int,int)>: 3
<java.io.ByteArrayOutputStream: void <init>()>: 3
<java.io.StringReader: void <init>(java.lang.String)>: 3
<com.fasterxml.jackson.core.e: void close()>: 2
<java.io.File: boolean isDirectory()>: 2
<com.fasterxml.jackson.core.a.b: void close()>: 2
<java.io.File: boolean mkdir()>: 2
<com.fasterxml.jackson.jr.a.a: int hashCode()>: 2
<java.io.Writer: void <init>()>: 2
<java.io.InputStream: int read(byte[])>: 2
<java.net.URL: void <init>(java.lang.String)>: 2
<java.io.BufferedWriter: void close()>: 2
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 2
<com.fasterxml.jackson.core.a.a: void close()>: 2
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 2
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>: 2
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String)>: 2
<java.net.URL: java.lang.String getPath()>: 1
<java.net.URL: java.lang.String getHost()>: 1
<java.io.CharArrayReader: void <init>(char[])>: 1
<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>: 1
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>: 1
<java.net.URLConnection: void setDoOutput(boolean)>: 1
<java.io.Reader: void <init>()>: 1
<java.io.OutputStream: void write(byte[],int,int)>: 1
<java.io.File: java.lang.String getName()>: 1
<java.net.URL: java.net.URLConnection openConnection()>: 1
<java.io.Reader: void close()>: 1
<java.io.InputStream: void <init>()>: 1
<java.net.URL: java.io.InputStream openStream()>: 1
<java.io.ByteArrayInputStream: void <init>(byte[])>: 1
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 1
<java.net.HttpURLConnection: int getResponseCode()>: 1
<java.io.StringWriter: void <init>()>: 1
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 1
<java.io.IOException: void <init>(java.lang.Throwable)>: 1
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 1
<java.io.OutputStream: void close()>: 1
<java.util.Scanner: void close()>: 1
<java.net.URL: java.lang.String toString()>: 1
<java.net.URLConnection: void setReadTimeout(int)>: 1
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 1
<java.io.StringWriter: java.lang.String toString()>: 1
<java.net.URL: java.lang.String getProtocol()>: 1
<java.net.URLConnection: java.io.InputStream getInputStream()>: 1
<java.net.URLConnection: void setConnectTimeout(int)>: 1
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 1
<java.util.zip.DeflaterInputStream: void <init>(java.io.InputStream)>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 1
<java.io.Reader: int read(char[],int,int)>: 1
