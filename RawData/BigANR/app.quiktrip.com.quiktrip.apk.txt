Duration => 1409
UI Thread => 102
Worker Thread => 583

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 29
<java.io.PrintStream: void println(java.lang.String)>: 5
<java.io.File: void <init>(java.io.File,java.lang.String)>: 5
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>: 3
<android.net.NetworkInfo: boolean isConnected()>: 3
<java.lang.Object: boolean equals(java.lang.Object)>: 3
<java.io.File: java.lang.String getAbsolutePath()>: 3
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>: 2
<java.io.FileOutputStream: void <init>(java.io.File)>: 2
<android.net.wifi.WifiInfo: java.lang.String getBSSID()>: 2
<java.io.InputStream: int read(byte[])>: 2
<android.net.wifi.WifiManager: java.util.List getConfiguredNetworks()>: 2
<android.net.wifi.WifiInfo: java.lang.String getSSID()>: 2
<java.io.OutputStreamWriter: void flush()>: 2
<java.io.BufferedOutputStream: void write(byte[],int,int)>: 2
<java.io.BufferedOutputStream: void close()>: 2
<android.net.wifi.WifiManager: android.net.DhcpInfo getDhcpInfo()>: 2
<android.net.wifi.WifiInfo: int getLinkSpeed()>: 2
<android.net.wifi.WifiInfo: int getRssi()>: 2
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>: 2
<java.io.InputStream: int available()>: 2
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 2
<java.io.File: boolean mkdirs()>: 2
<java.io.File: java.lang.String getParent()>: 1
<android.graphics.BitmapFactory$Options: void <init>()>: 1
<java.io.File: boolean createNewFile()>: 1
<android.net.Uri$Builder: android.net.Uri build()>: 1
<java.io.OutputStreamWriter: void close()>: 1
<java.lang.String: int hashCode()>: 1
<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>: 1
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 1
<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>: 1
<android.net.Uri$Builder: void <init>()>: 1
<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>: 1
<java.io.FileWriter: void <init>(java.io.File,boolean)>: 1
<java.io.File: java.lang.String getName()>: 1
<com.applause.android.session.TestCycle: boolean equals(java.lang.Object)>: 1
<java.io.File: boolean canWrite()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 1
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 1
<java.io.File: void <init>(java.lang.String)>: 1
<java.io.Writer: void write(java.lang.String)>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 62
<java.io.File: void <init>(java.io.File,java.lang.String)>: 51
<java.io.File: java.lang.String getAbsolutePath()>: 23
<java.io.File: void <init>(java.lang.String)>: 17
<java.io.File: boolean mkdirs()>: 14
<java.io.File: boolean isDirectory()>: 10
<java.io.File: boolean exists()>: 10
<java.io.InputStream: void close()>: 10
<java.io.BufferedReader: void close()>: 10
<java.io.BufferedReader: void <init>(java.io.Reader,int)>: 9
<java.io.FileInputStream: void <init>(java.io.File)>: 9
<java.io.OutputStream: void flush()>: 9
<java.io.BufferedReader: java.lang.String readLine()>: 9
<java.io.File: java.io.File getParentFile()>: 9
<java.io.File: boolean renameTo(java.io.File)>: 9
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 9
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 8
<java.io.OutputStreamWriter: void close()>: 8
<java.io.FileWriter: void <init>(java.io.File,boolean)>: 8
<java.io.File: java.lang.String getName()>: 8
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 8
<java.util.jar.JarFile: void close()>: 8
<java.io.File: boolean canWrite()>: 8
<java.io.DataInputStream: void <init>(java.io.InputStream)>: 8
<java.io.Writer: void write(java.lang.String)>: 8
<java.io.InputStream: int read(byte[],int,int)>: 8
<java.io.ByteArrayOutputStream: void <init>()>: 8
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 8
<android.net.NetworkInfo: java.lang.String getTypeName()>: 8
<java.io.InputStream: int read(byte[])>: 7
<java.io.FileOutputStream: void <init>(java.io.File)>: 7
<android.net.NetworkInfo: boolean isConnected()>: 7
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>: 6
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>: 6
<java.io.BufferedOutputStream: void write(byte[],int,int)>: 6
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>: 6
<java.io.PrintStream: void println(java.lang.Object)>: 6
<android.net.wifi.WifiManager: android.net.DhcpInfo getDhcpInfo()>: 6
<java.io.InputStream: int available()>: 6
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 6
<android.net.wifi.WifiInfo: int getRssi()>: 6
<android.net.wifi.WifiInfo: java.lang.String getBSSID()>: 6
<android.net.wifi.WifiManager: java.util.List getConfiguredNetworks()>: 6
<android.net.wifi.WifiInfo: java.lang.String getSSID()>: 6
<java.io.BufferedOutputStream: void close()>: 6
<android.net.wifi.WifiInfo: int getLinkSpeed()>: 6
<java.net.URL: java.net.URLConnection openConnection()>: 4
<java.io.File: java.lang.String[] list(java.io.FilenameFilter)>: 4
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 4
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>: 4
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 4
<java.net.URL: void <init>(java.lang.String)>: 4
<java.net.URLConnection: java.io.InputStream getInputStream()>: 4
<android.graphics.Bitmap: int getHeight()>: 4
<java.net.URLConnection: void setDoOutput(boolean)>: 3
<android.graphics.Bitmap: int getRowBytes()>: 3
<com.applause.android.protocol.ApiInterface$ApiException: void <init>(java.lang.String)>: 3
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 3
<java.io.OutputStream: void close()>: 3
<java.net.URLConnection: void setDoInput(boolean)>: 3
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 3
<java.io.Reader: int read(char[])>: 2
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 2
<java.net.HttpURLConnection: int getResponseCode()>: 2
<java.io.IOException: void <init>(java.lang.String)>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>: 2
<java.net.URLConnection: void setReadTimeout(int)>: 2
<java.io.OutputStream: void write(byte[])>: 2
<java.net.URLConnection: void setConnectTimeout(int)>: 2
<java.io.File: boolean delete()>: 2
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 2
<java.io.BufferedReader: void <init>(java.io.Reader)>: 2
<java.io.FileReader: void <init>(java.io.File)>: 1
<android.graphics.Bitmap: void recycle()>: 1
<java.io.OutputStream: void write(byte[],int,int)>: 1
<android.database.DataSetObservable: void <init>()>: 1
<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>: 1
<java.io.Writer: void write(char[],int,int)>: 1
<java.io.BufferedReader: long skip(long)>: 1
<java.lang.Object: java.lang.String toString()>: 1
<java.io.FileInputStream: void close()>: 1
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 1
<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>: 1
<java.io.StringWriter: void <init>()>: 1
<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>: 1
<android.net.Uri$Builder: void <init>()>: 1
<java.io.Writer: void flush()>: 1
<java.io.IOException: void <init>(java.lang.Throwable)>: 1
<java.io.FileOutputStream: void close()>: 1
<android.net.Uri$Builder: android.net.Uri build()>: 1
<java.io.File: boolean equals(java.lang.Object)>: 1
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 1
<java.io.File: boolean isFile()>: 1
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 1
<android.graphics.Bitmap: int getWidth()>: 1
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 1
<java.io.File: java.io.File[] listFiles()>: 1
<com.applause.android.session.TestCycle: boolean equals(java.lang.Object)>: 1
