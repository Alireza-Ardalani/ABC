Duration => 736
UI Thread => 2149
Worker Thread => 2305

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 287
<java.io.File: boolean exists()>: 116
<java.io.File: void <init>(java.io.File,java.lang.String)>: 114
<java.io.File: boolean delete()>: 111
<java.io.File: boolean setLastModified(long)>: 110
<java.io.File: java.lang.String getAbsolutePath()>: 110
<java.lang.String: int hashCode()>: 60
<java.io.BufferedReader: java.lang.String readLine()>: 57
<java.io.BufferedReader: void close()>: 57
<java.io.BufferedReader: void <init>(java.io.Reader)>: 57
<java.io.Writer: void write(java.lang.String)>: 56
<java.io.BufferedWriter: void <init>(java.io.Writer,int)>: 55
<java.io.File: java.io.File getAbsoluteFile()>: 55
<java.io.FileReader: void <init>(java.io.File)>: 55
<java.io.BufferedWriter: void close()>: 55
<java.io.BufferedWriter: void flush()>: 55
<java.io.FileWriter: void <init>(java.io.File)>: 55
<java.io.File: boolean mkdirs()>: 55
<java.io.ByteArrayInputStream: void <init>(byte[])>: 51
<java.io.ObjectInputStream: java.lang.Object readObject()>: 50
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 50
<java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>: 47
<okhttp3.ResponseBody: void close()>: 47
<java.lang.Object: boolean equals(java.lang.Object)>: 45
<android.database.sqlite.SQLiteClosable: void close()>: 40
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 30
<java.io.File: void <init>(java.lang.String)>: 22
<android.database.Cursor: void close()>: 19
<java.io.File: java.lang.String getPath()>: 16
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 10
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 10
<android.net.NetworkInfo: int getType()>: 10
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 10
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 10
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 10
<android.net.NetworkInfo: boolean isAvailable()>: 10
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 10
<android.net.NetworkInfo: boolean isConnected()>: 10
<android.database.DatabaseUtils: java.lang.String stringForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>: 10
<android.graphics.Bitmap: boolean isRecycled()>: 8
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 6
<android.graphics.Bitmap: void recycle()>: 5
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 4
<android.graphics.BitmapFactory$Options: void <init>()>: 4
<java.io.ByteArrayOutputStream: void <init>()>: 4
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>: 3
<java.io.ByteArrayInputStream: void close()>: 3
<java.io.File: java.lang.String getName()>: 3
<java.io.RandomAccessFile: int read(byte[])>: 3
<java.io.OutputStream: void flush()>: 3
<java.io.ObjectInputStream: void close()>: 3
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory$Options)>: 3
<java.io.FileOutputStream: void <init>(java.io.File)>: 3
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>: 3
<java.io.ObjectOutputStream: void close()>: 3
<java.io.RandomAccessFile: long length()>: 3
<java.io.FileOutputStream: void write(byte[])>: 3
<java.io.RandomAccessFile: void close()>: 3
<java.io.FileOutputStream: void close()>: 3
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>: 3
<java.io.FileInputStream: void <init>(java.io.File)>: 2
<java.io.InputStream: void close()>: 2
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 2
<java.net.URL: java.lang.String getPath()>: 1
<java.net.URL: java.lang.String getHost()>: 1
<java.net.URL: java.lang.String getRef()>: 1
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 1
<java.net.URI: void <init>(java.lang.String)>: 1
<java.net.URL: void <init>(java.lang.String)>: 1
<java.io.File: long length()>: 1
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 1
<java.lang.Integer: boolean equals(java.lang.Object)>: 1
<java.net.URL: java.lang.String getProtocol()>: 1
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>: 1
<java.net.URI: java.net.URI create(java.lang.String)>: 1
<java.io.ByteArrayOutputStream: void reset()>: 1
<java.net.URI: java.lang.String toASCIIString()>: 1
<java.io.File: boolean isFile()>: 1
<java.io.Writer: void close()>: 1
<java.math.BigDecimal: boolean equals(java.lang.Object)>: 1
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 1
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>: 1
<java.io.File: boolean createNewFile()>: 1
<java.net.URL: java.lang.String getUserInfo()>: 1
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 1
<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>: 1
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 1
<java.net.URL: int getPort()>: 1
<java.lang.Object: int hashCode()>: 1
<java.io.Writer: void flush()>: 1
<java.net.URL: java.lang.String getQuery()>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 439
<java.io.File: java.lang.String getPath()>: 199
<java.lang.Object: boolean equals(java.lang.Object)>: 128
<java.io.RandomAccessFile: void close()>: 122
<java.io.File: void <init>(java.lang.String)>: 78
<java.io.BufferedReader: java.lang.String readLine()>: 64
<java.io.File: boolean exists()>: 63
<java.io.BufferedReader: void close()>: 63
<java.io.File: boolean mkdirs()>: 63
<java.io.File: java.lang.String getAbsolutePath()>: 62
<java.io.BufferedReader: void <init>(java.io.Reader,int)>: 61
<java.io.File: long lastModified()>: 61
<java.io.File: long length()>: 61
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 61
<java.io.File: java.io.File getParentFile()>: 61
<java.io.FileOutputStream: void close()>: 61
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>: 61
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>: 61
<java.io.RandomAccessFile: void readFully(byte[])>: 61
<java.io.FileOutputStream: void <init>(java.io.File)>: 61
<java.io.File: java.io.File[] listFiles()>: 61
<java.io.RandomAccessFile: java.lang.String readLine()>: 61
<java.io.RandomAccessFile: long length()>: 61
<java.io.FileOutputStream: void write(byte[])>: 61
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 61
<java.io.ByteArrayInputStream: void <init>(byte[])>: 6
<java.net.URI: java.lang.String getHost()>: 3
<java.io.StringWriter: void <init>()>: 3
<java.io.InputStream: void close()>: 3
<java.io.StringWriter: java.lang.String toString()>: 3
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>: 3
<java.io.File: void <init>(java.io.File,java.lang.String)>: 3
<java.io.InputStream: boolean markSupported()>: 3
<java.io.BufferedReader: void <init>(java.io.Reader)>: 3
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 2
<java.io.FileInputStream: void <init>(java.io.File)>: 2
<java.io.File: boolean isDirectory()>: 2
<java.io.InputStream: void reset()>: 2
<java.net.URI: java.net.URI create(java.lang.String)>: 2
<java.net.URI: int getPort()>: 2
<java.net.URI: java.lang.String getScheme()>: 2
<java.io.InputStream: int read(byte[])>: 2
<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>: 2
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 2
<java.lang.Enum: boolean equals(java.lang.Object)>: 2
<com.amazonaws.internal.SdkFilterInputStream: void <init>(java.io.InputStream)>: 2
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 2
<java.io.ByteArrayOutputStream: void <init>()>: 2
<java.io.FileReader: void <init>(java.io.File)>: 1
<java.net.URLConnection: void setDoOutput(boolean)>: 1
<java.io.OutputStream: void write(byte[],int,int)>: 1
<java.io.FileWriter: void <init>(java.io.File,boolean)>: 1
<com.google.gson.stream.JsonWriter: void close()>: 1
<java.net.URL: java.net.URLConnection openConnection()>: 1
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>: 1
<java.io.OutputStream: void flush()>: 1
<java.net.URLConnection: java.util.Map getHeaderFields()>: 1
<java.io.FileInputStream: void close()>: 1
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 1
<java.io.File: boolean createNewFile()>: 1
<java.net.HttpURLConnection: int getResponseCode()>: 1
<java.io.PrintWriter: void flush()>: 1
<java.io.IOException: void <init>(java.lang.String)>: 1
<java.io.PrintWriter: void <init>(java.io.Writer)>: 1
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 1
<com.amazonaws.util.NamespaceRemovingInputStream: void <init>(java.io.InputStream)>: 1
<java.io.FilterInputStream: void <init>(java.io.InputStream)>: 1
<java.net.URI: java.net.URL toURL()>: 1
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 1
<java.io.OutputStream: void close()>: 1
<java.io.File: boolean renameTo(java.io.File)>: 1
<com.google.gson.stream.JsonReader: void close()>: 1
<java.net.URLConnection: void setReadTimeout(int)>: 1
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 1
<com.amazonaws.util.CRC32ChecksumCalculatingInputStream: void <init>(java.io.InputStream)>: 1
<java.net.URI: java.lang.String toString()>: 1
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>: 1
<java.io.InputStream: void mark(int)>: 1
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 1
<java.net.URLConnection: java.io.InputStream getInputStream()>: 1
<java.io.File: boolean isFile()>: 1
<java.io.Writer: void close()>: 1
<java.net.URI: java.lang.String getAuthority()>: 1
<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>: 1
<java.io.PrintWriter: void close()>: 1
<com.amazonaws.internal.CRC32MismatchException: void <init>(java.lang.String)>: 1
<java.net.URLConnection: void setConnectTimeout(int)>: 1
<android.net.NetworkInfo: boolean isAvailable()>: 1
<java.net.URI: java.lang.String getPath()>: 1
<java.io.PrintWriter: void println(java.lang.String)>: 1
<java.io.FileNotFoundException: void <init>(java.lang.String)>: 1
<java.io.File: boolean delete()>: 1
<android.net.NetworkInfo: boolean isConnected()>: 1
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 1
<java.io.ByteArrayOutputStream: void close()>: 1
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 1
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>: 1
<android.net.NetworkInfo: java.lang.String getTypeName()>: 1
<java.net.URLConnection: void setUseCaches(boolean)>: 1
