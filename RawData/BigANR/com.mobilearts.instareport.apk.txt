Duration => 8380
UI Thread => 1012
Worker Thread => 2504

----------------StartUI----------------
<java.io.PrintStream: void println(java.lang.String)>: 93
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 76
<java.lang.String: boolean equals(java.lang.Object)>: 74
<java.io.Writer: void write(java.lang.String)>: 43
<java.net.URLConnection: java.net.URL getURL()>: 30
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>: 24
<java.io.File: boolean exists()>: 23
<java.io.File: java.lang.String getAbsolutePath()>: 23
<android.net.NetworkInfo: int getType()>: 21
<java.lang.Object: boolean equals(java.lang.Object)>: 19
<java.net.URL: void <init>(java.lang.String)>: 18
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 18
<java.net.URLConnection: java.io.InputStream getInputStream()>: 18
<java.net.HttpURLConnection: int getResponseCode()>: 18
<java.net.HttpURLConnection: java.lang.String getRequestMethod()>: 18
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 18
<java.net.URLConnection: int getContentLength()>: 18
<java.io.File: void <init>(java.io.File,java.lang.String)>: 17
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 14
<java.io.File: void <init>(java.lang.String)>: 14
<com.newrelic.agent.android.instrumentation.io.CountingInputStream: int available()>: 12
<java.net.URL: java.lang.String getHost()>: 12
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 12
<java.io.InputStream: int read(byte[],int,int)>: 12
<java.io.IOException: void <init>(java.lang.String)>: 12
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 12
<java.lang.Object: int hashCode()>: 11
<java.io.Writer: void write(int)>: 7
<java.io.FileOutputStream: java.io.FileDescriptor getFD()>: 7
<java.io.FileInputStream: void <init>(java.io.File)>: 7
<java.io.Closeable: void close()>: 7
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>: 7
<java.io.InputStream: int read(byte[])>: 7
<java.io.File: long length()>: 7
<java.io.File: boolean setExecutable(boolean,boolean)>: 7
<java.util.zip.ZipFile: void close()>: 7
<java.io.OutputStream: void write(byte[],int,int)>: 7
<java.io.File: java.lang.String getName()>: 7
<java.io.Writer: java.io.Writer append(char)>: 7
<java.io.StringWriter: java.lang.String toString()>: 7
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>: 7
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 7
<java.io.OutputStream: void flush()>: 7
<java.io.File: java.lang.String getCanonicalPath()>: 7
<java.io.Writer: void write(java.lang.String,int,int)>: 7
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 7
<android.graphics.Bitmap: int getHeight()>: 7
<java.io.File: boolean setReadable(boolean,boolean)>: 7
<java.io.File: boolean setWritable(boolean)>: 7
<android.net.NetworkInfo: int getSubtype()>: 7
<java.io.File: boolean createNewFile()>: 7
<java.io.FileOutputStream: void <init>(java.io.File)>: 7
<android.graphics.Bitmap: int getWidth()>: 7
<java.io.StringWriter: void <init>()>: 7
<java.io.FileDescriptor: void sync()>: 7
<java.io.File: boolean delete()>: 7
<android.net.NetworkInfo: boolean isConnected()>: 7
<java.io.EOFException: void <init>()>: 7
<android.net.NetworkInfo: java.lang.String getTypeName()>: 7
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>: 7
<java.net.URL: java.lang.String getPath()>: 6
<javax.net.ssl.HttpsURLConnection: void <init>(java.net.URL)>: 6
<java.net.URL: java.lang.String toString()>: 6
<java.net.HttpURLConnection: void <init>(java.net.URL)>: 6
<io.realm.Realm: void close()>: 6
<java.net.URL: java.lang.String getProtocol()>: 6
<java.net.URL: java.net.URLConnection openConnection()>: 6
<java.io.InputStream: void <init>()>: 6
<com.newrelic.agent.android.instrumentation.HttpURLConnectionExtension: java.io.InputStream getErrorStream()>: 6
<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getErrorStream()>: 6
<java.net.URL: int getPort()>: 6
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 6
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 6
<java.io.InputStream: int available()>: 6
<java.io.File: boolean mkdirs()>: 2
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 1
<java.io.FileReader: void <init>(java.io.File)>: 1
<java.io.File: boolean isDirectory()>: 1
<java.io.BufferedWriter: void close()>: 1
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 1
<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>: 1
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 1
<android.database.sqlite.SQLiteOpenHelper: void close()>: 1
<java.io.BufferedReader: java.lang.String readLine()>: 1
<java.io.BufferedReader: void close()>: 1
<java.io.BufferedWriter: void flush()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 1
<android.database.Cursor: void close()>: 1
<java.io.BufferedReader: void <init>(java.io.Reader)>: 1
<java.io.FileWriter: void <init>(java.io.File)>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 223
<java.io.IOException: void <init>(java.lang.String)>: 91
<cz.msebera.android.httpclient.HttpConnection: void close()>: 84
<java.io.InputStream: void close()>: 78
<java.io.Closeable: void close()>: 54
<java.net.URI: java.net.URI create(java.lang.String)>: 48
<java.net.URI: boolean isAbsolute()>: 48
<java.io.InterruptedIOException: void <init>(java.lang.String)>: 48
<java.lang.Object: int hashCode()>: 45
<java.io.PrintStream: void println(java.lang.String)>: 42
<java.net.URI: void <init>(java.lang.String)>: 36
<java.io.OutputStream: void write(byte[],int,int)>: 36
<java.lang.Object: boolean equals(java.lang.Object)>: 36
<java.io.InterruptedIOException: void <init>()>: 36
<java.net.Socket: void setSoTimeout(int)>: 36
<io.realm.Realm: void close()>: 36
<java.net.Socket: void close()>: 36
<java.io.InputStream: void <init>()>: 30
<cz.msebera.android.httpclient.HttpHost: boolean equals(java.lang.Object)>: 30
<java.net.URI: java.lang.String getScheme()>: 30
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 30
<java.net.URI: java.lang.String toASCIIString()>: 30
<java.io.InputStream: int read(byte[],int,int)>: 30
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>: 24
<cz.msebera.android.httpclient.NoHttpResponseException: void <init>(java.lang.String)>: 24
<java.io.OutputStream: void flush()>: 24
<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>: 24
<java.io.ByteArrayInputStream: void <init>(byte[])>: 24
<java.nio.charset.CoderResult: boolean isError()>: 24
<java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>: 24
<io.realm.internal.OsSharedRealm: void close()>: 24
<java.nio.charset.CoderResult: void throwException()>: 24
<cz.msebera.android.httpclient.MalformedChunkCodingException: void <init>(java.lang.String)>: 24
<java.io.OutputStream: void <init>()>: 24
<cz.msebera.android.httpclient.conn.routing.HttpRoute: boolean equals(java.lang.Object)>: 24
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 18
<java.net.URI: java.lang.String getHost()>: 18
<cz.msebera.android.httpclient.conn.UnsupportedSchemeException: void <init>(java.lang.String)>: 18
<java.net.URI: java.lang.String getUserInfo()>: 18
<java.net.URI: int getPort()>: 18
<java.io.InputStream: int read(byte[])>: 18
<java.net.URI: boolean isOpaque()>: 18
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 17
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 13
<java.io.ByteArrayOutputStream: void <init>()>: 13
<java.net.Socket: void shutdownOutput()>: 12
<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>: 12
<java.net.URI: java.lang.String getRawFragment()>: 12
<java.nio.charset.Charset: boolean equals(java.lang.Object)>: 12
<java.net.Socket: void setSoLinger(boolean,int)>: 12
<cz.msebera.android.httpclient.client.ClientProtocolException: void <init>(java.lang.String)>: 12
<java.net.Socket: int getSoTimeout()>: 12
<java.net.URI: java.lang.String getRawQuery()>: 12
<java.net.Socket: java.io.InputStream getInputStream()>: 12
<cz.msebera.android.httpclient.conn.ConnectionPoolTimeoutException: void <init>(java.lang.String)>: 12
<cz.msebera.android.httpclient.MessageConstraintException: void <init>(java.lang.String)>: 12
<java.io.File: void <init>(java.lang.String)>: 12
<java.net.Socket: void shutdownInput()>: 12
<java.io.OutputStream: void close()>: 12
<java.net.Socket: void setTcpNoDelay(boolean)>: 12
<java.net.URI: java.lang.String toString()>: 12
<java.io.OutputStream: void write(byte[])>: 12
<java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>: 12
<java.net.ProxySelector: java.net.ProxySelector getDefault()>: 12
<java.net.URI: java.lang.String getAuthority()>: 12
<java.nio.CharBuffer: java.nio.CharBuffer wrap(char[],int,int)>: 12
<java.net.Proxy: java.net.Proxy$Type type()>: 12
<java.net.URI: java.lang.String getFragment()>: 12
<java.net.URI: java.lang.String getPath()>: 12
<java.net.Socket: java.io.OutputStream getOutputStream()>: 12
<java.nio.charset.UnsupportedCharsetException: void <init>(java.lang.String)>: 12
<cz.msebera.android.httpclient.client.ClientProtocolException: void <init>(java.lang.Throwable)>: 12
<java.io.Reader: int read(char[])>: 7
<java.net.URL: void <init>(java.lang.String)>: 7
<cz.msebera.android.httpclient.TruncatedChunkException: void <init>(java.lang.String)>: 6
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 6
<java.io.IOException: void <init>()>: 6
<java.net.URL: java.lang.String getPath()>: 6
<android.graphics.Bitmap: void recycle()>: 6
<java.net.URL: java.lang.String getHost()>: 6
<java.net.URL: java.lang.String getRef()>: 6
<java.net.InetAddress: java.lang.String getHostName()>: 6
<cz.msebera.android.httpclient.ConnectionClosedException: void <init>(java.lang.String)>: 6
<java.nio.CharBuffer: java.lang.String toString()>: 6
<java.net.Socket: int getSendBufferSize()>: 6
<cz.msebera.android.httpclient.impl.SocketHttpClientConnection: void close()>: 6
<java.net.InetAddress: java.lang.String getHostAddress()>: 6
<android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)>: 6
<java.io.InputStream: int read()>: 6
<java.net.URI: java.lang.String getRawAuthority()>: 6
<java.net.URI: java.net.URI resolve(java.net.URI)>: 6
<java.net.Socket: void setReuseAddress(boolean)>: 6
<java.net.Proxy: java.net.SocketAddress address()>: 6
<java.net.URISyntaxException: java.lang.String getMessage()>: 6
<java.net.InetSocketAddress: int getPort()>: 6
<java.io.File: boolean exists()>: 6
<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>: 6
<cz.msebera.android.httpclient.impl.BHttpConnectionBase: void close()>: 6
<java.lang.String: int hashCode()>: 6
<io.realm.internal.RealmNotifier: void close()>: 6
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 6
<java.net.URL: int getPort()>: 6
<cz.msebera.android.httpclient.impl.execchain.RequestAbortedException: void <init>(java.lang.String)>: 6
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 6
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 6
<cz.msebera.android.httpclient.impl.io.IdentityOutputStream: void write(byte[],int,int)>: 6
<java.net.URL: java.lang.String getQuery()>: 6
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 6
<java.net.URI: java.net.URI normalize()>: 6
<android.graphics.BitmapFactory$Options: void <init>()>: 6
<cz.msebera.android.httpclient.impl.io.ChunkedInputStream: int read(byte[],int,int)>: 6
<java.net.InetSocketAddress: java.lang.String getHostName()>: 6
<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>: 6
<cz.msebera.android.httpclient.impl.io.ContentLengthInputStream: int read(byte[],int,int)>: 6
<io.realm.internal.RealmProxyMediator: boolean equals(java.lang.Object)>: 6
<java.io.File: boolean equals(java.lang.Object)>: 6
<java.net.ConnectException: void <init>(java.lang.String)>: 6
<io.realm.RealmConfiguration: boolean equals(java.lang.Object)>: 6
<java.net.URI: java.lang.String getRawSchemeSpecificPart()>: 6
<java.net.URL: java.lang.String getProtocol()>: 6
<cz.msebera.android.httpclient.impl.io.ContentLengthOutputStream: void write(byte[],int,int)>: 6
<java.net.URI: java.lang.String getRawUserInfo()>: 6
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 6
<java.net.Proxy$Type: java.net.Proxy$Type[] values()>: 6
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>: 6
<java.io.File: void <init>(java.io.File,java.lang.String)>: 6
<java.net.MalformedURLException: void <init>(java.lang.String)>: 6
<cz.msebera.android.httpclient.impl.io.ChunkedInputStream: int read(byte[])>: 6
<android.graphics.Bitmap: int getHeight()>: 6
<cz.msebera.android.httpclient.conn.EofSensorInputStream: int read(byte[],int,int)>: 6
<java.net.Socket: void setKeepAlive(boolean)>: 6
<cz.msebera.android.httpclient.impl.io.ContentLengthInputStream: int read(byte[])>: 6
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 6
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>: 6
<io.realm.BaseRealm: void close()>: 6
<cz.msebera.android.httpclient.conn.ConnectTimeoutException: void <init>(java.lang.String)>: 6
<android.graphics.Bitmap: int getWidth()>: 6
<java.net.URL: java.lang.String getUserInfo()>: 6
<cz.msebera.android.httpclient.impl.execchain.RequestAbortedException: void <init>(java.lang.String,java.lang.Throwable)>: 6
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 6
<java.net.InetAddress: boolean equals(java.lang.Object)>: 6
<java.net.URI: java.lang.String getRawPath()>: 6
<java.io.File: java.lang.String getAbsolutePath()>: 6
<java.net.InetSocketAddress: boolean isUnresolved()>: 6
<java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>: 6
<java.net.URI: java.lang.String getQuery()>: 6
<java.net.InetSocketAddress: java.net.InetAddress getAddress()>: 6
<android.database.Cursor: void close()>: 6
<cz.msebera.android.httpclient.impl.io.ChunkedOutputStream: void write(byte[],int,int)>: 6
<java.lang.Boolean: boolean equals(java.lang.Object)>: 6
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 6
<java.net.Socket: int getReceiveBufferSize()>: 6
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 5
<android.database.sqlite.SQLiteOpenHelper: void close()>: 5
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 2
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>: 2
<com.newrelic.agent.android.harvest.ConnectInformation: boolean equals(java.lang.Object)>: 2
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>: 2
<java.net.URLConnection: void setDoOutput(boolean)>: 1
<java.net.URL: java.net.URLConnection openConnection()>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 1
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 1
<com.newrelic.com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>: 1
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 1
<java.net.HttpURLConnection: int getResponseCode()>: 1
<com.newrelic.com.google.gson.internal.bind.JsonTreeWriter$1: void <init>()>: 1
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>: 1
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 1
<java.io.EOFException: void <init>(java.lang.String)>: 1
<java.io.Writer: void <init>()>: 1
<com.newrelic.agent.android.harvest.DeviceInformation: boolean equals(java.lang.Object)>: 1
<java.net.URLConnection: void setReadTimeout(int)>: 1
<java.net.URLConnection: java.io.InputStream getInputStream()>: 1
<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>: 1
<com.newrelic.agent.android.harvest.ApplicationInformation: boolean equals(java.lang.Object)>: 1
<java.io.BufferedReader: void close()>: 1
<java.net.URLConnection: void setConnectTimeout(int)>: 1
<java.io.FilterOutputStream: void write(byte[])>: 1
<java.net.URLConnection: void setDoInput(boolean)>: 1
<java.io.FilterOutputStream: void close()>: 1
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 1
<java.io.ByteArrayOutputStream: void close()>: 1
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 1
<java.io.RandomAccessFile: void close()>: 1
<java.io.BufferedReader: void <init>(java.io.Reader)>: 1
<java.io.StringReader: void <init>(java.lang.String)>: 1
<java.net.URLConnection: void setUseCaches(boolean)>: 1
<java.io.Reader: int read(char[],int,int)>: 1
