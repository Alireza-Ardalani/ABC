Duration => 462
UI Thread => 768
Worker Thread => 43

----------------StartUI----------------
<java.io.File: void <init>(java.lang.String)>: 65
<java.lang.Throwable: java.lang.String getMessage()>: 44
<java.io.File: java.lang.String getAbsolutePath()>: 36
<java.io.FileInputStream: void <init>(java.io.File)>: 35
<java.io.File: boolean exists()>: 35
<java.io.FileOutputStream: void <init>(java.io.File)>: 34
<java.io.File: void <init>(java.io.File,java.lang.String)>: 31
<java.io.File: boolean delete()>: 23
<java.io.FileOutputStream: void close()>: 22
<java.io.File: boolean mkdirs()>: 22
<java.io.File: java.io.File getParentFile()>: 21
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 18
<android.graphics.Bitmap: int getHeight()>: 17
<android.graphics.Bitmap: int getWidth()>: 17
<java.util.zip.ZipInputStream: void close()>: 15
<java.io.FileOutputStream: void write(byte[],int,int)>: 15
<java.io.File: boolean isDirectory()>: 15
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 15
<java.io.FileInputStream: int available()>: 15
<java.io.FileInputStream: void close()>: 15
<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>: 15
<java.io.FileNotFoundException: void <init>(java.lang.String)>: 15
<java.io.FileInputStream: int read(byte[])>: 15
<java.io.FilterInputStream: int read(byte[])>: 15
<java.io.File: java.lang.String getPath()>: 13
<android.graphics.Bitmap: void setHasAlpha(boolean)>: 11
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 11
<android.graphics.BitmapFactory$Options: void <init>()>: 10
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 10
<java.io.OutputStream: void write(byte[],int,int)>: 10
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 10
<java.io.InputStream: int read(byte[])>: 9
<java.io.InputStream: void close()>: 9
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 7
<java.io.OutputStream: void close()>: 6
<java.io.Closeable: void close()>: 6
<java.io.File: boolean setExecutable(boolean,boolean)>: 6
<java.util.zip.ZipFile: void close()>: 6
<java.io.File: boolean isFile()>: 6
<java.io.File: boolean setReadable(boolean,boolean)>: 6
<java.io.File: boolean setWritable(boolean)>: 6
<android.content.res.AssetFileDescriptor: void close()>: 6
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>: 6
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>: 5
<android.graphics.Bitmap: void eraseColor(int)>: 5
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 4
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 2
<android.graphics.Bitmap: void recycle()>: 2
<java.net.URL: void <init>(java.lang.String)>: 2
<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>: 2
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>: 2
<java.nio.charset.CoderResult: java.lang.String toString()>: 1
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int,android.database.DatabaseErrorHandler)>: 1
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 1
<android.database.sqlite.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)>: 1
<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>: 1
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 1
<java.io.OutputStream: void flush()>: 1
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 1
<java.nio.CharBuffer: java.nio.CharBuffer wrap(char[],int,int)>: 1
<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>: 1
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 1
<java.nio.charset.CoderResult: boolean isError()>: 1
<java.io.ByteArrayOutputStream: void <init>()>: 1
<android.database.SQLException: void <init>(java.lang.String)>: 1
<java.io.IOException: void <init>(java.lang.String)>: 1
<java.io.ByteArrayOutputStream: void close()>: 1
<java.nio.charset.CoderResult: boolean isOverflow()>: 1
<java.io.PrintStream: void println(java.lang.String)>: 1
<android.database.Cursor: void close()>: 1
<android.database.sqlite.SQLiteClosable: void close()>: 1
----------------StartWorker----------------
<java.lang.Throwable: java.lang.String getMessage()>: 11
<java.io.File: void <init>(java.lang.String)>: 8
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 7
<java.io.File: boolean mkdirs()>: 7
<java.io.IOException: void <init>(java.lang.String)>: 6
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 1
<java.io.File: java.lang.String getName()>: 1
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 1
<android.database.sqlite.SQLiteDatabase: boolean deleteDatabase(java.io.File)>: 1
