Duration => 3935
UI Thread => 597
Worker Thread => 45877

----------------StartUI----------------
<android.database.sqlite.SQLiteClosable: void close()>: 70
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 54
<android.database.Cursor: void close()>: 54
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 54
<android.graphics.Bitmap: int getHeight()>: 23
<android.graphics.Bitmap: int getWidth()>: 20
<java.io.File: void <init>(java.lang.String)>: 20
<java.io.InputStream: void close()>: 19
<android.graphics.BitmapFactory$Options: void <init>()>: 18
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 18
<java.io.BufferedReader: void <init>(java.io.Reader)>: 17
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 16
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 16
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 13
<java.io.FileOutputStream: void <init>(java.lang.String)>: 13
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 12
<android.graphics.Bitmap: void recycle()>: 11
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>: 10
<java.io.Reader: int read(char[])>: 9
<java.io.StringWriter: void <init>()>: 9
<java.io.Writer: void write(char[],int,int)>: 9
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 9
<java.lang.Object: java.lang.String toString()>: 9
<java.io.BufferedReader: java.lang.String readLine()>: 8
<java.io.FileInputStream: void <init>(java.io.File)>: 8
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 8
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 8
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>: 7
<java.io.File: java.lang.String getAbsolutePath()>: 7
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 5
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 5
<java.io.File: void <init>(java.io.File,java.lang.String)>: 5
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>: 4
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 4
<java.io.File: java.lang.String[] list()>: 3
<java.io.File: boolean isDirectory()>: 3
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 3
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 3
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 2
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>: 2
<java.io.File: boolean delete()>: 2
<java.io.File: java.lang.String getParent()>: 1
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 1
<java.io.File: boolean canWrite()>: 1
<java.io.PrintStream: void println(java.lang.String)>: 1
<java.io.File: boolean isFile()>: 1
<java.io.File: boolean mkdirs()>: 1
<java.io.File: boolean exists()>: 1
----------------StartWorker----------------
<java.io.InputStream: void close()>: 1747
<java.io.File: boolean exists()>: 1622
<java.io.IOException: void <init>(java.lang.String)>: 1440
<java.io.File: java.lang.String getName()>: 1414
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 1018
<org.apache.http.HttpConnection: void close()>: 927
<java.io.File: void <init>(java.lang.String)>: 923
<java.net.URI: java.net.URI create(java.lang.String)>: 820
<android.database.sqlite.SQLiteClosable: void close()>: 710
<java.io.BufferedReader: void <init>(java.io.Reader)>: 623
<java.io.OutputStream: void write(byte[],int,int)>: 618
<java.net.URI: boolean isAbsolute()>: 618
<java.net.URI: void <init>(java.lang.String)>: 616
<java.io.Writer: void write(int)>: 612
<java.io.BufferedReader: java.lang.String readLine()>: 611
<java.io.OutputStream: void write(byte[])>: 610
<java.io.File: java.lang.String getAbsolutePath()>: 523
<java.io.InterruptedIOException: void <init>()>: 515
<java.io.OutputStream: void flush()>: 511
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 508
<java.io.File: void <init>(java.io.File,java.lang.String)>: 416
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 416
<java.io.InputStream: void <init>()>: 412
<java.io.ByteArrayInputStream: void <init>(byte[])>: 412
<org.apache.http.MalformedChunkCodingException: void <init>(java.lang.String)>: 412
<java.net.Socket: void close()>: 412
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 409
<java.io.BufferedReader: void close()>: 405
<java.io.File: long length()>: 404
<java.io.PrintStream: void println(java.lang.String)>: 403
<java.io.File: boolean delete()>: 315
<java.io.File: boolean mkdirs()>: 315
<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>: 309
<java.net.Socket: void setSoTimeout(int)>: 309
<java.io.InterruptedIOException: void <init>(java.lang.String)>: 309
<java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>: 309
<java.net.URI: java.lang.String getScheme()>: 309
<java.net.URI: java.lang.String toASCIIString()>: 309
<java.io.InputStream: int read(byte[],int,int)>: 309
<java.net.URI: boolean isOpaque()>: 309
<java.io.OutputStream: void <init>()>: 309
<java.net.URI: java.lang.String getPath()>: 309
<java.io.InputStream: int read(byte[])>: 307
<java.io.Writer: void write(java.lang.String)>: 306
<java.io.ByteArrayOutputStream: void <init>()>: 305
<java.nio.charset.UnsupportedCharsetException: void <init>(java.lang.String)>: 305
<java.io.FileInputStream: void <init>(java.io.File)>: 303
<java.io.File: boolean isDirectory()>: 303
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 303
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 303
<java.io.FileInputStream: void close()>: 303
<java.io.File: boolean renameTo(java.io.File)>: 303
<android.database.Cursor: void close()>: 303
<java.io.FileInputStream: int read(byte[])>: 303
<java.io.Reader: int read(char[])>: 214
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>: 206
<java.net.URI: java.lang.String getRawFragment()>: 206
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 206
<java.nio.charset.Charset: boolean equals(java.lang.Object)>: 206
<java.net.URI: java.lang.String getHost()>: 206
<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>: 206
<java.net.URI: java.lang.String getRawQuery()>: 206
<java.nio.charset.CoderResult: boolean isError()>: 206
<java.net.URI: java.lang.String getUserInfo()>: 206
<java.net.URI: int getPort()>: 206
<java.nio.charset.CoderResult: void throwException()>: 206
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 206
<java.net.URI: java.lang.String toString()>: 206
<java.net.URI: java.lang.String getAuthority()>: 206
<java.net.URI: java.lang.String getFragment()>: 206
<java.net.URL: java.net.URLConnection openConnection()>: 205
<java.net.URL: void <init>(java.lang.String)>: 205
<java.net.URLConnection: java.io.InputStream getInputStream()>: 205
<java.net.URLConnection: void setDoInput(boolean)>: 205
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 204
<org.apache.http.client.ClientProtocolException: void <init>(java.lang.String)>: 204
<java.net.URI: java.net.URI normalize()>: 204
<java.io.OutputStream: void close()>: 204
<java.net.URLConnection: void setDoOutput(boolean)>: 203
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 203
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 203
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 203
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 203
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 203
<java.io.File: java.io.File getAbsoluteFile()>: 202
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 202
<java.net.URLConnection: java.net.URL getURL()>: 202
<java.io.FileOutputStream: void close()>: 202
<android.util.JsonReader: void close()>: 202
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 202
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>: 202
<java.io.FileOutputStream: void write(byte[])>: 202
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 202
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>: 200
<java.io.Writer: void write(char[],int,int)>: 113
<java.lang.Object: java.lang.String toString()>: 113
<java.io.StringWriter: void <init>()>: 113
<java.io.File: long lastModified()>: 107
<java.io.File: boolean createNewFile()>: 107
<java.io.File: void deleteOnExit()>: 107
<java.io.File: java.io.File[] listFiles()>: 107
<java.io.BufferedInputStream: void close()>: 105
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 104
<java.io.IOException: void <init>()>: 103
<java.net.InetAddress: java.lang.String getHostName()>: 103
<java.net.Socket: void shutdownOutput()>: 103
<java.nio.CharBuffer: java.lang.String toString()>: 103
<java.net.Socket: int getSendBufferSize()>: 103
<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>: 103
<java.net.URI: java.lang.String getRawAuthority()>: 103
<java.io.InputStream: int read()>: 103
<java.net.URI: java.net.URI resolve(java.net.URI)>: 103
<java.net.Socket: void setSoLinger(boolean,int)>: 103
<org.apache.http.impl.io.ContentLengthInputStream: int read(byte[])>: 103
<java.net.URISyntaxException: java.lang.String getMessage()>: 103
<java.net.Socket: int getSoTimeout()>: 103
<org.apache.http.impl.io.IdentityOutputStream: void write(byte[],int,int)>: 103
<java.net.Socket: java.io.InputStream getInputStream()>: 103
<org.apache.http.impl.io.ChunkedInputStream: int read(byte[])>: 103
<org.apache.http.impl.io.ContentLengthOutputStream: void write(byte[],int,int)>: 103
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 103
<org.apache.http.impl.SocketHttpClientConnection: void close()>: 103
<org.apache.http.conn.EofSensorInputStream: int read(byte[],int,int)>: 103
<java.net.Socket: void shutdownInput()>: 103
<org.apache.http.MessageConstraintException: void <init>(java.lang.String)>: 103
<org.apache.http.impl.io.ContentLengthInputStream: int read(byte[],int,int)>: 103
<org.apache.http.impl.io.ChunkedOutputStream: void write(byte[],int,int)>: 103
<org.apache.http.impl.io.ChunkedInputStream: int read(byte[],int,int)>: 103
<java.net.Socket: void setTcpNoDelay(boolean)>: 103
<java.net.URI: java.lang.String getRawSchemeSpecificPart()>: 103
<org.apache.http.ConnectionClosedException: void <init>(java.lang.String)>: 103
<java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>: 103
<java.net.URI: java.lang.String getRawUserInfo()>: 103
<org.apache.http.TruncatedChunkException: void <init>(java.lang.String)>: 103
<java.nio.CharBuffer: java.nio.CharBuffer wrap(char[],int,int)>: 103
<org.apache.http.conn.UnsupportedSchemeException: void <init>(java.lang.String)>: 103
<org.apache.http.NoHttpResponseException: void <init>(java.lang.String)>: 103
<java.net.Socket: java.io.OutputStream getOutputStream()>: 103
<org.apache.http.client.ClientProtocolException: void <init>(java.lang.Throwable)>: 103
<java.net.InetAddress: boolean equals(java.lang.Object)>: 103
<java.net.URI: java.lang.String getRawPath()>: 103
<java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>: 103
<java.net.URI: java.lang.String getQuery()>: 103
<java.net.Socket: int getReceiveBufferSize()>: 103
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 102
<java.io.DataOutputStream: void <init>(java.io.OutputStream)>: 102
<java.io.StringWriter: void <init>(int)>: 102
<java.io.StringWriter: java.lang.String toString()>: 102
<java.io.DataOutputStream: void writeBytes(java.lang.String)>: 102
<java.io.DataOutputStream: void flush()>: 102
<java.io.FilterOutputStream: void close()>: 102
<java.net.URLConnection: void setUseCaches(boolean)>: 102
<java.io.BufferedReader: void <init>(java.io.Reader,int)>: 101
<java.net.URL: java.lang.String getHost()>: 101
<java.io.File: java.lang.String[] list()>: 101
<java.util.zip.DeflaterOutputStream: void write(byte[],int,int)>: 101
<java.io.InputStreamReader: void close()>: 101
<java.io.PrintStream: void print(java.lang.String)>: 101
<java.io.FileOutputStream: void <init>(java.lang.String)>: 101
<java.io.FileInputStream: int available()>: 101
<java.net.URLConnection: java.util.Map getHeaderFields()>: 101
<java.net.HttpCookie: java.util.List parse(java.lang.String)>: 101
<java.io.FileInputStream: long skip(long)>: 101
<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>: 101
<java.net.CookieManager: void <init>(java.net.CookieStore,java.net.CookiePolicy)>: 101
<java.net.CookieManager: java.net.CookieStore getCookieStore()>: 101
<java.net.HttpURLConnection: int getResponseCode()>: 101
<java.net.HttpCookie: java.lang.String toString()>: 101
<android.net.http.X509TrustManagerExtensions: void <init>(javax.net.ssl.X509TrustManager)>: 101
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>: 101
<android.net.NetworkInfo: int getType()>: 101
<java.net.URLConnection: void setReadTimeout(int)>: 101
<java.net.URL: java.lang.String getProtocol()>: 101
<javax.net.ssl.SSLPeerUnverifiedException: void <init>(java.lang.String)>: 101
<java.net.URLConnection: void setConnectTimeout(int)>: 101
<java.util.zip.DeflaterOutputStream: void close()>: 101
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 101
<android.net.http.X509TrustManagerExtensions: java.util.List checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,java.lang.String)>: 101
<android.net.NetworkInfo: boolean isConnected()>: 101
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 101
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 101
<java.io.File: java.lang.String toString()>: 101
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 100
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 100
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 2
