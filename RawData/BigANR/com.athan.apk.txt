Duration => 228
UI Thread => 561
Worker Thread => 742

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 98
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 47
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 46
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 46
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 37
<java.io.Writer: void write(int)>: 30
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 25
<java.io.Writer: void write(java.lang.String)>: 15
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 13
<java.lang.Object: boolean equals(java.lang.Object)>: 13
<java.io.PrintStream: void print(java.lang.String)>: 10
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 10
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 9
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 9
<java.io.File: void <init>(java.lang.String)>: 9
<java.io.File: boolean exists()>: 7
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 7
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 6
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 6
<android.database.sqlite.SQLiteOpenHelper: void setWriteAheadLoggingEnabled(boolean)>: 6
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 6
<java.io.File: java.lang.String getName()>: 5
<java.io.StringWriter: java.lang.String toString()>: 5
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 5
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 5
<android.net.NetworkInfo: boolean isConnected()>: 5
<java.io.StringWriter: void <init>(int)>: 5
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 5
<java.io.EOFException: void <init>()>: 5
<android.database.Cursor: void close()>: 5
<android.graphics.Bitmap: int getHeight()>: 4
<android.graphics.Bitmap: int getWidth()>: 4
<java.io.File: boolean mkdirs()>: 4
<java.io.OutputStream: void close()>: 3
<java.io.File: void <init>(java.io.File,java.lang.String)>: 3
<java.util.Calendar: boolean equals(java.lang.Object)>: 3
<java.io.FileOutputStream: void <init>(java.io.File)>: 3
<java.io.File: java.lang.String getAbsolutePath()>: 3
<java.io.FileOutputStream: void close()>: 3
<java.io.PrintStream: void println(java.lang.String)>: 3
<java.lang.Boolean: boolean equals(java.lang.Object)>: 3
<android.database.sqlite.SQLiteClosable: void close()>: 3
<android.graphics.Bitmap: void recycle()>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>: 2
<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>: 2
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>: 2
<java.io.File: boolean delete()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>: 2
<java.io.File: boolean canWrite()>: 2
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 2
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>: 1
<java.io.File: java.lang.String getPath()>: 1
<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>: 1
<java.lang.String: int hashCode()>: 1
<android.content.res.AssetFileDescriptor: void close()>: 1
<java.io.File: java.io.File getParentFile()>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 174
<java.io.PrintStream: void print(java.lang.String)>: 87
<java.io.PrintStream: void println(java.lang.String)>: 49
<java.io.Writer: void write(int)>: 36
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 34
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 26
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 26
<java.lang.Object: boolean equals(java.lang.Object)>: 24
<java.io.File: void <init>(java.lang.String)>: 22
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 20
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 20
<java.io.Writer: void write(java.lang.String)>: 18
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>: 17
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>: 17
<java.io.File: boolean exists()>: 16
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 12
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 12
<android.database.sqlite.SQLiteOpenHelper: void setWriteAheadLoggingEnabled(boolean)>: 12
<android.net.NetworkInfo: boolean isConnected()>: 12
<java.io.EOFException: void <init>()>: 12
<java.io.File: java.lang.String getName()>: 8
<java.io.StringWriter: java.lang.String toString()>: 6
<java.io.File: java.lang.String getAbsolutePath()>: 6
<java.io.StringWriter: void <init>(int)>: 6
<android.database.Cursor: void close()>: 6
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 5
<java.io.OutputStream: void flush()>: 4
<java.io.File: boolean mkdirs()>: 4
<android.graphics.BitmapFactory$Options: void <init>()>: 3
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 3
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 3
<java.io.FileOutputStream: void <init>(java.lang.String)>: 3
<java.io.File: java.lang.String getPath()>: 3
<android.graphics.Bitmap: int getHeight()>: 3
<android.graphics.Bitmap: int getWidth()>: 3
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 3
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 3
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 3
<java.io.File: java.io.File getParentFile()>: 3
<java.io.FileOutputStream: void close()>: 3
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 2
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 2
<java.io.OutputStream: void close()>: 1
<android.graphics.Bitmap: void recycle()>: 1
<java.io.InputStream: int read(byte[])>: 1
<java.io.InputStream: void close()>: 1
<java.io.OutputStream: void write(byte[],int,int)>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<android.graphics.Bitmap: boolean isRecycled()>: 1
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 1
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 1
<java.lang.Boolean: boolean equals(java.lang.Object)>: 1
