Duration => 3201
UI Thread => 334
Worker Thread => 794

----------------StartUI----------------
<android.net.ConnectivityManager$NetworkCallback: void <init>()>: 35
<java.lang.String: boolean equals(java.lang.Object)>: 33
<java.lang.Object: int hashCode()>: 26
<java.io.File: void <init>(java.io.File,java.lang.String)>: 17
<java.io.FileInputStream: void <init>(java.io.File)>: 11
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 11
<java.nio.charset.CoderResult: void throwException()>: 10
<java.io.StringWriter: java.lang.String toString()>: 10
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 10
<java.io.File: boolean exists()>: 10
<java.io.StringWriter: void <init>()>: 10
<java.lang.Enum: boolean equals(java.lang.Object)>: 8
<java.io.FileInputStream: void close()>: 8
<java.lang.Object: boolean equals(java.lang.Object)>: 6
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 6
<java.io.Writer: void write(java.lang.String)>: 6
<java.io.Writer: void <init>()>: 5
<java.nio.charset.CoderResult: boolean isUnderflow()>: 5
<java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>: 5
<java.nio.charset.CoderResult: boolean isError()>: 5
<java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>: 5
<java.io.PrintStream: void println(java.lang.String)>: 5
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 4
<java.io.File: java.lang.String getAbsolutePath()>: 4
<java.io.File: boolean isDirectory()>: 3
<java.io.InputStream: int read(byte[])>: 3
<java.io.InputStream: void close()>: 3
<java.io.RandomAccessFile: int read(byte[])>: 3
<java.lang.Object: java.lang.String toString()>: 3
<com.overlook.android.fing.engine.net.HardwareAddress: boolean equals(java.lang.Object)>: 3
<java.io.FileOutputStream: void <init>(java.io.File)>: 3
<java.io.FileOutputStream: void close()>: 3
<java.io.File: boolean mkdirs()>: 3
<java.io.OutputStream: void close()>: 2
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>: 2
<java.io.OutputStream: void write(byte[],int,int)>: 2
<java.io.ObjectInputStream: java.lang.Object readObject()>: 2
<java.lang.String: int hashCode()>: 2
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 2
<java.io.IOException: void <init>(java.lang.String)>: 2
<java.io.RandomAccessFile: int read(byte[],int,int)>: 2
<java.io.File: boolean delete()>: 2
<java.io.RandomAccessFile: void seek(long)>: 2
<java.io.BufferedReader: void <init>(java.io.Reader)>: 2
<java.io.FileReader: void <init>(java.io.File)>: 1
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 1
<android.net.Uri$Builder: android.net.Uri build()>: 1
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 1
<java.io.File: java.lang.String[] list()>: 1
<android.net.ConnectivityManager: void unregisterNetworkCallback(android.net.ConnectivityManager$NetworkCallback)>: 1
<android.net.NetworkInfo: int getType()>: 1
<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>: 1
<java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>: 1
<java.io.BufferedWriter: void close()>: 1
<android.net.NetworkRequest$Builder: void <init>()>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 1
<java.io.ByteArrayInputStream: int available()>: 1
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 1
<com.overlook.android.fing.engine.f.a.c: void <init>(byte[],int,int)>: 1
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 1
<android.net.NetworkRequest$Builder: android.net.NetworkRequest build()>: 1
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 1
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 1
<java.io.BufferedReader: java.lang.String readLine()>: 1
<java.io.ByteArrayInputStream: int read()>: 1
<java.io.BufferedReader: void close()>: 1
<com.bestbuy.home.util.time.CalendarDay: boolean equals(java.lang.Object)>: 1
<java.io.File: java.io.File[] listFiles()>: 1
<android.net.ConnectivityManager: void registerNetworkCallback(android.net.NetworkRequest,android.net.ConnectivityManager$NetworkCallback)>: 1
<java.io.BufferedWriter: void flush()>: 1
<java.io.RandomAccessFile: void close()>: 1
<java.io.FileWriter: void <init>(java.io.File)>: 1
<android.net.NetworkRequest$Builder: android.net.NetworkRequest$Builder addCapability(int)>: 1
<java.io.File: void <init>(java.lang.String)>: 1
----------------StartWorker----------------
<java.lang.Object: int hashCode()>: 106
<java.lang.String: boolean equals(java.lang.Object)>: 78
<java.io.Writer: void write(java.lang.String)>: 44
<java.lang.Enum: boolean equals(java.lang.Object)>: 19
<java.net.URI: void <init>(java.lang.String)>: 17
<java.net.URISyntaxException: java.lang.String getMessage()>: 16
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 14
<java.io.File: void <init>(java.io.File,java.lang.String)>: 14
<java.io.FileOutputStream: void <init>(java.io.File)>: 14
<java.io.FileOutputStream: void close()>: 12
<java.net.URLConnection: java.net.URL getURL()>: 10
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 10
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>: 10
<java.io.IOException: void <init>(java.lang.String)>: 9
<android.net.NetworkInfo: int getType()>: 9
<java.io.InputStream: void close()>: 9
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>: 8
<java.net.URLConnection: java.lang.String getContentType()>: 8
<java.net.HttpURLConnection: int getResponseCode()>: 8
<java.net.URL: void <init>(java.lang.String)>: 8
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 8
<java.io.File: boolean delete()>: 8
<android.database.Cursor: void close()>: 8
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 7
<java.io.Writer: void write(int)>: 7
<java.lang.Appendable: java.lang.Appendable append(char)>: 7
<java.io.Writer: java.io.Writer append(char)>: 7
<java.io.Writer: void write(java.lang.String,int,int)>: 7
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 6
<java.net.URLConnection: void setDoOutput(boolean)>: 6
<java.net.URLConnection: java.util.Map getHeaderFields()>: 6
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 6
<java.net.HttpURLConnection: java.lang.String getRequestMethod()>: 6
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 6
<java.io.OutputStream: void close()>: 6
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>: 6
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 6
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 6
<java.net.URLConnection: java.io.InputStream getInputStream()>: 6
<java.net.URLConnection: void setConnectTimeout(int)>: 6
<java.net.URLConnection: void setAllowUserInteraction(boolean)>: 6
<java.io.ByteArrayOutputStream: void <init>()>: 6
<java.net.URLConnection: void setDoInput(boolean)>: 6
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 6
<java.net.URLConnection: int getContentLength()>: 6
<java.net.URLConnection: void setUseCaches(boolean)>: 6
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 5
<java.io.BufferedReader: void <init>(java.io.Reader)>: 5
<com.newrelic.agent.android.instrumentation.io.CountingInputStream: int available()>: 4
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 4
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 4
<java.net.URL: java.lang.String getHost()>: 4
<java.io.FileInputStream: void <init>(java.io.File)>: 4
<java.io.File: java.lang.String getName()>: 4
<com.newrelic.agent.android.instrumentation.HttpURLConnectionExtension: java.io.InputStream getErrorStream()>: 4
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 4
<java.io.FileInputStream: void close()>: 4
<java.io.BufferedReader: java.lang.String readLine()>: 4
<java.io.FileOutputStream: void write(byte[],int,int)>: 4
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 4
<java.net.URL: java.lang.String toString()>: 4
<java.io.InputStream: int read(byte[],int,int)>: 4
<com.newrelic.agent.android.instrumentation.HttpsURLConnectionExtension: java.io.InputStream getErrorStream()>: 4
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 3
<java.io.OutputStream: void flush()>: 3
<java.io.StringWriter: void <init>()>: 3
<java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>: 3
<java.io.StringWriter: java.lang.String toString()>: 3
<android.net.NetworkInfo: int getSubtype()>: 3
<android.net.NetworkInfo: boolean isConnected()>: 3
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 3
<android.net.NetworkInfo: java.lang.String getTypeName()>: 3
<java.io.File: boolean mkdirs()>: 3
<java.net.URL: java.lang.String getPath()>: 2
<java.io.DataOutputStream: void writeInt(int)>: 2
<java.io.File: boolean isDirectory()>: 2
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>: 2
<java.net.HttpURLConnection: void <init>(java.net.URL)>: 2
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 2
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 2
<java.net.URL: java.net.URLConnection openConnection()>: 2
<java.io.InputStream: void <init>()>: 2
<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>: 2
<java.io.File: boolean exists()>: 2
<android.net.wifi.WifiManager$WifiLock: void acquire()>: 2
<java.io.File: java.lang.String getParent()>: 2
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 2
<java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>: 2
<java.io.DataOutputStream: void <init>(java.io.OutputStream)>: 2
<java.net.URL: int getPort()>: 2
<java.io.InputStream: int available()>: 2
<java.net.URLConnection: java.lang.String getContentEncoding()>: 2
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>: 2
<javax.net.ssl.HttpsURLConnection: void <init>(java.net.URL)>: 2
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 2
<java.io.FileInputStream: int read(byte[],int,int)>: 2
<java.net.URLConnection: void setReadTimeout(int)>: 2
<java.net.URI: java.lang.String toString()>: 2
<java.net.URL: java.lang.String getProtocol()>: 2
<java.io.Writer: void close()>: 2
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>: 2
<android.database.sqlite.SQLiteOpenHelper: void close()>: 2
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 2
<java.io.DataOutputStream: void writeLong(long)>: 2
<java.io.BufferedReader: void close()>: 2
<java.io.FilterOutputStream: void write(byte[])>: 2
<com.newrelic.agent.android.harvest.ConnectInformation: boolean equals(java.lang.Object)>: 2
<java.io.OutputStream: void <init>()>: 2
<java.util.zip.DeflaterOutputStream: void close()>: 2
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>: 2
<com.bestbuy.home.util.time.CalendarDay: boolean equals(java.lang.Object)>: 2
<java.io.FilterOutputStream: void close()>: 2
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 2
<android.net.wifi.WifiManager$WifiLock: void release()>: 2
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>: 2
<java.io.FileInputStream: int read(byte[])>: 2
<android.net.wifi.WifiManager: android.net.wifi.WifiManager$WifiLock createWifiLock(int,java.lang.String)>: 2
<android.database.sqlite.SQLiteClosable: void close()>: 2
<java.io.File: java.lang.String[] list()>: 1
<java.io.Reader: int read(char[])>: 1
<java.lang.Object: boolean equals(java.lang.Object)>: 1
<com.newrelic.com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>: 1
<com.newrelic.com.google.gson.internal.bind.JsonTreeWriter$1: void <init>()>: 1
<java.io.EOFException: void <init>(java.lang.String)>: 1
<java.io.Writer: void <init>()>: 1
<com.newrelic.agent.android.harvest.DeviceInformation: boolean equals(java.lang.Object)>: 1
<com.newrelic.agent.android.harvest.ApplicationInformation: boolean equals(java.lang.Object)>: 1
<java.io.File: java.io.File[] listFiles()>: 1
<java.io.ByteArrayOutputStream: void close()>: 1
<java.io.RandomAccessFile: void close()>: 1
<java.io.StringReader: void <init>(java.lang.String)>: 1
<java.io.Reader: int read(char[],int,int)>: 1
