Duration => 266
UI Thread => 599
Worker Thread => 454

----------------StartUI----------------
<java.io.File: boolean exists()>: 42
<java.io.File: void <init>(java.io.File,java.lang.String)>: 42
<java.io.File: void <init>(java.lang.String)>: 37
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 36
<java.lang.Object: boolean equals(java.lang.Object)>: 36
<java.lang.String: boolean equals(java.lang.Object)>: 33
<java.io.File: boolean delete()>: 29
<java.io.PrintStream: void println(java.lang.String)>: 29
<io.realm.internal.SharedRealm: void close()>: 20
<io.realm.BaseRealm: void close()>: 20
<java.io.FileOutputStream: void <init>(java.io.File)>: 13
<java.io.File: java.lang.String getName()>: 12
<java.io.File: java.io.File[] listFiles()>: 12
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>: 11
<java.io.InputStream: int read(byte[])>: 11
<java.io.InputStream: void close()>: 11
<java.io.FileOutputStream: void write(byte[],int,int)>: 10
<io.realm.internal.RealmProxyMediator: boolean equals(java.lang.Object)>: 10
<io.realm.Realm: void close()>: 10
<java.io.File: boolean equals(java.lang.Object)>: 10
<io.realm.RealmConfiguration: boolean equals(java.lang.Object)>: 10
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 10
<java.lang.Enum: boolean equals(java.lang.Object)>: 10
<io.realm.internal.RealmNotifier: void close()>: 10
<java.io.FileNotFoundException: void <init>(java.lang.String)>: 10
<java.io.FileOutputStream: void close()>: 10
<io.realm.DynamicRealm: void close()>: 10
<java.io.File: boolean isDirectory()>: 7
<java.io.IOException: void <init>(java.lang.String)>: 6
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 5
<android.net.NetworkInfo: boolean isConnected()>: 5
<java.io.File: java.lang.String getAbsolutePath()>: 4
<java.io.File: boolean mkdirs()>: 4
<java.io.File: java.lang.String[] list()>: 3
<android.database.Cursor: void close()>: 3
<java.io.IOException: void <init>()>: 2
<java.io.File: boolean renameTo(java.io.File)>: 2
<java.io.FileInputStream: void <init>(java.io.File)>: 2
<java.io.File: long length()>: 2
<java.net.URLDecoder: java.lang.String decode(java.lang.String)>: 2
<java.io.OutputStream: void write(byte[],int,int)>: 2
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 2
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>: 2
<java.io.File: boolean mkdir()>: 2
<java.io.OutputStream: void flush()>: 2
<java.io.Writer: void write(java.lang.String)>: 2
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 2
<java.io.Writer: void close()>: 2
<java.io.InputStream: int read(byte[],int,int)>: 2
<java.io.File: boolean createNewFile()>: 2
<java.io.EOFException: void <init>()>: 2
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<java.io.OutputStream: void close()>: 1
<java.io.FileOutputStream: java.io.FileDescriptor getFD()>: 1
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>: 1
<java.io.Closeable: void close()>: 1
<java.io.File: boolean setExecutable(boolean,boolean)>: 1
<java.util.zip.ZipFile: void close()>: 1
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 1
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: void close()>: 1
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 1
<java.net.URL: java.lang.String getFile()>: 1
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>: 1
<java.nio.charset.Charset: boolean equals(java.lang.Object)>: 1
<java.io.File: java.lang.String getPath()>: 1
<java.io.File: java.lang.String getCanonicalPath()>: 1
<java.io.ByteArrayOutputStream: void <init>(int)>: 1
<java.io.File: boolean setWritable(boolean)>: 1
<java.io.File: boolean setReadable(boolean,boolean)>: 1
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>: 1
<java.io.FileDescriptor: void sync()>: 1
<android.graphics.Bitmap: boolean isRecycled()>: 1
<java.io.ObjectOutputStream: void close()>: 1
<java.io.Writer: void flush()>: 1
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 1
<java.io.File: java.io.File getParentFile()>: 1
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>: 1
----------------StartWorker----------------
<java.io.File: boolean exists()>: 34
<java.lang.Object: boolean equals(java.lang.Object)>: 19
<java.io.File: void <init>(java.lang.String)>: 19
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 18
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 18
<java.lang.String: boolean equals(java.lang.Object)>: 17
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 13
<java.io.File: java.lang.String getAbsolutePath()>: 13
<java.lang.String: int hashCode()>: 12
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 11
<java.io.Writer: void write(java.lang.String)>: 11
<java.io.File: void <init>(java.io.File,java.lang.String)>: 11
<java.io.File: boolean delete()>: 11
<java.io.File: boolean mkdirs()>: 11
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 10
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>: 10
<android.database.Cursor: void close()>: 10
<java.io.FileReader: void <init>(java.io.File)>: 9
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 9
<java.io.BufferedReader: java.lang.String readLine()>: 9
<java.io.File: boolean createNewFile()>: 9
<java.io.IOException: void <init>(java.lang.String)>: 9
<java.io.BufferedWriter: void flush()>: 9
<java.io.BufferedReader: void <init>(java.io.Reader)>: 9
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 8
<android.net.NetworkInfo: boolean isConnected()>: 8
<java.io.File: java.lang.String[] list()>: 7
<java.io.File: boolean isDirectory()>: 7
<java.net.URLDecoder: java.lang.String decode(java.lang.String)>: 7
<android.graphics.BitmapFactory$Options: void <init>()>: 5
<android.graphics.Bitmap: int getHeight()>: 5
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>: 4
<android.graphics.Bitmap: int getWidth()>: 4
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 4
<java.io.File: boolean renameTo(java.io.File)>: 3
<android.graphics.Bitmap: void recycle()>: 3
<java.io.Closeable: void close()>: 3
<java.io.InputStream: void close()>: 3
<java.io.File: long length()>: 3
<java.io.InputStream: int read(byte[],int,int)>: 3
<java.io.FileOutputStream: void <init>(java.io.File)>: 3
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 2
<android.net.Uri$Builder: android.net.Uri build()>: 2
<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>: 2
<java.io.InputStream: void reset()>: 2
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 2
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 2
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$2: void <init>()>: 2
<java.io.ByteArrayInputStream: void <init>(byte[])>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 2
<java.io.OutputStream: void <init>()>: 2
<java.net.HttpURLConnection: int getResponseCode()>: 2
<java.io.ByteArrayOutputStream: void <init>()>: 2
<java.io.InputStream: boolean markSupported()>: 2
<java.io.Writer: void flush()>: 2
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>: 2
<java.io.StringReader: void <init>(java.lang.String)>: 2
<java.io.IOException: void <init>()>: 1
<java.io.FileInputStream: void <init>(java.io.File)>: 1
<java.net.URL: void <init>(java.lang.String)>: 1
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 1
<java.io.OutputStream: void write(byte[],int,int)>: 1
<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>: 1
<java.net.URLConnection: void setReadTimeout(int)>: 1
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot: void close()>: 1
<java.net.URL: java.net.URLConnection openConnection()>: 1
<java.io.InputStream: void <init>()>: 1
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 1
<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>: 1
<java.io.OutputStream: void flush()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 1
<java.net.URLConnection: java.io.InputStream getInputStream()>: 1
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 1
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 1
<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>: 1
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 1
<com.nostra13.universalimageloader.core.assist.FlushedInputStream: void <init>(java.io.InputStream)>: 1
<java.net.URLConnection: void setConnectTimeout(int)>: 1
<java.io.FileInputStream: void <init>(java.lang.String)>: 1
<android.graphics.Bitmap: boolean isRecycled()>: 1
<android.graphics.Bitmap: int getRowBytes()>: 1
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 1
<java.lang.Object: int hashCode()>: 1
<java.io.FilterInputStream: void <init>(java.io.InputStream)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 1
<java.net.URLConnection: int getContentLength()>: 1
<java.io.InputStream: int available()>: 1
