Duration => 48
UI Thread => 2615
Worker Thread => 1807

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 382
<java.lang.Object: boolean equals(java.lang.Object)>: 231
<java.io.File: boolean exists()>: 166
<io.realm.internal.OsSharedRealm: void close()>: 156
<io.realm.Realm: void close()>: 144
<java.io.File: void <init>(java.io.File,java.lang.String)>: 129
<java.io.File: void <init>(java.lang.String)>: 111
<java.io.IOException: void <init>(java.lang.String)>: 96
<java.io.File: boolean delete()>: 86
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>: 40
<java.net.URI: void <init>(java.lang.String)>: 40
<java.io.File: java.lang.String getName()>: 40
<io.realm.internal.RealmProxyMediator: boolean equals(java.lang.Object)>: 40
<java.io.File: boolean equals(java.lang.Object)>: 40
<io.realm.RealmConfiguration: boolean equals(java.lang.Object)>: 40
<java.lang.Boolean: boolean equals(java.lang.Object)>: 40
<java.io.File: boolean mkdirs()>: 39
<io.realm.internal.RealmNotifier: void close()>: 36
<io.realm.BaseRealm: void close()>: 36
<java.io.IOException: void <init>()>: 32
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 32
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>: 32
<java.io.File: boolean mkdir()>: 32
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 32
<java.io.Writer: void close()>: 32
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 30
<java.io.File: boolean renameTo(java.io.File)>: 20
<java.io.FileInputStream: void <init>(java.io.File)>: 19
<java.io.File: boolean isDirectory()>: 19
<java.io.File: boolean createNewFile()>: 19
<java.io.FileOutputStream: void <init>(java.io.File)>: 19
<java.io.EOFException: void <init>()>: 19
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 16
<java.nio.charset.Charset: boolean equals(java.lang.Object)>: 16
<java.io.ByteArrayOutputStream: void <init>(int)>: 16
<java.io.PrintStream: void println(java.lang.String)>: 16
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: void close()>: 16
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 16
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 16
<java.io.Writer: void write(java.lang.String)>: 16
<java.io.InputStream: int read(byte[],int,int)>: 16
<java.io.File: java.io.File[] listFiles()>: 16
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 16
<java.io.File: java.lang.String getAbsolutePath()>: 15
<java.net.URL: java.lang.String getPath()>: 7
<java.net.URL: java.lang.String getHost()>: 7
<java.net.URL: java.lang.String getRef()>: 7
<java.net.URI: java.net.URI create(java.lang.String)>: 7
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 7
<java.net.URL: int getPort()>: 7
<java.net.URL: java.lang.String getQuery()>: 7
<java.net.URL: void <init>(java.lang.String)>: 7
<java.net.URL: java.lang.String getProtocol()>: 7
<java.net.URI: java.lang.String toASCIIString()>: 7
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>: 7
<java.net.URL: java.lang.String getUserInfo()>: 7
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 6
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 6
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 4
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 4
<android.database.sqlite.SQLiteDatabase: boolean isOpen()>: 4
<java.lang.String: int hashCode()>: 4
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>: 4
<java.io.File: java.lang.String toString()>: 4
<android.database.sqlite.SQLiteClosable: void close()>: 4
<java.io.FileOutputStream: java.io.FileDescriptor getFD()>: 3
<java.io.Closeable: void close()>: 3
<java.io.File: long length()>: 3
<java.io.File: boolean setExecutable(boolean,boolean)>: 3
<java.io.OutputStream: void write(byte[],int,int)>: 3
<java.io.OutputStream: void flush()>: 3
<java.io.File: boolean setWritable(boolean)>: 3
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>: 3
<java.io.InputStream: int read(byte[])>: 3
<java.util.zip.ZipFile: void close()>: 3
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>: 3
<java.io.File: java.lang.String getCanonicalPath()>: 3
<java.io.File: boolean setReadable(boolean,boolean)>: 3
<android.graphics.Bitmap: int getWidth()>: 3
<java.io.FileDescriptor: void sync()>: 3
<java.net.URL: void <init>(java.lang.String,java.lang.String,java.lang.String)>: 2
<java.lang.Throwable: java.lang.String getMessage()>: 2
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 2
<java.net.URL: java.lang.String toString()>: 2
<android.graphics.Bitmap: int getHeight()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 2
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 1
<android.graphics.BitmapFactory$Options: void <init>()>: 1
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 1
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>: 1
<java.lang.Enum: boolean equals(java.lang.Object)>: 1
<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 1
<java.io.ByteArrayOutputStream: void <init>()>: 1
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 1
<android.graphics.Bitmap: boolean isRecycled()>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 158
<io.realm.internal.OsSharedRealm: void close()>: 136
<java.io.File: boolean exists()>: 122
<java.io.File: void <init>(java.io.File,java.lang.String)>: 119
<java.io.File: void <init>(java.lang.String)>: 88
<java.lang.Object: boolean equals(java.lang.Object)>: 60
<io.realm.internal.RealmNotifier: void close()>: 46
<io.realm.BaseRealm: void close()>: 46
<java.io.File: boolean delete()>: 46
<java.io.IOException: void <init>(java.lang.String)>: 43
<java.io.File: java.lang.String getName()>: 34
<java.io.File: boolean renameTo(java.io.File)>: 32
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>: 31
<java.io.Writer: void write(java.lang.String)>: 31
<java.io.File: boolean mkdirs()>: 31
<java.net.URI: void <init>(java.lang.String)>: 30
<io.realm.internal.RealmProxyMediator: boolean equals(java.lang.Object)>: 30
<java.io.File: boolean equals(java.lang.Object)>: 30
<io.realm.RealmConfiguration: boolean equals(java.lang.Object)>: 30
<java.lang.Boolean: boolean equals(java.lang.Object)>: 30
<java.lang.Throwable: java.lang.String getMessage()>: 29
<java.io.File: long length()>: 26
<android.graphics.BitmapFactory$Options: void <init>()>: 25
<java.io.InputStream: void close()>: 25
<java.io.Closeable: void close()>: 24
<java.io.Writer: void flush()>: 24
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$2: void <init>()>: 23
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 23
<java.io.OutputStream: void <init>()>: 23
<java.io.FileOutputStream: void <init>(java.io.File)>: 20
<java.io.FileInputStream: void <init>(java.io.File)>: 19
<java.io.File: boolean isDirectory()>: 16
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 15
<java.io.IOException: void <init>()>: 14
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 14
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>: 14
<java.io.File: boolean mkdir()>: 14
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 14
<java.io.Writer: void close()>: 14
<android.graphics.Bitmap: int getHeight()>: 12
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 11
<java.io.InputStream: int read(byte[],int,int)>: 10
<java.io.FileOutputStream: void close()>: 9
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 9
<java.io.File: java.io.File[] listFiles()>: 9
<java.io.File: boolean createNewFile()>: 8
<java.lang.String: int hashCode()>: 8
<android.graphics.Bitmap: int getRowBytes()>: 8
<java.io.File: java.io.File getParentFile()>: 8
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot: void close()>: 8
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 7
<java.nio.charset.Charset: boolean equals(java.lang.Object)>: 7
<java.io.ByteArrayOutputStream: void <init>(int)>: 7
<java.io.PrintStream: void println(java.lang.String)>: 7
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: void close()>: 7
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 7
<java.io.File: java.lang.String toString()>: 7
<java.io.EOFException: void <init>()>: 7
<java.net.URL: java.net.URLConnection openConnection()>: 4
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>: 4
<java.net.HttpURLConnection: int getResponseCode()>: 4
<io.realm.Realm: void close()>: 4
<java.net.URLConnection: java.io.InputStream getInputStream()>: 4
<android.graphics.Bitmap: int getWidth()>: 4
<java.io.File: java.lang.String getAbsolutePath()>: 4
<android.graphics.Bitmap: void recycle()>: 3
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 3
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 2
<java.io.Reader: int read(char[])>: 2
<java.io.OutputStream: void write(byte[],int,int)>: 2
<java.io.InputStream: void reset()>: 2
<java.io.Writer: void write(char[],int,int)>: 2
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 2
<java.io.OutputStream: void flush()>: 2
<java.io.FileInputStream: void close()>: 2
<java.io.ByteArrayInputStream: void <init>(byte[])>: 2
<java.io.StringWriter: void <init>()>: 2
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>: 2
<java.io.FileOutputStream: void write(byte[],int,int)>: 2
<java.net.URL: void <init>(java.lang.String)>: 2
<java.io.StringWriter: java.lang.String toString()>: 2
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 2
<java.util.zip.ZipOutputStream: void write(byte[],int,int)>: 2
<java.io.ByteArrayOutputStream: void <init>()>: 2
<java.io.InputStream: boolean markSupported()>: 2
<java.io.BufferedReader: void <init>(java.io.Reader)>: 2
<java.io.FileInputStream: int read(byte[])>: 2
<java.io.FilterInputStream: int read(byte[])>: 2
<java.util.zip.ZipOutputStream: void <init>(java.io.OutputStream)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 1
<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>: 1
<java.io.InputStream: void <init>()>: 1
<java.io.File: java.lang.String getPath()>: 1
<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>: 1
<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 1
<java.lang.Object: int hashCode()>: 1
<java.io.FilterInputStream: void <init>(java.io.InputStream)>: 1
<java.util.zip.ZipOutputStream: void close()>: 1
<java.io.InputStream: int available()>: 1
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 1
<java.io.InputStream: int read(byte[])>: 1
<java.net.URLConnection: void setReadTimeout(int)>: 1
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>: 1
<com.nostra13.universalimageloader.core.assist.FlushedInputStream: void <init>(java.io.InputStream)>: 1
<java.net.URLConnection: void setConnectTimeout(int)>: 1
<java.io.FileInputStream: void <init>(java.lang.String)>: 1
<android.graphics.Bitmap: boolean isRecycled()>: 1
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 1
<java.net.URLConnection: int getContentLength()>: 1
