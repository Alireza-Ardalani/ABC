Duration => 3493
UI Thread => 6593
Worker Thread => 16105

----------------StartUI----------------
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 1241
<java.io.File: void <init>(java.lang.String)>: 424
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>: 344
<android.database.Cursor: void close()>: 290
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 281
<java.io.File: boolean delete()>: 280
<android.database.sqlite.SQLiteClosable: void close()>: 276
<java.io.File: java.lang.String getPath()>: 275
<java.io.FileOutputStream: void <init>(java.lang.String)>: 274
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 274
<java.io.File: void <init>(java.io.File,java.lang.String)>: 142
<java.io.InputStream: void close()>: 141
<java.io.OutputStream: void close()>: 139
<java.io.FileInputStream: void <init>(java.io.File)>: 139
<java.io.InputStream: int read(byte[])>: 139
<java.io.File: java.lang.String getName()>: 138
<java.io.OutputStream: void flush()>: 138
<java.io.FileOutputStream: void close()>: 138
<java.util.zip.ZipInputStream: void close()>: 137
<java.io.FileOutputStream: void write(byte[],int,int)>: 137
<java.io.OutputStream: void write(byte[],int,int)>: 137
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 137
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory)>: 137
<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>: 137
<java.io.File: java.lang.String getParent()>: 137
<java.io.FilterInputStream: int read(byte[])>: 137
<java.io.File: boolean mkdirs()>: 137
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>: 137
<java.io.PrintStream: void println(java.lang.String)>: 18
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 14
<java.io.File: boolean exists()>: 14
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 8
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,java.lang.String,java.lang.String[],java.lang.String)>: 8
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 8
<android.database.sqlite.SQLiteDatabase: void beginTransactionWithListener(android.database.sqlite.SQLiteTransactionListener)>: 8
<android.database.sqlite.SQLiteDatabase: boolean isOpen()>: 4
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 4
<java.io.File: boolean mkdir()>: 4
<android.net.NetworkInfo: boolean isConnected()>: 4
<android.graphics.BitmapFactory$Options: void <init>()>: 3
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>: 3
<android.graphics.Bitmap: void recycle()>: 3
<java.io.ByteArrayOutputStream: void <init>()>: 3
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 3
<java.io.File: boolean isDirectory()>: 2
<android.net.NetworkInfo: int getType()>: 2
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 2
<android.graphics.Bitmap: int getHeight()>: 2
<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>: 2
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 2
<java.io.FileOutputStream: void <init>(java.io.File)>: 2
<java.io.ByteArrayOutputStream: void write(int)>: 2
<android.graphics.Bitmap: int getWidth()>: 2
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 2
<java.io.File: java.io.File[] listFiles()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 2
<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>: 1
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 1
<java.nio.channels.spi.AbstractInterruptibleChannel: void close()>: 1
<java.io.File: java.lang.String[] list()>: 1
<java.io.File: long lastModified()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 1
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>: 1
<android.os.ParcelFileDescriptor: void close()>: 1
<java.io.ByteArrayOutputStream: void close()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>: 1
<java.io.File: java.lang.String toString()>: 1
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 1
<android.net.Uri: java.lang.String encode(java.lang.String)>: 1
<java.io.InputStream: int available()>: 1
----------------StartWorker----------------
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>: 5547
<android.database.Cursor: void close()>: 601
<android.database.sqlite.SQLiteOpenHelper: void close()>: 590
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 413
<java.io.IOException: void <init>(java.lang.Throwable)>: 355
<java.io.RandomAccessFile: void seek(long)>: 354
<java.io.File: boolean exists()>: 317
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 295
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 295
<java.io.IOException: void <init>(java.lang.String)>: 295
<android.database.sqlite.SQLiteClosable: void close()>: 295
<java.io.PrintStream: void println(java.lang.String)>: 258
<java.io.File: void <init>(java.io.File,java.lang.String)>: 182
<java.net.URL: void <init>(java.lang.String)>: 180
<java.net.URL: java.net.URLConnection openConnection()>: 179
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 178
<java.io.RandomAccessFile: void write(byte[],int,int)>: 177
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 177
<android.net.NetworkInfo: boolean isConnected()>: 177
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>: 174
<android.database.sqlite.SQLiteDatabase: boolean isOpen()>: 133
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 129
<android.database.sqlite.SQLiteDatabase: void beginTransactionWithListener(android.database.sqlite.SQLiteTransactionListener)>: 129
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 129
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 129
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,java.lang.String,java.lang.String[],java.lang.String)>: 129
<java.net.HttpURLConnection: int getResponseCode()>: 120
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 119
<android.database.sqlite.SQLiteStatement: long simpleQueryForLong()>: 118
<java.io.IOException: void <init>()>: 118
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>: 118
<java.io.File: java.lang.String getPath()>: 118
<java.io.RandomAccessFile: void setLength(long)>: 118
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 118
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 118
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>: 118
<android.net.NetworkInfo: int getType()>: 118
<java.net.URLConnection: void setReadTimeout(int)>: 118
<okhttp3.ae: void close()>: 118
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 118
<java.net.URLConnection: void setConnectTimeout(int)>: 118
<java.io.File: boolean delete()>: 118
<java.io.File: void <init>(java.lang.String)>: 78
<java.io.ByteArrayOutputStream: void <init>()>: 62
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 60
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 60
<java.io.BufferedReader: java.lang.String readLine()>: 60
<java.io.FileOutputStream: void close()>: 60
<java.net.URLConnection: java.io.InputStream getInputStream()>: 60
<android.net.Uri: java.lang.String encode(java.lang.String)>: 60
<java.io.RandomAccessFile: void readFully(byte[],int,int)>: 59
<java.io.PrintWriter: void <init>(java.io.OutputStream)>: 59
<java.net.URL: java.lang.String getHost()>: 59
<com.fitnow.loseit.gateway.UserAuthenticationException: void <init>()>: 59
<java.net.URLConnection: void setDoOutput(boolean)>: 59
<java.io.File: java.lang.String getName()>: 59
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 59
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 59
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 59
<java.net.HttpURLConnection: java.lang.String getRequestMethod()>: 59
<java.io.PrintWriter: void flush()>: 59
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 59
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>: 59
<java.io.File: boolean renameTo(java.io.File)>: 59
<android.net.Uri: java.lang.String decode(java.lang.String)>: 59
<android.database.sqlite.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)>: 59
<java.net.URL: java.lang.String getProtocol()>: 59
<java.io.OutputStream: void write(byte[])>: 59
<java.io.RandomAccessFile: void readFully(byte[])>: 59
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 59
<java.util.InvalidPropertiesFormatException: void <init>(java.lang.String)>: 59
<java.io.PrintWriter: void println(java.lang.String)>: 59
<com.singular.sdk.internal.FixedSizePersistentQueue$DirectByteArrayOutputStream: void <init>()>: 59
<java.net.URLConnection: void setDoInput(boolean)>: 59
<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>: 59
<java.io.RandomAccessFile: long length()>: 59
<java.io.RandomAccessFile: void writeLong(long)>: 59
<java.io.RandomAccessFile: void close()>: 59
<java.io.RandomAccessFile: void writeInt(int)>: 59
<java.io.BufferedReader: void <init>(java.io.Reader)>: 59
<java.net.URLConnection: void setUseCaches(boolean)>: 59
<java.io.File: boolean mkdir()>: 16
<android.graphics.Bitmap: void recycle()>: 6
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 4
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 3
<java.io.File: long lastModified()>: 3
<android.graphics.BitmapFactory$Options: void <init>()>: 3
<java.io.InputStream: void close()>: 3
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 3
<java.net.URL: java.io.InputStream openStream()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 2
<android.graphics.Bitmap: int getHeight()>: 2
<android.graphics.Bitmap: int getWidth()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>: 2
<java.io.BufferedReader: void <init>(java.io.Reader,int)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 1
<java.io.OutputStream: void write(byte[],int,int)>: 1
<java.io.FileOutputStream: void <init>(java.lang.String)>: 1
<java.io.ByteArrayInputStream: void <init>(byte[])>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>: 1
<java.io.OutputStream: void close()>: 1
<java.io.InputStream: int read(byte[])>: 1
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>: 1
<java.io.ByteArrayOutputStream: void close()>: 1
<java.io.FileOutputStream: void write(byte[])>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 1
<java.net.URLConnection: int getContentLength()>: 1
