Duration => 3703
UI Thread => 799
Worker Thread => 28262

----------------StartUI----------------
<android.database.Cursor: void close()>: 197
<java.lang.String: boolean equals(java.lang.Object)>: 143
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 40
<android.database.DatabaseUtils: java.lang.String sqlEscapeString(java.lang.String)>: 27
<java.io.File: java.lang.String getAbsolutePath()>: 23
<java.io.File: boolean exists()>: 21
<java.io.File: void <init>(java.lang.String)>: 21
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>: 20
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 15
<java.io.File: void <init>(java.io.File,java.lang.String)>: 13
<android.database.DataSetObserver: void <init>()>: 11
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 11
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>: 10
<android.database.Cursor: int getCount()>: 10
<android.database.MatrixCursor: void addRow(java.lang.Object[])>: 10
<android.database.MatrixCursor: void <init>(java.lang.String[])>: 10
<android.net.NetworkInfo: java.lang.String getSubtypeName()>: 10
<android.net.wifi.WifiInfo: java.lang.String getSSID()>: 10
<android.net.NetworkInfo: java.lang.String getTypeName()>: 10
<java.io.File: boolean mkdirs()>: 10
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 9
<java.io.InputStream: int read(byte[])>: 9
<java.io.InputStream: void close()>: 8
<java.lang.String: int hashCode()>: 7
<java.io.InputStream: int available()>: 7
<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>: 5
<android.net.Uri: java.lang.String encode(java.lang.String)>: 5
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 4
<android.net.Uri: boolean equals(java.lang.Object)>: 4
<android.graphics.Bitmap: int getHeight()>: 4
<android.graphics.Bitmap: int getWidth()>: 4
<android.database.SQLException: void <init>(java.lang.String)>: 4
<java.io.File: long length()>: 3
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 3
<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>: 3
<java.io.File: boolean renameTo(java.io.File)>: 3
<android.database.Cursor: int getColumnIndex(java.lang.String)>: 3
<java.net.Inet6Address: boolean isLinkLocalAddress()>: 2
<java.net.URI: void <init>(java.lang.String)>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 2
<java.net.Inet6Address: boolean isIPv4CompatibleAddress()>: 2
<java.io.OutputStream: void write(byte[],int,int)>: 2
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 2
<java.net.URI: java.lang.String getHost()>: 2
<java.io.OutputStream: void flush()>: 2
<java.net.Inet6Address: boolean isAnyLocalAddress()>: 2
<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>: 2
<java.net.Inet6Address: java.lang.String getHostAddress()>: 2
<android.database.Cursor: int getInt(int)>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 2
<java.net.Inet6Address: byte[] getAddress()>: 2
<android.database.Cursor: java.lang.String getString(int)>: 2
<java.net.Inet6Address: boolean isLoopbackAddress()>: 2
<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>: 2
<java.io.FileOutputStream: void <init>(java.io.File)>: 2
<java.io.File: boolean delete()>: 2
<android.net.wifi.WifiManager$WifiLock: void release()>: 2
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 1
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 1
<java.io.FileOutputStream: java.io.FileDescriptor getFD()>: 1
<android.graphics.Bitmap: void recycle()>: 1
<java.io.FileInputStream: void <init>(java.io.File)>: 1
<java.io.Closeable: void close()>: 1
<android.graphics.Bitmap: void eraseColor(int)>: 1
<java.io.File: boolean setExecutable(boolean,boolean)>: 1
<java.io.File: java.lang.String getPath()>: 1
<java.io.ByteArrayOutputStream: void <init>(int)>: 1
<java.io.FileInputStream: void close()>: 1
<android.database.Cursor: boolean moveToNext()>: 1
<java.io.File: boolean setWritable(boolean)>: 1
<java.io.File: boolean createNewFile()>: 1
<java.io.IOException: void <init>(java.lang.String)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 1
<java.io.ObjectOutputStream: void writeInt(int)>: 1
<java.io.FileOutputStream: void close()>: 1
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>: 1
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>: 1
<java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>: 1
<android.graphics.BitmapFactory$Options: void <init>()>: 1
<java.io.OutputStream: void close()>: 1
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>: 1
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>: 1
<java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>: 1
<android.database.ContentObserver: void <init>(android.os.Handler)>: 1
<java.util.zip.ZipFile: void close()>: 1
<java.io.ObjectInputStream: int readInt()>: 1
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>: 1
<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 1
<java.io.ObjectInputStream: java.lang.Object readObject()>: 1
<java.io.File: boolean setReadable(boolean,boolean)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 1
<android.net.NetworkInfo: boolean isAvailable()>: 1
<android.database.MergeCursor: void <init>(android.database.Cursor[])>: 1
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>: 1
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 1
<android.database.Cursor: long getLong(int)>: 1
<java.io.FileDescriptor: void sync()>: 1
<java.io.RandomAccessFile: int read(byte[],int,int)>: 1
<android.net.NetworkInfo: boolean isConnected()>: 1
<java.io.RandomAccessFile: void seek(long)>: 1
<java.io.RandomAccessFile: long length()>: 1
<java.io.ByteArrayOutputStream: void close()>: 1
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>: 1
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 1
<java.io.EOFException: void <init>()>: 1
<com.google.a.a.j$a: boolean equals(java.lang.Object)>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 5056
<android.database.Cursor: void close()>: 2116
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 1761
<java.io.File: boolean exists()>: 1098
<java.io.OutputStream: void write(byte[],int,int)>: 1063
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 1063
<java.io.IOException: void <init>(java.lang.String)>: 593
<java.io.File: void <init>(java.lang.String)>: 588
<java.lang.String: int hashCode()>: 473
<java.io.Writer: void write(char[],int,int)>: 472
<java.io.File: java.lang.String getAbsolutePath()>: 470
<java.io.OutputStream: void flush()>: 355
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 354
<java.lang.Object: boolean equals(java.lang.Object)>: 354
<java.io.File: void <init>(java.io.File,java.lang.String)>: 350
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 308
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>: 298
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 266
<java.io.File: long length()>: 237
<java.io.Writer: void write(java.lang.String)>: 237
<java.io.Closeable: void close()>: 236
<com.c.a.a.b.h: void write(int)>: 236
<com.c.a.a.a.a: void close()>: 236
<java.io.ByteArrayOutputStream: void <init>(int)>: 236
<android.net.wifi.WifiManager$WifiLock: void acquire()>: 236
<java.io.IOException: void <init>(java.lang.Throwable)>: 236
<java.io.OutputStream: void close()>: 236
<android.graphics.Bitmap: int getHeight()>: 236
<android.graphics.Bitmap: int getWidth()>: 236
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 236
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>: 235
<java.io.RandomAccessFile: void seek(long)>: 235
<java.io.ByteArrayOutputStream: void close()>: 235
<android.net.wifi.WifiManager$WifiLock: void release()>: 234
<java.io.File: boolean mkdirs()>: 233
<android.database.SQLException: void <init>(java.lang.String)>: 232
<java.io.File: boolean isFile()>: 157
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 154
<java.io.File: boolean canExecute()>: 154
<java.io.File: java.lang.String getPath()>: 154
<java.io.File: boolean canWrite()>: 154
<java.io.File: boolean canRead()>: 154
<java.io.File: boolean isHidden()>: 154
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>: 149
<android.net.NetworkInfo: java.lang.String getSubtypeName()>: 149
<android.net.wifi.WifiInfo: java.lang.String getSSID()>: 149
<android.net.NetworkInfo: java.lang.String getTypeName()>: 149
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 135
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 120
<java.io.BufferedReader: void <init>(java.io.Reader,int)>: 119
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>: 119
<java.io.InputStream: int read(byte[])>: 119
<java.lang.Enum: boolean equals(java.lang.Object)>: 119
<java.io.File: boolean delete()>: 119
<java.io.FileOutputStream: java.io.FileDescriptor getFD()>: 118
<java.io.FileInputStream: void <init>(java.io.File)>: 118
<java.io.File: boolean setExecutable(boolean,boolean)>: 118
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 118
<com.c.a.a.d: void close()>: 118
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 118
<java.io.BufferedReader: java.lang.String readLine()>: 118
<java.io.File: boolean setWritable(boolean)>: 118
<java.io.File: boolean createNewFile()>: 118
<java.lang.Object: int hashCode()>: 118
<java.io.Writer: void flush()>: 118
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 118
<java.io.RandomAccessFile: void writeBytes(java.lang.String)>: 118
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>: 118
<java.io.Writer: void <init>()>: 118
<com.c.a.a.b.h: void write(java.lang.String,int,int)>: 118
<java.util.zip.ZipFile: void close()>: 118
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>: 118
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>: 118
<java.io.Writer: void close()>: 118
<java.io.File: boolean setReadable(boolean,boolean)>: 118
<java.io.FileOutputStream: void <init>(java.io.File)>: 118
<java.io.BufferedReader: void close()>: 118
<java.io.OutputStream: void <init>()>: 118
<java.io.ByteArrayOutputStream: void <init>()>: 118
<java.io.FileDescriptor: void sync()>: 118
<com.c.a.a.h: void <init>(java.lang.String)>: 118
<java.io.RandomAccessFile: void close()>: 118
<java.io.EOFException: void <init>()>: 118
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 117
<java.io.File: boolean renameTo(java.io.File)>: 117
<android.net.NetworkInfo: boolean isAvailable()>: 117
<java.io.RandomAccessFile: int read(byte[],int,int)>: 117
<android.net.NetworkInfo: boolean isConnected()>: 117
<java.io.RandomAccessFile: long length()>: 117
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 117
<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>: 115
<java.net.URL: void <init>(java.lang.String)>: 7
<java.net.URL: java.lang.String toExternalForm()>: 4
<java.io.File: java.io.File[] listFiles()>: 4
<java.net.URL: java.lang.String toString()>: 3
<java.net.URL: java.lang.String getProtocol()>: 3
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 3
<java.io.StringReader: void <init>(java.lang.String)>: 3
<java.net.URL: java.lang.String getPath()>: 2
<java.net.URI: void <init>(java.lang.String)>: 2
<java.net.URL: java.net.URLConnection openConnection()>: 2
<java.net.HttpURLConnection: int getResponseCode()>: 2
<java.net.URLConnection: java.net.URL getURL()>: 2
<java.io.InputStream: void close()>: 2
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 2
<java.io.InputStream: long skip(long)>: 1
<java.net.URL: java.lang.String getAuthority()>: 1
<java.net.URL: java.lang.String getHost()>: 1
<java.io.File: boolean isDirectory()>: 1
<java.io.File: long lastModified()>: 1
<java.io.Reader: int read(char[])>: 1
<java.io.Reader: long skip(long)>: 1
<java.net.URLConnection: void setDoOutput(boolean)>: 1
<java.nio.CharBuffer: java.lang.String toString()>: 1
<java.io.InputStream: int read()>: 1
<java.io.File: java.lang.String getName()>: 1
<java.io.InputStream: void reset()>: 1
<java.net.URL: java.lang.String getFile()>: 1
<java.lang.Character: boolean equals(java.lang.Object)>: 1
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 1
<java.net.HttpURLConnection: java.lang.String getHeaderFieldKey(int)>: 1
<java.nio.charset.Charset: boolean isSupported(java.lang.String)>: 1
<java.net.URLConnection: java.util.Map getHeaderFields()>: 1
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>: 1
<java.io.ByteArrayInputStream: void <init>(byte[])>: 1
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 1
<android.database.DataSetObserver: void <init>()>: 1
<java.net.URLConnection: java.lang.String getContentType()>: 1
<java.net.HttpURLConnection: java.lang.String getRequestMethod()>: 1
<java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String)>: 1
<java.net.URL: int getPort()>: 1
<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)>: 1
<java.net.URLConnection: boolean getDoOutput()>: 1
<java.net.HttpURLConnection: java.lang.String getHeaderField(int)>: 1
<java.io.BufferedWriter: void write(int)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 1
<java.io.Reader: void reset()>: 1
<java.net.URL: java.lang.String getQuery()>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>: 1
<java.io.Reader: void mark(int)>: 1
<java.io.BufferedWriter: void flush()>: 1
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>: 1
<java.io.PrintStream: void println(java.lang.String)>: 1
<org.a.c.b: boolean equals(java.lang.Object)>: 1
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 1
<android.graphics.BitmapFactory$Options: void <init>()>: 1
<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>: 1
<java.io.Reader: boolean markSupported()>: 1
<java.net.URLConnection: void setReadTimeout(int)>: 1
<java.io.BufferedWriter: void close()>: 1
<java.io.Writer: java.io.Writer append(char)>: 1
<java.net.URL: void <init>(java.net.URL,java.lang.String)>: 1
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>: 1
<java.io.InputStream: void mark(int)>: 1
<org.a.b.a: void <init>(java.io.InputStream,int)>: 1
<java.net.URLConnection: java.io.InputStream getInputStream()>: 1
<java.net.URI: java.lang.String toASCIIString()>: 1
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 1
<java.net.MalformedURLException: void <init>(java.lang.String)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 1
<java.net.URLConnection: void setConnectTimeout(int)>: 1
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 1
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>: 1
<java.net.URLConnection: int getContentLength()>: 1
<java.io.FilterInputStream: int read(byte[])>: 1
<java.io.BufferedInputStream: void reset()>: 1
