Duration => 3424
UI Thread => 438
Worker Thread => 11540

----------------StartUI----------------
<java.lang.String: boolean equals(java.lang.Object)>: 93
<java.io.File: boolean exists()>: 28
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 26
<java.io.File: void <init>(java.lang.String)>: 25
<java.io.File: boolean mkdirs()>: 16
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 15
<java.io.File: java.lang.String getAbsolutePath()>: 15
<java.lang.Object: boolean equals(java.lang.Object)>: 13
<java.io.IOException: void <init>(java.lang.String)>: 12
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 9
<java.lang.String: int hashCode()>: 9
<java.io.File: boolean delete()>: 9
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 7
<java.io.File: void <init>(java.io.File,java.lang.String)>: 7
<java.io.File: boolean isDirectory()>: 6
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 5
<java.io.FileInputStream: void <init>(java.io.File)>: 4
<java.io.InputStream: void close()>: 4
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 4
<java.io.Writer: void close()>: 4
<android.net.NetworkInfo: int getSubtype()>: 4
<android.net.NetworkInfo: boolean isConnected()>: 4
<android.net.NetworkInfo: java.lang.String getTypeName()>: 4
<java.io.IOException: void <init>()>: 3
<android.net.Uri$Builder: android.net.Uri build()>: 3
<java.io.PrintWriter: void println(java.lang.Object)>: 3
<java.io.File: java.lang.String getPath()>: 3
<android.net.TrafficStats: long getUidRxBytes(int)>: 3
<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>: 3
<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>: 3
<java.io.File: java.io.File[] listFiles()>: 3
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>: 3
<java.io.PrintStream: void println(java.lang.Object)>: 3
<java.io.PrintStream: void println(java.lang.String)>: 3
<android.database.Cursor: void close()>: 3
<java.io.BufferedWriter: void <init>(java.io.Writer,int)>: 2
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 2
<java.io.File: boolean renameTo(java.io.File)>: 2
<java.io.Closeable: void close()>: 2
<java.io.FileWriter: void <init>(java.io.File,boolean)>: 2
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 2
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>: 2
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 2
<java.io.File: boolean isFile()>: 2
<java.io.Writer: void write(java.lang.String)>: 2
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 2
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>: 2
<java.io.FileOutputStream: void <init>(java.io.File)>: 2
<java.io.File: boolean createNewFile()>: 2
<java.io.ByteArrayOutputStream: void <init>()>: 2
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 2
<java.io.StringWriter: void <init>()>: 2
<java.io.File: boolean canWrite()>: 2
<java.io.File: java.io.File getParentFile()>: 2
<java.io.EOFException: void <init>()>: 2
<java.io.StringReader: void <init>(java.lang.String)>: 2
<android.graphics.BitmapFactory$Options: void <init>()>: 1
<android.graphics.Bitmap: void recycle()>: 1
<com.b.a.a: void close()>: 1
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>: 1
<android.net.NetworkInfo: int getType()>: 1
<java.io.File: long length()>: 1
<java.net.URLDecoder: java.lang.String decode(java.lang.String)>: 1
<java.io.FileReader: void <init>(java.lang.String)>: 1
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 1
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>: 1
<java.io.InputStream: int read()>: 1
<java.io.File: java.lang.String getName()>: 1
<com.freshchat.consumer.sdk.j.a.b: void close()>: 1
<java.io.FileInputStream: int available()>: 1
<java.nio.charset.Charset: boolean equals(java.lang.Object)>: 1
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 1
<com.b.a.a$2: void <init>()>: 1
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 1
<java.io.ByteArrayOutputStream: void <init>(int)>: 1
<java.io.FileInputStream: void close()>: 1
<java.io.BufferedReader: java.lang.String readLine()>: 1
<android.graphics.Bitmap: int getHeight()>: 1
<java.io.InputStream: int read(byte[],int,int)>: 1
<java.io.BufferedReader: void close()>: 1
<android.net.NetworkInfo: boolean isAvailable()>: 1
<java.io.OutputStream: void <init>()>: 1
<java.io.File: long getUsableSpace()>: 1
<android.graphics.Bitmap: int getWidth()>: 1
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>: 1
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>: 1
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 1
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>: 1
<java.io.FileOutputStream: void close()>: 1
<java.io.BufferedReader: void <init>(java.io.Reader)>: 1
<java.io.FileWriter: void <init>(java.io.File)>: 1
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 1
----------------StartWorker----------------
<java.lang.String: boolean equals(java.lang.Object)>: 1927
<java.io.IOException: void <init>(java.lang.String)>: 381
<java.io.File: java.lang.String getAbsolutePath()>: 306
<java.io.File: boolean exists()>: 271
<java.lang.Object: boolean equals(java.lang.Object)>: 248
<java.io.File: boolean delete()>: 208
<java.io.File: long length()>: 204
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 186
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 173
<java.io.File: boolean mkdirs()>: 164
<java.io.FileInputStream: void <init>(java.io.File)>: 137
<java.net.Socket: java.io.InputStream getInputStream()>: 136
<java.net.Socket: void <init>(java.lang.String,int)>: 136
<java.io.Writer: void flush()>: 136
<udesk.org.apache.harmony.javax.security.sasl.SaslException: void <init>(java.lang.String)>: 136
<java.io.OutputStream: void write(byte[])>: 136
<java.io.Writer: void write(java.lang.String)>: 136
<java.net.Socket: java.io.OutputStream getOutputStream()>: 136
<java.io.File: void <init>(java.lang.String)>: 133
<java.io.InputStream: void close()>: 107
<java.io.FileOutputStream: void <init>(java.io.File)>: 106
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>: 104
<java.io.IOException: void <init>()>: 102
<java.io.OutputStream: void write(byte[],int,int)>: 102
<java.io.InputStream: int read(byte[],int,int)>: 102
<java.io.ByteArrayOutputStream: void <init>()>: 102
<java.net.Socket: void close()>: 102
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 90
<java.io.PrintStream: void println(java.lang.Object)>: 86
<java.io.PrintWriter: void println(java.lang.Object)>: 86
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 79
<android.database.sqlite.SQLiteDatabase: long replace(java.lang.String,java.lang.String,android.content.ContentValues)>: 72
<java.io.InputStream: int read(byte[])>: 72
<java.io.FileOutputStream: void close()>: 71
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 70
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 70
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 70
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 70
<java.io.File: void <init>(java.io.File,java.lang.String)>: 70
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 70
<java.io.Closeable: void close()>: 69
<java.io.File: boolean isDirectory()>: 69
<java.io.FileInputStream: void close()>: 69
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 68
<java.io.File: long lastModified()>: 68
<java.io.File: java.lang.String getName()>: 68
<java.net.URI: java.net.URI create(java.lang.String)>: 68
<java.net.URI: java.lang.String getHost()>: 68
<java.io.OutputStream: void write(int)>: 68
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>: 68
<java.lang.String: int hashCode()>: 68
<udesk.org.apache.harmony.javax.security.sasl.SaslException: void <init>(java.lang.String,java.lang.Throwable)>: 68
<java.lang.Object: int hashCode()>: 68
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>: 68
<java.net.Socket: void setTcpNoDelay(boolean)>: 68
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 68
<java.io.FilterOutputStream: void close()>: 68
<java.io.RandomAccessFile: int read(byte[],int,int)>: 68
<java.io.RandomAccessFile: void seek(long)>: 68
<java.io.ByteArrayOutputStream: void close()>: 68
<java.io.FileOutputStream: void write(byte[])>: 68
<java.io.BufferedReader: void <init>(java.io.Reader)>: 68
<java.io.FileInputStream: int read(byte[])>: 68
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 67
<java.io.StringReader: void <init>(java.lang.String)>: 66
<java.io.EOFException: void <init>()>: 60
<android.net.NetworkInfo: boolean isConnected()>: 44
<java.net.URL: java.net.URLConnection openConnection()>: 37
<java.io.OutputStream: void flush()>: 37
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 37
<java.net.HttpURLConnection: int getResponseCode()>: 37
<java.io.FileOutputStream: void write(byte[],int,int)>: 37
<java.net.URL: void <init>(java.lang.String)>: 37
<java.net.URLConnection: void setReadTimeout(int)>: 37
<java.net.URLConnection: java.io.InputStream getInputStream()>: 37
<java.io.FileInputStream: void <init>(java.lang.String)>: 36
<java.io.ByteArrayInputStream: void <init>(byte[])>: 35
<android.net.NetworkInfo: int getType()>: 35
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 35
<java.net.Socket: void <init>(java.net.Proxy)>: 34
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>: 34
<java.net.Socket: int getPort()>: 34
<java.net.DatagramSocket: void close()>: 34
<java.net.URLConnection: void setDoOutput(boolean)>: 34
<java.net.InetAddress: java.lang.String getHostAddress()>: 34
<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>: 34
<java.io.InputStream: int read()>: 34
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 34
<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>: 34
<java.net.DatagramSocket: void <init>()>: 34
<java.net.DatagramPacket: void <init>(byte[],int)>: 34
<java.net.URLConnection: java.util.Map getHeaderFields()>: 34
<java.io.BufferedInputStream: void close()>: 34
<udesk.core.http.PoolingByteArrayOutputStream: void close()>: 34
<java.net.Socket: java.net.InetAddress getInetAddress()>: 34
<udesk.core.http.UdeskDiskCache$b: void <init>(java.io.InputStream)>: 34
<java.io.BufferedReader: java.lang.String readLine()>: 34
<java.io.FilterInputStream: void close()>: 34
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 34
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>: 34
<java.net.DatagramSocket: void setSoTimeout(int)>: 34
<java.net.URLConnection: java.lang.String getContentType()>: 34
<java.io.DataOutputStream: void <init>(java.io.OutputStream)>: 34
<android.net.TrafficStats: void setThreadStatsTag(int)>: 34
<java.util.zip.GZIPOutputStream: void write(byte[],int,int)>: 34
<java.io.FilterInputStream: void <init>(java.io.InputStream)>: 34
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>: 34
<java.net.URLConnection: java.lang.String getContentEncoding()>: 34
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 34
<udesk.org.jivesoftware.smack.packet.Message$Body: boolean equals(java.lang.Object)>: 34
<java.io.FilterInputStream: int read(byte[],int,int)>: 34
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>: 34
<java.net.SocketTimeoutException: void <init>(java.lang.String)>: 34
<java.net.DatagramSocket: void receive(java.net.DatagramPacket)>: 34
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 34
<java.io.Writer: void close()>: 34
<android.database.sqlite.SQLiteOpenHelper: void close()>: 34
<java.net.DatagramSocket: void send(java.net.DatagramPacket)>: 34
<java.net.DatagramPacket: void <init>(byte[],int,java.net.InetAddress,int)>: 34
<udesk.core.http.PoolingByteArrayOutputStream: void write(byte[],int,int)>: 34
<java.io.FilterOutputStream: void write(byte[])>: 34
<java.net.URLConnection: void setConnectTimeout(int)>: 34
<java.util.zip.DeflaterOutputStream: void close()>: 34
<java.net.URLConnection: void setDoInput(boolean)>: 34
<udesk.org.jivesoftware.smack.util.Base64$OutputStream: void close()>: 34
<java.io.File: java.io.File[] listFiles()>: 34
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 34
<java.net.InetAddress: byte[] getAddress()>: 34
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 34
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 34
<java.net.Socket: void connect(java.net.SocketAddress)>: 34
<java.io.RandomAccessFile: void close()>: 34
<java.net.URLConnection: int getContentLength()>: 34
<udesk.org.jivesoftware.smack.packet.Message$Subject: boolean equals(java.lang.Object)>: 34
<java.net.URLConnection: void setUseCaches(boolean)>: 34
<java.io.FilterInputStream: int read()>: 34
<java.io.File: boolean createNewFile()>: 32
<java.io.StringWriter: void <init>()>: 32
<java.io.File: java.io.File getParentFile()>: 32
<java.io.File: boolean isFile()>: 32
<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>: 31
<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>: 31
<android.net.Uri$Builder: android.net.Uri build()>: 31
<java.io.PrintStream: void println(java.lang.String)>: 11
<java.io.File: boolean mkdir()>: 3
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 3
<java.io.File: boolean renameTo(java.io.File)>: 3
<java.io.ByteArrayInputStream: int read()>: 3
<android.database.Cursor: void close()>: 3
<android.graphics.BitmapFactory$Options: void <init>()>: 2
<com.freshchat.consumer.sdk.j.ac$a: long skip(long)>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 1
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 1
<java.io.DataInputStream: int readUnsignedShort()>: 1
<java.io.ByteArrayInputStream: int read(byte[],int,int)>: 1
<java.io.DataInputStream: int read(byte[])>: 1
<java.io.DataInputStream: void <init>(java.io.InputStream)>: 1
<com.freshchat.consumer.sdk.j.ac$a: void <init>(byte[])>: 1
<java.io.ByteArrayInputStream: void reset()>: 1
<java.io.DataInputStream: byte readByte()>: 1
<android.graphics.Bitmap: int getHeight()>: 1
<android.net.NetworkInfo: boolean isAvailable()>: 1
<java.io.ByteArrayInputStream: long skip(long)>: 1
<android.graphics.Bitmap: int getWidth()>: 1
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 1
<java.io.DataInputStream: int skipBytes(int)>: 1
