Duration => 818
UI Thread => 122
Worker Thread => 327

----------------StartUI----------------
<io.realm.internal.OsSharedRealm: void close()>: 20
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 13
<java.io.File: void <init>(java.lang.String)>: 11
<java.io.PrintStream: void println(java.lang.Object)>: 9
<java.io.File: boolean exists()>: 7
<io.realm.internal.RealmNotifier: void close()>: 6
<java.io.File: void <init>(java.io.File,java.lang.String)>: 6
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>: 5
<java.net.URI: void <init>(java.lang.String)>: 5
<java.io.File: boolean equals(java.lang.Object)>: 5
<java.io.File: java.lang.String getName()>: 5
<io.realm.e: void close()>: 5
<io.realm.H: void close()>: 3
<java.io.Closeable: void close()>: 2
<java.net.InetAddress: java.lang.String getHostAddress()>: 2
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>: 2
<android.net.NetworkInfo: boolean isConnected()>: 2
<java.io.PrintStream: void println(java.lang.String)>: 2
<java.net.InetAddress: boolean isLoopbackAddress()>: 2
<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>: 2
<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>: 2
<java.io.FileInputStream: void <init>(java.io.File)>: 1
<java.io.File: java.lang.String[] list()>: 1
<java.io.File: boolean isDirectory()>: 1
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 1
<java.io.File: boolean mkdir()>: 1
<java.io.File: java.lang.String toString()>: 1
----------------StartWorker----------------
<java.io.File: boolean exists()>: 33
<java.io.File: java.lang.String getName()>: 22
<java.io.File: long length()>: 9
<java.io.File: void <init>(java.lang.String)>: 9
<java.io.File: boolean isDirectory()>: 7
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 7
<java.io.File: boolean renameTo(java.io.File)>: 6
<java.io.FileInputStream: void <init>(java.io.File)>: 6
<java.net.URL: void <init>(java.lang.String)>: 6
<java.net.URLConnection: void setReadTimeout(int)>: 6
<java.net.URL: java.net.URLConnection openConnection()>: 6
<java.net.URLConnection: java.io.InputStream getInputStream()>: 6
<java.io.FileInputStream: void close()>: 6
<java.io.BufferedReader: java.lang.String readLine()>: 6
<java.net.URLConnection: void setConnectTimeout(int)>: 6
<java.net.HttpURLConnection: int getResponseCode()>: 6
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 6
<java.io.PrintStream: void println(java.lang.String)>: 6
<java.io.BufferedReader: void <init>(java.io.Reader)>: 6
<java.io.FileInputStream: int read(byte[])>: 6
<java.io.File: void <init>(java.io.File,java.lang.String)>: 5
<java.io.PrintStream: void println(java.lang.Object)>: 5
<java.io.FileOutputStream: void write(byte[])>: 5
<java.io.FileOutputStream: void close()>: 5
<java.io.File: java.io.File getAbsoluteFile()>: 4
<java.net.URLConnection: void setDoOutput(boolean)>: 4
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 4
<android.graphics.Bitmap: int getHeight()>: 4
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 4
<java.io.BufferedReader: void close()>: 4
<android.graphics.Bitmap: int getWidth()>: 4
<java.net.URLConnection: void setDoInput(boolean)>: 4
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 4
<java.io.File: java.lang.String getAbsolutePath()>: 4
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 4
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 4
<java.io.OutputStream: void close()>: 3
<java.io.InputStream: void close()>: 3
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 3
<java.io.OutputStream: void flush()>: 3
<java.io.IOException: void <init>(java.lang.String)>: 3
<java.io.File: boolean mkdirs()>: 3
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 2
<java.io.File: java.lang.String[] list()>: 2
<java.util.zip.DeflaterOutputStream: void write(byte[],int,int)>: 2
<java.net.URI: void <init>(java.lang.String)>: 2
<android.net.NetworkInfo: int getType()>: 2
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>: 2
<android.graphics.Bitmap: int getPixel(int,int)>: 2
<java.io.InputStreamReader: void close()>: 2
<java.io.OutputStreamWriter: void flush()>: 2
<java.io.FileInputStream: int available()>: 2
<java.net.URL: java.lang.String getProtocol()>: 2
<java.io.OutputStream: void write(byte[])>: 2
<java.lang.Object: boolean equals(java.lang.Object)>: 2
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 2
<java.lang.Object: java.lang.String toString()>: 2
<java.net.URLConnection: java.util.Map getHeaderFields()>: 2
<java.net.HttpCookie: java.util.List parse(java.lang.String)>: 2
<java.io.Writer: void write(java.lang.String)>: 2
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>: 2
<java.io.FileInputStream: long skip(long)>: 2
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>: 2
<java.net.CookieManager: void <init>(java.net.CookieStore,java.net.CookiePolicy)>: 2
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>: 2
<java.net.CookieManager: java.net.CookieStore getCookieStore()>: 2
<java.util.zip.DeflaterOutputStream: void close()>: 2
<java.io.ByteArrayOutputStream: void <init>()>: 2
<java.net.HttpCookie: java.lang.String toString()>: 2
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 2
<java.io.File: boolean delete()>: 2
<android.net.NetworkInfo: boolean isConnected()>: 2
<java.net.URLConnection: java.net.URL getURL()>: 2
<java.io.ByteArrayOutputStream: void close()>: 2
<java.io.File: java.lang.String toString()>: 2
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>: 2
<java.io.InputStream: int read(byte[])>: 1
<java.io.OutputStream: void write(byte[],int,int)>: 1
