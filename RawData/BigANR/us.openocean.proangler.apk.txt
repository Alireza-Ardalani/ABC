Duration => 790
UI Thread => 2744
Worker Thread => 2317

----------------StartUI----------------
<com.readystatesoftware.sqliteasset.SQLiteAssetHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 310
<android.database.sqlite.SQLiteDatabase: boolean isOpen()>: 144
<com.readystatesoftware.sqliteasset.SQLiteAssetHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 126
<java.io.File: void <init>(java.lang.String)>: 109
<java.io.File: boolean exists()>: 92
<android.database.Cursor: void close()>: 82
<android.database.sqlite.SQLiteClosable: void close()>: 75
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 69
<android.database.sqlite.SQLiteException: void <init>(java.lang.String)>: 62
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 62
<android.database.sqlite.SQLiteDatabase: int getVersion()>: 62
<com.readystatesoftware.sqliteasset.SQLiteAssetHelper$SQLiteAssetException: void <init>(java.lang.String)>: 62
<android.database.sqlite.SQLiteOpenHelper: void onOpen(android.database.sqlite.SQLiteDatabase)>: 62
<java.io.InputStream: int read(byte[])>: 57
<java.io.InputStream: void close()>: 57
<java.io.OutputStream: void write(byte[],int,int)>: 56
<java.io.OutputStream: void close()>: 56
<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>: 56
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 55
<java.io.File: void <init>(java.io.File,java.lang.String)>: 47
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 44
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 44
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 44
<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>: 43
<java.io.FileInputStream: void <init>(java.io.File)>: 41
<android.net.Uri: java.lang.String encode(java.lang.String)>: 39
<java.io.FileOutputStream: void <init>(java.io.File)>: 38
<java.net.URL: void <init>(java.lang.String)>: 36
<java.io.File: java.lang.String getPath()>: 34
<java.io.FileOutputStream: void <init>(java.lang.String)>: 31
<java.io.File: boolean mkdir()>: 31
<java.io.OutputStream: void flush()>: 31
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>: 31
<com.readystatesoftware.sqliteasset.SQLiteAssetHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 31
<android.database.sqlite.SQLiteDatabase: boolean isReadOnly()>: 31
<android.database.sqlite.SQLiteDatabase: void setVersion(int)>: 31
<java.io.File: boolean mkdirs()>: 29
<android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)>: 26
<android.database.sqlite.SQLiteQueryBuilder: void <init>()>: 26
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 26
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 26
<java.io.File: boolean createNewFile()>: 25
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 24
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 24
<java.io.Closeable: void close()>: 15
<java.io.FileInputStream: void close()>: 15
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 15
<java.io.File: boolean delete()>: 15
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 13
<java.io.FileOutputStream: void close()>: 13
<java.net.URL: java.io.InputStream openStream()>: 12
<java.io.BufferedInputStream: void close()>: 12
<java.io.ByteArrayOutputStream: void writeTo(java.io.OutputStream)>: 12
<java.io.ByteArrayOutputStream: void <init>()>: 12
<java.io.ByteArrayOutputStream: void close()>: 12
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 12
<java.io.FilterInputStream: int read(byte[])>: 12
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 10
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>: 6
<java.io.File: java.lang.String getAbsolutePath()>: 6
<java.io.IOException: void <init>(java.lang.String)>: 5
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>: 4
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 4
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>: 4
<java.io.BufferedWriter: void <init>(java.io.Writer,int)>: 2
<java.net.InetAddress: java.lang.String getHostAddress()>: 2
<java.io.FileWriter: void <init>(java.io.File,boolean)>: 2
<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>: 2
<java.io.File: boolean canWrite()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 2
<java.net.InetAddress: boolean isLoopbackAddress()>: 2
<android.graphics.BitmapFactory$Options: void <init>()>: 2
<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>: 2
<java.io.Writer: void close()>: 2
<java.io.File: java.io.File[] listFiles()>: 2
<android.net.NetworkInfo: boolean isConnected()>: 2
<java.io.IOException: void <init>()>: 1
<java.io.File: boolean isDirectory()>: 1
<java.io.InputStream: int read()>: 1
<java.io.File: java.lang.String getName()>: 1
<com.freshchat.consumer.sdk.j.a.b: void close()>: 1
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>: 1
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>: 1
<java.io.FileWriter: void <init>(java.io.File)>: 1
<java.io.InputStream: int available()>: 1
<java.io.File: boolean renameTo(java.io.File)>: 1
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 1
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>: 1
<java.net.URL: java.lang.String toString()>: 1
<java.util.zip.ZipFile: void close()>: 1
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 1
<java.io.Writer: void write(java.lang.String)>: 1
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 1
<java.io.File: long getUsableSpace()>: 1
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 1
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 1
<java.io.File: java.lang.String toString()>: 1
<java.io.EOFException: void <init>()>: 1
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 1
----------------StartWorker----------------
<java.io.IOException: void <init>(java.lang.String)>: 312
<java.io.DataInput: int readUnsignedByte()>: 244
<java.io.DataInput: java.lang.String readUTF()>: 183
<java.io.DataInputStream: void <init>(java.io.InputStream)>: 123
<java.io.DataInput: boolean readBoolean()>: 122
<java.io.File: boolean exists()>: 83
<java.io.DataInputStream: int readUnsignedShort()>: 62
<java.io.File: void <init>(java.io.File,java.lang.String)>: 62
<java.io.FileInputStream: void <init>(java.io.File)>: 61
<java.io.File: boolean isDirectory()>: 61
<java.io.InputStream: void close()>: 61
<java.io.DataInput: int readUnsignedShort()>: 61
<java.io.DataInput: int readInt()>: 61
<java.io.FilterInputStream: void close()>: 61
<java.io.DataInput: long readLong()>: 61
<java.io.DataInput: byte readByte()>: 61
<java.io.DataInputStream: java.lang.String readUTF()>: 61
<java.io.File: void <init>(java.lang.String)>: 61
<android.database.sqlite.SQLiteDatabase: long replace(java.lang.String,java.lang.String,android.content.ContentValues)>: 46
<java.io.File: java.lang.String getAbsolutePath()>: 45
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 23
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 23
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 23
<java.io.File: boolean delete()>: 22
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>: 21
<java.net.DatagramSocket: void close()>: 21
<java.net.DatagramSocket: void receive(java.net.DatagramPacket)>: 21
<java.net.DatagramSocket: void <init>()>: 21
<java.net.DatagramPacket: void <init>(byte[],int)>: 21
<java.net.DatagramSocket: void send(java.net.DatagramPacket)>: 21
<java.net.DatagramPacket: void <init>(byte[],int,java.net.InetAddress,int)>: 21
<java.net.DatagramSocket: void setSoTimeout(int)>: 21
<android.database.sqlite.SQLiteDatabase: boolean isOpen()>: 12
<android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)>: 12
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 12
<com.readystatesoftware.sqliteasset.SQLiteAssetHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 12
<android.database.sqlite.SQLiteQueryBuilder: void <init>()>: 12
<android.database.Cursor: void close()>: 12
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 12
<java.net.URL: void <init>(java.lang.String)>: 4
<java.net.URLConnection: void setReadTimeout(int)>: 4
<java.net.URL: java.net.URLConnection openConnection()>: 4
<java.net.URLConnection: java.io.InputStream getInputStream()>: 4
<java.net.URLConnection: void setConnectTimeout(int)>: 4
<java.net.HttpURLConnection: int getResponseCode()>: 4
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 4
<java.io.EOFException: void <init>()>: 4
<java.io.ByteArrayInputStream: int read()>: 3
<android.graphics.BitmapFactory$Options: void <init>()>: 2
<java.net.URLConnection: void setDoOutput(boolean)>: 2
<java.io.OutputStreamWriter: void flush()>: 2
<com.freshchat.consumer.sdk.j.ac$a: long skip(long)>: 2
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 2
<java.io.Writer: void write(java.lang.String)>: 2
<java.io.BufferedReader: java.lang.String readLine()>: 2
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>: 2
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 2
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>: 2
<java.io.FileInputStream: void <init>(java.lang.String)>: 2
<java.net.URLConnection: void setDoInput(boolean)>: 2
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 2
<java.io.BufferedReader: void <init>(java.io.Reader)>: 2
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 2
<java.io.InputStream: int read(byte[])>: 1
<com.freshchat.consumer.sdk.j.ac$a: void <init>(byte[])>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 1
<java.io.ByteArrayInputStream: void reset()>: 1
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>: 1
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 1
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>: 1
<java.io.DataInputStream: byte readByte()>: 1
<android.graphics.Bitmap: int getHeight()>: 1
<java.io.ByteArrayInputStream: void <init>(byte[])>: 1
<java.io.FileOutputStream: void <init>(java.io.File)>: 1
<java.io.ByteArrayInputStream: long skip(long)>: 1
<android.graphics.Bitmap: int getWidth()>: 1
<java.io.ByteArrayInputStream: int read(byte[],int,int)>: 1
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 1
<java.io.DataInputStream: int read(byte[])>: 1
<java.io.DataInputStream: int skipBytes(int)>: 1
