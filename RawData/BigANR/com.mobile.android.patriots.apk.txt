Duration => 2879
UI Thread => 578
Worker Thread => 9096

----------------StartUI----------------
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 78
<java.io.File: void <init>(java.io.File,java.lang.String)>: 29
<java.io.File: boolean exists()>: 25
<java.io.ObjectInputStream: void close()>: 22
<java.io.FileInputStream: void close()>: 22
<java.io.ObjectInputStream: java.lang.Object readObject()>: 22
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 22
<java.io.InputStream: int read(byte[])>: 17
<java.io.InputStream: void close()>: 17
<java.io.InputStream: int available()>: 14
<java.io.File: boolean delete()>: 13
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>: 11
<java.io.File: java.lang.String getAbsolutePath()>: 11
<java.lang.Object: boolean equals(java.lang.Object)>: 10
<java.lang.Object: java.lang.String toString()>: 10
<java.io.File: java.io.File[] listFiles()>: 10
<java.io.File: void <init>(java.lang.String)>: 8
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 8
<java.io.File: boolean isDirectory()>: 7
<java.io.File: java.lang.String getName()>: 7
<java.io.FileOutputStream: void close()>: 7
<java.io.File: boolean mkdirs()>: 7
<java.net.URI: void <init>(java.lang.String)>: 6
<java.io.IOException: void <init>(java.lang.String)>: 6
<java.io.File: boolean createNewFile()>: 5
<java.io.PrintStream: void println(java.lang.String)>: 5
<java.io.FileOutputStream: void <init>(java.io.File)>: 5
<java.io.PrintStream: void println(java.lang.Object)>: 4
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>: 4
<java.net.URL: void <init>(java.lang.String)>: 4
<java.io.File: boolean isFile()>: 4
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>: 4
<java.io.ObjectOutputStream: void close()>: 4
<java.io.FileInputStream: void <init>(java.io.File)>: 3
<java.io.File: boolean mkdir()>: 3
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>: 3
<java.net.URI: java.lang.String getScheme()>: 3
<java.net.URI: java.lang.String toString()>: 3
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 3
<java.net.URI: java.lang.String getFragment()>: 3
<java.net.URI: java.lang.String getPath()>: 3
<java.io.IOException: void <init>()>: 2
<java.io.Closeable: void close()>: 2
<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>: 2
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>: 2
<java.io.FileOutputStream: void <init>(java.lang.String)>: 2
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>: 2
<io.realm.internal.SharedRealm: void close()>: 2
<java.io.OutputStream: void flush()>: 2
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>: 2
<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>: 2
<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>: 2
<android.net.Uri$Builder: void <init>()>: 2
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>: 2
<android.net.Uri$Builder: android.net.Uri build()>: 2
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 2
<java.io.Writer: void write(java.lang.String)>: 2
<java.io.Writer: void close()>: 2
<java.io.BufferedWriter: void <init>(java.io.Writer)>: 2
<java.net.URI: java.lang.String getAuthority()>: 2
<android.net.NetworkInfo: boolean isConnected()>: 2
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 2
<java.io.EOFException: void <init>()>: 2
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>: 1
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 1
<java.io.FileOutputStream: java.io.FileDescriptor getFD()>: 1
<java.io.OutputStreamWriter: void close()>: 1
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>: 1
<java.io.File: long length()>: 1
<java.io.File: boolean setExecutable(boolean,boolean)>: 1
<android.net.SSLCertificateSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getHttpSocketFactory(int,android.net.SSLSessionCache)>: 1
<java.nio.CharBuffer: java.lang.String toString()>: 1
<java.net.URI: java.lang.String getRawFragment()>: 1
<java.io.ByteArrayOutputStream: java.lang.String toString()>: 1
<java.io.OutputStream: void write(byte[],int,int)>: 1
<java.net.URI: java.lang.String getRawAuthority()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>: 1
<java.nio.charset.Charset: boolean equals(java.lang.Object)>: 1
<java.io.File: java.lang.String getPath()>: 1
<java.net.URI: java.lang.String getHost()>: 1
<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>: 1
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$2: void <init>()>: 1
<java.io.ByteArrayOutputStream: void <init>(int)>: 1
<android.net.ConnectivityManager$NetworkCallback: void <init>()>: 1
<android.net.http.HttpResponseCache: android.net.http.HttpResponseCache getInstalled()>: 1
<java.io.BufferedReader: java.lang.String readLine()>: 1
<java.io.File: boolean setWritable(boolean)>: 1
<java.net.URI: java.lang.String getRawQuery()>: 1
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>: 1
<java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>: 1
<android.net.NetworkInfo: java.lang.String getReason()>: 1
<android.net.NetworkInfo: java.lang.String getExtraInfo()>: 1
<java.net.URI: java.lang.String getUserInfo()>: 1
<java.net.URI: int getPort()>: 1
<android.net.ConnectivityManager: void registerNetworkCallback(android.net.NetworkRequest,android.net.ConnectivityManager$NetworkCallback)>: 1
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>: 1
<android.net.NetworkInfo: boolean isRoaming()>: 1
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>: 1
<android.net.http.HttpResponseCache: android.net.http.HttpResponseCache install(java.io.File,long)>: 1
<android.graphics.BitmapFactory$Options: void <init>()>: 1
<java.io.OutputStream: void close()>: 1
<java.io.File: boolean renameTo(java.io.File)>: 1
<java.io.FileOutputStream: void write(byte[],int,int)>: 1
<android.net.Uri: android.net.Uri fromFile(java.io.File)>: 1
<android.net.NetworkInfo: int getType()>: 1
<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>: 1
<java.util.zip.ZipFile: void close()>: 1
<io.realm.Realm: void close()>: 1
<java.io.File: boolean equals(java.lang.Object)>: 1
<android.net.NetworkRequest$Builder: void <init>()>: 1
<java.net.URI: java.lang.String getRawSchemeSpecificPart()>: 1
<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: void close()>: 1
<java.io.OutputStream: void write(byte[])>: 1
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>: 1
<android.net.NetworkInfo: android.net.NetworkInfo$DetailedState getDetailedState()>: 1
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>: 1
<java.net.URI: java.lang.String getRawUserInfo()>: 1
<java.io.File: java.lang.String getCanonicalPath()>: 1
<android.net.NetworkRequest$Builder: android.net.NetworkRequest build()>: 1
<android.graphics.Bitmap: int getHeight()>: 1
<android.net.NetworkInfo: java.lang.String getSubtypeName()>: 1
<java.io.InputStream: int read(byte[],int,int)>: 1
<java.io.RandomAccessFile: void readFully(byte[])>: 1
<java.io.File: boolean setReadable(boolean,boolean)>: 1
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>: 1
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>: 1
<android.net.NetworkInfo: int getSubtype()>: 1
<java.io.BufferedReader: void close()>: 1
<android.net.NetworkInfo: boolean isAvailable()>: 1
<java.io.OutputStream: void <init>()>: 1
<android.graphics.Bitmap: int getWidth()>: 1
<java.io.ByteArrayOutputStream: void <init>()>: 1
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 1
<android.net.NetworkInfo: boolean isFailover()>: 1
<java.io.FileDescriptor: void sync()>: 1
<java.net.URI: java.lang.String getRawPath()>: 1
<java.io.RandomAccessFile: long length()>: 1
<java.io.FileOutputStream: void write(byte[])>: 1
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 1
<java.io.ByteArrayOutputStream: void close()>: 1
<java.io.RandomAccessFile: void close()>: 1
<java.io.BufferedReader: void <init>(java.io.Reader)>: 1
<android.net.NetworkInfo: java.lang.String getTypeName()>: 1
<android.net.SSLSessionCache: void <init>(android.content.Context)>: 1
<android.net.NetworkRequest$Builder: android.net.NetworkRequest$Builder addCapability(int)>: 1
----------------StartWorker----------------
<java.io.File: void <init>(java.io.File,java.lang.String)>: 620
<java.io.File: boolean exists()>: 543
<android.database.Cursor: void close()>: 351
<java.io.File: void <init>(java.lang.String)>: 321
<java.io.File: boolean mkdirs()>: 275
<java.io.File: boolean isDirectory()>: 234
<java.io.File: boolean delete()>: 219
<java.io.IOException: void <init>(java.lang.String)>: 195
<java.io.FileOutputStream: void <init>(java.io.File)>: 168
<java.io.OutputStream: void close()>: 158
<java.io.File: java.lang.String[] list()>: 156
<java.io.FileOutputStream: void close()>: 129
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>: 120
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>: 120
<android.graphics.Bitmap: int getHeight()>: 117
<android.graphics.Bitmap: int getWidth()>: 117
<android.net.Uri: java.lang.String encode(java.lang.String)>: 117
<java.io.File: boolean createNewFile()>: 115
<java.io.InputStream: void close()>: 99
<java.io.InputStream: int read(byte[])>: 98
<android.net.Uri: android.net.Uri parse(java.lang.String)>: 97
<java.io.File: java.io.File[] listFiles()>: 90
<java.io.OutputStream: void flush()>: 83
<java.io.ByteArrayOutputStream: byte[] toByteArray()>: 81
<java.io.ByteArrayOutputStream: void <init>()>: 81
<java.io.FileOutputStream: void <init>(java.lang.String)>: 79
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>: 79
<android.net.NetworkInfo: boolean isConnected()>: 79
<java.io.FileInputStream: void <init>(java.io.File)>: 78
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>: 78
<java.io.ByteArrayInputStream: void <init>(byte[])>: 78
<android.graphics.Bitmap: void setDensity(int)>: 78
<java.io.File: java.io.File getParentFile()>: 78
<java.io.OutputStream: void write(byte[])>: 78
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>: 78
<java.io.FileNotFoundException: void <init>(java.lang.String)>: 78
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>: 78
<java.io.File: java.lang.String getAbsolutePath()>: 78
<java.net.URL: java.net.URLConnection openConnection()>: 62
<java.net.URL: void <init>(java.lang.String)>: 62
<java.net.URLConnection: java.io.InputStream getInputStream()>: 59
<java.io.InputStreamReader: void <init>(java.io.InputStream)>: 56
<java.io.BufferedReader: java.lang.String readLine()>: 56
<java.io.BufferedReader: void close()>: 56
<java.io.File: java.lang.String getName()>: 51
<java.io.FileOutputStream: void write(byte[],int,int)>: 51
<java.io.File: boolean equals(java.lang.Object)>: 51
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>: 49
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>: 47
<java.net.URLConnection: java.io.OutputStream getOutputStream()>: 46
<java.net.HttpURLConnection: int getResponseCode()>: 46
<java.net.URL: java.lang.String toString()>: 46
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>: 46
<java.io.PrintStream: void println(java.lang.Object)>: 45
<java.net.URLConnection: void setDoOutput(boolean)>: 43
<java.net.URLConnection: void setDoInput(boolean)>: 43
<java.io.BufferedReader: void <init>(java.io.Reader)>: 43
<java.net.URLConnection: void setReadTimeout(int)>: 42
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>: 42
<java.net.URLConnection: void setConnectTimeout(int)>: 42
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>: 42
<java.io.OutputStream: void write(byte[],int,int)>: 41
<java.io.File: java.io.File getAbsoluteFile()>: 39
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>: 39
<java.util.zip.ZipInputStream: void close()>: 39
<java.io.FileReader: void <init>(java.io.File)>: 39
<java.io.File: long lastModified()>: 39
<java.io.Reader: int read(char[])>: 39
<java.io.File: long length()>: 39
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>: 39
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>: 39
<java.net.URLConnection: java.util.Map getHeaderFields()>: 39
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>: 39
<java.io.ObjectInputStream: void close()>: 39
<java.io.FileInputStream: void close()>: 39
<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>: 39
<java.io.File: java.lang.String getParent()>: 39
<android.database.sqlite.SQLiteDatabase: void endTransaction()>: 39
<java.net.URLConnection: java.lang.String getContentType()>: 39
<java.net.HttpURLConnection: void setFixedLengthStreamingMode(long)>: 39
<android.net.http.AndroidHttpClient: void modifyRequestToAcceptGzipResponse(org.apache.http.HttpRequest)>: 39
<java.io.File: boolean canWrite()>: 39
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>: 39
<java.io.File: boolean canRead()>: 39
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>: 39
<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>: 39
<android.graphics.BitmapFactory$Options: void <init>()>: 39
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>: 39
<android.net.http.AndroidHttpClient: java.io.InputStream getUngzippedContent(org.apache.http.HttpEntity)>: 39
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>: 39
<android.database.sqlite.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)>: 39
<java.net.URL: void <init>(java.net.URL,java.lang.String)>: 39
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>: 39
<java.io.ObjectInputStream: java.lang.Object readObject()>: 39
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>: 39
<android.graphics.Bitmap: int getDensity()>: 39
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>: 39
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>: 39
<android.graphics.drawable.BitmapDrawable: void setTileModeXY(android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>: 39
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>: 39
<java.io.File: java.io.File getCanonicalFile()>: 39
<java.io.FileOutputStream: void write(byte[])>: 39
<java.io.File: void <init>(java.lang.String,java.lang.String)>: 39
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>: 39
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>: 39
<java.net.URLConnection: int getContentLength()>: 39
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>: 39
<android.database.sqlite.SQLiteClosable: void close()>: 39
<java.io.FilterInputStream: int read(byte[])>: 39
<java.io.OutputStreamWriter: void close()>: 38
<android.net.SSLCertificateSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getHttpSocketFactory(int,android.net.SSLSessionCache)>: 38
<java.io.Writer: void write(java.lang.String)>: 38
<android.net.SSLSessionCache: void <init>(android.content.Context)>: 38
<io.realm.internal.SharedRealm: void close()>: 37
<java.io.PrintStream: void println(java.lang.String)>: 23
<java.io.BufferedReader: void <init>(java.io.Reader,int)>: 13
<android.net.ConnectivityManager$NetworkCallback: void <init>()>: 13
<io.realm.internal.RealmNotifier: void close()>: 13
<android.net.ConnectivityManager: void registerNetworkCallback(android.net.NetworkRequest,android.net.ConnectivityManager$NetworkCallback)>: 13
<io.realm.Realm: void close()>: 13
<android.net.NetworkRequest$Builder: void <init>()>: 13
<android.net.NetworkRequest$Builder: android.net.NetworkRequest build()>: 13
<io.realm.BaseRealm: void close()>: 13
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>: 12
<java.io.InputStreamReader: void close()>: 4
<android.util.JsonWriter: void close()>: 4
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>: 4
<java.net.URLConnection: void setUseCaches(boolean)>: 4
<java.lang.Object: boolean equals(java.lang.Object)>: 3
<java.lang.Object: java.lang.String toString()>: 3
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>: 3
<java.io.DataOutputStream: void <init>(java.io.OutputStream)>: 3
<java.io.InputStream: int available()>: 3
<java.net.URL: java.lang.String getProtocol()>: 3
<java.io.DataOutputStream: void writeBytes(java.lang.String)>: 3
<java.io.DataOutputStream: void flush()>: 3
<java.io.FilterOutputStream: void close()>: 3
<java.net.URI: void <init>(java.lang.String)>: 2
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>: 1
<android.graphics.Bitmap: void setPixel(int,int,int)>: 1
