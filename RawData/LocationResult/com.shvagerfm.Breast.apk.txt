Source=> r14 = virtualinvoke $r16.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Corona", "CoronaRuntimeTaskDispatcher.send() doesn\'t have an event manager to use! Abort!")
Component=> com.ansca.corona.CoronaActivity
ComponentColor=> RED
android.os.Handler
com.ansca.corona.CoronaRuntimeTaskDispatcher
com.ansca.corona.MessageBasedTimer
com.ansca.corona.CoronaSensorManager$1
com.ansca.corona.CoronaSensorManager$AccelerometerMonitor$TimerHandler
com.ansca.corona.MessageBasedTimer$1
com.ansca.corona.CoronaSensorManager
android.location.LocationManager
android.util.Log
com.ansca.corona.Controller
com.ansca.corona.CoronaSensorManager$SensorMonitor
com.ansca.corona.CoronaSensorManager
com.ansca.corona.MessageBasedTimer
com.ansca.corona.MessageBasedTimer
Category: com.ansca.corona.CoronaRuntimeTaskDispatcher-*-com.ansca.corona.MessageBasedTimer-*-com.ansca.corona.CoronaSensorManager$1-*-com.ansca.corona.CoronaSensorManager$AccelerometerMonitor$TimerHandler-*-com.ansca.corona.MessageBasedTimer$1-*-com.ansca.corona.CoronaSensorManager-*-com.ansca.corona.Controller-*-com.ansca.corona.CoronaSensorManager$SensorMonitor-*-com.ansca.corona.CoronaSensorManager-*-com.ansca.corona.MessageBasedTimer-*-com.ansca.corona.MessageBasedTimer-*-
-----------------------------------------------------------------
Source=> r14 = virtualinvoke $r16.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Corona", "CoronaRuntimeTaskDispatcher.send() doesn\'t have an available CoronaRuntime to run this task on! Abort!")
Component=> com.ansca.corona.CoronaActivity
ComponentColor=> RED
android.os.Handler
com.ansca.corona.CoronaRuntimeTaskDispatcher
com.ansca.corona.MessageBasedTimer
com.ansca.corona.CoronaSensorManager$1
com.ansca.corona.MessageBasedTimer$1
com.ansca.corona.CoronaSensorManager
android.location.LocationManager
android.util.Log
com.ansca.corona.Controller
com.ansca.corona.CoronaSensorManager$SensorMonitor
com.ansca.corona.CoronaSensorManager
com.ansca.corona.MessageBasedTimer
com.ansca.corona.MessageBasedTimer
com.ansca.corona.CoronaSensorManager$GyroscopeMonitor$TimerHandler
Category: com.ansca.corona.CoronaRuntimeTaskDispatcher-*-com.ansca.corona.MessageBasedTimer-*-com.ansca.corona.CoronaSensorManager$1-*-com.ansca.corona.MessageBasedTimer$1-*-com.ansca.corona.CoronaSensorManager-*-com.ansca.corona.Controller-*-com.ansca.corona.CoronaSensorManager$SensorMonitor-*-com.ansca.corona.CoronaSensorManager-*-com.ansca.corona.MessageBasedTimer-*-com.ansca.corona.MessageBasedTimer-*-com.ansca.corona.CoronaSensorManager$GyroscopeMonitor$TimerHandler-*-
-----------------------------------------------------------------
Source=> r14 = virtualinvoke $r16.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
Sink=> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Corona", "CoronaRuntimeTaskDispatcher.send() doesn\'t have an event manager to use! Abort!")
Component=> com.ansca.corona.CoronaActivity
ComponentColor=> RED
android.os.Handler
com.ansca.corona.CoronaRuntimeTaskDispatcher
com.ansca.corona.MessageBasedTimer
com.ansca.corona.CoronaSensorManager$1
com.ansca.corona.CoronaSensorManager$AccelerometerMonitor$TimerHandler
com.ansca.corona.MessageBasedTimer$1
com.ansca.corona.CoronaSensorManager
android.location.LocationManager
android.util.Log
com.ansca.corona.Controller
com.ansca.corona.CoronaSensorManager$SensorMonitor
com.ansca.corona.CoronaSensorManager
com.ansca.corona.MessageBasedTimer
com.ansca.corona.MessageBasedTimer
Category: com.ansca.corona.CoronaRuntimeTaskDispatcher-*-com.ansca.corona.MessageBasedTimer-*-com.ansca.corona.CoronaSensorManager$1-*-com.ansca.corona.CoronaSensorManager$AccelerometerMonitor$TimerHandler-*-com.ansca.corona.MessageBasedTimer$1-*-com.ansca.corona.CoronaSensorManager-*-com.ansca.corona.Controller-*-com.ansca.corona.CoronaSensorManager$SensorMonitor-*-com.ansca.corona.CoronaSensorManager-*-com.ansca.corona.MessageBasedTimer-*-com.ansca.corona.MessageBasedTimer-*-
-----------------------------------------------------------------
Source=> r14 = virtualinvoke $r16.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
Sink=> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Corona", "CoronaRuntimeTaskDispatcher.send() doesn\'t have an available CoronaRuntime to run this task on! Abort!")
Component=> com.ansca.corona.CoronaActivity
ComponentColor=> RED
android.os.Handler
com.ansca.corona.CoronaRuntimeTaskDispatcher
com.ansca.corona.MessageBasedTimer
com.ansca.corona.CoronaSensorManager$1
com.ansca.corona.MessageBasedTimer$1
com.ansca.corona.CoronaSensorManager
android.location.LocationManager
android.util.Log
com.ansca.corona.Controller
com.ansca.corona.CoronaSensorManager$SensorMonitor
com.ansca.corona.CoronaSensorManager
com.ansca.corona.MessageBasedTimer
com.ansca.corona.MessageBasedTimer
com.ansca.corona.CoronaSensorManager$GyroscopeMonitor$TimerHandler
Category: com.ansca.corona.CoronaRuntimeTaskDispatcher-*-com.ansca.corona.MessageBasedTimer-*-com.ansca.corona.CoronaSensorManager$1-*-com.ansca.corona.MessageBasedTimer$1-*-com.ansca.corona.CoronaSensorManager-*-com.ansca.corona.Controller-*-com.ansca.corona.CoronaSensorManager$SensorMonitor-*-com.ansca.corona.CoronaSensorManager-*-com.ansca.corona.MessageBasedTimer-*-com.ansca.corona.MessageBasedTimer-*-com.ansca.corona.CoronaSensorManager$GyroscopeMonitor$TimerHandler-*-
-----------------------------------------------------------------
Source=> r14 = virtualinvoke $r16.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
Sink=> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Corona", "CoronaRuntimeTaskDispatcher.send() doesn\'t have an available CoronaRuntime to run this task on! Abort!")
Component=> com.ansca.corona.CoronaActivity
ComponentColor=> RED
android.os.Handler
com.ansca.corona.CoronaRuntimeTaskDispatcher
com.ansca.corona.MessageBasedTimer
com.ansca.corona.CoronaSensorManager$1
com.ansca.corona.MessageBasedTimer$1
com.ansca.corona.CoronaSensorManager
android.location.LocationManager
android.util.Log
com.ansca.corona.Controller
com.ansca.corona.CoronaSensorManager$SensorMonitor
com.ansca.corona.CoronaSensorManager
com.ansca.corona.MessageBasedTimer
com.ansca.corona.MessageBasedTimer
com.ansca.corona.CoronaSensorManager$GyroscopeMonitor$TimerHandler
Category: com.ansca.corona.CoronaRuntimeTaskDispatcher-*-com.ansca.corona.MessageBasedTimer-*-com.ansca.corona.CoronaSensorManager$1-*-com.ansca.corona.MessageBasedTimer$1-*-com.ansca.corona.CoronaSensorManager-*-com.ansca.corona.Controller-*-com.ansca.corona.CoronaSensorManager$SensorMonitor-*-com.ansca.corona.CoronaSensorManager-*-com.ansca.corona.MessageBasedTimer-*-com.ansca.corona.MessageBasedTimer-*-com.ansca.corona.CoronaSensorManager$GyroscopeMonitor$TimerHandler-*-
-----------------------------------------------------------------
Source=> r14 = virtualinvoke $r16.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
Sink=> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Corona", "CoronaRuntimeTaskDispatcher.send() doesn\'t have an event manager to use! Abort!")
Component=> com.ansca.corona.CoronaActivity
ComponentColor=> RED
android.os.Handler
com.ansca.corona.CoronaRuntimeTaskDispatcher
com.ansca.corona.MessageBasedTimer
com.ansca.corona.CoronaSensorManager$1
com.ansca.corona.CoronaSensorManager$AccelerometerMonitor$TimerHandler
com.ansca.corona.MessageBasedTimer$1
com.ansca.corona.CoronaSensorManager
android.location.LocationManager
android.util.Log
com.ansca.corona.Controller
com.ansca.corona.CoronaSensorManager$SensorMonitor
com.ansca.corona.CoronaSensorManager
com.ansca.corona.MessageBasedTimer
com.ansca.corona.MessageBasedTimer
Category: com.ansca.corona.CoronaRuntimeTaskDispatcher-*-com.ansca.corona.MessageBasedTimer-*-com.ansca.corona.CoronaSensorManager$1-*-com.ansca.corona.CoronaSensorManager$AccelerometerMonitor$TimerHandler-*-com.ansca.corona.MessageBasedTimer$1-*-com.ansca.corona.CoronaSensorManager-*-com.ansca.corona.Controller-*-com.ansca.corona.CoronaSensorManager$SensorMonitor-*-com.ansca.corona.CoronaSensorManager-*-com.ansca.corona.MessageBasedTimer-*-com.ansca.corona.MessageBasedTimer-*-
-----------------------------------------------------------------
com.shvagerfm.Breast.apk: 1042956
