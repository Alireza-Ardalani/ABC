Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>($r1, $l0)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
com.jabra.sport.core.ui.audio.readouts.b
com.jabra.sport.core.ui.equalizer.MusicStateObserver
com.jabra.sport.core.ui.equalizer.MusicStateObserver$1
android.location.LocationManager
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.ui.audio.readouts.l
com.jabra.sport.core.ui.audio.readouts.b
com.jabra.sport.core.model.u$c
com.jabra.sport.core.ui.audio.readouts.ReadOutPlayer
android.content.SharedPreferences$Editor
android.os.Handler
android.os.Handler
com.jabra.sport.core.ui.equalizer.MusicStateObserver
com.jabra.sport.core.ui.equalizer.MusicStateObserver$3
com.jabra.sport.core.ui.audio.readouts.ReadOutPlayer
com.jabra.sport.core.ui.audio.readouts.ReadOutPlayer
com.jabra.sport.core.model.o$b
com.jabra.sport.core.ui.equalizer.MusicStateObserver$2
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, $r0, $r2)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
android.util.Log
android.location.LocationManager
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.util.f
com.jabra.sport.util.f
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> $i0 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("cloud_upload", $r2, $r4, $r9)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
com.jabra.sport.core.model.CloudUploadTable
android.os.Handler
android.location.LocationManager
com.jabra.sport.core.model.export.i$1
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.o$b$20
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.o$b$25
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
android.database.sqlite.SQLiteDatabase
com.jabra.sport.core.model.Database
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>($r5, $i0)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
com.jabra.sport.core.ui.equalizer.MusicStateObserver$1
android.location.LocationManager
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.App
android.content.SharedPreferences$Editor
com.jabra.sport.App$a$2
android.os.Handler
android.os.Handler
com.jabra.sport.core.model.u$h
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.s
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.s
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> $r8 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("session", $r2, $r6, null, null, null, null)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
android.database.sqlite.SQLiteDatabase
com.jabra.sport.core.model.o$b$39
android.os.Handler
android.location.LocationManager
com.jabra.sport.core.model.export.i$1
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.SessionTable
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.o$b$25
com.jabra.sport.core.model.Database
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> virtualinvoke $r10.<java.io.BufferedWriter: void write(java.lang.String)>($r0)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
android.location.LocationManager
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.util.f
com.jabra.sport.util.f
com.jabra.sport.util.f
java.io.Writer
com.jabra.sport.util.f
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> $i1 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("achievement", $r3, null)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
com.jabra.sport.core.model.AchievementTable
android.os.Handler
android.location.LocationManager
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.Database
android.database.sqlite.SQLiteDatabase
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.o$b$31
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> $r7 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("session_values", $r5, $r3, null, null, null, $r4)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
android.database.sqlite.SQLiteDatabase
com.jabra.sport.core.model.SessionDataTable
android.os.Handler
com.jabra.sport.core.model.Database
android.location.LocationManager
com.jabra.sport.core.model.export.i$1
com.jabra.sport.core.model.o$b$9
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.o$b$25
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, $r0, $r2)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
android.os.Handler
android.util.Log
android.location.LocationManager
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.compression.c$3
com.jabra.sport.util.f
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.o$b$25
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.util.f
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, $r0)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
android.location.LocationManager
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.util.f
android.util.Log
com.jabra.sport.util.f
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> $i1 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("session_fb", $r2, $r5, null)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
android.os.Handler
android.location.LocationManager
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.o$b$48
com.jabra.sport.core.model.Database
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.o$b$25
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
android.database.sqlite.SQLiteDatabase
com.jabra.sport.core.model.SessionFbTable
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("session_values", $r5, null)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
com.jabra.sport.core.model.o$b$14
android.os.Handler
android.location.LocationManager
com.jabra.sport.core.model.export.i$1
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
android.database.sqlite.SQLiteDatabase
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.o$b$25
com.jabra.sport.core.model.compression.c$4
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.Database
com.jabra.sport.core.model.SessionDataTable
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: void close()>()
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
com.jabra.sport.core.model.e
com.jabra.sport.core.model.o
com.jabra.sport.core.model.Database
android.database.sqlite.SQLiteClosable
android.location.LocationManager
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.Database
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> $r6 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("session_targets", null, $r4, null, null, null, $r5)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
android.database.sqlite.SQLiteDatabase
com.jabra.sport.core.model.o$b$39
android.os.Handler
com.jabra.sport.core.model.TargetTable
android.location.LocationManager
com.jabra.sport.core.model.export.i$1
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.o$b$25
com.jabra.sport.core.model.Database
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.SessionTable
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("SESSION_COMPRESSION_LAST_ID", $l1)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
com.jabra.sport.core.ui.equalizer.MusicStateObserver$1
com.jabra.sport.core.model.s
android.location.LocationManager
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.App
com.jabra.sport.core.model.SessionController$8
com.jabra.sport.core.model.u$a
com.jabra.sport.App$a$2
com.jabra.sport.core.model.SessionController$8
android.content.SharedPreferences$Editor
android.os.Handler
android.os.Handler
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.s
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.s
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> $r9 = virtualinvoke $r8.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("session AS s INNER JOIN achievement AS a ON s._id = a._id", $r5, $r1, null, null, null, "a.ended")
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
android.database.sqlite.SQLiteDatabase
android.os.Handler
com.jabra.sport.core.model.Database
android.location.LocationManager
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.o$b$17
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r0)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
android.location.LocationManager
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.util.f
android.util.Log
com.jabra.sport.util.f
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> virtualinvoke $r10.<java.io.BufferedWriter: void write(java.lang.String)>($r0)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
android.location.LocationManager
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.util.f
com.jabra.sport.util.f
com.jabra.sport.util.f
java.io.Writer
com.jabra.sport.util.f
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>($r1, $r0)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
android.location.LocationManager
android.util.Log
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.util.f
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.util.f
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r1, $r0)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
android.location.LocationManager
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.util.f
android.util.Log
com.jabra.sport.util.f
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, $r0, $r2)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
android.location.LocationManager
android.util.Log
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.util.f
com.jabra.sport.util.f
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>($r5, $i0)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
com.jabra.sport.core.model.u$j
com.jabra.sport.wrapper.firstbeat.j
android.location.LocationManager
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.b.b$5
com.jabra.sport.core.model.o$b$4$1
com.jabra.sport.core.model.o$b$25
android.content.SharedPreferences$Editor
com.jabra.sport.core.model.b.b$3
android.os.Handler
com.jabra.sport.core.model.export.i$1
com.jabra.sport.core.model.u$j$1
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("TIME_OF_FIRST_VO2MAX_TEST_REMINDER", $l0)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
com.jabra.sport.core.model.b.b$3
android.content.SharedPreferences$Editor
android.os.Handler
android.location.LocationManager
com.jabra.sport.core.model.export.i$1
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.o$b$4$1
com.jabra.sport.core.model.o$b$25
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.b.b$1
com.jabra.sport.core.model.u$a
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("dummy_marker", 1)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
android.location.LocationManager
com.jabra.sport.core.model.o$b$19$1
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.o$b$19
com.jabra.sport.core.model.sportscommunity.schedule.a
android.os.Handler
com.jabra.sport.core.model.sportscommunity.schedule.a$1
com.jabra.sport.core.model.sportscommunity.schedule.a
com.jabra.sport.core.model.sportscommunity.schedule.c
com.jabra.sport.core.model.p
com.jabra.sport.core.model.o$b
android.content.SharedPreferences$Editor
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r1, $r0)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
android.util.Log
android.location.LocationManager
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.util.f
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.util.f
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> $l0 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("cloud_upload", null, $r2)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
android.os.Handler
android.database.sqlite.SQLiteDatabase
android.location.LocationManager
com.jabra.sport.core.model.Database
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.o$b$19
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.CloudUploadTable
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, $r0, $r2)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
android.location.LocationManager
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.util.f
android.util.Log
com.jabra.sport.util.f
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> $r5 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r3, null)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
android.location.LocationManager
com.jabra.sport.core.model.export.a
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.o$b$25
com.jabra.sport.core.model.Database
com.jabra.sport.core.model.Database
com.jabra.sport.core.model.Database
com.jabra.sport.core.model.SessionTable
android.database.sqlite.SQLiteDatabase
android.os.Handler
com.jabra.sport.core.model.export.i$1
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> virtualinvoke $r10.<java.io.BufferedWriter: void write(java.lang.String)>($r0)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
android.location.LocationManager
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.util.f
com.jabra.sport.util.f
com.jabra.sport.util.f
java.io.Writer
com.jabra.sport.util.f
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> $i1 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("cloud_upload", $r3, null)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
android.os.Handler
android.location.LocationManager
com.jabra.sport.core.model.CloudUploadTable
com.jabra.sport.core.model.export.i$1
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.Database
android.database.sqlite.SQLiteDatabase
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.o$b$25
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.o$b$21
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>($r5, $i0)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
com.jabra.sport.core.model.u$j$1
com.jabra.sport.wrapper.firstbeat.j
android.location.LocationManager
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.b.b$5
com.jabra.sport.core.model.o$b$4$1
com.jabra.sport.core.model.o$b$25
android.content.SharedPreferences$Editor
com.jabra.sport.core.model.b.b$3
android.os.Handler
com.jabra.sport.core.model.export.i$1
com.jabra.sport.core.model.u$j
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> $r7 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("session", $r5, $r4, null, null, null, null)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
android.location.LocationManager
com.jabra.sport.core.model.export.a
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.o$b$25
com.jabra.sport.core.model.Database
com.jabra.sport.core.model.Database
com.jabra.sport.core.model.Database
com.jabra.sport.core.model.SessionTable
android.database.sqlite.SQLiteDatabase
android.os.Handler
com.jabra.sport.core.model.export.i$1
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> virtualinvoke $r10.<java.io.BufferedWriter: void write(java.lang.String)>($r0)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
android.location.LocationManager
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.util.f
com.jabra.sport.util.f
com.jabra.sport.util.f
java.io.Writer
com.jabra.sport.util.f
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> $r6 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("session_values", null, $r4, null, null, null, $r5)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
com.jabra.sport.core.model.SessionDataTable
android.location.LocationManager
com.jabra.sport.core.model.export.a
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.o$b$25
com.jabra.sport.core.model.Database
com.jabra.sport.core.model.Database
android.database.sqlite.SQLiteDatabase
com.jabra.sport.core.model.Database
android.os.Handler
com.jabra.sport.core.model.export.i$1
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>($r5, $z0)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
com.jabra.sport.core.ui.equalizer.MusicStateObserver$1
android.os.Handler
android.os.Handler
android.location.LocationManager
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.ui.equalizer.EqualizerImpl$5
com.jabra.sport.core.model.o$b
android.content.SharedPreferences$Editor
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.u$d
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void close()>()
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
com.jabra.sport.core.model.o$b
android.database.sqlite.SQLiteClosable
android.location.LocationManager
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.Database
com.jabra.sport.core.model.o$b$1
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> $i1 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("session_values", $r3, null)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
com.jabra.sport.core.model.SessionDataTable
android.os.Handler
android.location.LocationManager
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.Database
android.database.sqlite.SQLiteDatabase
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.o$b$31
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> $r6 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("session", $r4, $r3, null, null, null, null)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
com.jabra.sport.core.model.o$b$13
android.database.sqlite.SQLiteDatabase
android.os.Handler
com.jabra.sport.core.model.Database
android.location.LocationManager
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.o$b$25
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.SessionTable
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("FIRST_BEAT_USAGE_LOGGED", 1)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
com.jabra.sport.core.model.SessionController$7
android.os.Handler
android.location.LocationManager
com.jabra.sport.core.model.s
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.u$a
com.jabra.sport.core.model.s
com.jabra.sport.core.model.o$b
android.content.SharedPreferences$Editor
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.o$b$6$1
com.jabra.sport.core.model.o$b$17
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> $i3 = staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>($i0, $r1, $r2)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
com.flurry.sdk.kf
android.location.LocationManager
com.jabra.sport.core.model.FlurryHelper$9
com.flurry.sdk.kf
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.flurry.sdk.kf
com.jabra.sport.core.model.o$b$6$1
com.jabra.sport.core.model.FlurryHelper
android.util.Log
com.jabra.sport.core.model.SessionController$7
android.os.Handler
com.flurry.android.FlurryAgent
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.o$b$17
Category: com.flurry.sdk.kf-*-com.flurry.sdk.kf-*-com.flurry.sdk.kf-*-com.flurry.android.FlurryAgent-*-
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> $r5 = interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("pref_sync_adapter_setup_complete", 1)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
com.jabra.sport.core.model.sportscommunity.schedule.a
android.os.Handler
android.location.LocationManager
com.jabra.sport.core.model.o$b$19$1
com.jabra.sport.core.model.sportscommunity.schedule.a$1
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.sportscommunity.schedule.a
com.jabra.sport.core.model.sportscommunity.schedule.c
com.jabra.sport.core.model.o$b$19
com.jabra.sport.core.model.o$b
android.content.SharedPreferences$Editor
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, $r0, $r2)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
android.os.Handler
android.location.LocationManager
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.compression.c$3
com.jabra.sport.util.f
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.o$b$25
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
android.util.Log
com.jabra.sport.util.f
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> $r9 = virtualinvoke $r8.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("session AS s INNER JOIN achievement AS a ON s._id = a._id", $r4, $r3, null, null, null, null)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
android.location.LocationManager
com.jabra.sport.core.model.SessionController$4
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.o$b$25
com.jabra.sport.core.model.o$b$13
android.database.sqlite.SQLiteDatabase
com.jabra.sport.core.model.o$b$16
android.os.Handler
com.jabra.sport.core.model.o$b$13$1
com.jabra.sport.core.model.Database
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, $r0, $r2)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
android.location.LocationManager
android.util.Log
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.util.f
com.jabra.sport.util.f
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("SESSION_COMPRESSION_LAST_RULE_VERSION", 1)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
com.jabra.sport.core.ui.equalizer.MusicStateObserver$1
com.jabra.sport.core.model.s
android.location.LocationManager
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.App
com.jabra.sport.core.model.SessionController$8
android.content.SharedPreferences$Editor
com.jabra.sport.core.model.u$a
com.jabra.sport.App$a$2
com.jabra.sport.core.model.SessionController$8
android.os.Handler
android.os.Handler
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.s
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.s
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> $r5 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("circuit_training", null, $r4, null, null, null, null)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
android.location.LocationManager
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.CircuitTrainingTable
com.jabra.sport.core.model.o$b$25
com.jabra.sport.core.model.Database
com.jabra.sport.core.model.SessionTable
android.database.sqlite.SQLiteDatabase
com.jabra.sport.core.model.o$b$39
android.os.Handler
com.jabra.sport.core.model.TargetTable
com.jabra.sport.core.model.export.i$1
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, $r0)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
android.os.Handler
android.location.LocationManager
com.jabra.sport.util.f
com.jabra.sport.core.model.export.i$1
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.util.f
android.util.Log
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.o$b$25
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
Category: LEGIT
-----------------------------------------------------------------
Source=> $r7 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
Sink=> $l0 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("circuit", null, $r2)
Component=> com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
ComponentColor=> GREEN
android.os.Handler
android.database.sqlite.SQLiteDatabase
android.location.LocationManager
com.jabra.sport.core.model.export.i$1
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
com.jabra.sport.core.model.ExerciseResultTable
com.jabra.sport.core.model.o$b
com.jabra.sport.core.model.o$b$37
com.jabra.sport.core.model.Database
com.jabra.sport.core.model.o$b$25
com.jabra.sport.core.model.findmyheadset.HeadsetStateReceiver
Category: LEGIT
-----------------------------------------------------------------
com.jabra.sport.apk: 1082810
