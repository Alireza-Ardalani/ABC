<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $d0 = virtualinvoke $r8.<android.location.Location: double getLongitude()>()
<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $r12 := @caughtexception
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> nop
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> $r3 = new com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void <init>(boolean)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> specialinvoke $r3.<com.inmarket.m2m.internal.log.LogI: void <init>(boolean)>(0)
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e> = $r3
<com.inmarket.m2m.internal.log.LogI: void b(java.lang.String,java.lang.String)> --> $r2 = staticinvoke <com.inmarket.m2m.internal.log.Log: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>("DEBUG", $r1, $r2)
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: void a(java.lang.Boolean)> --> virtualinvoke $r3.<com.inmarket.m2m.internal.log.LogI: void b(java.lang.String,java.lang.String)>("iM.M2M.RN.IBeaconService", "scanLeDevice() - disabling scan")
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: void a(java.lang.Boolean)> --> r0.<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: boolean b> = 0
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.IBeaconManager: com.inmarket.m2m.internal.radiusnetworks.ibeacon.IBeaconManager a(android.content.Context)> --> $r2 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e>
<com.inmarket.m2m.internal.log.LogI: void b(java.lang.String,java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void b(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $d0 = virtualinvoke $r8.<android.location.Location: double getLatitude()>()
<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $r12 := @caughtexception
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> nop
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> $r3 = new com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void <init>(boolean)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> specialinvoke $r3.<com.inmarket.m2m.internal.log.LogI: void <init>(boolean)>(0)
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e> = $r3
<com.inmarket.m2m.internal.log.LogI: void a(java.lang.String,java.lang.String)> --> $r2 = staticinvoke <com.inmarket.m2m.internal.log.Log: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>("VERBOSE", $r1, $r2)
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.IBeaconManager: void a(com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService$IBeaconServiceEvent)> --> virtualinvoke $r2.<com.inmarket.m2m.internal.log.LogI: void a(java.lang.String,java.lang.String)>("inmarket.BLESTATE", $r4)
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: void a(java.lang.Boolean)> --> virtualinvoke $r3.<com.inmarket.m2m.internal.log.LogI: void b(java.lang.String,java.lang.String)>("iM.M2M.RN.IBeaconService", $r6)
<com.facebook.ads.internal.g$1: void run()> --> virtualinvoke $r2.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r3, 250L)
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> interfaceinvoke param0.<java.lang.Runnable: void run()>()
<com.sansaver.coupons.app.android.view.activity.a: void n()> --> virtualinvoke $r5.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r7, 60000L)
<com.sansaver.coupons.app.android.view.activity.a: void n()> --> return
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: void h()> --> virtualinvoke $r4.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r7, $l0)
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: void onCreate()> --> virtualinvoke $r1.<com.inmarket.m2m.internal.log.LogI: void b(java.lang.String,java.lang.String)>("iM.M2M.RN.IBeaconService", "iBeaconService is starting up")
<com.inmarket.m2m.internal.IBeaconConsumerService: void q()> --> virtualinvoke $r1.<com.inmarket.m2m.internal.log.LogI: void a(java.lang.String,java.lang.String)>($r2, "pause() - iBeaconManager is bound, so clearing all")
<com.inmarket.m2m.internal.IBeaconConsumerService: int onStartCommand(android.content.Intent,int,int)> --> $r3 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e>
<com.inmarket.m2m.internal.log.LogI: void b(java.lang.String,java.lang.String,java.lang.Throwable)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void b(java.lang.String,java.lang.String,java.lang.Throwable)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, $r2, $r3)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.inmarket.m2m.internal.geofence.locations.LocationFixService: void a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> entermonitor class "Lcom/inmarket/m2m/internal/State;"
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> $r0 = new com.inmarket.m2m.internal.State
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State C> = $r0
<com.inmarket.m2m.M2MBeaconMonitor: boolean b()> --> $z0 = staticinvoke <com.inmarket.m2m.M2MBeaconMonitor: boolean a(com.inmarket.m2m.M2MListenerInterface)>(null)
<com.inmarket.m2m.M2MBeaconMonitor: void a(android.app.Activity,boolean)> --> staticinvoke <com.inmarket.m2m.M2MBeaconMonitor: boolean b()>()
<com.inmarket.m2m.internal.M2MServiceUtil: void a(android.content.Context)> --> $r1 = staticinvoke <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()>()
<com.inmarket.m2m.internal.geofence.locations.LocationStateIntentService: void onHandleIntent(android.content.Intent)> --> staticinvoke <com.inmarket.m2m.internal.ExecutorUtil: void b(java.lang.Runnable)>($r24)
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> $r0 = <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State C>
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> if $r0 != null goto $r0 = <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State C>
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State C> = $r0
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> $r0 = <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State C>
<com.inmarket.m2m.internal.geofence.locations.LocationStateIntentService: void onHandleIntent(android.content.Intent)> --> $r2 = staticinvoke <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()>()
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State$BEACON_SLEEP_STATE u()> --> r0 := @this: com.inmarket.m2m.internal.State
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State$BEACON_SLEEP_STATE u()> --> r1 = r0.<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State$BEACON_SLEEP_STATE x>
<com.inmarket.m2m.internal.geofence.locations.LocationStateIntentService: void onHandleIntent(android.content.Intent)> --> $r22 = virtualinvoke $r2.<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State$BEACON_SLEEP_STATE u()>()
<com.inmarket.m2m.internal.geofence.locations.LocationStateIntentService: void onHandleIntent(android.content.Intent)> --> if $r22 != $r25 goto $r22 = <com.inmarket.m2m.internal.State$BEACON_SLEEP_STATE: com.inmarket.m2m.internal.State$BEACON_SLEEP_STATE b>
<com.inmarket.m2m.internal.network.OkNetworkTask: void <clinit>()> --> nop
<com.inmarket.m2m.internal.network.OkNetworkTask: void <clinit>()> --> $r5 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>("application/json; charset=utf-8")
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/MoatAnalytics;"
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r1 = new com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r13 = staticinvoke <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()>()
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $z0 = r0.<com.moat.analytics.mobile.ine.k: boolean f>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> if $z0 == 0 goto $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/w;"
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = new com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void <init>()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> specialinvoke $r0.<com.moat.analytics.mobile.ine.w: void <init>()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> specialinvoke r0.<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r1, $r2)
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> virtualinvoke $r13.<com.moat.analytics.mobile.ine.MoatAnalytics: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r12, $r14)
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> $r2 = r0.<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w$d a>
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> if $r2 != $r3 goto specialinvoke r0.<com.moat.analytics.mobile.ine.w: void d()>()
<com.moat.analytics.mobile.ine.w: void e()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.sansaver.coupons.app.android.view.activity.CouponActivity$2$1: void run()> --> r0 := @this: com.sansaver.coupons.app.android.view.activity.CouponActivity$2$1
<com.b.a.j: com.b.a.d a(java.lang.String)> --> r0 := @this: com.b.a.j
<com.b.a.j: com.b.a.d g()> --> r0 := @this: com.b.a.j
<com.b.a.j: com.b.a.d a(java.lang.Class)> --> r0 := @this: com.b.a.j
<com.b.a.g: com.b.a.d.c.l a(java.lang.Class,android.content.Context)> --> $r0 := @parameter0: java.lang.Class
<com.b.a.g: com.b.a.d.c.l a(java.lang.Class,java.lang.Class,android.content.Context)> --> $r0 := @parameter0: java.lang.Class
<com.b.a.g: com.b.a.d.c.l a(java.lang.Class,java.lang.Class,android.content.Context)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Glide", "Unable to load null model, setting placeholder only")
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $d0 = virtualinvoke $r8.<android.location.Location: double getLongitude()>()
<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $r12 := @caughtexception
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> nop
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e> = $r3
<com.inmarket.m2m.internal.IBeaconConsumerService$AlarmManagerSchedulerAndReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e>
<com.inmarket.m2m.internal.IBeaconConsumerService$AlarmManagerSchedulerAndReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r23 := @caughtexception
<com.inmarket.m2m.internal.IBeaconConsumerService: void e(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.log.LogI: void d(java.lang.String,java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void d(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/MoatAnalytics;"
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r1 = new com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r1 = new com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r2 := @caughtexception
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r3
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.p: void a(java.lang.String,java.lang.String)> --> $r3 = staticinvoke <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()>()
<com.moat.analytics.mobile.ine.p: void a(java.lang.String,java.lang.String)> --> $r4 = (com.moat.analytics.mobile.ine.k) $r3
<com.moat.analytics.mobile.ine.p: void a(java.lang.String,java.lang.String)> --> $z0 = $r4.<com.moat.analytics.mobile.ine.k: boolean a>
<com.moat.analytics.mobile.ine.p: void a(java.lang.String,java.lang.String)> --> if $z0 == 0 goto return
<com.moat.analytics.mobile.ine.p: void a(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>($b0, "MoatAnalytics", $r0)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/MoatAnalytics;"
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r1 = new com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r13 = staticinvoke <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()>()
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $z0 = r0.<com.moat.analytics.mobile.ine.k: boolean f>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> if $z0 == 0 goto $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/w;"
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = new com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void <init>()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> specialinvoke $r0.<com.moat.analytics.mobile.ine.w: void <init>()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> specialinvoke r0.<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r1, $r2)
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> virtualinvoke $r13.<com.moat.analytics.mobile.ine.MoatAnalytics: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r12, $r14)
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> $r2 = r0.<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w$d a>
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> if $r2 != $r3 goto specialinvoke r0.<com.moat.analytics.mobile.ine.w: void d()>()
<com.moat.analytics.mobile.ine.w: void e()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.inmarket.m2m.internal.M2MWebViewActivity$$Lambda$3: void run()> --> r0 := @this: com.inmarket.m2m.internal.M2MWebViewActivity$$Lambda$3
<com.inmarket.m2m.internal.M2MWebViewActivity: void access$lambda$2(com.inmarket.m2m.internal.M2MWebViewActivity)> --> $r0 := @parameter0: com.inmarket.m2m.internal.M2MWebViewActivity
<com.inmarket.m2m.internal.M2MWebViewActivity: void lambda$onDestroy$2()> --> r0 := @this: com.inmarket.m2m.internal.M2MWebViewActivity
<com.inmarket.m2m.internal.M2MWebView: void f()> --> r0 := @this: com.inmarket.m2m.internal.M2MWebView
<com.inmarket.m2m.internal.M2MWebViewClient: com.inmarket.m2m.internal.M2MWebViewClient a(com.inmarket.m2m.internal.M2MWebViewClientListener)> --> r0 := @this: com.inmarket.m2m.internal.M2MWebViewClient
<com.inmarket.m2m.internal.M2MWebViewClient: void a(com.inmarket.m2m.internal.M2MWebViewClientListener,boolean)> --> r0 := @this: com.inmarket.m2m.internal.M2MWebViewClient
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.b.a.e$1: void run()> --> r0 := @this: com.b.a.e$1
<com.b.a.e: com.b.a.h.b.j a(com.b.a.h.b.j)> --> r0 := @this: com.b.a.e
<com.b.a.e.m: void a(com.b.a.h.c)> --> r0 := @this: com.b.a.e.m
<com.b.a.h.b: void b()> --> r0 := @this: com.b.a.h.b
<com.b.a.h.b: void a(java.lang.Exception)> --> r0 := @this: com.b.a.h.b
<com.b.a.h.b: void a(java.lang.Exception)> --> $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("GenericRequest", 3)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/MoatAnalytics;"
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r1 = new com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r1 = new com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r2 := @caughtexception
<com.moat.analytics.mobile.ine.m: void a(java.lang.Exception)> --> $r0 := @parameter0: java.lang.Exception
<com.moat.analytics.mobile.ine.m: void a(java.lang.Exception)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MoatException", $r2)
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $d0 = virtualinvoke $r8.<android.location.Location: double getLongitude()>()
<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $r12 := @caughtexception
<com.inmarket.m2m.internal.log.Log: void a(java.lang.String,java.lang.String,java.lang.Throwable)> --> $r0 := @parameter0: java.lang.String
<com.inmarket.m2m.internal.log.LogI: void a(java.lang.String,java.lang.String,java.lang.Throwable)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void a(java.lang.String,java.lang.String,java.lang.Throwable)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, $r2, $r3)
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $d0 = virtualinvoke $r8.<android.location.Location: double getLatitude()>()
<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $r12 := @caughtexception
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> nop
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e> = $r3
<com.inmarket.m2m.internal.IBeaconConsumerService$AlarmManagerSchedulerAndReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e>
<com.inmarket.m2m.internal.IBeaconConsumerService$AlarmManagerSchedulerAndReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r23 := @caughtexception
<com.inmarket.m2m.internal.log.LogI: void a(java.lang.String,java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void a(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/MoatAnalytics;"
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r1 = new com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r13 = staticinvoke <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()>()
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $z0 = r0.<com.moat.analytics.mobile.ine.k: boolean f>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> if $z0 == 0 goto $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/w;"
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = new com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void <init>()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> specialinvoke $r0.<com.moat.analytics.mobile.ine.w: void <init>()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> specialinvoke r0.<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r1, $r2)
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> virtualinvoke $r13.<com.moat.analytics.mobile.ine.MoatAnalytics: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r12, $r14)
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> $r2 = r0.<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w$d a>
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> if $r2 != $r3 goto specialinvoke r0.<com.moat.analytics.mobile.ine.w: void d()>()
<com.moat.analytics.mobile.ine.w: void e()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.moat.analytics.mobile.ine.w$a: void run()> --> r0 := @this: com.moat.analytics.mobile.ine.w$a
<com.moat.analytics.mobile.ine.w$a: void a()> --> r0 := @this: com.moat.analytics.mobile.ine.w$a
<com.moat.analytics.mobile.ine.w$a: java.lang.String b()> --> r0 := @this: com.moat.analytics.mobile.ine.w$a
<com.moat.analytics.mobile.ine.q: com.moat.analytics.mobile.ine.a.b.a a(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.moat.analytics.mobile.ine.q: com.moat.analytics.mobile.ine.a.b.a a(java.lang.String)> --> $i0 = virtualinvoke $r4.<java.net.HttpURLConnection: int getResponseCode()>()
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> $r8 = interfaceinvoke $r8.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("beaudience_configuration", $r4)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.inmarket.m2m.internal.M2MServiceUtil: void k(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.IBeaconConsumerService: void a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.log.LogI: void b(java.lang.String,java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void b(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void a(android.content.Context,com.inmarket.m2m.M2MListenerInterface)> --> $r12 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void a(android.content.Context,com.inmarket.m2m.M2MListenerInterface)> --> if $r11 == $r12 goto return
<com.inmarket.m2m.internal.log.LogI: void d(java.lang.String,java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void d(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: void log(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.cuebiq.cuebiqsdk.utils.Logger: void log(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.cuebiq.cuebiqsdk.utils.Logger: void log(java.lang.String)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("[CuebiqSDK]", $r3)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/MoatAnalytics;"
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r1 = new com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r13 = staticinvoke <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()>()
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $z0 = r0.<com.moat.analytics.mobile.ine.k: boolean f>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> if $z0 == 0 goto $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/w;"
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = new com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void <init>()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> specialinvoke $r0.<com.moat.analytics.mobile.ine.w: void <init>()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> specialinvoke r0.<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r1, $r2)
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> virtualinvoke $r13.<com.moat.analytics.mobile.ine.MoatAnalytics: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r12, $r14)
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> $r2 = r0.<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w$d a>
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> if $r2 != $r3 goto specialinvoke r0.<com.moat.analytics.mobile.ine.w: void d()>()
<com.moat.analytics.mobile.ine.w: void e()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.inmarket.m2m.internal.M2MWebViewActivity$$Lambda$3: void run()> --> r0 := @this: com.inmarket.m2m.internal.M2MWebViewActivity$$Lambda$3
<com.inmarket.m2m.internal.M2MWebViewActivity: void access$lambda$2(com.inmarket.m2m.internal.M2MWebViewActivity)> --> $r0 := @parameter0: com.inmarket.m2m.internal.M2MWebViewActivity
<com.inmarket.m2m.internal.M2MWebViewActivity: void lambda$onDestroy$2()> --> r0 := @this: com.inmarket.m2m.internal.M2MWebViewActivity
<com.inmarket.m2m.internal.M2MWebView: void f()> --> r0 := @this: com.inmarket.m2m.internal.M2MWebView
<com.inmarket.m2m.internal.M2MWebViewClient: com.inmarket.m2m.internal.M2MWebViewClient a(com.inmarket.m2m.internal.M2MWebViewClientListener)> --> r0 := @this: com.inmarket.m2m.internal.M2MWebViewClient
<com.inmarket.m2m.internal.M2MWebViewClient: void a(com.inmarket.m2m.internal.M2MWebViewClientListener,boolean)> --> r0 := @this: com.inmarket.m2m.internal.M2MWebViewClient
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.b.a.e$1: void run()> --> r0 := @this: com.b.a.e$1
<com.b.a.e: com.b.a.h.b.j a(com.b.a.h.b.j)> --> r0 := @this: com.b.a.e
<com.b.a.e.m: void a(com.b.a.h.c)> --> r0 := @this: com.b.a.e.m
<com.b.a.h.b: void b()> --> r0 := @this: com.b.a.h.b
<com.b.a.h.b: void a(java.lang.Exception)> --> r0 := @this: com.b.a.h.b
<com.b.a.h.b: void a(java.lang.Exception)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("GenericRequest", "load failed", $r1)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.inmarket.m2m.internal.geofence.locations.LocationFixService: void a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> entermonitor class "Lcom/inmarket/m2m/internal/State;"
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> $r0 = new com.inmarket.m2m.internal.State
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State C> = $r0
<com.inmarket.m2m.M2MBeaconMonitor: boolean b()> --> $z0 = staticinvoke <com.inmarket.m2m.M2MBeaconMonitor: boolean a(com.inmarket.m2m.M2MListenerInterface)>(null)
<com.inmarket.m2m.M2MBeaconMonitor: void a(android.app.Activity,boolean)> --> staticinvoke <com.inmarket.m2m.M2MBeaconMonitor: boolean b()>()
<com.inmarket.m2m.internal.ActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)> --> $r4 = staticinvoke <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()>()
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> $r0 = <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State C>
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> if $r0 != null goto $r0 = <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State C>
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State C> = $r0
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> $r0 = <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State C>
<com.inmarket.m2m.internal.geofence.locations.LocationStateIntentService: void onHandleIntent(android.content.Intent)> --> $r2 = staticinvoke <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()>()
<com.inmarket.m2m.internal.State: android.location.Location n()> --> r0 := @this: com.inmarket.m2m.internal.State
<com.inmarket.m2m.internal.State: android.location.Location n()> --> r1 = r0.<com.inmarket.m2m.internal.State: android.location.Location z>
<com.inmarket.m2m.internal.geofence.locations.LocationStateIntentService: void onHandleIntent(android.content.Intent)> --> $r8 = virtualinvoke $r2.<com.inmarket.m2m.internal.State: android.location.Location n()>()
<com.inmarket.m2m.internal.geofence.locations.LocationStateIntentService: void onHandleIntent(android.content.Intent)> --> if $r8 == null goto $r9 = null
<com.inmarket.m2m.internal.geofence.locations.LocationStateIntentService: void onHandleIntent(android.content.Intent)> --> $r9 = null
<com.inmarket.m2m.internal.geofence.locations.LocationStateIntentService: void onHandleIntent(android.content.Intent)> --> if $r9 == null goto $r15 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(0)
<com.inmarket.m2m.internal.geofence.Util: com.inmarket.m2m.internal.geofence.locations.IMLocation a(android.content.Context,com.inmarket.m2m.internal.geofence.locations.IMLocation)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.geofence.locations.LocationFixService: void e(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.geofence.locations.LocationFixService: void d(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.geofence.Util: void a(java.io.File,java.io.Serializable)> --> $r0 := @parameter0: java.io.File
<com.inmarket.m2m.internal.geofence.Util: void a(java.io.File,java.io.Serializable)> --> virtualinvoke $r7.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r1)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.inmarket.m2m.internal.geofence.locations.LocationFixService: void a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> entermonitor class "Lcom/inmarket/m2m/internal/State;"
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> $r0 = new com.inmarket.m2m.internal.State
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State C> = $r0
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> $r0 = <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State C>
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> if $r0 != null goto $r0 = <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State C>
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State C> = $r0
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> $r0 = <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State C>
<com.inmarket.m2m.internal.State: void a(java.lang.String,java.lang.String)> --> r0 = staticinvoke <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()>()
<com.inmarket.m2m.internal.State: void a(java.lang.String,java.lang.String)> --> interfaceinvoke $r6.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("device_uuid", $r2)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.inmarket.m2m.internal.M2MServiceUtil: void k(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.IBeaconConsumerService: void a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.IBeaconConsumerService: void a(android.content.Context)> --> $r7 = new java.util.HashMap
<com.inmarket.m2m.internal.IBeaconConsumerService: void a(android.content.Context)> --> <com.inmarket.m2m.internal.IBeaconConsumerService: java.util.Map x> = $r7
<com.inmarket.m2m.internal.IBeaconConsumerService: void a(android.content.Context)> --> $r6 = <com.inmarket.m2m.internal.IBeaconConsumerService: java.util.Map x>
<com.inmarket.m2m.internal.IBeaconConsumerService: void a(android.content.Context)> --> if $r6 != null goto $r8 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e>
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> nop
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> $r3 = new com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void <init>(boolean)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> specialinvoke $r3.<com.inmarket.m2m.internal.log.LogI: void <init>(boolean)>(0)
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e> = $r3
<com.inmarket.m2m.internal.log.LogI: void d(java.lang.String,java.lang.String)> --> $r2 = staticinvoke <com.inmarket.m2m.internal.log.Log: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>("INFO", $r1, $r2)
<com.inmarket.m2m.internal.IBeaconConsumerService: void a(android.content.Context)> --> virtualinvoke $r8.<com.inmarket.m2m.internal.log.LogI: void d(java.lang.String,java.lang.String)>("inmarket.FERALBEACON", $r9)
<com.inmarket.m2m.internal.IBeaconConsumerService: void a(android.content.Context)> --> $r8 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e>
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.IBeaconIntentProcessor: void onHandleIntent(android.content.Intent)> --> virtualinvoke $r5.<com.inmarket.m2m.internal.log.LogI: void b(java.lang.String,java.lang.String)>("iM.M2M.RN.IBeaconIntentProcessor", "onHandleIntent() - got monitoring data")
<dummyMainClass: void dummyMainMethod(java.lang.String[])> --> virtualinvoke jsInterface.<com.facebook.ads.internal.view.c$a: void onPageInitialized()>()
<com.inmarket.m2m.internal.IBeaconConsumerService: int onStartCommand(android.content.Intent,int,int)> --> $r3 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e>
<com.inmarket.m2m.internal.log.LogI: void a(java.lang.String,java.lang.String,java.lang.Throwable)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void a(java.lang.String,java.lang.String,java.lang.Throwable)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, $r2, $r3)
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $d0 = virtualinvoke $r8.<android.location.Location: double getLatitude()>()
<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $r12 := @caughtexception
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> nop
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> $r3 = new com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void <init>(boolean)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> specialinvoke $r3.<com.inmarket.m2m.internal.log.LogI: void <init>(boolean)>(0)
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e> = $r3
<com.inmarket.m2m.internal.log.LogI: void a(java.lang.String,java.lang.String)> --> $r2 = staticinvoke <com.inmarket.m2m.internal.log.Log: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>("VERBOSE", $r1, $r2)
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.IBeaconManager: void a(com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService$IBeaconServiceEvent)> --> virtualinvoke $r2.<com.inmarket.m2m.internal.log.LogI: void a(java.lang.String,java.lang.String)>("inmarket.BLESTATE", $r4)
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: void a(java.lang.Boolean)> --> virtualinvoke $r3.<com.inmarket.m2m.internal.log.LogI: void b(java.lang.String,java.lang.String)>("iM.M2M.RN.IBeaconService", $r6)
<com.facebook.ads.internal.g$1: void run()> --> virtualinvoke $r2.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r3, 250L)
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> interfaceinvoke param0.<java.lang.Runnable: void run()>()
<com.sansaver.coupons.app.android.view.activity.a: void n()> --> virtualinvoke $r5.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r7, 60000L)
<com.sansaver.coupons.app.android.view.activity.a: void n()> --> return
<com.sansaver.coupons.app.android.view.activity.a: void onStart()> --> specialinvoke r0.<com.sansaver.coupons.app.android.view.activity.a: void n()>()
<dummyMainClass: com.sansaver.coupons.app.android.view.activity.CouponActivity dummyMainMethod_com_sansaver_coupons_app_android_view_activity_CouponActivity(android.content.Intent)> --> virtualinvoke $r0.<com.sansaver.coupons.app.android.view.activity.a: void onStart()>()
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.IBeaconManager: com.inmarket.m2m.internal.radiusnetworks.ibeacon.IBeaconManager a(android.content.Context)> --> $r2 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e>
<com.inmarket.m2m.internal.log.LogI: void b(java.lang.String,java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void b(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/MoatAnalytics;"
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r1 = new com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r13 = staticinvoke <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()>()
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $z0 = r0.<com.moat.analytics.mobile.ine.k: boolean f>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> if $z0 == 0 goto $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/w;"
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = new com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void <init>()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> specialinvoke $r0.<com.moat.analytics.mobile.ine.w: void <init>()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> specialinvoke r0.<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r1, $r2)
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> virtualinvoke $r13.<com.moat.analytics.mobile.ine.MoatAnalytics: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r12, $r14)
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> $r2 = r0.<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w$d a>
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> if $r2 != $r3 goto specialinvoke r0.<com.moat.analytics.mobile.ine.w: void d()>()
<com.moat.analytics.mobile.ine.w: void e()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.moat.analytics.mobile.ine.w$a: void run()> --> r0 := @this: com.moat.analytics.mobile.ine.w$a
<com.moat.analytics.mobile.ine.w$a: void a()> --> r0 := @this: com.moat.analytics.mobile.ine.w$a
<com.moat.analytics.mobile.ine.w$a: java.lang.String b()> --> r0 := @this: com.moat.analytics.mobile.ine.w$a
<com.moat.analytics.mobile.ine.q: com.moat.analytics.mobile.ine.a.b.a a(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.moat.analytics.mobile.ine.q: com.moat.analytics.mobile.ine.a.b.a a(java.lang.String)> --> virtualinvoke $r4.<java.net.HttpURLConnection: void setDoInput(boolean)>(1)
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $d0 = virtualinvoke $r8.<android.location.Location: double getLatitude()>()
<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $r12 := @caughtexception
<com.inmarket.m2m.internal.log.Log: void a(java.lang.String,java.lang.String,java.lang.Throwable)> --> $r0 := @parameter0: java.lang.String
<com.inmarket.m2m.internal.log.LogI: void a(java.lang.String,java.lang.String,java.lang.Throwable)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void a(java.lang.String,java.lang.String,java.lang.Throwable)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, $r2, $r3)
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $d0 = virtualinvoke $r8.<android.location.Location: double getLongitude()>()
<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $r12 := @caughtexception
<com.inmarket.m2m.internal.log.Log: void a(java.lang.String,java.lang.String,java.lang.Throwable)> --> $r0 := @parameter0: java.lang.String
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> nop
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e> = $r3
<com.inmarket.m2m.internal.IBeaconConsumerService$AlarmManagerSchedulerAndReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e>
<com.inmarket.m2m.internal.IBeaconConsumerService$AlarmManagerSchedulerAndReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r23 := @caughtexception
<com.inmarket.m2m.internal.log.LogI: void a(java.lang.String,java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void a(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/MoatAnalytics;"
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r1 = new com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r13 = staticinvoke <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()>()
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $z0 = r0.<com.moat.analytics.mobile.ine.k: boolean f>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> if $z0 == 0 goto $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/w;"
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = new com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void <init>()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> specialinvoke $r0.<com.moat.analytics.mobile.ine.w: void <init>()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> specialinvoke r0.<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r1, $r2)
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> virtualinvoke $r13.<com.moat.analytics.mobile.ine.MoatAnalytics: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r12, $r14)
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> $r2 = r0.<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w$d a>
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> if $r2 != $r3 goto specialinvoke r0.<com.moat.analytics.mobile.ine.w: void d()>()
<com.moat.analytics.mobile.ine.w: void e()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.moat.analytics.mobile.ine.w$a: void run()> --> r0 := @this: com.moat.analytics.mobile.ine.w$a
<com.moat.analytics.mobile.ine.w$a: void a()> --> r0 := @this: com.moat.analytics.mobile.ine.w$a
<com.moat.analytics.mobile.ine.w$a: java.lang.String b()> --> r0 := @this: com.moat.analytics.mobile.ine.w$a
<com.moat.analytics.mobile.ine.q: com.moat.analytics.mobile.ine.a.b.a a(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.moat.analytics.mobile.ine.q: com.moat.analytics.mobile.ine.a.b.a a(java.lang.String)> --> specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r0)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> $r0 = <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInject>
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInstance> = $r1
<com.cuebiq.cuebiqsdk.receiver.CoverageReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r5 = staticinvoke <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()>()
<com.cuebiq.cuebiqsdk.receiver.CoverageReceiver: void onReceive(android.content.Context,android.content.Intent)> --> return
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> if $r0 != null goto $r0 = <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInject>
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> $r0 = <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInstance>
<com.cuebiq.cuebiqsdk.receiver.CoverageReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r5 = staticinvoke <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()>()
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: void setLocationON(android.content.Context,boolean)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: void setLocationON(android.content.Context,boolean)> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("bea_location_on", $z0)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> $r0 = <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInject>
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInstance> = $r1
<com.cuebiq.cuebiqsdk.receiver.CoverageReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r5 = staticinvoke <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()>()
<com.cuebiq.cuebiqsdk.receiver.CoverageReceiver: void onReceive(android.content.Context,android.content.Intent)> --> return
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> if $r0 != null goto $r0 = <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInject>
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> $r0 = <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInstance>
<com.cuebiq.cuebiqsdk.receiver.CoverageReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r5 = staticinvoke <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()>()
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: void saveSchedulerStatus(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.AlgorithmScheduler$AlgorithmSchedulerStatus)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: void saveSchedulerStatus(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.AlgorithmScheduler$AlgorithmSchedulerStatus)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("q_scheduler_status", $r5)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.inmarket.m2m.internal.M2MServiceUtil: void k(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.IBeaconConsumerService: void a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.IBeaconConsumerService: void a(android.content.Context)> --> $r7 = new java.util.HashMap
<com.inmarket.m2m.internal.IBeaconConsumerService: void a(android.content.Context)> --> <com.inmarket.m2m.internal.IBeaconConsumerService: java.util.Map x> = $r7
<com.inmarket.m2m.internal.IBeaconConsumerService: void a(android.content.Context)> --> $r6 = <com.inmarket.m2m.internal.IBeaconConsumerService: java.util.Map x>
<com.inmarket.m2m.internal.IBeaconConsumerService: void a(android.content.Context)> --> if $r6 != null goto $r8 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e>
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> nop
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> $r3 = new com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void <init>(boolean)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> specialinvoke $r3.<com.inmarket.m2m.internal.log.LogI: void <init>(boolean)>(0)
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e> = $r3
<com.inmarket.m2m.internal.log.LogI: void d(java.lang.String,java.lang.String)> --> $r2 = staticinvoke <com.inmarket.m2m.internal.log.Log: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>("INFO", $r1, $r2)
<com.inmarket.m2m.internal.IBeaconConsumerService: void a(android.content.Context)> --> virtualinvoke $r8.<com.inmarket.m2m.internal.log.LogI: void d(java.lang.String,java.lang.String)>("inmarket.FERALBEACON", $r9)
<com.inmarket.m2m.internal.IBeaconConsumerService: void a(android.content.Context)> --> $r8 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e>
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: void onCreate()> --> virtualinvoke $r1.<com.inmarket.m2m.internal.log.LogI: void b(java.lang.String,java.lang.String)>("iM.M2M.RN.IBeaconService", "iBeaconService is starting up")
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: void a(java.lang.Boolean)> --> $r3 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e>
<com.inmarket.m2m.internal.log.LogI: void e(java.lang.String,java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void e(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $d0 = virtualinvoke $r8.<android.location.Location: double getLatitude()>()
<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $r12 := @caughtexception
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> nop
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> $r3 = new com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void <init>(boolean)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> specialinvoke $r3.<com.inmarket.m2m.internal.log.LogI: void <init>(boolean)>(0)
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e> = $r3
<com.inmarket.m2m.internal.log.LogI: void a(java.lang.String,java.lang.String)> --> $r2 = staticinvoke <com.inmarket.m2m.internal.log.Log: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>("VERBOSE", $r1, $r2)
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.IBeaconManager: void a(com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService$IBeaconServiceEvent)> --> virtualinvoke $r2.<com.inmarket.m2m.internal.log.LogI: void a(java.lang.String,java.lang.String)>("inmarket.BLESTATE", $r4)
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: void a(java.lang.Boolean)> --> virtualinvoke $r3.<com.inmarket.m2m.internal.log.LogI: void b(java.lang.String,java.lang.String)>("iM.M2M.RN.IBeaconService", $r6)
<com.facebook.ads.internal.g$1: void run()> --> virtualinvoke $r2.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r3, 250L)
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> interfaceinvoke param0.<java.lang.Runnable: void run()>()
<com.sansaver.coupons.app.android.view.activity.a: void n()> --> virtualinvoke $r5.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r7, 60000L)
<com.sansaver.coupons.app.android.view.activity.a: void n()> --> return
<com.sansaver.coupons.app.android.view.activity.a: void onStart()> --> specialinvoke r0.<com.sansaver.coupons.app.android.view.activity.a: void n()>()
<dummyMainClass: com.sansaver.coupons.app.android.view.activity.DealActivity dummyMainMethod_com_sansaver_coupons_app_android_view_activity_DealActivity(android.content.Intent)> --> virtualinvoke $r0.<com.sansaver.coupons.app.android.view.activity.a: void onStart()>()
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: void a(java.lang.Boolean)> --> $r3 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e>
<com.inmarket.m2m.internal.log.LogI: void c(java.lang.String,java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void c(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> $r0 = <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInject>
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInstance> = $r1
<com.cuebiq.cuebiqsdk.receiver.CoverageReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r5 = staticinvoke <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()>()
<com.cuebiq.cuebiqsdk.receiver.CoverageReceiver: void onReceive(android.content.Context,android.content.Intent)> --> return
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> if $r0 != null goto $r0 = <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInject>
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> $r0 = <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInstance>
<com.cuebiq.cuebiqsdk.model.CuebiqSDKProvider: boolean onCreate()> --> $r1 = staticinvoke <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()>()
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: void saveBeAudienceConfiguration(android.content.Context,com.cuebiq.cuebiqsdk.model.config.Settings)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: void saveBeAudienceConfiguration(android.content.Context,com.cuebiq.cuebiqsdk.model.config.Settings)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("beaudience_configuration", $r5)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/MoatAnalytics;"
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r1 = new com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r13 = staticinvoke <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()>()
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $z0 = r0.<com.moat.analytics.mobile.ine.k: boolean f>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> if $z0 == 0 goto $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/w;"
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = new com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void <init>()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> specialinvoke $r0.<com.moat.analytics.mobile.ine.w: void <init>()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> specialinvoke r0.<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r1, $r2)
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> virtualinvoke $r13.<com.moat.analytics.mobile.ine.MoatAnalytics: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r12, $r14)
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> $r2 = r0.<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w$d a>
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> if $r2 != $r3 goto specialinvoke r0.<com.moat.analytics.mobile.ine.w: void d()>()
<com.moat.analytics.mobile.ine.w: void e()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.moat.analytics.mobile.ine.w$a: void run()> --> r0 := @this: com.moat.analytics.mobile.ine.w$a
<com.moat.analytics.mobile.ine.w$a: void a()> --> r0 := @this: com.moat.analytics.mobile.ine.w$a
<com.moat.analytics.mobile.ine.w$a: java.lang.String b()> --> r0 := @this: com.moat.analytics.mobile.ine.w$a
<com.moat.analytics.mobile.ine.q: com.moat.analytics.mobile.ine.a.b.a a(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.moat.analytics.mobile.ine.q: com.moat.analytics.mobile.ine.a.b.a a(java.lang.String)> --> $r6 = virtualinvoke $r4.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/MoatAnalytics;"
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r1 = new com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r13 = staticinvoke <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()>()
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $z0 = r0.<com.moat.analytics.mobile.ine.k: boolean f>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> if $z0 == 0 goto $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/w;"
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = new com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void <init>()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> specialinvoke $r0.<com.moat.analytics.mobile.ine.w: void <init>()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> specialinvoke r0.<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r1, $r2)
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> virtualinvoke $r13.<com.moat.analytics.mobile.ine.MoatAnalytics: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r12, $r14)
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> $r2 = r0.<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w$d a>
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> if $r2 != $r3 goto specialinvoke r0.<com.moat.analytics.mobile.ine.w: void d()>()
<com.moat.analytics.mobile.ine.w: void e()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.moat.analytics.mobile.ine.w$a: void run()> --> r0 := @this: com.moat.analytics.mobile.ine.w$a
<com.moat.analytics.mobile.ine.w$a: void a()> --> r0 := @this: com.moat.analytics.mobile.ine.w$a
<com.moat.analytics.mobile.ine.w$a: java.lang.String b()> --> r0 := @this: com.moat.analytics.mobile.ine.w$a
<com.moat.analytics.mobile.ine.q: com.moat.analytics.mobile.ine.a.b.a a(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.moat.analytics.mobile.ine.q: com.moat.analytics.mobile.ine.a.b.a a(java.lang.String)> --> virtualinvoke $r4.<java.net.HttpURLConnection: void setDoInput(boolean)>(1)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/MoatAnalytics;"
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r1 = new com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r13 = staticinvoke <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()>()
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $z0 = r0.<com.moat.analytics.mobile.ine.k: boolean f>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> if $z0 == 0 goto $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/w;"
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = new com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void <init>()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> specialinvoke $r0.<com.moat.analytics.mobile.ine.w: void <init>()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> specialinvoke r0.<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r1, $r2)
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> virtualinvoke $r13.<com.moat.analytics.mobile.ine.MoatAnalytics: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r12, $r14)
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> $r2 = r0.<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w$d a>
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> if $r2 != $r3 goto specialinvoke r0.<com.moat.analytics.mobile.ine.w: void d()>()
<com.moat.analytics.mobile.ine.w: void e()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.journeyapps.barcodescanner.d$3: void run()> --> r0 := @this: com.journeyapps.barcodescanner.d$3
<com.journeyapps.barcodescanner.d$3: void run()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, "Finishing due to inactivity")
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/MoatAnalytics;"
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r1 = new com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r13 = staticinvoke <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()>()
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $z0 = r0.<com.moat.analytics.mobile.ine.k: boolean f>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> if $z0 == 0 goto $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/w;"
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = new com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void <init>()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> specialinvoke $r0.<com.moat.analytics.mobile.ine.w: void <init>()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> specialinvoke r0.<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r1, $r2)
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> virtualinvoke $r13.<com.moat.analytics.mobile.ine.MoatAnalytics: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r12, $r14)
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> $r2 = r0.<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w$d a>
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> if $r2 != $r3 goto specialinvoke r0.<com.moat.analytics.mobile.ine.w: void d()>()
<com.moat.analytics.mobile.ine.w: void e()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.moat.analytics.mobile.ine.w$a: void run()> --> r0 := @this: com.moat.analytics.mobile.ine.w$a
<com.moat.analytics.mobile.ine.w$a: void a()> --> r0 := @this: com.moat.analytics.mobile.ine.w$a
<com.moat.analytics.mobile.ine.w$a: java.lang.String b()> --> r0 := @this: com.moat.analytics.mobile.ine.w$a
<com.moat.analytics.mobile.ine.q: com.moat.analytics.mobile.ine.a.b.a a(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.moat.analytics.mobile.ine.q: com.moat.analytics.mobile.ine.a.b.a a(java.lang.String)> --> virtualinvoke $r4.<java.net.HttpURLConnection: void connect()>()
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/MoatAnalytics;"
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r1 = new com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r13 = staticinvoke <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()>()
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.p: void a(int,java.lang.String,java.lang.Object,java.lang.String)> --> $i0 := @parameter0: int
<com.moat.analytics.mobile.ine.p: void a(int,java.lang.String,java.lang.Object,java.lang.String)> --> if $r1 != null goto $r0 = staticinvoke <com.moat.analytics.mobile.ine.p: java.lang.String a(java.lang.String)>($r0)
<com.moat.analytics.mobile.ine.p: void a(int,java.lang.String,java.lang.Object,java.lang.String)> --> staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>($i0, $r0, $r2)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/MoatAnalytics;"
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r1 = new com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r13 = staticinvoke <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()>()
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $z0 = r0.<com.moat.analytics.mobile.ine.k: boolean f>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> if $z0 == 0 goto $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/w;"
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = new com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void <init>()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> specialinvoke $r0.<com.moat.analytics.mobile.ine.w: void <init>()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> specialinvoke r0.<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r1, $r2)
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> virtualinvoke $r13.<com.moat.analytics.mobile.ine.MoatAnalytics: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r12, $r14)
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> $r2 = r0.<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w$d a>
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> if $r2 != $r3 goto specialinvoke r0.<com.moat.analytics.mobile.ine.w: void d()>()
<com.moat.analytics.mobile.ine.w: void e()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.moat.analytics.mobile.ine.w$a: void run()> --> r0 := @this: com.moat.analytics.mobile.ine.w$a
<com.moat.analytics.mobile.ine.w$a: void a()> --> r0 := @this: com.moat.analytics.mobile.ine.w$a
<com.moat.analytics.mobile.ine.w$a: java.lang.String b()> --> r0 := @this: com.moat.analytics.mobile.ine.w$a
<com.moat.analytics.mobile.ine.q: com.moat.analytics.mobile.ine.a.b.a a(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.moat.analytics.mobile.ine.q: com.moat.analytics.mobile.ine.a.b.a a(java.lang.String)> --> virtualinvoke $r4.<java.net.HttpURLConnection: void connect()>()
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.inmarket.m2m.internal.M2MServiceUtil: void c(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.IBeaconConsumerService: void b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context,android.content.Intent)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.M2MServiceUtil: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.inmarket.m2m.internal.M2MServiceUtil: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> --> $r4 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>()
<com.inmarket.m2m.internal.M2MServiceUtil: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> --> $r6 := @caughtexception
<com.inmarket.m2m.internal.M2MServiceUtil: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r6)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/MoatAnalytics;"
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r1 = new com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r13 = staticinvoke <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()>()
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $z0 = r0.<com.moat.analytics.mobile.ine.k: boolean f>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> if $z0 == 0 goto $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/w;"
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = new com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void <init>()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> specialinvoke $r0.<com.moat.analytics.mobile.ine.w: void <init>()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> specialinvoke r0.<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r1, $r2)
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> virtualinvoke $r13.<com.moat.analytics.mobile.ine.MoatAnalytics: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r12, $r14)
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> $r2 = r0.<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w$d a>
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> if $r2 != $r3 goto specialinvoke r0.<com.moat.analytics.mobile.ine.w: void d()>()
<com.moat.analytics.mobile.ine.w: void e()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.sansaver.coupons.app.android.view.activity.CouponActivity$2$1: void run()> --> r0 := @this: com.sansaver.coupons.app.android.view.activity.CouponActivity$2$1
<com.b.a.j: com.b.a.d a(java.lang.String)> --> r0 := @this: com.b.a.j
<com.b.a.j: com.b.a.d g()> --> r0 := @this: com.b.a.j
<com.b.a.j: com.b.a.d a(java.lang.Class)> --> r0 := @this: com.b.a.j
<com.b.a.g: com.b.a.d.c.l a(java.lang.Class,android.content.Context)> --> $r0 := @parameter0: java.lang.Class
<com.b.a.g: com.b.a.d.c.l a(java.lang.Class,java.lang.Class,android.content.Context)> --> $r0 := @parameter0: java.lang.Class
<com.b.a.g: com.b.a.d.c.l a(java.lang.Class,java.lang.Class,android.content.Context)> --> $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("Glide", 3)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/MoatAnalytics;"
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r1 = new com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r13 = staticinvoke <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()>()
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $z0 = r0.<com.moat.analytics.mobile.ine.k: boolean f>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> if $z0 == 0 goto $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/w;"
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = new com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void <init>()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> specialinvoke $r0.<com.moat.analytics.mobile.ine.w: void <init>()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> specialinvoke r0.<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r1, $r2)
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> virtualinvoke $r13.<com.moat.analytics.mobile.ine.MoatAnalytics: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r12, $r14)
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.p: void a(java.lang.String,java.lang.Object,java.lang.String,java.lang.Throwable)> --> $r4 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.p: void a(java.lang.String,java.lang.Object,java.lang.String,java.lang.Throwable)> --> $z0 = $r4.<com.moat.analytics.mobile.ine.w: boolean b>
<com.moat.analytics.mobile.ine.p: void a(java.lang.String,java.lang.Object,java.lang.String,java.lang.Throwable)> --> if $z0 == 0 goto return
<com.moat.analytics.mobile.ine.p: void a(java.lang.String,java.lang.Object,java.lang.String,java.lang.Throwable)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r2, $r3)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> $r0 = <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInject>
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInstance> = $r1
<com.cuebiq.cuebiqsdk.receiver.CoverageReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r5 = staticinvoke <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()>()
<com.cuebiq.cuebiqsdk.receiver.CoverageReceiver: void onReceive(android.content.Context,android.content.Intent)> --> return
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> if $r0 != null goto $r0 = <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInject>
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> $r0 = <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInstance>
<com.cuebiq.cuebiqsdk.receiver.CoverageReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r5 = staticinvoke <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()>()
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: void saveSleepDwellCounter(android.content.Context,int)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: void saveSleepDwellCounter(android.content.Context,int)> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("q_scheduler_sleep_dwell_counter", 0)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/MoatAnalytics;"
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r1 = new com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r13 = staticinvoke <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()>()
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $z0 = r0.<com.moat.analytics.mobile.ine.k: boolean f>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> if $z0 == 0 goto $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/w;"
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = new com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void <init>()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> specialinvoke $r0.<com.moat.analytics.mobile.ine.w: void <init>()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> specialinvoke r0.<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r1, $r2)
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> virtualinvoke $r13.<com.moat.analytics.mobile.ine.MoatAnalytics: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r12, $r14)
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> $r2 = r0.<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w$d a>
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> if $r2 != $r3 goto specialinvoke r0.<com.moat.analytics.mobile.ine.w: void d()>()
<com.moat.analytics.mobile.ine.w: void e()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.inmarket.m2m.internal.M2MWebViewActivity$$Lambda$3: void run()> --> r0 := @this: com.inmarket.m2m.internal.M2MWebViewActivity$$Lambda$3
<com.inmarket.m2m.internal.M2MWebViewActivity: void access$lambda$2(com.inmarket.m2m.internal.M2MWebViewActivity)> --> $r0 := @parameter0: com.inmarket.m2m.internal.M2MWebViewActivity
<com.inmarket.m2m.internal.M2MWebViewActivity: void lambda$onDestroy$2()> --> r0 := @this: com.inmarket.m2m.internal.M2MWebViewActivity
<com.inmarket.m2m.internal.M2MWebView: void f()> --> r0 := @this: com.inmarket.m2m.internal.M2MWebView
<com.inmarket.m2m.internal.M2MWebViewClient: com.inmarket.m2m.internal.M2MWebViewClient a(com.inmarket.m2m.internal.M2MWebViewClientListener)> --> r0 := @this: com.inmarket.m2m.internal.M2MWebViewClient
<com.inmarket.m2m.internal.M2MWebViewClient: void a(com.inmarket.m2m.internal.M2MWebViewClientListener,boolean)> --> r0 := @this: com.inmarket.m2m.internal.M2MWebViewClient
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.b.a.e$1: void run()> --> r0 := @this: com.b.a.e$1
<com.b.a.e: com.b.a.h.b.j a(com.b.a.h.b.j)> --> r0 := @this: com.b.a.e
<com.b.a.e.m: void a(com.b.a.h.c)> --> r0 := @this: com.b.a.e.m
<com.b.a.h.b: void b()> --> r0 := @this: com.b.a.h.b
<com.b.a.h.b: void a(int,int)> --> r0 := @this: com.b.a.h.b
<com.b.a.h.b: void a(int,int)> --> $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("GenericRequest", 2)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.inmarket.m2m.internal.geofence.locations.LocationFixService: void a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> entermonitor class "Lcom/inmarket/m2m/internal/State;"
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> $r0 = new com.inmarket.m2m.internal.State
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State C> = $r0
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> $r0 = <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State C>
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> if $r0 != null goto $r0 = <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State C>
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State C> = $r0
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> $r0 = <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State C>
<com.inmarket.m2m.internal.M2MServiceUtil: void a(android.content.Context)> --> $r1 = staticinvoke <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()>()
<com.inmarket.m2m.internal.State: void a(android.content.Context,boolean)> --> r0 := @this: com.inmarket.m2m.internal.State
<com.inmarket.m2m.internal.State: void a(android.content.Context,boolean)> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("isForeGround", $z0)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/MoatAnalytics;"
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r1 = new com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r13 = staticinvoke <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()>()
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $z0 = r0.<com.moat.analytics.mobile.ine.k: boolean f>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> if $z0 == 0 goto $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/w;"
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = new com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void <init>()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> specialinvoke $r0.<com.moat.analytics.mobile.ine.w: void <init>()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> specialinvoke r0.<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r1, $r2)
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> virtualinvoke $r13.<com.moat.analytics.mobile.ine.MoatAnalytics: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r12, $r14)
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> $r2 = r0.<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w$d a>
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> if $r2 != $r3 goto specialinvoke r0.<com.moat.analytics.mobile.ine.w: void d()>()
<com.moat.analytics.mobile.ine.w: void e()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.inmarket.m2m.internal.M2MWebViewActivity$$Lambda$3: void run()> --> r0 := @this: com.inmarket.m2m.internal.M2MWebViewActivity$$Lambda$3
<com.inmarket.m2m.internal.M2MWebViewActivity: void access$lambda$2(com.inmarket.m2m.internal.M2MWebViewActivity)> --> $r0 := @parameter0: com.inmarket.m2m.internal.M2MWebViewActivity
<com.inmarket.m2m.internal.M2MWebViewActivity: void lambda$onDestroy$2()> --> r0 := @this: com.inmarket.m2m.internal.M2MWebViewActivity
<com.inmarket.m2m.internal.M2MWebView: void f()> --> r0 := @this: com.inmarket.m2m.internal.M2MWebView
<com.inmarket.m2m.internal.M2MWebViewClient: com.inmarket.m2m.internal.M2MWebViewClient a(com.inmarket.m2m.internal.M2MWebViewClientListener)> --> r0 := @this: com.inmarket.m2m.internal.M2MWebViewClient
<com.inmarket.m2m.internal.M2MWebViewClient: void a(com.inmarket.m2m.internal.M2MWebViewClientListener,boolean)> --> r0 := @this: com.inmarket.m2m.internal.M2MWebViewClient
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.a.a.f$a: void run()> --> r0 := @this: com.a.a.f$a
<com.a.a.c$1: void run()> --> r0 := @this: com.a.a.c$1
<com.a.a.c: void <clinit>()> --> nop
<com.a.a.v: void <clinit>()> --> nop
<com.a.a.v: void <clinit>()> --> $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>($r0, 2)
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $d0 = virtualinvoke $r8.<android.location.Location: double getLongitude()>()
<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $r12 := @caughtexception
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> nop
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> $r3 = new com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void <init>(boolean)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> specialinvoke $r3.<com.inmarket.m2m.internal.log.LogI: void <init>(boolean)>(0)
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e> = $r3
<com.inmarket.m2m.internal.log.LogI: void b(java.lang.String,java.lang.String)> --> $r2 = staticinvoke <com.inmarket.m2m.internal.log.Log: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>("DEBUG", $r1, $r2)
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: void a(java.lang.Boolean)> --> virtualinvoke $r3.<com.inmarket.m2m.internal.log.LogI: void b(java.lang.String,java.lang.String)>("iM.M2M.RN.IBeaconService", "scanLeDevice() - disabling scan")
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: void a(java.lang.Boolean)> --> r0.<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: boolean b> = 0
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: android.bluetooth.BluetoothAdapter g()> --> if $z0 == 0 goto $r1 = virtualinvoke r0.<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: android.content.Context getApplicationContext()>()
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: android.bluetooth.BluetoothAdapter g()> --> r6 = r0.<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: android.bluetooth.BluetoothAdapter a>
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: void a(java.lang.Boolean)> --> $r2 = virtualinvoke r0.<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: android.bluetooth.BluetoothAdapter g()>()
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: void a(java.lang.Boolean)> --> $r3 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e>
<com.inmarket.m2m.internal.log.LogI: void c(java.lang.String,java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void c(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: void log(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.cuebiq.cuebiqsdk.utils.Logger: void log(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.cuebiq.cuebiqsdk.utils.Logger: void log(java.lang.String)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("[CuebiqSDK]", $r0)
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $d0 = virtualinvoke $r8.<android.location.Location: double getLongitude()>()
<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $r12 := @caughtexception
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> nop
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> $r3 = new com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e> = $r3
<com.inmarket.m2m.internal.IBeaconConsumerService$AlarmManagerSchedulerAndReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e>
<com.inmarket.m2m.internal.IBeaconConsumerService$AlarmManagerSchedulerAndReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r23 := @caughtexception
<com.inmarket.m2m.internal.IBeaconConsumerService: void e(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.IBeaconConsumerService: void c(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context,android.content.Intent)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.M2MServiceUtil: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.inmarket.m2m.internal.M2MServiceUtil: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> --> $r4 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>()
<com.inmarket.m2m.internal.M2MServiceUtil: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> --> $r6 := @caughtexception
<com.inmarket.m2m.internal.M2MServiceUtil: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r6)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/MoatAnalytics;"
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r1 = new com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r13 = staticinvoke <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()>()
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.p: void a(int,java.lang.String,java.lang.Object,java.lang.String)> --> $i0 := @parameter0: int
<com.moat.analytics.mobile.ine.p: void a(int,java.lang.String,java.lang.Object,java.lang.String)> --> if $r1 != null goto $r0 = staticinvoke <com.moat.analytics.mobile.ine.p: java.lang.String a(java.lang.String)>($r0)
<com.moat.analytics.mobile.ine.p: void a(int,java.lang.String,java.lang.Object,java.lang.String)> --> staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>($i0, $r0, $r2)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> $r0 = <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInject>
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInstance> = $r1
<com.cuebiq.cuebiqsdk.receiver.CoverageReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r5 = staticinvoke <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()>()
<com.cuebiq.cuebiqsdk.receiver.CoverageReceiver: void onReceive(android.content.Context,android.content.Intent)> --> return
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> if $r0 != null goto $r0 = <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInject>
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> $r0 = <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInstance>
<com.cuebiq.cuebiqsdk.receiver.CoverageReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r5 = staticinvoke <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()>()
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: void saveTempInformation(android.content.Context,com.cuebiq.cuebiqsdk.utils.InformationList)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: void saveTempInformation(android.content.Context,com.cuebiq.cuebiqsdk.utils.InformationList)> --> $r6 = interfaceinvoke $r6.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("q_temp_information", $r4)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> $r0 = <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInject>
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInstance> = $r1
<com.cuebiq.cuebiqsdk.receiver.CoverageReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r5 = staticinvoke <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()>()
<com.cuebiq.cuebiqsdk.receiver.CoverageReceiver: void onReceive(android.content.Context,android.content.Intent)> --> return
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> if $r0 != null goto $r0 = <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInject>
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> $r0 = <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInstance>
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: void initialize(android.content.Context,java.lang.String,com.cuebiq.cuebiqsdk.api.Environment)> --> $r6 = staticinvoke <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()>()
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: void saveAppKey(android.content.Context,java.lang.String)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: void saveAppKey(android.content.Context,java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("beaudience_appkey", $r2)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/MoatAnalytics;"
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r1 = new com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r13 = staticinvoke <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()>()
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $z0 = r0.<com.moat.analytics.mobile.ine.k: boolean f>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> if $z0 == 0 goto $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/w;"
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = new com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void <init>()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> specialinvoke $r0.<com.moat.analytics.mobile.ine.w: void <init>()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> specialinvoke r0.<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r1, $r2)
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> virtualinvoke $r13.<com.moat.analytics.mobile.ine.MoatAnalytics: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r12, $r14)
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> $r2 = r0.<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w$d a>
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> if $r2 != $r3 goto specialinvoke r0.<com.moat.analytics.mobile.ine.w: void d()>()
<com.moat.analytics.mobile.ine.w: void e()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.moat.analytics.mobile.ine.w$a: void run()> --> r0 := @this: com.moat.analytics.mobile.ine.w$a
<com.moat.analytics.mobile.ine.w$a: void a()> --> r0 := @this: com.moat.analytics.mobile.ine.w$a
<com.moat.analytics.mobile.ine.w$a: java.lang.String b()> --> r0 := @this: com.moat.analytics.mobile.ine.w$a
<com.moat.analytics.mobile.ine.q: com.moat.analytics.mobile.ine.a.b.a a(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.moat.analytics.mobile.ine.q: com.moat.analytics.mobile.ine.a.b.a a(java.lang.String)> --> $r6 = virtualinvoke $r4.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.inmarket.m2m.internal.M2MServiceUtil: void k(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.IBeaconConsumerService: void a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.IBeaconConsumerService: void a(android.content.Context)> --> $r7 = new java.util.HashMap
<com.inmarket.m2m.internal.IBeaconConsumerService: void a(android.content.Context)> --> <com.inmarket.m2m.internal.IBeaconConsumerService: java.util.Map x> = $r7
<com.inmarket.m2m.internal.IBeaconConsumerService: void a(android.content.Context)> --> $r6 = <com.inmarket.m2m.internal.IBeaconConsumerService: java.util.Map x>
<com.inmarket.m2m.internal.IBeaconConsumerService: void a(android.content.Context)> --> if $r6 != null goto $r8 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e>
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> nop
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> $r3 = new com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void <init>(boolean)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> specialinvoke $r3.<com.inmarket.m2m.internal.log.LogI: void <init>(boolean)>(0)
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e> = $r3
<com.inmarket.m2m.internal.log.LogI: void d(java.lang.String,java.lang.String)> --> $r2 = staticinvoke <com.inmarket.m2m.internal.log.Log: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>("INFO", $r1, $r2)
<com.inmarket.m2m.internal.IBeaconConsumerService: void a(android.content.Context)> --> virtualinvoke $r8.<com.inmarket.m2m.internal.log.LogI: void d(java.lang.String,java.lang.String)>("inmarket.FERALBEACON", $r9)
<com.inmarket.m2m.internal.IBeaconConsumerService: void a(android.content.Context)> --> $r8 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e>
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.IBeaconIntentProcessor: void onHandleIntent(android.content.Intent)> --> virtualinvoke $r5.<com.inmarket.m2m.internal.log.LogI: void b(java.lang.String,java.lang.String)>("iM.M2M.RN.IBeaconIntentProcessor", "onHandleIntent() - got monitoring data")
<com.inmarket.m2m.internal.IBeaconConsumerService: int onStartCommand(android.content.Intent,int,int)> --> $r14 = virtualinvoke $r13.<com.inmarket.m2m.internal.M2MUtil: java.lang.Object a()>()
<com.inmarket.m2m.internal.IBeaconConsumerService: int onStartCommand(android.content.Intent,int,int)> --> specialinvoke r0.<com.inmarket.m2m.internal.IBeaconConsumerService: void n()>()
<com.inmarket.m2m.internal.IBeaconConsumerService: int onStartCommand(android.content.Intent,int,int)> --> $r3 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e>
<com.inmarket.m2m.internal.log.LogI: void b(java.lang.String,java.lang.String,java.lang.Throwable)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void b(java.lang.String,java.lang.String,java.lang.Throwable)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, $r2, $r3)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> $r0 = <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInject>
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInstance> = $r1
<com.cuebiq.cuebiqsdk.receiver.CoverageReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r5 = staticinvoke <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()>()
<com.cuebiq.cuebiqsdk.receiver.CoverageReceiver: void onReceive(android.content.Context,android.content.Intent)> --> return
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> if $r0 != null goto $r0 = <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInject>
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> $r0 = <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInstance>
<com.cuebiq.cuebiqsdk.receiver.CoverageReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r5 = staticinvoke <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()>()
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: void saveSleepHighCounter(android.content.Context,int)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: void saveSleepHighCounter(android.content.Context,int)> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("q_scheduler_sleep_high_counter", 0)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/MoatAnalytics;"
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r1 = new com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r13 = staticinvoke <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()>()
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $z0 = r0.<com.moat.analytics.mobile.ine.k: boolean f>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> if $z0 == 0 goto $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/w;"
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = new com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void <init>()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> specialinvoke $r0.<com.moat.analytics.mobile.ine.w: void <init>()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> specialinvoke r0.<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r1, $r2)
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> virtualinvoke $r13.<com.moat.analytics.mobile.ine.MoatAnalytics: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r12, $r14)
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> $r2 = r0.<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w$d a>
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> if $r2 != $r3 goto specialinvoke r0.<com.moat.analytics.mobile.ine.w: void d()>()
<com.moat.analytics.mobile.ine.w: void e()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.moat.analytics.mobile.ine.w$a: void run()> --> r0 := @this: com.moat.analytics.mobile.ine.w$a
<com.moat.analytics.mobile.ine.w$a: void a()> --> r0 := @this: com.moat.analytics.mobile.ine.w$a
<com.moat.analytics.mobile.ine.w$a: java.lang.String b()> --> r0 := @this: com.moat.analytics.mobile.ine.w$a
<com.moat.analytics.mobile.ine.q: com.moat.analytics.mobile.ine.a.b.a a(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.moat.analytics.mobile.ine.q: com.moat.analytics.mobile.ine.a.b.a a(java.lang.String)> --> $r3 = virtualinvoke $r2.<java.net.URL: java.net.URLConnection openConnection()>()
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/MoatAnalytics;"
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r1 = new com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r13 = staticinvoke <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()>()
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $z0 = r0.<com.moat.analytics.mobile.ine.k: boolean f>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> if $z0 == 0 goto $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/w;"
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = new com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void <init>()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> specialinvoke $r0.<com.moat.analytics.mobile.ine.w: void <init>()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> specialinvoke r0.<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r1, $r2)
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> virtualinvoke $r13.<com.moat.analytics.mobile.ine.MoatAnalytics: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r12, $r14)
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> $r2 = r0.<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w$d a>
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> if $r2 != $r3 goto specialinvoke r0.<com.moat.analytics.mobile.ine.w: void d()>()
<com.moat.analytics.mobile.ine.w: void e()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.sansaver.coupons.app.android.view.activity.CouponActivity$2$1: void run()> --> r0 := @this: com.sansaver.coupons.app.android.view.activity.CouponActivity$2$1
<com.davemorrissey.labs.subscaleview.a: com.davemorrissey.labs.subscaleview.a a(android.net.Uri)> --> $r0 := @parameter0: android.net.Uri
<com.davemorrissey.labs.subscaleview.a: void <init>(android.net.Uri)> --> r0 := @this: com.davemorrissey.labs.subscaleview.a
<com.davemorrissey.labs.subscaleview.a: void <init>(android.net.Uri)> --> $r2 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r2, "UTF-8")
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/MoatAnalytics;"
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r1 = new com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r13 = staticinvoke <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()>()
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $z0 = r0.<com.moat.analytics.mobile.ine.k: boolean f>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> if $z0 == 0 goto $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/w;"
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = new com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void <init>()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> specialinvoke $r0.<com.moat.analytics.mobile.ine.w: void <init>()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> specialinvoke r0.<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r1, $r2)
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> virtualinvoke $r13.<com.moat.analytics.mobile.ine.MoatAnalytics: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r12, $r14)
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> $r2 = r0.<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w$d a>
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> if $r2 != $r3 goto specialinvoke r0.<com.moat.analytics.mobile.ine.w: void d()>()
<com.moat.analytics.mobile.ine.w: void e()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.moat.analytics.mobile.ine.w$a: void run()> --> r0 := @this: com.moat.analytics.mobile.ine.w$a
<com.moat.analytics.mobile.ine.w$a: void a()> --> r0 := @this: com.moat.analytics.mobile.ine.w$a
<com.moat.analytics.mobile.ine.w$a: java.lang.String b()> --> r0 := @this: com.moat.analytics.mobile.ine.w$a
<com.moat.analytics.mobile.ine.q: com.moat.analytics.mobile.ine.a.b.a a(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.moat.analytics.mobile.ine.q: com.moat.analytics.mobile.ine.a.b.a a(java.lang.String)> --> virtualinvoke $r4.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("GET")
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $d0 = virtualinvoke $r8.<android.location.Location: double getLongitude()>()
<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $r12 := @caughtexception
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> nop
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> $r3 = new com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void <init>(boolean)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> specialinvoke $r3.<com.inmarket.m2m.internal.log.LogI: void <init>(boolean)>(0)
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e> = $r3
<com.inmarket.m2m.internal.log.LogI: void b(java.lang.String,java.lang.String)> --> $r2 = staticinvoke <com.inmarket.m2m.internal.log.Log: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>("DEBUG", $r1, $r2)
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: void a(java.lang.Boolean)> --> virtualinvoke $r3.<com.inmarket.m2m.internal.log.LogI: void b(java.lang.String,java.lang.String)>("iM.M2M.RN.IBeaconService", "scanLeDevice() - disabling scan")
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: void a(java.lang.Boolean)> --> r0.<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: boolean b> = 0
<com.inmarket.m2m.internal.IBeaconConsumerService$AlarmManagerSchedulerAndReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.inmarket.m2m.internal.log.LogI: void a(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "onReceive() - Exception trying to kick-off the /i-beacon/notify request", $r22)
<com.inmarket.m2m.internal.IBeaconConsumerService: void q()> --> virtualinvoke $r1.<com.inmarket.m2m.internal.log.LogI: void a(java.lang.String,java.lang.String)>($r2, "pause() - iBeaconManager is bound, so clearing all")
<com.inmarket.m2m.internal.IBeaconConsumerService: int onStartCommand(android.content.Intent,int,int)> --> $r3 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e>
<com.inmarket.m2m.internal.log.LogI: void b(java.lang.String,java.lang.String,java.lang.Throwable)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void b(java.lang.String,java.lang.String,java.lang.Throwable)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, $r2, $r3)
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $d0 = virtualinvoke $r8.<android.location.Location: double getLatitude()>()
<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $r12 := @caughtexception
<com.inmarket.m2m.internal.log.Log: void a(java.lang.String,java.lang.String,java.lang.Throwable)> --> $r0 := @parameter0: java.lang.String
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> nop
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> $r3 = new com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e> = $r3
<com.inmarket.m2m.internal.IBeaconConsumerService$AlarmManagerSchedulerAndReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e>
<com.inmarket.m2m.internal.IBeaconConsumerService$AlarmManagerSchedulerAndReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r23 := @caughtexception
<com.inmarket.m2m.internal.IBeaconConsumerService: void e(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.log.LogI: void d(java.lang.String,java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void d(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.inmarket.m2m.internal.geofence.locations.LocationFixService: void a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> entermonitor class "Lcom/inmarket/m2m/internal/State;"
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> $r0 = new com.inmarket.m2m.internal.State
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State C> = $r0
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> $r0 = <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State C>
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> if $r0 != null goto $r0 = <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State C>
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State C> = $r0
<com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()> --> $r0 = <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State C>
<com.inmarket.m2m.internal.State: void a(java.lang.String,java.lang.String)> --> r0 = staticinvoke <com.inmarket.m2m.internal.State: com.inmarket.m2m.internal.State b()>()
<com.inmarket.m2m.internal.State: void a(java.lang.String,java.lang.String)> --> interfaceinvoke $r6.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("device_uuid_source", $r1)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/MoatAnalytics;"
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r1 = new com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r13 = staticinvoke <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()>()
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $z0 = r0.<com.moat.analytics.mobile.ine.k: boolean f>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> if $z0 == 0 goto $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/w;"
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = new com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void <init>()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> specialinvoke $r0.<com.moat.analytics.mobile.ine.w: void <init>()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> specialinvoke r0.<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r1, $r2)
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> virtualinvoke $r13.<com.moat.analytics.mobile.ine.MoatAnalytics: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r12, $r14)
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> $r2 = r0.<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w$d a>
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> if $r2 != $r3 goto specialinvoke r0.<com.moat.analytics.mobile.ine.w: void d()>()
<com.moat.analytics.mobile.ine.w: void e()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.inmarket.m2m.internal.M2MWebViewActivity$$Lambda$3: void run()> --> r0 := @this: com.inmarket.m2m.internal.M2MWebViewActivity$$Lambda$3
<com.inmarket.m2m.internal.M2MWebViewActivity: void access$lambda$2(com.inmarket.m2m.internal.M2MWebViewActivity)> --> $r0 := @parameter0: com.inmarket.m2m.internal.M2MWebViewActivity
<com.inmarket.m2m.internal.M2MWebViewActivity: void lambda$onDestroy$2()> --> r0 := @this: com.inmarket.m2m.internal.M2MWebViewActivity
<com.inmarket.m2m.internal.M2MWebView: void f()> --> r0 := @this: com.inmarket.m2m.internal.M2MWebView
<com.inmarket.m2m.internal.M2MWebViewClient: com.inmarket.m2m.internal.M2MWebViewClient a(com.inmarket.m2m.internal.M2MWebViewClientListener)> --> r0 := @this: com.inmarket.m2m.internal.M2MWebViewClient
<com.inmarket.m2m.internal.M2MWebViewClient: void a(com.inmarket.m2m.internal.M2MWebViewClientListener,boolean)> --> r0 := @this: com.inmarket.m2m.internal.M2MWebViewClient
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.b.a.e$1: void run()> --> r0 := @this: com.b.a.e$1
<com.b.a.e: com.b.a.h.b.j a(com.b.a.h.b.j)> --> r0 := @this: com.b.a.e
<com.b.a.e.m: void a(com.b.a.h.c)> --> r0 := @this: com.b.a.e.m
<com.b.a.h.b: void b()> --> r0 := @this: com.b.a.h.b
<com.b.a.h.b: void b()> --> $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("GenericRequest", 2)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/MoatAnalytics;"
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r1 = new com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r13 = staticinvoke <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()>()
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $z0 = r0.<com.moat.analytics.mobile.ine.k: boolean f>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> if $z0 == 0 goto $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/w;"
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = new com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void <init>()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> specialinvoke $r0.<com.moat.analytics.mobile.ine.w: void <init>()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> specialinvoke r0.<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r1, $r2)
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> virtualinvoke $r13.<com.moat.analytics.mobile.ine.MoatAnalytics: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r12, $r14)
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> $r2 = r0.<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w$d a>
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> if $r2 != $r3 goto specialinvoke r0.<com.moat.analytics.mobile.ine.w: void d()>()
<com.moat.analytics.mobile.ine.w: void e()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.sansaver.coupons.app.android.view.activity.CouponActivity$2$1: void run()> --> r0 := @this: com.sansaver.coupons.app.android.view.activity.CouponActivity$2$1
<com.b.a.j: com.b.a.d a(java.lang.String)> --> r0 := @this: com.b.a.j
<com.b.a.j: com.b.a.d g()> --> r0 := @this: com.b.a.j
<com.b.a.j: com.b.a.d a(java.lang.Class)> --> r0 := @this: com.b.a.j
<com.b.a.g: com.b.a.d.c.l a(java.lang.Class,android.content.Context)> --> $r0 := @parameter0: java.lang.Class
<com.b.a.g: com.b.a.d.c.l a(java.lang.Class,java.lang.Class,android.content.Context)> --> $r0 := @parameter0: java.lang.Class
<com.b.a.g: com.b.a.g a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.b.a.h: com.b.a.g a()> --> r0 := @this: com.b.a.h
<com.b.a.d.b.b.i: void <init>(android.content.Context)> --> r0 := @this: com.b.a.d.b.b.i
<com.b.a.d.b.b.i: void <init>(android.content.Context,android.app.ActivityManager,com.b.a.d.b.b.i$b)> --> r0 := @this: com.b.a.d.b.b.i
<com.b.a.d.b.b.i: void <init>(android.content.Context,android.app.ActivityManager,com.b.a.d.b.b.i$b)> --> $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("MemorySizeCalculator", 3)
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $d0 = virtualinvoke $r8.<android.location.Location: double getLatitude()>()
<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $r12 := @caughtexception
<com.inmarket.m2m.internal.log.Log: void a(java.lang.String,java.lang.String,java.lang.Throwable)> --> $r0 := @parameter0: java.lang.String
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> nop
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> $r3 = new com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e> = $r3
<com.inmarket.m2m.internal.IBeaconConsumerService$AlarmManagerSchedulerAndReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e>
<com.inmarket.m2m.internal.IBeaconConsumerService$AlarmManagerSchedulerAndReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r23 := @caughtexception
<com.inmarket.m2m.internal.IBeaconConsumerService: void e(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.IBeaconConsumerService: void c(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context,android.content.Intent)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.M2MServiceUtil: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.inmarket.m2m.internal.M2MServiceUtil: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> --> $r4 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>()
<com.inmarket.m2m.internal.M2MServiceUtil: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> --> $r6 := @caughtexception
<com.inmarket.m2m.internal.M2MServiceUtil: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r6)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void a(android.content.Context,com.inmarket.m2m.M2MListenerInterface)> --> $r12 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void a(android.content.Context,com.inmarket.m2m.M2MListenerInterface)> --> if $r11 == $r12 goto return
<com.inmarket.m2m.internal.log.Log: void c(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.inmarket.m2m.internal.log.LogI: void c(java.lang.String,java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void c(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> $r0 = <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInject>
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInstance> = $r1
<com.cuebiq.cuebiqsdk.receiver.CoverageReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r5 = staticinvoke <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()>()
<com.cuebiq.cuebiqsdk.receiver.CoverageReceiver: void onReceive(android.content.Context,android.content.Intent)> --> return
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> if $r0 != null goto $r0 = <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInject>
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()> --> $r0 = <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager mInstance>
<com.cuebiq.cuebiqsdk.utils.Utils: boolean isFlushCounterActive(android.content.Context)> --> $r1 = staticinvoke <com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerFactory: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManager get()>()
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: void setNextFlushingContent(android.content.Context,int)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: void setNextFlushingContent(android.content.Context,int)> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("q_next_flush_counter", $i0)
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $d0 = virtualinvoke $r8.<android.location.Location: double getLongitude()>()
<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $r12 := @caughtexception
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> nop
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> $r3 = new com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void <init>(boolean)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> specialinvoke $r3.<com.inmarket.m2m.internal.log.LogI: void <init>(boolean)>(0)
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e> = $r3
<com.inmarket.m2m.internal.log.LogI: void b(java.lang.String,java.lang.String)> --> $r2 = staticinvoke <com.inmarket.m2m.internal.log.Log: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>("DEBUG", $r1, $r2)
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: void a(java.lang.Boolean)> --> virtualinvoke $r3.<com.inmarket.m2m.internal.log.LogI: void b(java.lang.String,java.lang.String)>("iM.M2M.RN.IBeaconService", "scanLeDevice() - disabling scan")
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: void a(java.lang.Boolean)> --> r0.<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: boolean b> = 0
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: android.bluetooth.BluetoothAdapter g()> --> if $z0 == 0 goto $r1 = virtualinvoke r0.<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: android.content.Context getApplicationContext()>()
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: android.bluetooth.BluetoothAdapter g()> --> r6 = r0.<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: android.bluetooth.BluetoothAdapter a>
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: void a(java.lang.Boolean)> --> $r2 = virtualinvoke r0.<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: android.bluetooth.BluetoothAdapter g()>()
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: void a(java.lang.Boolean)> --> virtualinvoke $r3.<com.inmarket.m2m.internal.log.LogI: void c(java.lang.String,java.lang.String)>("iM.M2M.RN.IBeaconService", "scanLeDevice() - No bluetooth adapter.  iBeaconService cannot scan.")
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: void a(java.lang.Boolean)> --> $r3 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e>
<com.inmarket.m2m.internal.log.LogI: void e(java.lang.String,java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void e(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $d0 = virtualinvoke $r8.<android.location.Location: double getLatitude()>()
<com.inmarket.m2m.internal.geofence.locations.LocationFixService: int onStartCommand(android.content.Intent,int,int)> --> $r12 := @caughtexception
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> nop
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> $r3 = new com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void <init>(boolean)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> specialinvoke $r3.<com.inmarket.m2m.internal.log.LogI: void <init>(boolean)>(0)
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e> = $r3
<com.inmarket.m2m.internal.log.LogI: void a(java.lang.String,java.lang.String)> --> $r2 = staticinvoke <com.inmarket.m2m.internal.log.Log: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>("VERBOSE", $r1, $r2)
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.IBeaconManager: void a(com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService$IBeaconServiceEvent)> --> virtualinvoke $r2.<com.inmarket.m2m.internal.log.LogI: void a(java.lang.String,java.lang.String)>("inmarket.BLESTATE", $r4)
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: void a(java.lang.Boolean)> --> virtualinvoke $r3.<com.inmarket.m2m.internal.log.LogI: void b(java.lang.String,java.lang.String)>("iM.M2M.RN.IBeaconService", $r6)
<com.facebook.ads.internal.g$1: void run()> --> virtualinvoke $r2.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r3, 250L)
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> interfaceinvoke param0.<java.lang.Runnable: void run()>()
<com.sansaver.coupons.app.android.view.activity.a: void n()> --> virtualinvoke $r5.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r7, 60000L)
<com.sansaver.coupons.app.android.view.activity.a: void n()> --> return
<com.sansaver.coupons.app.android.view.activity.a: void onStart()> --> specialinvoke r0.<com.sansaver.coupons.app.android.view.activity.a: void n()>()
<dummyMainClass: com.sansaver.coupons.app.android.view.activity.DealActivity dummyMainMethod_com_sansaver_coupons_app_android_view_activity_DealActivity(android.content.Intent)> --> virtualinvoke $r0.<com.sansaver.coupons.app.android.view.activity.a: void onStart()>()
<com.inmarket.m2m.internal.radiusnetworks.ibeacon.service.IBeaconService: void a(com.inmarket.m2m.internal.radiusnetworks.ibeacon.IBeacon)> --> $r6 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI e>
<com.inmarket.m2m.internal.log.LogI: void e(java.lang.String,java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void e(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.inmarket.m2m.internal.log.Log: void a(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.inmarket.m2m.internal.log.LogI: void a(java.lang.String,java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void a(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r11 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r8)
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void getLocation(android.content.Context,com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper$OnLocationListener)> --> $r10 := @caughtexception
<com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.manager.LocationManagerHelper
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1: void onLocation(android.location.Location)> --> r0 := @this: com.cuebiq.cuebiqsdk.CuebiqSDKImpl$3$1
<com.cuebiq.cuebiqsdk.CuebiqSDKImpl: com.cuebiq.cuebiqsdk.model.config.Settings getBeAudienceConfiguration(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl: com.cuebiq.cuebiqsdk.model.config.Settings retrieveBeAudienceConfiguration(android.content.Context)> --> r0 := @this: com.cuebiq.cuebiqsdk.model.persistence.PersistenceManagerImpl
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)> --> r0 := @this: com.google.gson.Gson
<com.google.gson.internal.Primitives: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> nop
<java.lang.Boolean: void <clinit>()> --> <java.lang.Boolean: java.lang.Boolean TRUE> = null
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> if $r9 != $r10 goto $z1 = virtualinvoke $r3.<com.inmarket.m2m.internal.data.M2MSvcConfig: boolean p()>()
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/MoatAnalytics;"
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r1 = new com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a> = $r1
<com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()> --> $r0 = <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics a>
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> $r13 = staticinvoke <com.moat.analytics.mobile.ine.MoatAnalytics: com.moat.analytics.mobile.ine.MoatAnalytics getInstance()>()
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> r0 := @this: com.moat.analytics.mobile.ine.k
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $z0 = r0.<com.moat.analytics.mobile.ine.k: boolean f>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> if $z0 == 0 goto $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> entermonitor class "Lcom/moat/analytics/mobile/ine/w;"
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = new com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void <init>()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> specialinvoke $r0.<com.moat.analytics.mobile.ine.w: void <init>()>()
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.k: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> specialinvoke r0.<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r1, $r2)
<com.inmarket.m2m.internal.M2MServiceUtil: void b(android.content.Context)> --> virtualinvoke $r13.<com.moat.analytics.mobile.ine.MoatAnalytics: void start(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)>($r12, $r14)
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> if $r0 != null goto $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g> = $r0
<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()> --> $r0 = <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w g>
<com.moat.analytics.mobile.ine.k: void a(com.moat.analytics.mobile.ine.MoatOptions,android.app.Application)> --> $r3 = staticinvoke <com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w a()>()
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> r0 := @this: com.moat.analytics.mobile.ine.w
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> $r2 = r0.<com.moat.analytics.mobile.ine.w: com.moat.analytics.mobile.ine.w$d a>
<com.moat.analytics.mobile.ine.w: void a(com.moat.analytics.mobile.ine.w$b)> --> if $r2 != $r3 goto specialinvoke r0.<com.moat.analytics.mobile.ine.w: void d()>()
<com.moat.analytics.mobile.ine.w: void e()> --> r0 := @this: com.moat.analytics.mobile.ine.w
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.sansaver.coupons.app.android.view.activity.CouponActivity$2$1: void run()> --> r0 := @this: com.sansaver.coupons.app.android.view.activity.CouponActivity$2$1
<com.b.a.j: com.b.a.d a(java.lang.String)> --> r0 := @this: com.b.a.j
<com.b.a.j: com.b.a.d g()> --> r0 := @this: com.b.a.j
<com.b.a.j: com.b.a.d a(java.lang.Class)> --> r0 := @this: com.b.a.j
<com.b.a.g: com.b.a.d.c.l a(java.lang.Class,android.content.Context)> --> $r0 := @parameter0: java.lang.Class
<com.b.a.g: com.b.a.d.c.l a(java.lang.Class,java.lang.Class,android.content.Context)> --> $r0 := @parameter0: java.lang.Class
<com.b.a.g: com.b.a.g a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.b.a.h: com.b.a.g a()> --> r0 := @this: com.b.a.h
<com.b.a.d.b.b.i: void <init>(android.content.Context)> --> r0 := @this: com.b.a.d.b.b.i
<com.b.a.d.b.b.i: void <init>(android.content.Context,android.app.ActivityManager,com.b.a.d.b.b.i$b)> --> r0 := @this: com.b.a.d.b.b.i
<com.b.a.d.b.b.i: void <init>(android.content.Context,android.app.ActivityManager,com.b.a.d.b.b.i$b)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MemorySizeCalculator", $r5)
--------------------------------------------------------

