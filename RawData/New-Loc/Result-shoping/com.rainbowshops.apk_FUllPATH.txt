<com.forter.mobile.fortersdk.integrationkit.ForterHelper$5: void run()> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.forter.mobile.fortersdk.integrationkit.ForterHelper$5: void run()> --> $r23 := @caughtexception
<com.forter.mobile.fortersdk.integrationkit.ForterHelper$5: void run()> --> $r19 = newarray (java.lang.Object)[2]
<com.forter.mobile.fortersdk.integrationkit.ForterHelper$5: void run()> --> $r25 := @caughtexception
<com.forter.mobile.fortersdk.api.ForterClientProxy: void sendError(java.lang.String,java.lang.String)> --> r0 := @this: com.forter.mobile.fortersdk.api.ForterClientProxy
<com.forter.mobile.fortersdk.api.ForterClientProxy$9: void run()> --> r0 := @this: com.forter.mobile.fortersdk.api.ForterClientProxy$9
<com.forter.mobile.fortersdk.api.ForterClient: void sendError(java.lang.String,java.lang.String)> --> r0 := @this: com.forter.mobile.fortersdk.api.ForterClient
<com.forter.mobile.fortersdk.api.ForterClient: boolean hasValidState()> --> r0 := @this: com.forter.mobile.fortersdk.api.ForterClient
<com.forter.mobile.fortersdk.api.ForterClient: boolean hasValidState(boolean,boolean)> --> r0 := @this: com.forter.mobile.fortersdk.api.ForterClient
<com.forter.mobile.fortersdk.utils.SDKLogger: void f(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.forter.mobile.fortersdk.utils.SDKLogger: void f(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r0, $r1)
--------------------------------------------------------

<com.forter.mobile.fortersdk.integrationkit.ForterHelper$5: void run()> --> $d3 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.forter.mobile.fortersdk.integrationkit.ForterHelper$5: void run()> --> $r23 := @caughtexception
<com.forter.mobile.fortersdk.api.ForterClientProxy: void sendError(java.lang.String)> --> r0 := @this: com.forter.mobile.fortersdk.api.ForterClientProxy
<com.forter.mobile.fortersdk.api.ForterClientProxy: boolean isSDKInInvalidState()> --> r0 := @this: com.forter.mobile.fortersdk.api.ForterClientProxy
<com.forter.mobile.fortersdk.api.ForterClientProxy: void sendError(java.lang.String)> --> $z0 = specialinvoke r0.<com.forter.mobile.fortersdk.api.ForterClientProxy: boolean isSDKInInvalidState()>()
<com.forter.mobile.fortersdk.api.ForterClientProxy: void sendError(java.lang.String)> --> if $z0 == 0 goto $r3 = r0.<com.forter.mobile.fortersdk.api.ForterClientProxy: java.util.concurrent.ExecutorService mExecutor>
<com.forter.mobile.fortersdk.api.ForterClientProxy$8: void run()> --> r0 := @this: com.forter.mobile.fortersdk.api.ForterClientProxy$8
<com.forter.mobile.fortersdk.api.ForterClient: void sendError(java.lang.String)> --> r0 := @this: com.forter.mobile.fortersdk.api.ForterClient
<com.forter.mobile.fortersdk.api.ForterClient: void sendError(java.lang.String,java.lang.String)> --> r0 := @this: com.forter.mobile.fortersdk.api.ForterClient
<com.forter.mobile.fortersdk.api.ForterClient: boolean hasValidState()> --> r0 := @this: com.forter.mobile.fortersdk.api.ForterClient
<com.forter.mobile.fortersdk.api.ForterClient: boolean hasValidState(boolean,boolean)> --> r0 := @this: com.forter.mobile.fortersdk.api.ForterClient
<com.forter.mobile.fortersdk.api.ForterClient: boolean hasValidState(boolean,boolean)> --> $i3 = 0
<com.forter.mobile.fortersdk.api.ForterClient: boolean hasValidState(boolean,boolean)> --> $r10 = $r9[$i3]
<com.forter.mobile.fortersdk.api.ForterClient: boolean hasValidState(boolean,boolean)> --> $r1 = $r10.<android.content.pm.ActivityInfo: java.lang.String name>
<com.forter.mobile.fortersdk.api.ForterClient: boolean hasValidState(boolean,boolean)> --> $r15 := @caughtexception
<com.forter.mobile.fortersdk.api.ForterClient: void finishInit()> --> r0 := @this: com.forter.mobile.fortersdk.api.ForterClient
<com.forter.mobile.fortersdk.api.ForterClient: void registerForLocationUpdatesIfEnabled(android.content.Context)> --> r0 := @this: com.forter.mobile.fortersdk.api.ForterClient
<com.forter.mobile.fortersdk.integrationkit.LocationChangesListener: void registerForUpdates(android.content.Context,int,int)> --> r0 := @this: com.forter.mobile.fortersdk.integrationkit.LocationChangesListener
<com.forter.mobile.fortersdk.integrationkit.LocationChangesListener: void registerForUpdates(android.content.Context,int,int)> --> $z0 = specialinvoke r0.<com.forter.mobile.fortersdk.integrationkit.LocationChangesListener: boolean checkLocationPermissionForAndroidM(android.content.Context)>($r1)
<com.forter.mobile.fortersdk.integrationkit.LocationChangesListener: void registerForUpdates(android.content.Context,int,int)> --> $r5 := @caughtexception
<com.forter.mobile.fortersdk.integrationkit.LocationChangesListener: void registerForUpdates(android.content.Context,int,int)> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LocationChangesListener", $r7)
--------------------------------------------------------

<com.forter.mobile.fortersdk.integrationkit.ForterHelper$5: void run()> --> $d2 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.forter.mobile.fortersdk.integrationkit.ForterHelper$5: void run()> --> $r23 := @caughtexception
<com.forter.mobile.fortersdk.api.ForterClientProxy: void sendError(java.lang.String)> --> r0 := @this: com.forter.mobile.fortersdk.api.ForterClientProxy
<com.forter.mobile.fortersdk.api.ForterClientProxy$8: void run()> --> r0 := @this: com.forter.mobile.fortersdk.api.ForterClientProxy$8
<com.forter.mobile.fortersdk.api.ForterClient: void sendError(java.lang.String)> --> r0 := @this: com.forter.mobile.fortersdk.api.ForterClient
<com.forter.mobile.fortersdk.api.ForterClient: void sendError(java.lang.String,java.lang.String)> --> r0 := @this: com.forter.mobile.fortersdk.api.ForterClient
<com.forter.mobile.fortersdk.api.ForterClient: boolean sendEvent(com.forter.mobile.fortersdk.interfaces.IForterEvent)> --> r0 := @this: com.forter.mobile.fortersdk.api.ForterClient
<com.forter.mobile.fortersdk.api.ForterClient: boolean sendEvent(com.forter.mobile.fortersdk.interfaces.IForterEvent,boolean)> --> r0 := @this: com.forter.mobile.fortersdk.api.ForterClient
<com.forter.mobile.fortersdk.utils.d: boolean b(com.forter.mobile.fortersdk.interfaces.IForterEvent)> --> r0 := @this: com.forter.mobile.fortersdk.utils.d
<com.forter.mobile.fortersdk.utils.d: boolean b(com.forter.mobile.fortersdk.interfaces.IForterEvent)> --> $r2 = specialinvoke r0.<com.forter.mobile.fortersdk.utils.d: com.forter.mobile.fortersdk.api.ForterClient f()>()
<com.forter.mobile.fortersdk.utils.d: boolean b(com.forter.mobile.fortersdk.interfaces.IForterEvent)> --> $r7 := @caughtexception
<com.forter.mobile.fortersdk.utils.SDKLogger: void a(java.lang.String,java.lang.String,java.lang.Throwable)> --> $r0 := @parameter0: java.lang.String
<com.forter.mobile.fortersdk.utils.SDKLogger: void a(java.lang.String,java.lang.String,java.lang.Throwable)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r0, $r1)
--------------------------------------------------------

<com.forter.mobile.fortersdk.integrationkit.ForterHelper$5: void run()> --> $d3 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.forter.mobile.fortersdk.integrationkit.ForterHelper$5: void run()> --> $r23 := @caughtexception
<com.forter.mobile.fortersdk.api.ForterClientProxy: void sendError(java.lang.String)> --> r0 := @this: com.forter.mobile.fortersdk.api.ForterClientProxy
<com.forter.mobile.fortersdk.api.ForterClientProxy$8: void run()> --> r0 := @this: com.forter.mobile.fortersdk.api.ForterClientProxy$8
<com.forter.mobile.fortersdk.api.ForterClient: void sendError(java.lang.String)> --> r0 := @this: com.forter.mobile.fortersdk.api.ForterClient
<com.forter.mobile.fortersdk.api.ForterClient: void sendError(java.lang.String,java.lang.String)> --> r0 := @this: com.forter.mobile.fortersdk.api.ForterClient
<com.forter.mobile.fortersdk.api.ForterClient: boolean hasValidState()> --> r0 := @this: com.forter.mobile.fortersdk.api.ForterClient
<com.forter.mobile.fortersdk.api.ForterClient: boolean hasValidState(boolean,boolean)> --> r0 := @this: com.forter.mobile.fortersdk.api.ForterClient
<com.forter.mobile.fortersdk.utils.SDKLogger: void f(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.forter.mobile.fortersdk.utils.SDKLogger: void f(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r0, $r1)
--------------------------------------------------------

<bo.app.av: void a(android.content.Intent)> --> $d1 = virtualinvoke $r7.<android.location.Location: double getLatitude()>()
<bo.app.av: void a(android.content.Intent)> --> $r11 := @caughtexception
<com.appboy.f.c: void <clinit>()> --> nop
<com.appboy.f.c: void <clinit>()> --> <com.appboy.f.c: int a> = 4
<bo.app.aw: void onReceive(android.content.Context,android.content.Intent)> --> staticinvoke <com.appboy.f.c: int d(java.lang.String,java.lang.String)>($r3, "Location broadcast receiver received null intent.")
<dummyMainClass: bo.app.aw dummyMainMethod_bo_app_aw(android.content.Intent)> --> virtualinvoke $r3.<bo.app.aw: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<dummyMainClass: void dummyMainMethod(java.lang.String[])> --> staticinvoke <dummyMainClass: bo.app.aw dummyMainMethod_bo_app_aw(android.content.Intent)>(null)
<dummyMainClass: void dummyMainMethod(java.lang.String[])> --> if $i0 == 91 goto (branch)
<com.appboy.f.c: int a(java.lang.String,java.lang.String)> --> $i0 = <com.appboy.f.c: int a>
<com.appboy.f.c: int a(java.lang.String,java.lang.String)> --> if $i0 > 3 goto return 0
<com.appboy.f.c: int a(java.lang.String,java.lang.String)> --> $i0 = staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r0, $r1)
--------------------------------------------------------

