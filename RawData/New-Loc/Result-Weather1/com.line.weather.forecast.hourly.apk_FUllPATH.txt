<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $d1 = virtualinvoke $r3.<android.location.Location: double getLongitude()>()
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $r7 := @caughtexception
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void a(android.location.Location)> --> r0 := @this: com.line.weather.forecast.hourly.service.FetchAddressIntentService
<com.line.weather.forecast.hourly.c.g: com.line.weather.forecast.hourly.models.GeoPlace a(android.content.Context,java.lang.String,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.utility.DebugLog: void loge(java.lang.Object)> --> $r0 := @parameter0: java.lang.Object
<com.utility.DebugLog: void loge(java.lang.Object)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DebugLog", $r1)
--------------------------------------------------------

<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $d1 = virtualinvoke $r3.<android.location.Location: double getLongitude()>()
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $r7 := @caughtexception
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void a(android.location.Location)> --> r0 := @this: com.line.weather.forecast.hourly.service.FetchAddressIntentService
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void a(int,java.lang.String)> --> r0 := @this: com.line.weather.forecast.hourly.service.FetchAddressIntentService
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void a(int,java.lang.String)> --> virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("com.line.weather.forecast.hourly.RESULT_DATA_KEY", $r1)
--------------------------------------------------------

<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $d0 = virtualinvoke $r3.<android.location.Location: double getLatitude()>()
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $r7 := @caughtexception
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void a(android.location.Location)> --> r0 := @this: com.line.weather.forecast.hourly.service.FetchAddressIntentService
<com.line.weather.forecast.hourly.c.g: com.line.weather.forecast.hourly.models.GeoPlace a(android.content.Context,java.lang.String,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.utility.SharedPreference: java.lang.String getString(android.content.Context,java.lang.Object,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.utility.SharedPreference: java.lang.String getString(android.content.Context,java.lang.Object,java.lang.String)> --> $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1)
<com.utility.SharedPreference: java.lang.String getString(android.content.Context,java.lang.Object,java.lang.String)> --> $r5 := @caughtexception
<com.utility.DebugLog: void loge(java.lang.Exception)> --> $r0 := @parameter0: java.lang.Exception
<com.utility.DebugLog: void loge(java.lang.Exception)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DebugLog", $r3)
--------------------------------------------------------

<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $d1 = virtualinvoke $r3.<android.location.Location: double getLongitude()>()
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $r7 := @caughtexception
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void a(android.location.Location)> --> r0 := @this: com.line.weather.forecast.hourly.service.FetchAddressIntentService
<com.line.weather.forecast.hourly.c.g: com.line.weather.forecast.hourly.models.GeoPlace a(android.content.Context,java.lang.String,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.line.weather.forecast.hourly.c.g: com.line.weather.forecast.hourly.models.GeoPlace a(android.content.Context,java.lang.String,java.lang.String)> --> $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
<com.line.weather.forecast.hourly.c.g: com.line.weather.forecast.hourly.models.GeoPlace a(android.content.Context,java.lang.String,java.lang.String)> --> $r12 := @caughtexception
<com.utility.DebugLog: void <clinit>()> --> nop
<com.utility.DebugLog: void <clinit>()> --> <com.utility.DebugLog: boolean DEBUG> = 1
<com.line.weather.forecast.hourly.service.ReceiverLockScreen: void onReceive(android.content.Context,android.content.Intent)> --> staticinvoke <com.utility.DebugLog: void loge(java.lang.Exception)>($r7)
<dummyMainClass: com.line.weather.forecast.hourly.service.ReceiverLockScreen dummyMainMethod_com_line_weather_forecast_hourly_service_ReceiverLockScreen(android.content.Intent)> --> virtualinvoke $r0.<com.line.weather.forecast.hourly.service.ReceiverLockScreen: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<dummyMainClass: void dummyMainMethod(java.lang.String[])> --> staticinvoke <dummyMainClass: com.line.weather.forecast.hourly.service.ReceiverLockScreen dummyMainMethod_com_line_weather_forecast_hourly_service_ReceiverLockScreen(android.content.Intent)>(null)
<dummyMainClass: void dummyMainMethod(java.lang.String[])> --> if $i0 == 20 goto (branch)
<com.utility.DebugLog: void logd(java.lang.Object)> --> $z0 = <com.utility.DebugLog: boolean DEBUG>
<com.utility.DebugLog: void logd(java.lang.Object)> --> if $z0 != 0 goto $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0)
<com.utility.DebugLog: void logd(java.lang.Object)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("DebugLog", $r1)
--------------------------------------------------------

<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $d0 = virtualinvoke $r3.<android.location.Location: double getLongitude()>()
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $r7 := @caughtexception
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void a(android.location.Location)> --> r0 := @this: com.line.weather.forecast.hourly.service.FetchAddressIntentService
<com.line.weather.forecast.hourly.c.g: com.line.weather.forecast.hourly.models.GeoPlace a(android.content.Context,java.lang.String,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.line.weather.forecast.hourly.c.g: com.line.weather.forecast.hourly.models.GeoPlace a(android.content.Context,java.lang.String,java.lang.String)> --> $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
<com.line.weather.forecast.hourly.c.g: com.line.weather.forecast.hourly.models.GeoPlace a(android.content.Context,java.lang.String,java.lang.String)> --> $r12 := @caughtexception
<com.utility.DebugLog: void loge(java.lang.Exception)> --> $r0 := @parameter0: java.lang.Exception
<com.utility.DebugLog: void loge(java.lang.Exception)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DebugLog", $r3)
--------------------------------------------------------

<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $d0 = virtualinvoke $r3.<android.location.Location: double getLatitude()>()
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $r7 := @caughtexception
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void a(android.location.Location)> --> r0 := @this: com.line.weather.forecast.hourly.service.FetchAddressIntentService
<com.line.weather.forecast.hourly.c.g: com.line.weather.forecast.hourly.models.GeoPlace a(android.content.Context,java.lang.String,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.line.weather.forecast.hourly.c.g: com.line.weather.forecast.hourly.models.GeoPlace a(android.content.Context,java.lang.String,java.lang.String)> --> $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
<com.line.weather.forecast.hourly.c.g: com.line.weather.forecast.hourly.models.GeoPlace a(android.content.Context,java.lang.String,java.lang.String)> --> $r12 := @caughtexception
<com.utility.DebugLog: void loge(java.lang.Exception)> --> $r0 := @parameter0: java.lang.Exception
<com.utility.DebugLog: void loge(java.lang.Exception)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DebugLog", $r3)
--------------------------------------------------------

<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $d0 = virtualinvoke $r3.<android.location.Location: double getLongitude()>()
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $r7 := @caughtexception
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void a(android.location.Location)> --> r0 := @this: com.line.weather.forecast.hourly.service.FetchAddressIntentService
<com.line.weather.forecast.hourly.c.g: com.line.weather.forecast.hourly.models.GeoPlace a(android.content.Context,java.lang.String,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.utility.DebugLog: void loge(java.lang.Object)> --> $r0 := @parameter0: java.lang.Object
<com.utility.DebugLog: void loge(java.lang.Object)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DebugLog", $r1)
--------------------------------------------------------

<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $d0 = virtualinvoke $r3.<android.location.Location: double getLatitude()>()
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $r7 := @caughtexception
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void a(android.location.Location)> --> r0 := @this: com.line.weather.forecast.hourly.service.FetchAddressIntentService
<com.line.weather.forecast.hourly.c.g: com.line.weather.forecast.hourly.models.GeoPlace a(android.content.Context,java.lang.String,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.utility.DebugLog: void loge(java.lang.Object)> --> $r0 := @parameter0: java.lang.Object
<com.utility.DebugLog: void loge(java.lang.Object)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DebugLog", $r1)
--------------------------------------------------------

<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $d0 = virtualinvoke $r3.<android.location.Location: double getLatitude()>()
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $r7 := @caughtexception
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void a(android.location.Location)> --> r0 := @this: com.line.weather.forecast.hourly.service.FetchAddressIntentService
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void a(int,java.lang.String)> --> r0 := @this: com.line.weather.forecast.hourly.service.FetchAddressIntentService
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void a(int,java.lang.String)> --> virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("com.line.weather.forecast.hourly.RESULT_DATA_KEY", $r1)
--------------------------------------------------------

<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $d1 = virtualinvoke $r3.<android.location.Location: double getLongitude()>()
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $r7 := @caughtexception
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void a(android.location.Location)> --> r0 := @this: com.line.weather.forecast.hourly.service.FetchAddressIntentService
<com.line.weather.forecast.hourly.c.g: com.line.weather.forecast.hourly.models.GeoPlace a(android.content.Context,java.lang.String,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.line.weather.forecast.hourly.c.g: com.line.weather.forecast.hourly.models.GeoPlace a(android.content.Context,java.lang.String,java.lang.String)> --> $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
<com.line.weather.forecast.hourly.c.g: com.line.weather.forecast.hourly.models.GeoPlace a(android.content.Context,java.lang.String,java.lang.String)> --> $r12 := @caughtexception
<com.utility.DebugLog: void loge(java.lang.Exception)> --> $r0 := @parameter0: java.lang.Exception
<com.utility.DebugLog: void loge(java.lang.Exception)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DebugLog", $r3)
--------------------------------------------------------

<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $d0 = virtualinvoke $r3.<android.location.Location: double getLatitude()>()
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $r7 := @caughtexception
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void a(android.location.Location)> --> r0 := @this: com.line.weather.forecast.hourly.service.FetchAddressIntentService
<com.line.weather.forecast.hourly.c.g: com.line.weather.forecast.hourly.models.GeoPlace a(android.content.Context,java.lang.String,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.line.weather.forecast.hourly.c.g: com.line.weather.forecast.hourly.models.GeoPlace a(android.content.Context,java.lang.String,java.lang.String)> --> $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
<com.line.weather.forecast.hourly.c.g: com.line.weather.forecast.hourly.models.GeoPlace a(android.content.Context,java.lang.String,java.lang.String)> --> $r12 := @caughtexception
<com.utility.DebugLog: void <clinit>()> --> nop
<com.utility.DebugLog: void <clinit>()> --> <com.utility.DebugLog: boolean DEBUG> = 1
<com.line.weather.forecast.hourly.widgets.WidgetProviderTrans: void onEnabled(android.content.Context)> --> staticinvoke <com.utility.DebugLog: void loge(java.lang.Exception)>($r3)
<dummyMainClass: com.line.weather.forecast.hourly.widgets.WidgetProviderTrans dummyMainMethod_com_line_weather_forecast_hourly_widgets_WidgetProviderTrans(android.content.Intent)> --> virtualinvoke $r0.<com.line.weather.forecast.hourly.widgets.WidgetProviderTrans: void onEnabled(android.content.Context)>(null)
<dummyMainClass: void dummyMainMethod(java.lang.String[])> --> staticinvoke <dummyMainClass: com.line.weather.forecast.hourly.widgets.WidgetProviderTrans dummyMainMethod_com_line_weather_forecast_hourly_widgets_WidgetProviderTrans(android.content.Intent)>(null)
<dummyMainClass: void dummyMainMethod(java.lang.String[])> --> if $i0 == 2 goto (branch)
<com.utility.DebugLog: void logd(java.lang.Object)> --> $z0 = <com.utility.DebugLog: boolean DEBUG>
<com.utility.DebugLog: void logd(java.lang.Object)> --> if $z0 != 0 goto $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0)
<com.utility.DebugLog: void logd(java.lang.Object)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("DebugLog", $r1)
--------------------------------------------------------

<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $d0 = virtualinvoke $r3.<android.location.Location: double getLongitude()>()
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $r7 := @caughtexception
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void a(android.location.Location)> --> r0 := @this: com.line.weather.forecast.hourly.service.FetchAddressIntentService
<com.line.weather.forecast.hourly.c.g: com.line.weather.forecast.hourly.models.GeoPlace a(android.content.Context,java.lang.String,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.line.weather.forecast.hourly.c.g: com.line.weather.forecast.hourly.models.GeoPlace a(android.content.Context,java.lang.String,java.lang.String)> --> $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
<com.line.weather.forecast.hourly.c.g: com.line.weather.forecast.hourly.models.GeoPlace a(android.content.Context,java.lang.String,java.lang.String)> --> $r12 := @caughtexception
<com.utility.DebugLog: void <clinit>()> --> nop
<com.utility.DebugLog: void <clinit>()> --> <com.utility.DebugLog: boolean DEBUG> = 1
<com.line.weather.forecast.hourly.widgets.WidgetProviderTrans: void onEnabled(android.content.Context)> --> staticinvoke <com.utility.DebugLog: void loge(java.lang.Exception)>($r3)
<dummyMainClass: com.line.weather.forecast.hourly.widgets.WidgetProviderTrans dummyMainMethod_com_line_weather_forecast_hourly_widgets_WidgetProviderTrans(android.content.Intent)> --> virtualinvoke $r0.<com.line.weather.forecast.hourly.widgets.WidgetProviderTrans: void onEnabled(android.content.Context)>(null)
<dummyMainClass: void dummyMainMethod(java.lang.String[])> --> staticinvoke <dummyMainClass: com.line.weather.forecast.hourly.widgets.WidgetProviderTrans dummyMainMethod_com_line_weather_forecast_hourly_widgets_WidgetProviderTrans(android.content.Intent)>(null)
<dummyMainClass: void dummyMainMethod(java.lang.String[])> --> if $i0 == 2 goto (branch)
<com.utility.DebugLog: void logd(java.lang.Object)> --> $z0 = <com.utility.DebugLog: boolean DEBUG>
<com.utility.DebugLog: void logd(java.lang.Object)> --> if $z0 != 0 goto $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0)
<com.utility.DebugLog: void logd(java.lang.Object)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("DebugLog", $r1)
--------------------------------------------------------

<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $d0 = virtualinvoke $r3.<android.location.Location: double getLatitude()>()
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $r7 := @caughtexception
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void a(android.location.Location)> --> r0 := @this: com.line.weather.forecast.hourly.service.FetchAddressIntentService
<com.line.weather.forecast.hourly.c.g: com.line.weather.forecast.hourly.models.GeoPlace a(android.content.Context,java.lang.String,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.utility.DebugLog: void loge(java.lang.Object)> --> $r0 := @parameter0: java.lang.Object
<com.utility.DebugLog: void loge(java.lang.Object)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DebugLog", $r1)
--------------------------------------------------------

<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $d0 = virtualinvoke $r3.<android.location.Location: double getLongitude()>()
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $r7 := @caughtexception
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void a(android.location.Location)> --> r0 := @this: com.line.weather.forecast.hourly.service.FetchAddressIntentService
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void a(int,java.lang.String)> --> r0 := @this: com.line.weather.forecast.hourly.service.FetchAddressIntentService
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void a(int,java.lang.String)> --> virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("com.line.weather.forecast.hourly.RESULT_DATA_KEY", $r1)
--------------------------------------------------------

<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $d0 = virtualinvoke $r3.<android.location.Location: double getLatitude()>()
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $r7 := @caughtexception
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void a(android.location.Location)> --> r0 := @this: com.line.weather.forecast.hourly.service.FetchAddressIntentService
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void a(int,java.lang.String)> --> r0 := @this: com.line.weather.forecast.hourly.service.FetchAddressIntentService
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void a(int,java.lang.String)> --> virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("com.line.weather.forecast.hourly.RESULT_DATA_KEY", $r1)
--------------------------------------------------------

<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $d0 = virtualinvoke $r3.<android.location.Location: double getLatitude()>()
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void onHandleIntent(android.content.Intent)> --> $r7 := @caughtexception
<com.line.weather.forecast.hourly.service.FetchAddressIntentService: void a(android.location.Location)> --> r0 := @this: com.line.weather.forecast.hourly.service.FetchAddressIntentService
<com.line.weather.forecast.hourly.c.g: com.line.weather.forecast.hourly.models.GeoPlace a(android.content.Context,java.lang.String,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.line.weather.forecast.hourly.c.g: com.line.weather.forecast.hourly.models.GeoPlace a(android.content.Context,java.lang.String,java.lang.String)> --> $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
<com.line.weather.forecast.hourly.c.g: com.line.weather.forecast.hourly.models.GeoPlace a(android.content.Context,java.lang.String,java.lang.String)> --> $r12 := @caughtexception
<com.utility.DebugLog: void <clinit>()> --> nop
<com.utility.DebugLog: void <clinit>()> --> <com.utility.DebugLog: boolean DEBUG> = 1
<com.line.weather.forecast.hourly.service.ReceiverLockScreen: void onReceive(android.content.Context,android.content.Intent)> --> staticinvoke <com.utility.DebugLog: void loge(java.lang.Object)>("CALL_STATE_RINGING")
<dummyMainClass: com.line.weather.forecast.hourly.service.ReceiverLockScreen dummyMainMethod_com_line_weather_forecast_hourly_service_ReceiverLockScreen(android.content.Intent)> --> virtualinvoke $r0.<com.line.weather.forecast.hourly.service.ReceiverLockScreen: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<dummyMainClass: void dummyMainMethod(java.lang.String[])> --> staticinvoke <dummyMainClass: com.line.weather.forecast.hourly.service.ReceiverLockScreen dummyMainMethod_com_line_weather_forecast_hourly_service_ReceiverLockScreen(android.content.Intent)>(null)
<dummyMainClass: void dummyMainMethod(java.lang.String[])> --> if $i0 == 20 goto (branch)
<com.utility.DebugLog: void logd(java.lang.Object)> --> $z0 = <com.utility.DebugLog: boolean DEBUG>
<com.utility.DebugLog: void logd(java.lang.Object)> --> if $z0 != 0 goto $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0)
<com.utility.DebugLog: void logd(java.lang.Object)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("DebugLog", $r1)
--------------------------------------------------------

