<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> return $r1
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r5 = staticinvoke <com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.urbanairship.UAirship$2: void run()> --> r0 := @this: com.urbanairship.UAirship$2
<com.urbanairship.UAirship: void access$000(android.app.Application,com.urbanairship.AirshipConfigOptions,com.urbanairship.UAirship$OnReadyCallback)> --> $r0 := @parameter0: android.app.Application
<com.urbanairship.UAirship: void executeTakeOff(android.app.Application,com.urbanairship.AirshipConfigOptions,com.urbanairship.UAirship$OnReadyCallback)> --> $r0 := @parameter0: android.app.Application
<com.urbanairship.AirshipConfigOptions$Builder: com.urbanairship.AirshipConfigOptions build()> --> r0 := @this: com.urbanairship.AirshipConfigOptions$Builder
<com.urbanairship.Logger: void warn(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.urbanairship.Logger: void warn(java.lang.String)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r1, $r0)
--------------------------------------------------------

<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> $r6 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> r0.<com.krux.androidsdk.utils.d: android.location.Location c> = $r6
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> return
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> specialinvoke $r4.<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)>($r5, $z0)
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r6 = $r4.<com.krux.androidsdk.utils.d: android.location.Location c>
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> if $r6 == null goto $z0 = 0
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r3 = staticinvoke <com.krux.androidsdk.utils.b: java.lang.String a(java.lang.String,android.os.Bundle)>($r3, $r1)
<com.krux.androidsdk.aggregator.EventPublisherService: com.krux.androidsdk.aggregator.l a(com.krux.androidsdk.aggregator.a)> --> $r4 = virtualinvoke $r0.<com.krux.androidsdk.aggregator.a: java.lang.String a()>()
<com.krux.androidsdk.aggregator.EventPublisherService: com.krux.androidsdk.aggregator.l a(com.krux.androidsdk.aggregator.a)> --> if $r4 == null goto $r4 = <com.krux.androidsdk.aggregator.EventPublisherService: java.lang.String b>
<com.krux.androidsdk.aggregator.e: com.krux.androidsdk.aggregator.l a(java.net.URL)> --> $r0 := @parameter0: java.net.URL
<com.krux.androidsdk.aggregator.e: com.krux.androidsdk.aggregator.l a(java.net.URL)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r6, $r7)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> return $r1
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r5 = staticinvoke <com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.Couchbase: com.skireport.data.Resort get(java.lang.String)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.data.Resort: void <init>(com.couchbase.lite.Document)> --> r0 := @this: com.skireport.data.Resort
<com.skireport.data.Resort: void <init>(com.couchbase.lite.Document)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RESORT_MODEL", "Document is null??")
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.urbanairship.UAirship$2: void run()> --> r0 := @this: com.urbanairship.UAirship$2
<com.urbanairship.UAirship: void access$000(android.app.Application,com.urbanairship.AirshipConfigOptions,com.urbanairship.UAirship$OnReadyCallback)> --> $r0 := @parameter0: android.app.Application
<com.urbanairship.UAirship: void executeTakeOff(android.app.Application,com.urbanairship.AirshipConfigOptions,com.urbanairship.UAirship$OnReadyCallback)> --> $r0 := @parameter0: android.app.Application
<com.urbanairship.Logger: void info(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.urbanairship.Logger: void info(java.lang.String)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r0)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> return $r1
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r5 = staticinvoke <com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker: void initGoogleTagManager()> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker$2: void onResult(com.google.android.gms.common.api.Result)> --> r0 := @this: com.skireport.analytics.OmniTracker$2
<com.skireport.analytics.OmniTracker$2: void onResult(com.google.android.gms.tagmanager.ContainerHolder)> --> r0 := @this: com.skireport.analytics.OmniTracker$2
<com.skireport.analytics.OmniTracker$2: void onResult(com.google.android.gms.tagmanager.ContainerHolder)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("OMNITRACKER", "failure loading container")
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> return $r1
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r5 = staticinvoke <com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r2, "Application Context is null. Can\'t initialize Krux SDK.")
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.database.Couchbase: void <init>(android.content.Context,boolean)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.Couchbase: void <init>(android.content.Context,boolean)> --> $r8 = virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("SELECT * FROM my_areas", null)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> return $r1
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r5 = staticinvoke <com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.j: void run()> --> r0 := @this: com.krux.androidsdk.aggregator.j
<com.krux.androidsdk.aggregator.j: void run()> --> $r2 = r0.<com.krux.androidsdk.aggregator.j: com.krux.androidsdk.aggregator.f a>
<com.krux.androidsdk.aggregator.j: void run()> --> $r3 = $r2.<com.krux.androidsdk.aggregator.f: com.krux.androidsdk.utils.a q>
<com.krux.androidsdk.utils.a: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info a()> --> r0 := @this: com.krux.androidsdk.utils.a
<com.krux.androidsdk.utils.a: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info a()> --> $r1 = r0.<com.krux.androidsdk.utils.a: android.content.Context e>
<com.krux.androidsdk.utils.a: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info a()> --> $r3 := @caughtexception
<com.krux.androidsdk.utils.a: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info a()> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, $r6)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void b(java.lang.String)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void b(java.lang.String)> --> virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("mobile", "1")
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void b(java.lang.String)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void b(java.lang.String)> --> $r1 = r0.<com.krux.androidsdk.aggregator.f: java.lang.String d>
<com.krux.androidsdk.aggregator.f: void b(java.lang.String)> --> $r4 := @caughtexception
<com.krux.androidsdk.aggregator.f: void b(java.lang.String)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, $r5)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.j: void run()> --> r0 := @this: com.krux.androidsdk.aggregator.j
<com.krux.androidsdk.aggregator.j: void run()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, $r7)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.j: void run()> --> r0 := @this: com.krux.androidsdk.aggregator.j
<com.krux.androidsdk.aggregator.j: void run()> --> specialinvoke $r19.<java.net.URL: void <init>(java.lang.String)>($r5)
--------------------------------------------------------

<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> $r6 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> r0.<com.krux.androidsdk.utils.d: android.location.Location c> = $r6
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> $r6 = r0.<com.krux.androidsdk.utils.d: android.location.Location c>
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> if $r6 == null goto return
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, $r8)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> return $r1
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r5 = staticinvoke <com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.j: void run()> --> r0 := @this: com.krux.androidsdk.aggregator.j
<com.krux.androidsdk.aggregator.j: void run()> --> $r2 = r0.<com.krux.androidsdk.aggregator.j: com.krux.androidsdk.aggregator.f a>
<com.krux.androidsdk.aggregator.j: void run()> --> $r3 = $r2.<com.krux.androidsdk.aggregator.f: com.krux.androidsdk.utils.a q>
<com.krux.androidsdk.utils.a: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info a()> --> r0 := @this: com.krux.androidsdk.utils.a
<com.krux.androidsdk.utils.a: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info a()> --> $r1 = r0.<com.krux.androidsdk.utils.a: android.content.Context e>
<com.krux.androidsdk.utils.a: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info a()> --> $r7 := @caughtexception
<com.krux.androidsdk.utils.a: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info a()> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, $r6)
--------------------------------------------------------

<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> $r6 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> r0.<com.krux.androidsdk.utils.d: android.location.Location c> = $r6
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> return
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> specialinvoke $r4.<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)>($r5, $z0)
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r6 = $r4.<com.krux.androidsdk.utils.d: android.location.Location c>
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> if $r6 == null goto $z0 = 0
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("tech_browser_lang", $r3)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.advertising.DFPAdUnitFactory: com.google.android.gms.ads.doubleclick.PublisherAdRequest createDFPRequestObject(android.content.Context,android.os.Bundle,java.lang.String)> --> $r5 = virtualinvoke $r4.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.advertising.DFPAdUnitFactory: com.google.android.gms.ads.doubleclick.PublisherAdRequest createDFPRequestObject(android.content.Context,android.os.Bundle,java.lang.String)> --> if $r5 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("DFP_ADUNIT_FACTORY", "No location added to ad request")
<com.skireport.advertising.DFPAdUnitFactory: com.google.android.gms.ads.doubleclick.PublisherAdRequest createDFPRequestObject(android.content.Context,android.os.Bundle,java.lang.String)> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("DFP_ADUNIT_FACTORY", "No location added to ad request")
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.advertising.DFPAdUnitFactory: com.google.android.gms.ads.doubleclick.PublisherAdRequest createDFPRequestObject(android.content.Context,android.os.Bundle,java.lang.String)> --> $r5 = virtualinvoke $r4.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.advertising.DFPAdUnitFactory: com.google.android.gms.ads.doubleclick.PublisherAdRequest createDFPRequestObject(android.content.Context,android.os.Bundle,java.lang.String)> --> if $r5 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("DFP_ADUNIT_FACTORY", "No location added to ad request")
<com.skireport.advertising.DFPAdUnitFactory: com.google.android.gms.ads.doubleclick.PublisherAdRequest createDFPRequestObject(android.content.Context,android.os.Bundle,java.lang.String)> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("DFP_ADUNIT_FACTORY", "No location added to ad request")
--------------------------------------------------------

<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> $r6 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> r0.<com.krux.androidsdk.utils.d: android.location.Location c> = $r6
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> return
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> specialinvoke $r4.<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)>($r5, $z0)
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r6 = $r4.<com.krux.androidsdk.utils.d: android.location.Location c>
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> if $r6 == null goto $z0 = 0
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r3 = staticinvoke <com.krux.androidsdk.utils.b: java.lang.String a(java.lang.String,android.os.Bundle)>($r3, $r1)
<com.krux.androidsdk.aggregator.EventPublisherService: com.krux.androidsdk.aggregator.l a(com.krux.androidsdk.aggregator.a)> --> $r4 = virtualinvoke $r0.<com.krux.androidsdk.aggregator.a: java.lang.String a()>()
<com.krux.androidsdk.aggregator.EventPublisherService: com.krux.androidsdk.aggregator.l a(com.krux.androidsdk.aggregator.a)> --> if $r4 == null goto $r4 = <com.krux.androidsdk.aggregator.EventPublisherService: java.lang.String b>
<com.krux.androidsdk.aggregator.e: com.krux.androidsdk.aggregator.l a(java.net.URL)> --> $r0 := @parameter0: java.net.URL
<com.krux.androidsdk.aggregator.e: com.krux.androidsdk.aggregator.l a(java.net.URL)> --> $r2 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()
<com.krux.androidsdk.aggregator.e: com.krux.androidsdk.aggregator.l a(java.net.URL)> --> $r13 := @caughtexception
<com.krux.androidsdk.aggregator.e: com.krux.androidsdk.aggregator.l a(java.net.URL)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r6, $r7)
--------------------------------------------------------

<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> $r6 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> r0.<com.krux.androidsdk.utils.d: android.location.Location c> = $r6
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> return
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> specialinvoke $r4.<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)>($r5, $z0)
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r6 = $r4.<com.krux.androidsdk.utils.d: android.location.Location c>
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> if $r6 == null goto $z0 = 0
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("tech_manufacturer", $r3)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.j: void run()> --> r0 := @this: com.krux.androidsdk.aggregator.j
<com.krux.androidsdk.aggregator.j: void run()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, $r7)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> return $r1
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r5 = staticinvoke <com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.urbanairship.UAirship$2: void run()> --> r0 := @this: com.urbanairship.UAirship$2
<com.urbanairship.UAirship: void access$000(android.app.Application,com.urbanairship.AirshipConfigOptions,com.urbanairship.UAirship$OnReadyCallback)> --> $r0 := @parameter0: android.app.Application
<com.urbanairship.UAirship: void executeTakeOff(android.app.Application,com.urbanairship.AirshipConfigOptions,com.urbanairship.UAirship$OnReadyCallback)> --> $r0 := @parameter0: android.app.Application
<com.urbanairship.AirshipConfigOptions$Builder: com.urbanairship.AirshipConfigOptions$Builder applyDefaultProperties(android.content.Context)> --> r0 := @this: com.urbanairship.AirshipConfigOptions$Builder
<com.urbanairship.AirshipConfigOptions$Builder: com.urbanairship.AirshipConfigOptions$Builder applyProperties(android.content.Context,java.lang.String)> --> r0 := @this: com.urbanairship.AirshipConfigOptions$Builder
<com.urbanairship.AirshipConfigOptions$Builder: void applyConfig(com.urbanairship.ConfigParser)> --> r0 := @this: com.urbanairship.AirshipConfigOptions$Builder
<com.urbanairship.AirshipConfigOptions$Builder: void applyConfig(com.urbanairship.ConfigParser)> --> $r3 = interfaceinvoke $r1.<com.urbanairship.ConfigParser: java.lang.String getName(int)>(i0)
<com.urbanairship.AirshipConfigOptions$Builder: void applyConfig(com.urbanairship.ConfigParser)> --> r2 := @caughtexception
<com.urbanairship.Logger: void error(java.lang.String,java.lang.Throwable)> --> $r0 := @parameter0: java.lang.String
<com.urbanairship.Logger: void error(java.lang.String,java.lang.Throwable)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, $r0, $r1)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> $r10 = virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r9, r2)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> return $r1
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r5 = staticinvoke <com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void b(java.lang.String)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void b(java.lang.String)> --> $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
<com.krux.androidsdk.aggregator.f: void b(java.lang.String)> --> $r4 := @caughtexception
<com.krux.androidsdk.aggregator.f: void b(java.lang.String)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, $r5)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> return $r1
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r5 = staticinvoke <com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.j: void run()> --> r0 := @this: com.krux.androidsdk.aggregator.j
<com.krux.androidsdk.aggregator.j: void run()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, $r7)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> return $r1
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r5 = staticinvoke <com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.j: void run()> --> r0 := @this: com.krux.androidsdk.aggregator.j
<com.krux.androidsdk.aggregator.j: void run()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, $r7)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.j: void run()> --> r0 := @this: com.krux.androidsdk.aggregator.j
<com.krux.androidsdk.aggregator.j: void run()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, $r7)
--------------------------------------------------------

<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> $r6 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> r0.<com.krux.androidsdk.utils.d: android.location.Location c> = $r6
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> return
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> specialinvoke $r4.<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)>($r5, $z0)
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r6 = $r4.<com.krux.androidsdk.utils.d: android.location.Location c>
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> if $r6 == null goto $z0 = 0
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r3 = staticinvoke <com.krux.androidsdk.utils.b: java.lang.String a(java.lang.String,android.os.Bundle)>($r3, $r1)
<com.krux.androidsdk.aggregator.EventPublisherService: void onHandleIntent(android.content.Intent)> --> $r4 = virtualinvoke $r3.<com.krux.androidsdk.aggregator.a: java.lang.String a()>()
<com.krux.androidsdk.aggregator.EventPublisherService: void onHandleIntent(android.content.Intent)> --> virtualinvoke $r13.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("beacon_url", $r4)
--------------------------------------------------------

<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> $r6 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> r0.<com.krux.androidsdk.utils.d: android.location.Location c> = $r6
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> return
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> specialinvoke $r4.<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)>($r5, $z0)
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r6 = $r4.<com.krux.androidsdk.utils.d: android.location.Location c>
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> if $r6 == null goto $z0 = 0
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("tech_browser", "android_app")
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> return $r1
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r5 = staticinvoke <com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.comscore.utils.d: void run()> --> r0 := @this: com.comscore.utils.d
<com.comscore.utils.Storage: void c()> --> r0 := @this: com.comscore.utils.Storage
<com.comscore.utils.Storage: void c()> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r7, $r9)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> return $r1
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r5 = staticinvoke <com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.j: void run()> --> r0 := @this: com.krux.androidsdk.aggregator.j
<com.krux.androidsdk.aggregator.j: void run()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, $r7)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r2, "Config id format is not valid. It must be between 8-10 characters in length  and can contain lowercase or uppercase letters, digits, underscores, and dashes.")
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)> --> $r1 = new com.skireport.database.Couchbase
<com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)> --> <com.skireport.database.Couchbase: com.skireport.database.Couchbase mInstance> = $r1
<com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)> --> specialinvoke $r1.<com.skireport.database.Couchbase: void <init>(android.content.Context,boolean)>($r0, 1)
<com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)> --> $r1 = <com.skireport.database.Couchbase: com.skireport.database.Couchbase mInstance>
<com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)> --> if $r1 != null goto $r1 = <com.skireport.database.Couchbase: com.skireport.database.Couchbase mInstance>
<com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)> --> <com.skireport.database.Couchbase: com.skireport.database.Couchbase mInstance> = $r1
<com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)> --> $r1 = <com.skireport.database.Couchbase: com.skireport.database.Couchbase mInstance>
<com.skireport.services.NewsService: void onHandleIntent(android.content.Intent)> --> $r6 = staticinvoke <com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)>($r5)
<com.skireport.database.Couchbase: void startReplication(com.couchbase.lite.replicator.Replication$ChangeListener,boolean,java.util.ArrayList)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.Couchbase: void startReplication(com.couchbase.lite.replicator.Replication$ChangeListener,boolean,java.util.ArrayList)> --> specialinvoke r4.<java.net.URL: void <init>(java.lang.String)>("http://syncgateway.skiinfo.org/sync_gateway")
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.database.Couchbase: void <init>(android.content.Context,boolean)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.Couchbase: void <init>(android.content.Context,boolean)> --> virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: void close()>()
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r2, "Application Context is null. Can\'t initialize Krux SDK.")
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> return $r1
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r5 = staticinvoke <com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.j: void run()> --> r0 := @this: com.krux.androidsdk.aggregator.j
<com.krux.androidsdk.aggregator.j: void run()> --> $r3 = $r2.<com.krux.androidsdk.aggregator.f: com.krux.androidsdk.utils.a q>
<com.krux.androidsdk.aggregator.j: void run()> --> $r13 := @caughtexception
<com.krux.androidsdk.aggregator.j: void run()> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r5, $r7)
--------------------------------------------------------

<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> $r6 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> r0.<com.krux.androidsdk.utils.d: android.location.Location c> = $r6
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> return
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> specialinvoke $r4.<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)>($r5, $z0)
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r6 = $r4.<com.krux.androidsdk.utils.d: android.location.Location c>
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> if $r6 == null goto $z0 = 0
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r3 = staticinvoke <com.krux.androidsdk.utils.b: java.lang.String a(java.lang.String,android.os.Bundle)>($r3, $r1)
<com.krux.androidsdk.aggregator.EventPublisherService: com.krux.androidsdk.aggregator.l a(com.krux.androidsdk.aggregator.a)> --> $r4 = virtualinvoke $r0.<com.krux.androidsdk.aggregator.a: java.lang.String a()>()
<com.krux.androidsdk.aggregator.EventPublisherService: com.krux.androidsdk.aggregator.l a(com.krux.androidsdk.aggregator.a)> --> if $r4 == null goto $r4 = <com.krux.androidsdk.aggregator.EventPublisherService: java.lang.String b>
<com.krux.androidsdk.aggregator.e: com.krux.androidsdk.aggregator.l a(java.net.URL)> --> $r0 := @parameter0: java.net.URL
<com.krux.androidsdk.aggregator.e: com.krux.androidsdk.aggregator.l a(java.net.URL)> --> $r2 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> return $r1
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r5 = staticinvoke <com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.urbanairship.UAirship$2: void run()> --> r0 := @this: com.urbanairship.UAirship$2
<com.urbanairship.UAirship: void access$000(android.app.Application,com.urbanairship.AirshipConfigOptions,com.urbanairship.UAirship$OnReadyCallback)> --> $r0 := @parameter0: android.app.Application
<com.urbanairship.UAirship: void executeTakeOff(android.app.Application,com.urbanairship.AirshipConfigOptions,com.urbanairship.UAirship$OnReadyCallback)> --> $r0 := @parameter0: android.app.Application
<com.urbanairship.Logger: void info(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.urbanairship.Logger: void info(java.lang.String)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r0)
--------------------------------------------------------

<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> $r6 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> r0.<com.krux.androidsdk.utils.d: android.location.Location c> = $r6
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> return
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> specialinvoke $r4.<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)>($r5, $z0)
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r6 = $r4.<com.krux.androidsdk.utils.d: android.location.Location c>
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> if $r6 == null goto $z0 = 0
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $z0 = 1
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> if $z0 == 0 goto virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("tech_browser", "android_app")
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("lat", $r3)
--------------------------------------------------------

<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> $r6 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> r0.<com.krux.androidsdk.utils.d: android.location.Location c> = $r6
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> return
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> specialinvoke $r4.<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)>($r5, $z0)
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r6 = $r4.<com.krux.androidsdk.utils.d: android.location.Location c>
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> if $r6 == null goto $z0 = 0
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r3 = staticinvoke <com.krux.androidsdk.utils.b: java.lang.String a(java.lang.String,android.os.Bundle)>($r3, $r1)
<com.krux.androidsdk.aggregator.EventPublisherService: com.krux.androidsdk.aggregator.l a(com.krux.androidsdk.aggregator.a)> --> $r4 = virtualinvoke $r0.<com.krux.androidsdk.aggregator.a: java.lang.String a()>()
<com.krux.androidsdk.aggregator.EventPublisherService: com.krux.androidsdk.aggregator.l a(com.krux.androidsdk.aggregator.a)> --> if $r4 == null goto $r4 = <com.krux.androidsdk.aggregator.EventPublisherService: java.lang.String b>
<com.krux.androidsdk.aggregator.e: com.krux.androidsdk.aggregator.l a(java.net.URL)> --> $r0 := @parameter0: java.net.URL
<com.krux.androidsdk.aggregator.e: com.krux.androidsdk.aggregator.l a(java.net.URL)> --> virtualinvoke $r3.<java.net.HttpURLConnection: void setDoInput(boolean)>(1)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.j: void run()> --> r0 := @this: com.krux.androidsdk.aggregator.j
<com.krux.androidsdk.aggregator.j: void run()> --> $r3 = $r2.<com.krux.androidsdk.aggregator.f: com.krux.androidsdk.utils.a q>
<com.krux.androidsdk.aggregator.j: void run()> --> $r15 := @caughtexception
<com.krux.androidsdk.aggregator.j: void run()> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r5, $r7)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.urbanairship.UAirship$2: void run()> --> r0 := @this: com.urbanairship.UAirship$2
<com.urbanairship.UAirship: void access$000(android.app.Application,com.urbanairship.AirshipConfigOptions,com.urbanairship.UAirship$OnReadyCallback)> --> $r0 := @parameter0: android.app.Application
<com.urbanairship.UAirship: void executeTakeOff(android.app.Application,com.urbanairship.AirshipConfigOptions,com.urbanairship.UAirship$OnReadyCallback)> --> $r0 := @parameter0: android.app.Application
<com.urbanairship.AirshipConfigOptions$Builder: com.urbanairship.AirshipConfigOptions build()> --> r0 := @this: com.urbanairship.AirshipConfigOptions$Builder
<com.urbanairship.Logger: void warn(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.urbanairship.Logger: void warn(java.lang.String)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r1, $r0)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> return $r1
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r5 = staticinvoke <com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.j: void run()> --> r0 := @this: com.krux.androidsdk.aggregator.j
<com.krux.androidsdk.aggregator.j: void run()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, "Unable to initialize Krux config or segments after 3 attempts.")
--------------------------------------------------------

<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> $r6 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> r0.<com.krux.androidsdk.utils.d: android.location.Location c> = $r6
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> return
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> specialinvoke $r4.<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)>($r5, $z0)
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r6 = $r4.<com.krux.androidsdk.utils.d: android.location.Location c>
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> if $r6 == null goto $z0 = 0
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r3 = staticinvoke <com.krux.androidsdk.utils.b: java.lang.String a(java.lang.String,android.os.Bundle)>($r3, $r1)
<com.krux.androidsdk.aggregator.EventPublisherService: com.krux.androidsdk.aggregator.l a(com.krux.androidsdk.aggregator.a)> --> $r4 = virtualinvoke $r0.<com.krux.androidsdk.aggregator.a: java.lang.String a()>()
<com.krux.androidsdk.aggregator.EventPublisherService: com.krux.androidsdk.aggregator.l a(com.krux.androidsdk.aggregator.a)> --> if $r4 == null goto $r4 = <com.krux.androidsdk.aggregator.EventPublisherService: java.lang.String b>
<com.krux.androidsdk.aggregator.e: com.krux.androidsdk.aggregator.l a(java.net.URL)> --> $r0 := @parameter0: java.net.URL
<com.krux.androidsdk.aggregator.e: com.krux.androidsdk.aggregator.l a(java.net.URL)> --> virtualinvoke $r3.<java.net.HttpURLConnection: void connect()>()
--------------------------------------------------------

<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> $r6 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> r0.<com.krux.androidsdk.utils.d: android.location.Location c> = $r6
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> return
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> specialinvoke $r4.<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)>($r5, $z0)
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r6 = $r4.<com.krux.androidsdk.utils.d: android.location.Location c>
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> if $r6 == null goto $z0 = 0
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r3 = staticinvoke <com.krux.androidsdk.utils.b: java.lang.String a(java.lang.String,android.os.Bundle)>($r3, $r1)
<com.krux.androidsdk.aggregator.EventPublisherService: com.krux.androidsdk.aggregator.l a(com.krux.androidsdk.aggregator.a)> --> $r4 = virtualinvoke $r0.<com.krux.androidsdk.aggregator.a: java.lang.String a()>()
<com.krux.androidsdk.aggregator.EventPublisherService: com.krux.androidsdk.aggregator.l a(com.krux.androidsdk.aggregator.a)> --> if $r4 == null goto $r4 = <com.krux.androidsdk.aggregator.EventPublisherService: java.lang.String b>
<com.krux.androidsdk.aggregator.e: com.krux.androidsdk.aggregator.l a(java.net.URL)> --> $r0 := @parameter0: java.net.URL
<com.krux.androidsdk.aggregator.e: com.krux.androidsdk.aggregator.l a(java.net.URL)> --> $r4 = virtualinvoke $r3.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> return $r1
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r5 = staticinvoke <com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.j: void run()> --> r0 := @this: com.krux.androidsdk.aggregator.j
<com.krux.androidsdk.aggregator.j: void run()> --> $r2 = r0.<com.krux.androidsdk.aggregator.j: com.krux.androidsdk.aggregator.f a>
<com.krux.androidsdk.aggregator.j: void run()> --> $r3 = $r2.<com.krux.androidsdk.aggregator.f: com.krux.androidsdk.utils.a q>
<com.krux.androidsdk.utils.a: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info a()> --> r0 := @this: com.krux.androidsdk.utils.a
<com.krux.androidsdk.utils.a: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info a()> --> $r1 = r0.<com.krux.androidsdk.utils.a: android.content.Context e>
<com.krux.androidsdk.utils.a: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info a()> --> $r8 := @caughtexception
<com.krux.androidsdk.utils.a: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info a()> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, $r6)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> return $r1
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r5 = staticinvoke <com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("OMNITRACKER", "OmniTracker creating new...")
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.j: void run()> --> r0 := @this: com.krux.androidsdk.aggregator.j
<com.krux.androidsdk.aggregator.j: void run()> --> $r2 = r0.<com.krux.androidsdk.aggregator.j: com.krux.androidsdk.aggregator.f a>
<com.krux.androidsdk.aggregator.j: void run()> --> $r3 = $r2.<com.krux.androidsdk.aggregator.f: com.krux.androidsdk.utils.a q>
<com.krux.androidsdk.utils.a: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info a()> --> r0 := @this: com.krux.androidsdk.utils.a
<com.krux.androidsdk.utils.a: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info a()> --> $r1 = r0.<com.krux.androidsdk.utils.a: android.content.Context e>
<com.krux.androidsdk.utils.a: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info a()> --> $r7 := @caughtexception
<com.krux.androidsdk.utils.a: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info a()> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, $r6)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> $r7 = virtualinvoke $r6.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> if $r7 != null goto $r8 = new java.lang.StringBuilder
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> $r10 = virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r9, r2)
--------------------------------------------------------

<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> $r6 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> r0.<com.krux.androidsdk.utils.d: android.location.Location c> = $r6
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> return
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> specialinvoke $r4.<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)>($r5, $z0)
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r6 = $r4.<com.krux.androidsdk.utils.d: android.location.Location c>
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> if $r6 == null goto $z0 = 0
<com.krux.androidsdk.utils.b: java.lang.String a(java.lang.String,android.os.Bundle)> --> $r0 := @parameter0: java.lang.String
<com.krux.androidsdk.utils.b: java.lang.String a(java.lang.String,android.os.Bundle)> --> $r3 = virtualinvoke $r2.<android.net.Uri: android.net.Uri$Builder buildUpon()>()
<com.krux.androidsdk.utils.b: java.lang.String a(java.lang.String,android.os.Bundle)> --> $r9 := @caughtexception
<com.krux.androidsdk.utils.b: java.lang.String a(java.lang.String,android.os.Bundle)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r7, $r0)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.advertising.DFPAdUnitFactory: com.google.android.gms.ads.doubleclick.PublisherAdRequest createDFPRequestObject(android.content.Context,android.os.Bundle,java.lang.String)> --> $r5 = virtualinvoke $r4.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.advertising.DFPAdUnitFactory: com.google.android.gms.ads.doubleclick.PublisherAdRequest createDFPRequestObject(android.content.Context,android.os.Bundle,java.lang.String)> --> $r5 = virtualinvoke $r4.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.advertising.DFPAdUnitFactory: com.google.android.gms.ads.doubleclick.PublisherAdRequest createDFPRequestObject(android.content.Context,android.os.Bundle,java.lang.String)> --> if $r5 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("DFP_ADUNIT_FACTORY", "No location added to ad request")
<com.skireport.advertising.DFPAdUnitFactory: com.google.android.gms.ads.doubleclick.PublisherAdRequest createDFPRequestObject(android.content.Context,android.os.Bundle,java.lang.String)> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("DFP_ADUNIT_FACTORY", "Adding location to ad request")
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> return $r1
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r5 = staticinvoke <com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r2, "Config id format is not valid. It must be between 8-10 characters in length  and can contain lowercase or uppercase letters, digits, underscores, and dashes.")
--------------------------------------------------------

<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> $r6 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> r0.<com.krux.androidsdk.utils.d: android.location.Location c> = $r6
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> return
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> specialinvoke $r4.<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)>($r5, $z0)
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r6 = $r4.<com.krux.androidsdk.utils.d: android.location.Location c>
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> if $r6 == null goto $z0 = 0
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r3 = staticinvoke <com.krux.androidsdk.utils.b: java.lang.String a(java.lang.String,android.os.Bundle)>($r3, $r1)
<com.krux.androidsdk.aggregator.EventPublisherService: com.krux.androidsdk.aggregator.l a(com.krux.androidsdk.aggregator.a)> --> $r4 = virtualinvoke $r0.<com.krux.androidsdk.aggregator.a: java.lang.String a()>()
<com.krux.androidsdk.aggregator.EventPublisherService: com.krux.androidsdk.aggregator.l a(com.krux.androidsdk.aggregator.a)> --> if $r4 == null goto $r4 = <com.krux.androidsdk.aggregator.EventPublisherService: java.lang.String b>
<com.krux.androidsdk.aggregator.e: com.krux.androidsdk.aggregator.l a(java.net.URL)> --> $r0 := @parameter0: java.net.URL
<com.krux.androidsdk.aggregator.e: com.krux.androidsdk.aggregator.l a(java.net.URL)> --> virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("GET")
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> return $r1
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r5 = staticinvoke <com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.j: void run()> --> r0 := @this: com.krux.androidsdk.aggregator.j
<com.krux.androidsdk.aggregator.j: void run()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, $r7)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> return $r1
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r5 = staticinvoke <com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.j: void run()> --> r0 := @this: com.krux.androidsdk.aggregator.j
<com.krux.androidsdk.aggregator.j: void run()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, $r7)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.j: void run()> --> r0 := @this: com.krux.androidsdk.aggregator.j
<com.krux.androidsdk.aggregator.j: void run()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, $r7)
--------------------------------------------------------

<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> $r6 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> r0.<com.krux.androidsdk.utils.d: android.location.Location c> = $r6
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> return
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> specialinvoke $r4.<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)>($r5, $z0)
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r6 = $r4.<com.krux.androidsdk.utils.d: android.location.Location c>
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> if $r6 == null goto $z0 = 0
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r3 = staticinvoke <com.krux.androidsdk.utils.b: java.lang.String a(java.lang.String,android.os.Bundle)>($r3, $r1)
<com.krux.androidsdk.aggregator.EventPublisherService: com.krux.androidsdk.aggregator.l a(com.krux.androidsdk.aggregator.a)> --> $r4 = virtualinvoke $r0.<com.krux.androidsdk.aggregator.a: java.lang.String a()>()
<com.krux.androidsdk.aggregator.EventPublisherService: com.krux.androidsdk.aggregator.l a(com.krux.androidsdk.aggregator.a)> --> if $r4 == null goto $r4 = <com.krux.androidsdk.aggregator.EventPublisherService: java.lang.String b>
<com.krux.androidsdk.aggregator.e: com.krux.androidsdk.aggregator.l a(java.net.URL)> --> $r0 := @parameter0: java.net.URL
<com.krux.androidsdk.aggregator.e: com.krux.androidsdk.aggregator.l a(java.net.URL)> --> virtualinvoke $r3.<java.net.HttpURLConnection: void connect()>()
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.Couchbase: com.skireport.data.Resort get(java.lang.String)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.data.Resort: void <init>(com.couchbase.lite.Document)> --> r0 := @this: com.skireport.data.Resort
<com.skireport.data.Resort: void <init>(com.couchbase.lite.Document)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RESORT_MODEL", "Document is null??")
--------------------------------------------------------

<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> $r6 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> r0.<com.krux.androidsdk.utils.d: android.location.Location c> = $r6
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> $r6 = r0.<com.krux.androidsdk.utils.d: android.location.Location c>
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> if $r6 == null goto return
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, $r8)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.database.Couchbase: void <init>(android.content.Context,boolean)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.Couchbase: void <init>(android.content.Context,boolean)> --> r0.<com.skireport.database.Couchbase: android.content.Context mContext> = $r1
<com.skireport.database.Couchbase: void initDBHandler()> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.Couchbase: void <init>(android.content.Context,boolean)> --> specialinvoke r0.<com.skireport.database.Couchbase: void initDBHandler()>()
<com.skireport.database.Couchbase: boolean initChannels()> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.Couchbase: void <init>(android.content.Context,boolean)> --> $z0 = virtualinvoke r0.<com.skireport.database.Couchbase: boolean initChannels()>()
<com.skireport.database.Couchbase: void initViews()> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.Couchbase: com.couchbase.lite.Database getDatabase()> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.Couchbase: void initViews()> --> $r4 = virtualinvoke r0.<com.skireport.database.Couchbase: com.couchbase.lite.Database getDatabase()>()
<com.skireport.database.Couchbase: void <init>(android.content.Context,boolean)> --> specialinvoke r0.<com.skireport.database.Couchbase: void initViews()>()
<com.skireport.database.Couchbase: void saveAreaChannels()> --> return
<com.skireport.database.Couchbase: void UATagUser()> --> return
<com.skireport.database.Couchbase: void UATagUser()> --> $r5 = r0.<com.skireport.database.Couchbase: android.content.Context mContext>
<com.skireport.database.Couchbase: void UATagUser()> --> r1 := @caughtexception
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker: void initGoogleTagManager()> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker$2: void onResult(com.google.android.gms.common.api.Result)> --> r0 := @this: com.skireport.analytics.OmniTracker$2
<com.skireport.analytics.OmniTracker$2: void onResult(com.google.android.gms.tagmanager.ContainerHolder)> --> r0 := @this: com.skireport.analytics.OmniTracker$2
<com.skireport.analytics.OmniTracker$2: void onResult(com.google.android.gms.tagmanager.ContainerHolder)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("OMNITRACKER", "failure loading container")
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.j: void run()> --> r0 := @this: com.krux.androidsdk.aggregator.j
<com.krux.androidsdk.aggregator.j: void run()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, $r7)
--------------------------------------------------------

<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> $r6 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> r0.<com.krux.androidsdk.utils.d: android.location.Location c> = $r6
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> return
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> specialinvoke $r4.<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)>($r5, $z0)
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r6 = $r4.<com.krux.androidsdk.utils.d: android.location.Location c>
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> if $r6 == null goto $z0 = 0
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("_kuid", $r9)
--------------------------------------------------------

<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> $r6 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> r0.<com.krux.androidsdk.utils.d: android.location.Location c> = $r6
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> return
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> specialinvoke $r4.<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)>($r5, $z0)
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r6 = $r4.<com.krux.androidsdk.utils.d: android.location.Location c>
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> if $r6 == null goto $z0 = 0
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("tech_device", $r3)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> return $r1
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r5 = staticinvoke <com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void b(java.lang.String)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void b(java.lang.String)> --> virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("mobile", "1")
--------------------------------------------------------

<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> $r6 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> r0.<com.krux.androidsdk.utils.d: android.location.Location c> = $r6
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> return
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> specialinvoke $r4.<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)>($r5, $z0)
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r6 = $r4.<com.krux.androidsdk.utils.d: android.location.Location c>
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> if $r6 == null goto $z0 = 0
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $z0 = 1
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> if $z0 == 0 goto virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("tech_browser", "android_app")
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("long", $r3)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> return $r1
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r5 = staticinvoke <com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.database.Couchbase: void <init>(android.content.Context,boolean)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.Couchbase: void <init>(android.content.Context,boolean)> --> virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: void close()>()
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.urbanairship.UAirship$2: void run()> --> r0 := @this: com.urbanairship.UAirship$2
<com.urbanairship.UAirship: void access$000(android.app.Application,com.urbanairship.AirshipConfigOptions,com.urbanairship.UAirship$OnReadyCallback)> --> $r0 := @parameter0: android.app.Application
<com.urbanairship.UAirship: void executeTakeOff(android.app.Application,com.urbanairship.AirshipConfigOptions,com.urbanairship.UAirship$OnReadyCallback)> --> $r0 := @parameter0: android.app.Application
<com.urbanairship.AirshipConfigOptions$Builder: com.urbanairship.AirshipConfigOptions$Builder applyDefaultProperties(android.content.Context)> --> r0 := @this: com.urbanairship.AirshipConfigOptions$Builder
<com.urbanairship.AirshipConfigOptions$Builder: com.urbanairship.AirshipConfigOptions$Builder applyProperties(android.content.Context,java.lang.String)> --> r0 := @this: com.urbanairship.AirshipConfigOptions$Builder
<com.urbanairship.AirshipConfigOptions$Builder: void applyConfig(com.urbanairship.ConfigParser)> --> r0 := @this: com.urbanairship.AirshipConfigOptions$Builder
<com.urbanairship.AirshipConfigOptions$Builder: void applyConfig(com.urbanairship.ConfigParser)> --> $r3 = interfaceinvoke $r1.<com.urbanairship.ConfigParser: java.lang.String getName(int)>(i0)
<com.urbanairship.AirshipConfigOptions$Builder: void applyConfig(com.urbanairship.ConfigParser)> --> r2 := @caughtexception
<com.urbanairship.Logger: void error(java.lang.String,java.lang.Throwable)> --> $r0 := @parameter0: java.lang.String
<com.urbanairship.Logger: void error(java.lang.String,java.lang.Throwable)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, $r0, $r1)
--------------------------------------------------------

<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> $r6 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> r0.<com.krux.androidsdk.utils.d: android.location.Location c> = $r6
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> return
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> specialinvoke $r4.<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)>($r5, $z0)
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r6 = $r4.<com.krux.androidsdk.utils.d: android.location.Location c>
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> if $r6 == null goto $z0 = 0
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r3 = staticinvoke <com.krux.androidsdk.utils.b: java.lang.String a(java.lang.String,android.os.Bundle)>($r3, $r1)
<com.krux.androidsdk.aggregator.EventPublisherService: com.krux.androidsdk.aggregator.l a(com.krux.androidsdk.aggregator.a)> --> $r4 = virtualinvoke $r0.<com.krux.androidsdk.aggregator.a: java.lang.String a()>()
<com.krux.androidsdk.aggregator.EventPublisherService: com.krux.androidsdk.aggregator.l a(com.krux.androidsdk.aggregator.a)> --> if $r4 == null goto $r4 = <com.krux.androidsdk.aggregator.EventPublisherService: java.lang.String b>
<com.krux.androidsdk.aggregator.e: com.krux.androidsdk.aggregator.l a(java.net.URL)> --> $r0 := @parameter0: java.net.URL
<com.krux.androidsdk.aggregator.e: com.krux.androidsdk.aggregator.l a(java.net.URL)> --> $i0 = virtualinvoke $r3.<java.net.HttpURLConnection: int getResponseCode()>()
--------------------------------------------------------

<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> $r6 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> r0.<com.krux.androidsdk.utils.d: android.location.Location c> = $r6
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> return
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> specialinvoke $r4.<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)>($r5, $z0)
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r6 = $r4.<com.krux.androidsdk.utils.d: android.location.Location c>
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> if $r6 == null goto $z0 = 0
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r3 = staticinvoke <com.krux.androidsdk.utils.b: java.lang.String a(java.lang.String,android.os.Bundle)>($r3, $r1)
<com.krux.androidsdk.aggregator.EventPublisherService: com.krux.androidsdk.aggregator.l a(com.krux.androidsdk.aggregator.a)> --> $r4 = virtualinvoke $r0.<com.krux.androidsdk.aggregator.a: java.lang.String a()>()
<com.krux.androidsdk.aggregator.EventPublisherService: com.krux.androidsdk.aggregator.l a(com.krux.androidsdk.aggregator.a)> --> if $r4 == null goto $r4 = <com.krux.androidsdk.aggregator.EventPublisherService: java.lang.String b>
<com.krux.androidsdk.aggregator.EventPublisherService: com.krux.androidsdk.aggregator.l a(com.krux.androidsdk.aggregator.a)> --> specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> return $r1
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r5 = staticinvoke <com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.j: void run()> --> r0 := @this: com.krux.androidsdk.aggregator.j
<com.krux.androidsdk.aggregator.j: void run()> --> $r3 = $r2.<com.krux.androidsdk.aggregator.f: com.krux.androidsdk.utils.a q>
<com.krux.androidsdk.aggregator.j: void run()> --> $r15 := @caughtexception
<com.krux.androidsdk.aggregator.j: void run()> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r5, $r7)
--------------------------------------------------------

<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> $r6 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> r0.<com.krux.androidsdk.utils.d: android.location.Location c> = $r6
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> return
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> specialinvoke $r4.<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)>($r5, $z0)
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r6 = $r4.<com.krux.androidsdk.utils.d: android.location.Location c>
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> if $r6 == null goto $z0 = 0
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r3 = staticinvoke <com.krux.androidsdk.utils.b: java.lang.String a(java.lang.String,android.os.Bundle)>($r3, $r1)
<com.krux.androidsdk.aggregator.EventPublisherService: com.krux.androidsdk.aggregator.l a(com.krux.androidsdk.aggregator.a)> --> $r4 = virtualinvoke $r0.<com.krux.androidsdk.aggregator.a: java.lang.String a()>()
<com.krux.androidsdk.aggregator.EventPublisherService: com.krux.androidsdk.aggregator.l a(com.krux.androidsdk.aggregator.a)> --> if $r4 == null goto $r4 = <com.krux.androidsdk.aggregator.EventPublisherService: java.lang.String b>
<com.krux.androidsdk.aggregator.e: com.krux.androidsdk.aggregator.l a(java.net.URL)> --> $r0 := @parameter0: java.net.URL
<com.krux.androidsdk.aggregator.e: com.krux.androidsdk.aggregator.l a(java.net.URL)> --> virtualinvoke $r3.<java.net.HttpURLConnection: void setDoInput(boolean)>(1)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> return $r1
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r5 = staticinvoke <com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.j: void run()> --> r0 := @this: com.krux.androidsdk.aggregator.j
<com.krux.androidsdk.aggregator.j: void run()> --> specialinvoke $r19.<java.net.URL: void <init>(java.lang.String)>($r5)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> return $r1
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r5 = staticinvoke <com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.database.Couchbase: void <init>(android.content.Context,boolean)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.Couchbase: void <init>(android.content.Context,boolean)> --> $r8 = virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("SELECT * FROM my_areas", null)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.j: void run()> --> r0 := @this: com.krux.androidsdk.aggregator.j
<com.krux.androidsdk.aggregator.j: void run()> --> $r2 = r0.<com.krux.androidsdk.aggregator.j: com.krux.androidsdk.aggregator.f a>
<com.krux.androidsdk.aggregator.j: void run()> --> $r3 = $r2.<com.krux.androidsdk.aggregator.f: com.krux.androidsdk.utils.a q>
<com.krux.androidsdk.utils.a: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info a()> --> r0 := @this: com.krux.androidsdk.utils.a
<com.krux.androidsdk.utils.a: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info a()> --> $r1 = r0.<com.krux.androidsdk.utils.a: android.content.Context e>
<com.krux.androidsdk.utils.a: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info a()> --> $r8 := @caughtexception
<com.krux.androidsdk.utils.a: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info a()> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, $r6)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.advertising.DFPAdUnitFactory: com.google.android.gms.ads.doubleclick.PublisherAdRequest createDFPRequestObject(android.content.Context,android.os.Bundle,java.lang.String)> --> $r5 = virtualinvoke $r4.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.advertising.DFPAdUnitFactory: com.google.android.gms.ads.doubleclick.PublisherAdRequest createDFPRequestObject(android.content.Context,android.os.Bundle,java.lang.String)> --> if $r5 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("DFP_ADUNIT_FACTORY", "No location added to ad request")
<com.skireport.advertising.DFPAdUnitFactory: com.google.android.gms.ads.doubleclick.PublisherAdRequest createDFPRequestObject(android.content.Context,android.os.Bundle,java.lang.String)> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("DFP_ADUNIT_FACTORY", "Adding location to ad request")
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("OMNITRACKER", "OmniTracker creating new...")
--------------------------------------------------------

<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> $r6 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> r0.<com.krux.androidsdk.utils.d: android.location.Location c> = $r6
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> return
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> specialinvoke $r4.<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)>($r5, $z0)
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r6 = $r4.<com.krux.androidsdk.utils.d: android.location.Location c>
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> if $r6 == null goto $z0 = 0
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("tech_os", $r3)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.j: void run()> --> r0 := @this: com.krux.androidsdk.aggregator.j
<com.krux.androidsdk.aggregator.j: void run()> --> $r3 = $r2.<com.krux.androidsdk.aggregator.f: com.krux.androidsdk.utils.a q>
<com.krux.androidsdk.aggregator.j: void run()> --> $r13 := @caughtexception
<com.krux.androidsdk.aggregator.j: void run()> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r5, $r7)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.j: void run()> --> r0 := @this: com.krux.androidsdk.aggregator.j
<com.krux.androidsdk.aggregator.j: void run()> --> $r2 = r0.<com.krux.androidsdk.aggregator.j: com.krux.androidsdk.aggregator.f a>
<com.krux.androidsdk.aggregator.j: void run()> --> $r3 = $r2.<com.krux.androidsdk.aggregator.f: com.krux.androidsdk.utils.a q>
<com.krux.androidsdk.utils.a: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info a()> --> r0 := @this: com.krux.androidsdk.utils.a
<com.krux.androidsdk.utils.a: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info a()> --> $r1 = r0.<com.krux.androidsdk.utils.a: android.content.Context e>
<com.krux.androidsdk.utils.a: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info a()> --> $r3 := @caughtexception
<com.krux.androidsdk.utils.a: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info a()> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, $r6)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.j: void run()> --> r0 := @this: com.krux.androidsdk.aggregator.j
<com.krux.androidsdk.aggregator.j: void run()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, "Unable to initialize Krux config or segments after 3 attempts.")
--------------------------------------------------------

<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> $r6 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> r0.<com.krux.androidsdk.utils.d: android.location.Location c> = $r6
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> return
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> specialinvoke $r4.<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)>($r5, $z0)
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r6 = $r4.<com.krux.androidsdk.utils.d: android.location.Location c>
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> if $r6 == null goto $z0 = 0
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r3 = staticinvoke <com.krux.androidsdk.utils.b: java.lang.String a(java.lang.String,android.os.Bundle)>($r3, $r1)
<com.krux.androidsdk.aggregator.EventPublisherService: com.krux.androidsdk.aggregator.l a(com.krux.androidsdk.aggregator.a)> --> $r4 = virtualinvoke $r0.<com.krux.androidsdk.aggregator.a: java.lang.String a()>()
<com.krux.androidsdk.aggregator.EventPublisherService: com.krux.androidsdk.aggregator.l a(com.krux.androidsdk.aggregator.a)> --> if $r4 == null goto $r4 = <com.krux.androidsdk.aggregator.EventPublisherService: java.lang.String b>
<com.krux.androidsdk.aggregator.e: com.krux.androidsdk.aggregator.l a(java.net.URL)> --> $r0 := @parameter0: java.net.URL
<com.krux.androidsdk.aggregator.e: com.krux.androidsdk.aggregator.l a(java.net.URL)> --> $r4 = virtualinvoke $r3.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> return $r1
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r5 = staticinvoke <com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r1 = <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker sInstance>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r3 = staticinvoke <com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)>($r2)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)> --> $r1 = new com.skireport.database.Couchbase
<com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)> --> <com.skireport.database.Couchbase: com.skireport.database.Couchbase mInstance> = $r1
<com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)> --> specialinvoke $r1.<com.skireport.database.Couchbase: void <init>(android.content.Context,boolean)>($r0, 1)
<com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)> --> $r1 = <com.skireport.database.Couchbase: com.skireport.database.Couchbase mInstance>
<com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)> --> if $r1 != null goto $r1 = <com.skireport.database.Couchbase: com.skireport.database.Couchbase mInstance>
<com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)> --> <com.skireport.database.Couchbase: com.skireport.database.Couchbase mInstance> = $r1
<com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)> --> $r1 = <com.skireport.database.Couchbase: com.skireport.database.Couchbase mInstance>
<com.skireport.services.NewsService: void onHandleIntent(android.content.Intent)> --> $r6 = staticinvoke <com.skireport.database.Couchbase: com.skireport.database.Couchbase getInstance(android.content.Context)>($r5)
<com.skireport.database.Couchbase: void startReplication(com.couchbase.lite.replicator.Replication$ChangeListener,boolean,java.util.ArrayList)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.Couchbase: void startReplication(com.couchbase.lite.replicator.Replication$ChangeListener,boolean,java.util.ArrayList)> --> specialinvoke r4.<java.net.URL: void <init>(java.lang.String)>("http://syncgateway.skiinfo.org/sync_gateway")
--------------------------------------------------------

<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> $r6 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> r0.<com.krux.androidsdk.utils.d: android.location.Location c> = $r6
<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)> --> return
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> specialinvoke $r4.<com.krux.androidsdk.utils.d: void <init>(android.content.Context,boolean)>($r5, $z0)
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> $r6 = $r4.<com.krux.androidsdk.utils.d: android.location.Location c>
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> if $r6 == null goto $z0 = 0
<com.krux.androidsdk.aggregator.m: java.lang.String a()> --> virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("_kpid", $r9)
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 != null goto $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
--------------------------------------------------------

<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation> = $r2
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> if $r2 == null goto staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OMNITRACKER", "Getting new location")
<com.skireport.analytics.OmniTracker: android.location.Location getLocation()> --> $r2 = r0.<com.skireport.analytics.OmniTracker: android.location.Location mCurrentLocation>
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> $r4 = virtualinvoke $r3.<com.skireport.analytics.OmniTracker: android.location.Location getLocation()>()
<com.skireport.screens.resort.firsthandreports.FHRSelectResortFragment: void showNearByResorts()> --> if $r4 == null goto $r6 = new java.util.ArrayList
<com.skireport.database.Couchbase: java.util.ArrayList getNearby(int)> --> r0 := @this: com.skireport.database.Couchbase
<com.skireport.database.SearchManager: android.database.Cursor distance(int)> --> r0 := @this: com.skireport.database.SearchManager
<com.skireport.analytics.OmniTracker: com.skireport.analytics.OmniTracker getInstance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.skireport.analytics.OmniTracker: void <init>(android.content.Context)> --> r0 := @this: com.skireport.analytics.OmniTracker
<com.krux.androidsdk.aggregator.KruxEventAggregator: void initialize(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> $r0 := @parameter0: android.content.Context
<com.krux.androidsdk.aggregator.f: void a(android.content.Context,java.lang.String,com.krux.androidsdk.aggregator.KruxSegments,boolean)> --> r0 := @this: com.krux.androidsdk.aggregator.f
<com.krux.androidsdk.aggregator.f: void d()> --> r0 := @this: com.krux.androidsdk.aggregator.f
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.comscore.utils.d: void run()> --> r0 := @this: com.comscore.utils.d
<com.comscore.utils.Storage: void c()> --> r0 := @this: com.comscore.utils.Storage
<com.comscore.utils.Storage: void c()> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r7, $r9)
--------------------------------------------------------

