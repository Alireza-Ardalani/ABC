<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$5: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$5
<jp.profilepassport.android.obfuscated.j.l: long j()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.l
<jp.profilepassport.android.obfuscated.j.l: long j()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d1 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.h$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.h$3
<jp.profilepassport.android.obfuscated.j.h: void b(jp.profilepassport.android.obfuscated.j.h,java.util.List)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.h
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> virtualinvoke $r7.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$8: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$8
<jp.profilepassport.android.obfuscated.j.l: long a(java.util.List,java.util.List)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.l
<jp.profilepassport.android.obfuscated.j.l: long a(java.util.List,java.util.List)> --> virtualinvoke $r12.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d1 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.h$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.h$3
<jp.profilepassport.android.obfuscated.j.h: void b(jp.profilepassport.android.obfuscated.j.h,java.util.List)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.h
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> $r5 = r0.<jp.profilepassport.android.obfuscated.j.a: android.database.sqlite.SQLiteDatabase a>
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> $r12 := @caughtexception
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.a$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.a$3
<jp.profilepassport.android.obfuscated.j.c: void b(java.lang.String)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.c
<jp.profilepassport.android.obfuscated.j.c: void b(java.lang.String)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteStatement: void execute()>()
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.g$2: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.g$2
<jp.profilepassport.android.obfuscated.j.k: void a(java.util.List)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.k
<jp.profilepassport.android.obfuscated.j.k: void a(java.util.List)> --> virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>($r7, "_tag_flag = ? AND _type = ? AND _type_key = ?", $r14)
--------------------------------------------------------

<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void judgeFusedLocationProvider(android.location.Location,android.location.Location,android.location.Location)> --> $d0 = virtualinvoke $r0.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void judgeFusedLocationProvider(android.location.Location,android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void judgeFusedLocationProvider(android.location.Location,android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void setNetworkLocationType(android.location.Location,android.location.Location)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void setNetworkLocationType(android.location.Location,android.location.Location)> --> virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("networkLocationType", $r4)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.a$2: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.a$2
<jp.profilepassport.android.obfuscated.j.b: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.b
<jp.profilepassport.android.obfuscated.j.b: void i()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void execute()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$2
<jp.profilepassport.android.obfuscated.f.c: void a(android.content.Context,jp.profilepassport.android.PPTagInf,jp.profilepassport.android.PPNotificationListener)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.c
<jp.profilepassport.android.obfuscated.f.c: void a(int)> --> $i0 := @parameter0: int
<jp.profilepassport.android.obfuscated.g.e: void a(int)> --> r0 := @this: jp.profilepassport.android.obfuscated.g.e
<jp.profilepassport.android.tasks.w: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.tasks.PPScheduleReceiver$4: void run()> --> r0 := @this: jp.profilepassport.android.tasks.PPScheduleReceiver$4
<jp.profilepassport.android.schedule.a: void c()> --> r0 := @this: jp.profilepassport.android.schedule.a
<jp.profilepassport.android.schedule.a: void a(long)> --> r0 := @this: jp.profilepassport.android.schedule.a
<jp.profilepassport.android.schedule.a: void a(long)> --> virtualinvoke $r4.<android.os.PersistableBundle: void putInt(java.lang.String,int)>("BUNDLE_JOB_TASK_NETWORK_FLAG", 1)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.b$5: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.b$5
<jp.profilepassport.android.obfuscated.j.d: void a(int)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.d
<jp.profilepassport.android.obfuscated.j.d: void a(int)> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void execute()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.geoarea.service.PPGeoAreaService$1: void run()> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService$1
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void access$000(jp.profilepassport.android.geoarea.service.PPGeoAreaService,com.google.android.gms.location.GeofencingEvent)> --> $r0 := @parameter0: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void geofenceEnter(com.google.android.gms.location.GeofencingEvent)> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.logger.PPLogger: void sendCooperationLocation(android.location.Location,int)> --> r0 := @this: jp.profilepassport.android.logger.PPLogger
<jp.profilepassport.android.logger.PPLoggerCfgManager: jp.profilepassport.android.logger.PPLoggerCfgManager getManager(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.PPLoggerCfgManager: jp.profilepassport.android.logger.PPLoggerCfgManager getManager(android.content.Context)> --> $r2 = new jp.profilepassport.android.logger.util.preferences.PPLoggerTCCMPreferences
<jp.profilepassport.android.logger.PPLoggerCfgManager: jp.profilepassport.android.logger.PPLoggerCfgManager getManager(android.content.Context)> --> $r6 := @caughtexception
<jp.profilepassport.android.logger.PPLoggerCfgManager: void <init>(android.content.Context)> --> r0 := @this: jp.profilepassport.android.logger.PPLoggerCfgManager
<jp.profilepassport.android.logger.PPLoggerCfgManager: void updateHash()> --> r0 := @this: jp.profilepassport.android.logger.PPLoggerCfgManager
<jp.profilepassport.android.logger.db.PPLoggerCfgDBUtil: java.util.HashMap getCfgValueHash(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.db.PPLoggerCfgDBUtil: java.util.HashMap getCfgValueHash(android.content.Context,java.lang.String)> --> $r6 = virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>(" SELECT key,value FROM pp_logger_cfg WHERE  type = ?", $r5)
--------------------------------------------------------

<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)> --> $r4 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r1 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)>($r0, "gps")
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> if $r0 == null goto return 0
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $z0 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)>($r1, 900000L, 300.0)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> if $z0 != 0 goto return $r1
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r3 = null
<jp.profilepassport.android.obfuscated.f.b: void d(android.content.Context)> --> $r2 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)>($r1)
<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$4
<jp.profilepassport.android.obfuscated.j.m: void h()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.m
<jp.profilepassport.android.obfuscated.j.m: void h()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void execute()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.h$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.h$3
<jp.profilepassport.android.obfuscated.j.h: void b(jp.profilepassport.android.obfuscated.j.h,java.util.List)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.h
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> $r5 = r0.<jp.profilepassport.android.obfuscated.j.a: android.database.sqlite.SQLiteDatabase a>
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> $r13 := @caughtexception
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$1: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$1
<jp.profilepassport.android.obfuscated.f.f: void a(android.content.Context,java.lang.String,jp.profilepassport.android.PPSDKManagerListener)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.f
<jp.profilepassport.android.obfuscated.C.j: void a(android.content.Context,java.lang.String,java.lang.String,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.C.j: void a(android.content.Context,java.lang.String,java.lang.String,boolean)> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>($r2, $z0)
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d1 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$5: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$5
<jp.profilepassport.android.obfuscated.j.l: long j()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.l
<jp.profilepassport.android.obfuscated.j.l: long j()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$2
<jp.profilepassport.android.obfuscated.f.c: void a(android.content.Context,jp.profilepassport.android.PPTagInf,jp.profilepassport.android.PPNotificationListener)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.c
<jp.profilepassport.android.obfuscated.f.c: void a(int)> --> $i0 := @parameter0: int
<jp.profilepassport.android.obfuscated.g.e: void a(int)> --> r0 := @this: jp.profilepassport.android.obfuscated.g.e
<jp.profilepassport.android.tasks.w: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask$1: void run()> --> r0 := @this: jp.profilepassport.android.logger.task.PPLoggerErrorLogTask$1
<jp.profilepassport.android.logger.logentity.PPLoggerErrorLogEntity: void <init>(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> r0 := @this: jp.profilepassport.android.logger.logentity.PPLoggerErrorLogEntity
<jp.profilepassport.android.logger.logentity.PPLoggerPPSDKLogBaseEntity: void <init>(android.content.Context)> --> r0 := @this: jp.profilepassport.android.logger.logentity.PPLoggerPPSDKLogBaseEntity
<jp.profilepassport.android.logger.logentity.PPLoggerPPSDKLogBaseEntity: void appendRequiredParams()> --> r0 := @this: jp.profilepassport.android.logger.logentity.PPLoggerPPSDKLogBaseEntity
<jp.profilepassport.android.logger.logentity.PPLoggerPPSDKLogBaseEntity: java.lang.String getCkp()> --> r0 := @this: jp.profilepassport.android.logger.logentity.PPLoggerPPSDKLogBaseEntity
<jp.profilepassport.android.logger.config.PPLoggerPPUUID: java.lang.String getPPUUID(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.config.PPLoggerPPUUID: void ppUUIDControl(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.preferences.PPLoggerTCCMPreferences: void commitPutPPUUID(java.lang.String)> --> r0 := @this: jp.profilepassport.android.logger.util.preferences.PPLoggerTCCMPreferences
<jp.profilepassport.android.logger.util.preferences.PPLoggerSharedPreferences: boolean commitPutString(java.lang.String,java.lang.String)> --> r0 := @this: jp.profilepassport.android.logger.util.preferences.PPLoggerSharedPreferences
<jp.profilepassport.android.logger.util.preferences.PPLoggerSharedPreferences: boolean commitPutString(java.lang.String,java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$4
<jp.profilepassport.android.obfuscated.j.m: void h()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.m
<jp.profilepassport.android.obfuscated.j.m: void h()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask$1: void run()> --> r0 := @this: jp.profilepassport.android.logger.task.PPLoggerErrorLogTask$1
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: boolean access$000(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: boolean isAddableErrorLog(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.db.PPLoggerLoggingDBUtil: void deleteOldestLogOfCpType(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.db.PPLoggerLoggingDBUtil: void deleteOldestLogOfCpType(android.content.Context,java.lang.String)> --> virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>("DELETE FROM tn_logging WHERE id IN (SELECT id FROM tn_logging WHERE detail LIKE \'%cp_type=\'||?||\'&%\' ESCAPE \'$\' ORDER BY id ASC LIMIT 1)", $r5)
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.f$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f$4
<jp.profilepassport.android.obfuscated.j.f: void a(jp.profilepassport.android.obfuscated.j.f,java.util.List)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.b$5: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.b$5
<jp.profilepassport.android.obfuscated.j.d: void a(int)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.d
<jp.profilepassport.android.obfuscated.j.d: void a(int)> --> $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>()
<jp.profilepassport.android.obfuscated.j.d: void a(int)> --> $r7 := @caughtexception
<jp.profilepassport.android.obfuscated.j.d: void a(int)> --> virtualinvoke $r3.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.g$1: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.g$1
<jp.profilepassport.android.obfuscated.j.k: java.util.List h()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.k
<jp.profilepassport.android.obfuscated.j.k: java.util.List h()> --> $r4 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r3, null, null, null, null, null, null)
--------------------------------------------------------

<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)> --> $r4 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r1 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)>($r0, "gps")
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> if $r0 == null goto return 0
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $z0 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)>($r1, 900000L, 300.0)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> if $z0 != 0 goto return $r1
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r3 = null
<jp.profilepassport.android.obfuscated.f.b: void d(android.content.Context)> --> $r2 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)>($r1)
<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.b$5: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.b$5
<jp.profilepassport.android.obfuscated.j.d: void a(int)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.d
<jp.profilepassport.android.obfuscated.j.d: void a(int)> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void execute()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.h$2: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.h$2
<jp.profilepassport.android.obfuscated.j.h: void a(jp.profilepassport.android.obfuscated.j.h,java.util.List)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.h
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> $r6 = virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>($r1)
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> $r11 := @caughtexception
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.geoarea.service.PPGeoAreaService$1: void run()> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService$1
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void access$000(jp.profilepassport.android.geoarea.service.PPGeoAreaService,com.google.android.gms.location.GeofencingEvent)> --> $r0 := @parameter0: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void geofenceEnter(com.google.android.gms.location.GeofencingEvent)> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.tasks.l: boolean a(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.q.c: void a(android.content.Context,java.lang.String,java.lang.String,java.util.Date)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.B.f: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.B.f: boolean a(java.lang.String,java.lang.String,boolean)> --> $r0 := @parameter0: java.lang.String
<jp.profilepassport.android.obfuscated.B.f: boolean a(java.lang.String,java.lang.String,boolean)> --> virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r2)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.geoarea.service.PPGeoAreaService$1: void run()> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService$1
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void access$000(jp.profilepassport.android.geoarea.service.PPGeoAreaService,com.google.android.gms.location.GeofencingEvent)> --> $r0 := @parameter0: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void geofenceEnter(com.google.android.gms.location.GeofencingEvent)> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.tasks.l: boolean a(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.q.c: void a(android.content.Context,java.lang.String,java.lang.String,java.util.Date)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.B.f: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.B.f: boolean a(java.lang.String,java.lang.String,boolean)> --> $r0 := @parameter0: java.lang.String
<jp.profilepassport.android.obfuscated.B.f: boolean a(java.lang.String,java.lang.String,boolean)> --> virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r2)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask$1: void run()> --> r0 := @this: jp.profilepassport.android.logger.task.PPLoggerErrorLogTask$1
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: boolean access$000(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: boolean isAddableErrorLog(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.db.PPLoggerLoggingDBUtil: int getLogCountOfLogCpType(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.db.PPLoggerLoggingDBUtil: int getLogCountOfLogCpType(android.content.Context,java.lang.String)> --> $r8 = virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("SELECT id,detail FROM tn_logging WHERE detail LIKE \'%cp_type=\'||?||\'%\' ESCAPE \'$\'", $r7)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.a$2: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.a$2
<jp.profilepassport.android.obfuscated.j.b: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.b
<jp.profilepassport.android.obfuscated.j.b: void i()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.h$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.h$3
<jp.profilepassport.android.obfuscated.j.h: void b(jp.profilepassport.android.obfuscated.j.h,java.util.List)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.h
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> virtualinvoke $r7.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)> --> $r4 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r1 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)>($r0, "gps")
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> if $r0 == null goto return 0
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $z0 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)>($r1, 900000L, 300.0)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> if $z0 != 0 goto return $r1
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r3 = null
<jp.profilepassport.android.obfuscated.f.b: void d(android.content.Context)> --> $r2 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)>($r1)
<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$4
<jp.profilepassport.android.obfuscated.j.m: void h()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.m
<jp.profilepassport.android.obfuscated.j.m: void h()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask$1: void run()> --> r0 := @this: jp.profilepassport.android.logger.task.PPLoggerErrorLogTask$1
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: boolean access$000(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: boolean isAddableErrorLog(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.db.PPLoggerLoggingDBUtil: int getLogCountOfLogCpType(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.db.PPLoggerLoggingDBUtil: int getLogCountOfLogCpType(android.content.Context,java.lang.String)> --> $r8 = virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("SELECT id,detail FROM tn_logging WHERE detail LIKE \'%cp_type=\'||?||\'%\' ESCAPE \'$\'", $r7)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.wifi.service.PPWifiScanService$b$1: void run()> --> r0 := @this: jp.profilepassport.android.wifi.service.PPWifiScanService$b$1
<jp.profilepassport.android.wifi.service.PPWifiScanService: void access$900(jp.profilepassport.android.wifi.service.PPWifiScanService)> --> $r0 := @parameter0: jp.profilepassport.android.wifi.service.PPWifiScanService
<jp.profilepassport.android.wifi.service.PPWifiScanService: void checkScanResult()> --> r0 := @this: jp.profilepassport.android.wifi.service.PPWifiScanService
<jp.profilepassport.android.wifi.service.PPWifiScanService: void postUpdateAlarmTime()> --> r0 := @this: jp.profilepassport.android.wifi.service.PPWifiScanService
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$1: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$1
<jp.profilepassport.android.obfuscated.f.f: void a(android.content.Context,java.lang.String,jp.profilepassport.android.PPSDKManagerListener)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.f
<jp.profilepassport.android.logger.PPLogger: void start()> --> r0 := @this: jp.profilepassport.android.logger.PPLogger
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationManager: void startScreenReceiverService()> --> r0 := @this: jp.profilepassport.android.logger.cooperation.PPLoggerCooperationManager
<jp.profilepassport.android.logger.task.PPLoggerTaskUtil: int scheduleScreenJob(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.task.PPLoggerTaskUtil: int scheduleScreenJob(android.content.Context)> --> virtualinvoke $r1.<android.os.PersistableBundle: void putInt(java.lang.String,int)>("BUNDLE_JOB_KIND", 0)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.geoarea.service.PPGeoAreaService$1: void run()> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService$1
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void access$000(jp.profilepassport.android.geoarea.service.PPGeoAreaService,com.google.android.gms.location.GeofencingEvent)> --> $r0 := @parameter0: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void geofenceEnter(com.google.android.gms.location.GeofencingEvent)> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.tasks.l: boolean a(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.q.c: void a(android.content.Context,java.lang.String,java.lang.String,java.util.Date)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.B.f: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.B.f: boolean a(java.lang.String,java.lang.String,boolean)> --> $r0 := @parameter0: java.lang.String
<jp.profilepassport.android.obfuscated.B.f: boolean a(java.lang.String,java.lang.String,boolean)> --> virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r2)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.e$6: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.e$6
<jp.profilepassport.android.obfuscated.j.i: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.i
<jp.profilepassport.android.obfuscated.j.i: void i()> --> $r4 = virtualinvoke r0.<jp.profilepassport.android.obfuscated.j.i: android.database.sqlite.SQLiteDatabase a()>()
<jp.profilepassport.android.obfuscated.j.i: void i()> --> $r7 := @caughtexception
<jp.profilepassport.android.obfuscated.j.i: void i()> --> virtualinvoke $r3.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.a$2: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.a$2
<jp.profilepassport.android.obfuscated.j.b: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.b
<jp.profilepassport.android.obfuscated.j.b: void i()> --> $r4 = virtualinvoke r0.<jp.profilepassport.android.obfuscated.j.b: android.database.sqlite.SQLiteDatabase a()>()
<jp.profilepassport.android.obfuscated.j.b: void i()> --> $r7 := @caughtexception
<jp.profilepassport.android.obfuscated.j.b: void i()> --> virtualinvoke $r3.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.tasks.PPScheduleReceiver$3: void run()> --> r0 := @this: jp.profilepassport.android.tasks.PPScheduleReceiver$3
<jp.profilepassport.android.tasks.d: void b()> --> r0 := @this: jp.profilepassport.android.tasks.d
<jp.profilepassport.android.tasks.u: jp.profilepassport.android.tasks.u a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.tasks.u: void <init>(android.content.Context)> --> r0 := @this: jp.profilepassport.android.tasks.u
<jp.profilepassport.android.schedule.a: void a(long)> --> r0 := @this: jp.profilepassport.android.schedule.a
<jp.profilepassport.android.schedule.a: void a(long)> --> virtualinvoke $r4.<android.os.PersistableBundle: void putInt(java.lang.String,int)>("BUNDLE_JOB_TASK_NETWORK_FLAG", 1)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.a$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.a$3
<jp.profilepassport.android.obfuscated.j.c: void b(java.lang.String)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.c
<jp.profilepassport.android.obfuscated.j.c: void b(java.lang.String)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.e$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e$3
<jp.profilepassport.android.obfuscated.j.a: long a(java.lang.String,java.lang.String[])> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: long a(java.lang.String,java.lang.String[])> --> $i0 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>($r1, null, null)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.h$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.h$3
<jp.profilepassport.android.obfuscated.j.h: void b(jp.profilepassport.android.obfuscated.j.h,java.util.List)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.h
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> $r5 = r0.<jp.profilepassport.android.obfuscated.j.a: android.database.sqlite.SQLiteDatabase a>
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> $r12 := @caughtexception
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.h$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.h$3
<jp.profilepassport.android.obfuscated.j.h: void b(jp.profilepassport.android.obfuscated.j.h,java.util.List)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.h
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> $r5 = r0.<jp.profilepassport.android.obfuscated.j.a: android.database.sqlite.SQLiteDatabase a>
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> $r13 := @caughtexception
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)> --> $r4 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r1 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)>($r0, "gps")
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> if $r0 == null goto return 0
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $z0 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)>($r1, 900000L, 300.0)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> if $z0 != 0 goto return $r1
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r3 = null
<jp.profilepassport.android.obfuscated.f.b: void d(android.content.Context)> --> $r2 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)>($r1)
<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.f$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f$4
<jp.profilepassport.android.obfuscated.j.f: void a(jp.profilepassport.android.obfuscated.j.f,java.util.List)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteStatement: long executeInsert()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.h$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.h$4
<jp.profilepassport.android.obfuscated.j.h: long a(jp.profilepassport.android.obfuscated.j.h,jp.profilepassport.android.obfuscated.k.h)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.h
<jp.profilepassport.android.obfuscated.j.a: long a(android.content.ContentValues,java.lang.String,java.lang.String[],java.lang.Object)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: long a(android.content.ContentValues,java.lang.String,java.lang.String[],java.lang.Object)> --> $i0 = virtualinvoke $r8.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>($r7, $r1, $r2, $r3)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.f$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.f$4
<jp.profilepassport.android.obfuscated.j.j: long a(jp.profilepassport.android.obfuscated.k.j)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.j
<jp.profilepassport.android.obfuscated.j.a: long a(android.content.ContentValues,java.lang.Object)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: long a(android.content.ContentValues,java.lang.Object)> --> $l0 = virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>($r3, null, $r1)
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d1 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.e$6: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.e$6
<jp.profilepassport.android.obfuscated.j.i: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.i
<jp.profilepassport.android.obfuscated.j.i: void i()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void execute()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.e$6: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.e$6
<jp.profilepassport.android.obfuscated.j.i: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.i
<jp.profilepassport.android.obfuscated.j.i: void i()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.geoarea.service.PPGeoAreaService$1: void run()> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService$1
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void access$000(jp.profilepassport.android.geoarea.service.PPGeoAreaService,com.google.android.gms.location.GeofencingEvent)> --> $r0 := @parameter0: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void geofenceEnter(com.google.android.gms.location.GeofencingEvent)> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.logger.PPLogger: void sendCooperationLocation(android.location.Location,int)> --> r0 := @this: jp.profilepassport.android.logger.PPLogger
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationManager: void sendLocationInfo(android.location.Location,int)> --> r0 := @this: jp.profilepassport.android.logger.cooperation.PPLoggerCooperationManager
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationManager: void setFusedLocationProvider(android.location.Location)> --> r0 := @this: jp.profilepassport.android.logger.cooperation.PPLoggerCooperationManager
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void judgeFusedLocationProvider(android.location.Location,android.location.Location,android.location.Location)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void setNetworkLocationType(android.location.Location,android.location.Location)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void setNetworkLocationType(android.location.Location,android.location.Location)> --> virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("networkLocationType", $r4)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.e$6: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.e$6
<jp.profilepassport.android.obfuscated.j.i: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.i
<jp.profilepassport.android.obfuscated.j.i: void i()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void execute()>()
--------------------------------------------------------

<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)> --> $r4 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r1 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)>($r0, "gps")
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> if $r0 == null goto return 0
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $z0 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)>($r1, 900000L, 300.0)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> if $z0 != 0 goto return $r1
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r3 = null
<jp.profilepassport.android.obfuscated.f.b: void d(android.content.Context)> --> $r2 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)>($r1)
<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.a$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.a$3
<jp.profilepassport.android.obfuscated.j.c: void b(java.lang.String)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.c
<jp.profilepassport.android.obfuscated.j.c: void b(java.lang.String)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteStatement: void execute()>()
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d1 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.f$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f$4
<jp.profilepassport.android.obfuscated.j.f: void a(jp.profilepassport.android.obfuscated.j.f,java.util.List)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$4
<jp.profilepassport.android.obfuscated.j.m: void h()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.m
<jp.profilepassport.android.obfuscated.j.m: void h()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void execute()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask$1: void run()> --> r0 := @this: jp.profilepassport.android.logger.task.PPLoggerErrorLogTask$1
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: boolean access$000(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: boolean isAddableErrorLog(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.db.PPLoggerLoggingDBUtil: void deleteOldestLogOfCpType(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.db.PPLoggerLoggingDBUtil: void deleteOldestLogOfCpType(android.content.Context,java.lang.String)> --> virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>("DELETE FROM tn_logging WHERE id IN (SELECT id FROM tn_logging WHERE detail LIKE \'%cp_type=\'||?||\'&%\' ESCAPE \'$\' ORDER BY id ASC LIMIT 1)", $r5)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.geoarea.service.PPGeoAreaService$1: void run()> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService$1
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void access$000(jp.profilepassport.android.geoarea.service.PPGeoAreaService,com.google.android.gms.location.GeofencingEvent)> --> $r0 := @parameter0: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void geofenceEnter(com.google.android.gms.location.GeofencingEvent)> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.logger.PPLogger: void sendCooperationLocation(android.location.Location,int)> --> r0 := @this: jp.profilepassport.android.logger.PPLogger
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationManager: void sendLocationInfo(android.location.Location,int)> --> r0 := @this: jp.profilepassport.android.logger.cooperation.PPLoggerCooperationManager
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationManager: void setFusedLocationProvider(android.location.Location)> --> r0 := @this: jp.profilepassport.android.logger.cooperation.PPLoggerCooperationManager
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void judgeFusedLocationProvider(android.location.Location,android.location.Location,android.location.Location)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void setNetworkLocationType(android.location.Location,android.location.Location)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void setNetworkLocationType(android.location.Location,android.location.Location)> --> virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("networkLocationType", $r4)
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.f$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.f$4
<jp.profilepassport.android.obfuscated.j.j: long a(jp.profilepassport.android.obfuscated.k.j)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.j
<jp.profilepassport.android.obfuscated.j.a: long a(android.content.ContentValues,java.lang.Object)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: long a(android.content.ContentValues,java.lang.Object)> --> $l0 = virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>($r3, null, $r1)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.tasks.PPScheduleReceiver$3: void run()> --> r0 := @this: jp.profilepassport.android.tasks.PPScheduleReceiver$3
<jp.profilepassport.android.tasks.d: void b()> --> r0 := @this: jp.profilepassport.android.tasks.d
<jp.profilepassport.android.tasks.u: jp.profilepassport.android.tasks.u a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.tasks.u: void <init>(android.content.Context)> --> r0 := @this: jp.profilepassport.android.tasks.u
<jp.profilepassport.android.schedule.a: void a(long)> --> r0 := @this: jp.profilepassport.android.schedule.a
<jp.profilepassport.android.schedule.a: void a(long)> --> virtualinvoke $r4.<android.os.PersistableBundle: void putInt(java.lang.String,int)>("BUNDLE_JOB_TASK_NETWORK_FLAG", 0)
--------------------------------------------------------

<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void judgeFusedLocationProvider(android.location.Location,android.location.Location,android.location.Location)> --> $d1 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void setNetworkLocationType(android.location.Location,android.location.Location)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void setNetworkLocationType(android.location.Location,android.location.Location)> --> if $r1 == null goto return
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void setNetworkLocationType(android.location.Location,android.location.Location)> --> virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("networkLocationType", $r4)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$3
<jp.profilepassport.android.obfuscated.j.l: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.l
<jp.profilepassport.android.obfuscated.j.l: void i()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void execute()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void judgeFusedLocationProvider(android.location.Location,android.location.Location,android.location.Location)> --> $d0 = virtualinvoke $r0.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void judgeFusedLocationProvider(android.location.Location,android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void judgeFusedLocationProvider(android.location.Location,android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void setNetworkLocationType(android.location.Location,android.location.Location)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void setNetworkLocationType(android.location.Location,android.location.Location)> --> virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("networkLocationType", $r4)
--------------------------------------------------------

<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)> --> $r4 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r1 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)>($r0, "gps")
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> if $r0 == null goto return 0
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $z0 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)>($r1, 900000L, 300.0)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> if $z0 != 0 goto return $r1
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r3 = null
<jp.profilepassport.android.obfuscated.f.b: void d(android.content.Context)> --> $r2 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)>($r1)
<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$3
<jp.profilepassport.android.obfuscated.j.l: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.l
<jp.profilepassport.android.obfuscated.j.l: void i()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void execute()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$3
<jp.profilepassport.android.obfuscated.j.l: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.l
<jp.profilepassport.android.obfuscated.j.l: void i()> --> $r4 = virtualinvoke r0.<jp.profilepassport.android.obfuscated.j.l: android.database.sqlite.SQLiteDatabase a()>()
<jp.profilepassport.android.obfuscated.j.l: void i()> --> $r7 := @caughtexception
<jp.profilepassport.android.obfuscated.j.l: void i()> --> virtualinvoke $r3.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.f$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f$4
<jp.profilepassport.android.obfuscated.j.f: void a(jp.profilepassport.android.obfuscated.j.f,java.util.List)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> $r4 = r0.<jp.profilepassport.android.obfuscated.j.a: android.database.sqlite.SQLiteDatabase a>
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> $r11 := @caughtexception
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$8: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$8
<jp.profilepassport.android.obfuscated.j.l: long a(java.util.List,java.util.List)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.l
<jp.profilepassport.android.obfuscated.j.l: long a(java.util.List,java.util.List)> --> virtualinvoke $r12.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)> --> $r4 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r1 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)>($r0, "gps")
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> if $r0 == null goto return 0
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $z0 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)>($r1, 900000L, 300.0)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> if $z0 != 0 goto return $r1
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r3 = null
<jp.profilepassport.android.obfuscated.f.b: void d(android.content.Context)> --> $r2 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)>($r1)
<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.b$5: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.b$5
<jp.profilepassport.android.obfuscated.j.d: void a(int)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.d
<jp.profilepassport.android.obfuscated.j.d: void a(int)> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.geoarea.service.PPGeoAreaService$1: void run()> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService$1
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void access$000(jp.profilepassport.android.geoarea.service.PPGeoAreaService,com.google.android.gms.location.GeofencingEvent)> --> $r0 := @parameter0: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void geofenceEnter(com.google.android.gms.location.GeofencingEvent)> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.logger.PPLogger: void sendCooperationLocation(android.location.Location,int)> --> r0 := @this: jp.profilepassport.android.logger.PPLogger
<jp.profilepassport.android.logger.PPLoggerCfgManager: jp.profilepassport.android.logger.PPLoggerCfgManager getManager(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.PPLoggerCfgManager: void resetSysValue(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.db.PPLoggerCfgDBUtil: boolean deleteCfgValue(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.db.PPLoggerCfgDBUtil: boolean deleteCfgValue(android.content.Context,java.lang.String)> --> virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>(" DELETE FROM pp_logger_cfg WHERE key = ?", $r5)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.e$6: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.e$6
<jp.profilepassport.android.obfuscated.j.i: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.i
<jp.profilepassport.android.obfuscated.j.i: void i()> --> $r4 = virtualinvoke r0.<jp.profilepassport.android.obfuscated.j.i: android.database.sqlite.SQLiteDatabase a()>()
<jp.profilepassport.android.obfuscated.j.i: void i()> --> $r7 := @caughtexception
<jp.profilepassport.android.obfuscated.j.i: void i()> --> virtualinvoke $r3.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)> --> $r4 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r1 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)>($r0, "gps")
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> if $r0 == null goto return 0
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $z0 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)>($r1, 900000L, 300.0)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> if $z0 != 0 goto return $r1
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r3 = null
<jp.profilepassport.android.obfuscated.f.b: void d(android.content.Context)> --> $r2 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)>($r1)
<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.f$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.f$4
<jp.profilepassport.android.obfuscated.j.j: long a(jp.profilepassport.android.obfuscated.k.j)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.j
<jp.profilepassport.android.obfuscated.j.a: long a(android.content.ContentValues,java.lang.Object)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: long a(android.content.ContentValues,java.lang.Object)> --> $l0 = virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>($r3, null, $r1)
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d1 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$9: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$9
<jp.profilepassport.android.obfuscated.j.m: java.lang.String b(java.lang.String)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.m
<jp.profilepassport.android.obfuscated.j.m: java.lang.String b(java.lang.String)> --> $r5 = virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r1, null)
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.b$5: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.b$5
<jp.profilepassport.android.obfuscated.j.d: void a(int)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.d
<jp.profilepassport.android.obfuscated.j.d: void a(int)> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.tasks.PPScheduleReceiver$3: void run()> --> r0 := @this: jp.profilepassport.android.tasks.PPScheduleReceiver$3
<jp.profilepassport.android.tasks.d: void b()> --> r0 := @this: jp.profilepassport.android.tasks.d
<jp.profilepassport.android.tasks.d: void b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.C.c: void a(android.content.Context,java.lang.String,long)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.C.c: void a(android.content.Context,java.lang.String,long)> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>($r1, $l0)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.f$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f$4
<jp.profilepassport.android.obfuscated.j.f: void a(jp.profilepassport.android.obfuscated.j.f,java.util.List)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteStatement: long executeInsert()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.tasks.PPScheduleReceiver$2: void run()> --> r0 := @this: jp.profilepassport.android.tasks.PPScheduleReceiver$2
<jp.profilepassport.android.tasks.b: void f()> --> r0 := @this: jp.profilepassport.android.tasks.b
<jp.profilepassport.android.tasks.b: void a()> --> r0 := @this: jp.profilepassport.android.tasks.b
<jp.profilepassport.android.obfuscated.C.j: void a(android.content.Context,java.lang.String,java.lang.String,long)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.C.j: void a(android.content.Context,java.lang.String,java.lang.String,long)> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>($r2, $l0)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.e$6: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.e$6
<jp.profilepassport.android.obfuscated.j.i: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.i
<jp.profilepassport.android.obfuscated.j.i: void i()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void judgeFusedLocationProvider(android.location.Location,android.location.Location,android.location.Location)> --> $d1 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void setNetworkLocationType(android.location.Location,android.location.Location)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void setNetworkLocationType(android.location.Location,android.location.Location)> --> if $r1 == null goto return
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void setNetworkLocationType(android.location.Location,android.location.Location)> --> virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("networkLocationType", $r4)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.e$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e$3
<jp.profilepassport.android.obfuscated.j.a: long a(java.lang.String,java.lang.String[])> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: long a(java.lang.String,java.lang.String[])> --> $i0 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>($r1, null, null)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.h$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.h$4
<jp.profilepassport.android.obfuscated.j.h: long a(jp.profilepassport.android.obfuscated.j.h,jp.profilepassport.android.obfuscated.k.h)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.h
<jp.profilepassport.android.obfuscated.j.a: long a(android.content.ContentValues,java.lang.String,java.lang.String[],java.lang.Object)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: long a(android.content.ContentValues,java.lang.String,java.lang.String[],java.lang.Object)> --> $i0 = virtualinvoke $r8.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>($r7, $r1, $r2, $r3)
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d1 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$4
<jp.profilepassport.android.obfuscated.j.m: void h()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.m
<jp.profilepassport.android.obfuscated.j.m: void h()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d1 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.a$2: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.a$2
<jp.profilepassport.android.obfuscated.j.b: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.b
<jp.profilepassport.android.obfuscated.j.b: void i()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void execute()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.tasks.PPScheduleReceiver$7: void run()> --> r0 := @this: jp.profilepassport.android.tasks.PPScheduleReceiver$7
<jp.profilepassport.android.obfuscated.C.i: void a(android.content.Context,int)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.C.j: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.C.j: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)> --> interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r2, $r3)
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.f$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f$4
<jp.profilepassport.android.obfuscated.j.f: void a(jp.profilepassport.android.obfuscated.j.f,java.util.List)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteStatement: long executeInsert()>()
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d1 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.b$8: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.b$8
<jp.profilepassport.android.obfuscated.j.d: void h()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.d
<jp.profilepassport.android.obfuscated.j.d: void h()> --> virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r2)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.geoarea.service.PPGeoAreaService$1: void run()> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService$1
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void access$000(jp.profilepassport.android.geoarea.service.PPGeoAreaService,com.google.android.gms.location.GeofencingEvent)> --> $r0 := @parameter0: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void geofenceEnter(com.google.android.gms.location.GeofencingEvent)> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.tasks.l: boolean a(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.q.c: void a(android.content.Context,java.lang.String,java.lang.String,java.util.Date)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.B.f: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.B.f: boolean a(java.lang.String,java.lang.String,boolean)> --> $r0 := @parameter0: java.lang.String
<jp.profilepassport.android.obfuscated.B.f: boolean a(java.lang.String,java.lang.String,boolean)> --> virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r2)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.b$5: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.b$5
<jp.profilepassport.android.obfuscated.j.d: void a(int)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.d
<jp.profilepassport.android.obfuscated.j.d: void a(int)> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$4
<jp.profilepassport.android.obfuscated.j.m: void h()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.m
<jp.profilepassport.android.obfuscated.j.m: void h()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void execute()>()
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.h$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.h$3
<jp.profilepassport.android.obfuscated.j.h: void b(jp.profilepassport.android.obfuscated.j.h,java.util.List)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.h
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> $r5 = r0.<jp.profilepassport.android.obfuscated.j.a: android.database.sqlite.SQLiteDatabase a>
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> $r12 := @caughtexception
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.h$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.h$4
<jp.profilepassport.android.obfuscated.j.h: long a(jp.profilepassport.android.obfuscated.j.h,jp.profilepassport.android.obfuscated.k.h)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.h
<jp.profilepassport.android.obfuscated.j.a: long a(android.content.ContentValues,java.lang.String,java.lang.String[],java.lang.Object)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: long a(android.content.ContentValues,java.lang.String,java.lang.String[],java.lang.Object)> --> $i0 = virtualinvoke $r8.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>($r7, $r1, $r2, $r3)
--------------------------------------------------------

<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)> --> $r4 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r1 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)>($r0, "gps")
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> if $r0 == null goto return 0
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $z0 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)>($r1, 900000L, 300.0)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> if $z0 != 0 goto return $r1
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r3 = null
<jp.profilepassport.android.obfuscated.f.b: void d(android.content.Context)> --> $r2 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)>($r1)
<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.h$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.h$3
<jp.profilepassport.android.obfuscated.j.h: void b(jp.profilepassport.android.obfuscated.j.h,java.util.List)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.h
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> $r5 = r0.<jp.profilepassport.android.obfuscated.j.a: android.database.sqlite.SQLiteDatabase a>
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> $r13 := @caughtexception
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.e$6: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.e$6
<jp.profilepassport.android.obfuscated.j.i: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.i
<jp.profilepassport.android.obfuscated.j.i: void i()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.tasks.PPScheduleReceiver$3: void run()> --> r0 := @this: jp.profilepassport.android.tasks.PPScheduleReceiver$3
<jp.profilepassport.android.tasks.d: void b()> --> r0 := @this: jp.profilepassport.android.tasks.d
<jp.profilepassport.android.tasks.d: void b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.tasks.u: void a(java.lang.String)> --> r0 := @this: jp.profilepassport.android.tasks.u
<jp.profilepassport.android.tasks.u: void b()> --> r0 := @this: jp.profilepassport.android.tasks.u
<jp.profilepassport.android.tasks.u: void b()> --> virtualinvoke $r7.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r1)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.geoarea.service.PPGeoAreaService$1: void run()> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService$1
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void access$000(jp.profilepassport.android.geoarea.service.PPGeoAreaService,com.google.android.gms.location.GeofencingEvent)> --> $r0 := @parameter0: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void geofenceEnter(com.google.android.gms.location.GeofencingEvent)> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.tasks.l: boolean a(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.q.c: void a(android.content.Context,java.lang.String,java.lang.String,java.util.Date)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.B.f: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.B.f: boolean a(java.lang.String,java.lang.String,boolean)> --> $r0 := @parameter0: java.lang.String
<jp.profilepassport.android.obfuscated.B.f: boolean a(java.lang.String,java.lang.String,boolean)> --> virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r2)
--------------------------------------------------------

<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)> --> $r4 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r1 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)>($r0, "gps")
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> if $r0 == null goto return 0
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $z0 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)>($r1, 900000L, 300.0)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> if $z0 != 0 goto return $r1
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r3 = null
<jp.profilepassport.android.obfuscated.f.b: void d(android.content.Context)> --> $r2 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)>($r1)
<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.e$6: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.e$6
<jp.profilepassport.android.obfuscated.j.i: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.i
<jp.profilepassport.android.obfuscated.j.i: void i()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.geoarea.service.PPGeoAreaService$1: void run()> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService$1
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void access$000(jp.profilepassport.android.geoarea.service.PPGeoAreaService,com.google.android.gms.location.GeofencingEvent)> --> $r0 := @parameter0: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void geofenceEnter(com.google.android.gms.location.GeofencingEvent)> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.tasks.l: boolean a(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.q.c: void a(android.content.Context,java.lang.String,java.lang.String,java.util.Date)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.B.f: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.B.f: boolean a(java.lang.String,java.lang.String,boolean)> --> $r0 := @parameter0: java.lang.String
<jp.profilepassport.android.obfuscated.B.f: boolean a(java.lang.String,java.lang.String,boolean)> --> virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r2)
--------------------------------------------------------

<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)> --> $r4 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r1 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)>($r0, "gps")
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> if $r0 == null goto return 0
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $z0 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)>($r1, 900000L, 300.0)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> if $z0 != 0 goto return $r1
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r3 = null
<jp.profilepassport.android.obfuscated.f.b: void d(android.content.Context)> --> $r2 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)>($r1)
<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.e$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e$3
<jp.profilepassport.android.obfuscated.j.a: long a(java.lang.String,java.lang.String[])> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: long a(java.lang.String,java.lang.String[])> --> $i0 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>($r1, null, null)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.geoarea.service.PPGeoAreaService$1: void run()> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService$1
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void access$000(jp.profilepassport.android.geoarea.service.PPGeoAreaService,com.google.android.gms.location.GeofencingEvent)> --> $r0 := @parameter0: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void geofenceEnter(com.google.android.gms.location.GeofencingEvent)> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.tasks.l: boolean a(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.q.c: void a(android.content.Context,java.lang.String,java.lang.String,java.util.Date)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.B.f: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.B.f: boolean a(java.lang.String,java.lang.String,boolean)> --> $r0 := @parameter0: java.lang.String
<jp.profilepassport.android.obfuscated.B.f: boolean a(java.lang.String,java.lang.String,boolean)> --> virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r2)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.geoarea.service.PPGeoAreaService$1: void run()> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService$1
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void access$000(jp.profilepassport.android.geoarea.service.PPGeoAreaService,com.google.android.gms.location.GeofencingEvent)> --> $r0 := @parameter0: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void geofenceEnter(com.google.android.gms.location.GeofencingEvent)> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.tasks.l: boolean a(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.q.c: void a(android.content.Context,java.lang.String,java.lang.String,java.util.Date)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.B.f: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.B.f: boolean a(java.lang.String,java.lang.String,boolean)> --> $r0 := @parameter0: java.lang.String
<jp.profilepassport.android.obfuscated.B.f: boolean a(java.lang.String,java.lang.String,boolean)> --> virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r2)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.a$2: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.a$2
<jp.profilepassport.android.obfuscated.j.b: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.b
<jp.profilepassport.android.obfuscated.j.b: void i()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$8: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$8
<jp.profilepassport.android.obfuscated.j.l: long a(java.util.List,java.util.List)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.l
<jp.profilepassport.android.obfuscated.j.l: long a(java.util.List,java.util.List)> --> $r11 = virtualinvoke r0.<jp.profilepassport.android.obfuscated.j.l: android.database.sqlite.SQLiteDatabase a()>()
<jp.profilepassport.android.obfuscated.j.l: long a(java.util.List,java.util.List)> --> $r14 := @caughtexception
<jp.profilepassport.android.obfuscated.j.l: long a(java.util.List,java.util.List)> --> virtualinvoke $r10.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.e$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e$3
<jp.profilepassport.android.obfuscated.j.a: long a(java.lang.String,java.lang.String[])> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: long a(java.lang.String,java.lang.String[])> --> $i0 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>($r1, null, null)
--------------------------------------------------------

<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)> --> $r4 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r1 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)>($r0, "gps")
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> if $r0 == null goto return 0
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $z0 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)>($r1, 900000L, 300.0)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> if $z0 != 0 goto return $r1
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r3 = null
<jp.profilepassport.android.obfuscated.f.b: void d(android.content.Context)> --> $r2 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)>($r1)
<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.h$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.h$3
<jp.profilepassport.android.obfuscated.j.h: void b(jp.profilepassport.android.obfuscated.j.h,java.util.List)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.h
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> $r5 = r0.<jp.profilepassport.android.obfuscated.j.a: android.database.sqlite.SQLiteDatabase a>
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> $r12 := @caughtexception
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d1 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$3
<jp.profilepassport.android.obfuscated.j.l: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.l
<jp.profilepassport.android.obfuscated.j.l: void i()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d1 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.g$2: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.g$2
<jp.profilepassport.android.obfuscated.j.k: void a(java.util.List)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.k
<jp.profilepassport.android.obfuscated.j.k: void a(java.util.List)> --> virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>($r7, "_tag_flag = ? AND _type = ? AND _type_key = ?", $r14)
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$3
<jp.profilepassport.android.obfuscated.j.l: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.l
<jp.profilepassport.android.obfuscated.j.l: void i()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void execute()>()
--------------------------------------------------------

<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)> --> $r4 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r1 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)>($r0, "gps")
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> if $r0 == null goto return 0
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $z0 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)>($r1, 900000L, 300.0)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> if $z0 != 0 goto return $r1
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r3 = null
<jp.profilepassport.android.obfuscated.f.b: void d(android.content.Context)> --> $r2 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)>($r1)
<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.f$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f$4
<jp.profilepassport.android.obfuscated.j.f: void a(jp.profilepassport.android.obfuscated.j.f,java.util.List)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> $r4 = r0.<jp.profilepassport.android.obfuscated.j.a: android.database.sqlite.SQLiteDatabase a>
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> $r11 := @caughtexception
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.b$5: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.b$5
<jp.profilepassport.android.obfuscated.j.d: void a(int)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.d
<jp.profilepassport.android.obfuscated.j.d: void a(int)> --> $r4 = virtualinvoke r0.<jp.profilepassport.android.obfuscated.j.d: android.database.sqlite.SQLiteDatabase a()>()
<jp.profilepassport.android.obfuscated.j.d: void a(int)> --> $r7 := @caughtexception
<jp.profilepassport.android.obfuscated.j.d: void a(int)> --> virtualinvoke $r3.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.f$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f$4
<jp.profilepassport.android.obfuscated.j.f: void a(jp.profilepassport.android.obfuscated.j.f,java.util.List)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteStatement: long executeInsert()>()
--------------------------------------------------------

<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)> --> $r4 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r1 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)>($r0, "gps")
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> if $r0 == null goto return 0
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $z0 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)>($r1, 900000L, 300.0)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> if $z0 != 0 goto return $r1
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r3 = null
<jp.profilepassport.android.obfuscated.f.b: void d(android.content.Context)> --> $r2 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)>($r1)
<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.h$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.h$4
<jp.profilepassport.android.obfuscated.j.h: long a(jp.profilepassport.android.obfuscated.j.h,jp.profilepassport.android.obfuscated.k.h)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.h
<jp.profilepassport.android.obfuscated.j.a: long a(android.content.ContentValues,java.lang.String,java.lang.String[],java.lang.Object)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: long a(android.content.ContentValues,java.lang.String,java.lang.String[],java.lang.Object)> --> $i0 = virtualinvoke $r8.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>($r7, $r1, $r2, $r3)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.b$5: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.b$5
<jp.profilepassport.android.obfuscated.j.d: void a(int)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.d
<jp.profilepassport.android.obfuscated.j.d: void a(int)> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void execute()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$1: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$1
<jp.profilepassport.android.obfuscated.f.f: void a(android.content.Context,java.lang.String,jp.profilepassport.android.PPSDKManagerListener)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.f
<jp.profilepassport.android.obfuscated.C.f: void a(android.content.Context,long)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.C.j: void a(android.content.Context,java.lang.String,java.lang.String,long)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.C.j: void a(android.content.Context,java.lang.String,java.lang.String,long)> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>($r2, $l0)
--------------------------------------------------------

<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)> --> $r4 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r1 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)>($r0, "gps")
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> if $r0 == null goto return 0
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $z0 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)>($r1, 900000L, 300.0)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> if $z0 != 0 goto return $r1
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r3 = null
<jp.profilepassport.android.obfuscated.f.b: void d(android.content.Context)> --> $r2 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)>($r1)
<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.h$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.h$3
<jp.profilepassport.android.obfuscated.j.h: void b(jp.profilepassport.android.obfuscated.j.h,java.util.List)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.h
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> virtualinvoke $r7.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.a$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.a$3
<jp.profilepassport.android.obfuscated.j.c: void b(java.lang.String)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.c
<jp.profilepassport.android.obfuscated.j.c: void b(java.lang.String)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteStatement: void execute()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.geoarea.service.PPGeoAreaService$1: void run()> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService$1
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void access$000(jp.profilepassport.android.geoarea.service.PPGeoAreaService,com.google.android.gms.location.GeofencingEvent)> --> $r0 := @parameter0: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void geofenceEnter(com.google.android.gms.location.GeofencingEvent)> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.logger.PPLogger: void sendCooperationLocation(android.location.Location,int)> --> r0 := @this: jp.profilepassport.android.logger.PPLogger
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationManager: void sendLocationInfo(android.location.Location,int)> --> r0 := @this: jp.profilepassport.android.logger.cooperation.PPLoggerCooperationManager
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.tasks.PPScheduleReceiver$4: void run()> --> r0 := @this: jp.profilepassport.android.tasks.PPScheduleReceiver$4
<jp.profilepassport.android.schedule.a: jp.profilepassport.android.schedule.a a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.schedule.a: jp.profilepassport.android.schedule.a a(android.content.Context)> --> $r1 = new jp.profilepassport.android.schedule.a
<jp.profilepassport.android.schedule.a: jp.profilepassport.android.schedule.a a(android.content.Context)> --> <jp.profilepassport.android.schedule.a: jp.profilepassport.android.schedule.a a> = $r1
<jp.profilepassport.android.schedule.a: jp.profilepassport.android.schedule.a a(android.content.Context)> --> $r1 = <jp.profilepassport.android.schedule.a: jp.profilepassport.android.schedule.a a>
<jp.profilepassport.android.tasks.q: boolean a(java.lang.String,long,java.lang.String)> --> $r12 = staticinvoke <jp.profilepassport.android.schedule.a: jp.profilepassport.android.schedule.a a(android.content.Context)>($r4)
<jp.profilepassport.android.schedule.a: void a(java.lang.String,long)> --> r0 := @this: jp.profilepassport.android.schedule.a
<jp.profilepassport.android.schedule.a: void a(java.lang.String,long)> --> if $z0 == 0 goto $s2 = 3589
<jp.profilepassport.android.schedule.a: void a(java.lang.String,long)> --> $i3 = <android.os.Build$VERSION: int SDK_INT>
<jp.profilepassport.android.schedule.a: void a(java.lang.String,long)> --> virtualinvoke $r11.<android.os.PersistableBundle: void putString(java.lang.String,java.lang.String)>("intent_key_send_log_type", $r1)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask$1: void run()> --> r0 := @this: jp.profilepassport.android.logger.task.PPLoggerErrorLogTask$1
<jp.profilepassport.android.logger.logentity.PPLoggerErrorLogEntity: void <init>(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> r0 := @this: jp.profilepassport.android.logger.logentity.PPLoggerErrorLogEntity
<jp.profilepassport.android.logger.logentity.PPLoggerPPSDKLogBaseEntity: void <init>(android.content.Context)> --> r0 := @this: jp.profilepassport.android.logger.logentity.PPLoggerPPSDKLogBaseEntity
<jp.profilepassport.android.logger.logentity.PPLoggerPPSDKLogBaseEntity: void appendRequiredParams()> --> r0 := @this: jp.profilepassport.android.logger.logentity.PPLoggerPPSDKLogBaseEntity
<jp.profilepassport.android.logger.logentity.PPLoggerPPSDKLogBaseEntity: java.lang.String getCkp()> --> r0 := @this: jp.profilepassport.android.logger.logentity.PPLoggerPPSDKLogBaseEntity
<jp.profilepassport.android.logger.config.PPLoggerPPUUID: java.lang.String getPPUUID(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.config.PPLoggerPPUUID: void ppUUIDControl(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.preferences.PPLoggerTCCMPreferences: void commitPutPPUUID(java.lang.String)> --> r0 := @this: jp.profilepassport.android.logger.util.preferences.PPLoggerTCCMPreferences
<jp.profilepassport.android.logger.util.preferences.PPLoggerSharedPreferences: boolean commitPutString(java.lang.String,java.lang.String)> --> r0 := @this: jp.profilepassport.android.logger.util.preferences.PPLoggerSharedPreferences
<jp.profilepassport.android.logger.util.preferences.PPLoggerSharedPreferences: boolean commitPutString(java.lang.String,java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$2
<jp.profilepassport.android.obfuscated.f.c: void a(android.content.Context,jp.profilepassport.android.PPTagInf,jp.profilepassport.android.PPNotificationListener)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.c
<jp.profilepassport.android.obfuscated.f.c: void a(int)> --> $i0 := @parameter0: int
<jp.profilepassport.android.obfuscated.g.e: void a(int)> --> r0 := @this: jp.profilepassport.android.obfuscated.g.e
<jp.profilepassport.android.tasks.w: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.tasks.PPScheduleReceiver$4: void run()> --> r0 := @this: jp.profilepassport.android.tasks.PPScheduleReceiver$4
<jp.profilepassport.android.schedule.a: void c()> --> r0 := @this: jp.profilepassport.android.schedule.a
<jp.profilepassport.android.schedule.a: void d()> --> r0 := @this: jp.profilepassport.android.schedule.a
<jp.profilepassport.android.obfuscated.C.c: void a(android.content.Context,long,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.C.c: void a(android.content.Context,long,boolean)> --> $r2 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>($r3, $l0)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.a$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.a$3
<jp.profilepassport.android.obfuscated.j.c: void b(java.lang.String)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.c
<jp.profilepassport.android.obfuscated.j.c: void b(java.lang.String)> --> $r5 = virtualinvoke r0.<jp.profilepassport.android.obfuscated.j.c: android.database.sqlite.SQLiteDatabase a()>()
<jp.profilepassport.android.obfuscated.j.c: void b(java.lang.String)> --> $r8 := @caughtexception
<jp.profilepassport.android.obfuscated.j.c: void b(java.lang.String)> --> virtualinvoke $r4.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$1: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$1
<jp.profilepassport.android.obfuscated.f.f: void a(android.content.Context,java.lang.String,jp.profilepassport.android.PPSDKManagerListener)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.f
<jp.profilepassport.android.obfuscated.C.d: void a(android.content.Context,java.lang.String,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.C.j: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.C.j: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)> --> interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r2, $r3)
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.b$5: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.b$5
<jp.profilepassport.android.obfuscated.j.d: void a(int)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.d
<jp.profilepassport.android.obfuscated.j.d: void a(int)> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void execute()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$2
<jp.profilepassport.android.obfuscated.f.c: void a(android.content.Context,jp.profilepassport.android.PPTagInf,jp.profilepassport.android.PPNotificationListener)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.c
<jp.profilepassport.android.obfuscated.f.c: void a(int)> --> $i0 := @parameter0: int
<jp.profilepassport.android.obfuscated.g.e: void a(int)> --> r0 := @this: jp.profilepassport.android.obfuscated.g.e
<jp.profilepassport.android.tasks.w: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.tasks.PPScheduleReceiver$3: void run()> --> r0 := @this: jp.profilepassport.android.tasks.PPScheduleReceiver$3
<jp.profilepassport.android.tasks.d: void b()> --> r0 := @this: jp.profilepassport.android.tasks.d
<jp.profilepassport.android.tasks.d: void b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.C.c: void a(android.content.Context,java.lang.String,long)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.C.c: void a(android.content.Context,java.lang.String,long)> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>($r1, $l0)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$2
<jp.profilepassport.android.obfuscated.f.c: void a(android.content.Context,jp.profilepassport.android.PPTagInf,jp.profilepassport.android.PPNotificationListener)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.c
<jp.profilepassport.android.obfuscated.f.c: void a(int)> --> $i0 := @parameter0: int
<jp.profilepassport.android.obfuscated.g.e: void a(int)> --> r0 := @this: jp.profilepassport.android.obfuscated.g.e
<jp.profilepassport.android.tasks.w: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.tasks.PPScheduleReceiver$4: void run()> --> r0 := @this: jp.profilepassport.android.tasks.PPScheduleReceiver$4
<jp.profilepassport.android.schedule.a: void c()> --> r0 := @this: jp.profilepassport.android.schedule.a
<jp.profilepassport.android.schedule.a: void a(long)> --> r0 := @this: jp.profilepassport.android.schedule.a
<jp.profilepassport.android.schedule.a: void a(long)> --> virtualinvoke $r4.<android.os.PersistableBundle: void putInt(java.lang.String,int)>("BUNDLE_JOB_TASK_NETWORK_FLAG", 0)
--------------------------------------------------------

<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)> --> $r4 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r1 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)>($r0, "gps")
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> if $r0 == null goto return 0
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $z0 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)>($r1, 900000L, 300.0)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> if $z0 != 0 goto return $r1
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r3 = null
<jp.profilepassport.android.obfuscated.f.b: void d(android.content.Context)> --> $r2 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)>($r1)
<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.f$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f$4
<jp.profilepassport.android.obfuscated.j.f: void a(jp.profilepassport.android.obfuscated.j.f,java.util.List)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$5: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$5
<jp.profilepassport.android.obfuscated.j.l: long j()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.l
<jp.profilepassport.android.obfuscated.j.l: long j()> --> $r4 = virtualinvoke r0.<jp.profilepassport.android.obfuscated.j.l: android.database.sqlite.SQLiteDatabase a()>()
<jp.profilepassport.android.obfuscated.j.l: long j()> --> $r7 := @caughtexception
<jp.profilepassport.android.obfuscated.j.l: long j()> --> virtualinvoke $r3.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.h$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.h$3
<jp.profilepassport.android.obfuscated.j.h: void b(jp.profilepassport.android.obfuscated.j.h,java.util.List)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.h
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> virtualinvoke $r7.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$3
<jp.profilepassport.android.obfuscated.j.l: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.l
<jp.profilepassport.android.obfuscated.j.l: void i()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void execute()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.b$8: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.b$8
<jp.profilepassport.android.obfuscated.j.d: void h()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.d
<jp.profilepassport.android.obfuscated.j.d: void h()> --> virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r2)
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$4
<jp.profilepassport.android.obfuscated.j.m: void h()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.m
<jp.profilepassport.android.obfuscated.j.m: void h()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void execute()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.a$1: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.a$1
<jp.profilepassport.android.obfuscated.j.b: boolean h()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.b
<jp.profilepassport.android.obfuscated.j.a: android.database.Cursor a(java.lang.String)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: android.database.Cursor a(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r1, null)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.geoarea.service.PPGeoAreaService$1: void run()> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService$1
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void access$000(jp.profilepassport.android.geoarea.service.PPGeoAreaService,com.google.android.gms.location.GeofencingEvent)> --> $r0 := @parameter0: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void geofenceEnter(com.google.android.gms.location.GeofencingEvent)> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.logger.PPLogger: void sendCooperationLocation(android.location.Location,int)> --> r0 := @this: jp.profilepassport.android.logger.PPLogger
<jp.profilepassport.android.logger.PPLoggerCfgManager: jp.profilepassport.android.logger.PPLoggerCfgManager getManager(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.PPLoggerCfgManager: void resetSysValue(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.db.PPLoggerCfgDBUtil: boolean deleteCfgValue(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.db.PPLoggerCfgDBUtil: boolean deleteCfgValue(android.content.Context,java.lang.String)> --> virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>(" DELETE FROM pp_logger_cfg WHERE key = ?", $r5)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$3
<jp.profilepassport.android.obfuscated.j.l: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.l
<jp.profilepassport.android.obfuscated.j.l: void i()> --> $r4 = virtualinvoke r0.<jp.profilepassport.android.obfuscated.j.l: android.database.sqlite.SQLiteDatabase a()>()
<jp.profilepassport.android.obfuscated.j.l: void i()> --> $r7 := @caughtexception
<jp.profilepassport.android.obfuscated.j.l: void i()> --> virtualinvoke $r3.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.a$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.a$3
<jp.profilepassport.android.obfuscated.j.c: void b(java.lang.String)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.c
<jp.profilepassport.android.obfuscated.j.c: void b(java.lang.String)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteStatement: void execute()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$9: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$9
<jp.profilepassport.android.obfuscated.j.m: java.lang.String b(java.lang.String)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.m
<jp.profilepassport.android.obfuscated.j.m: java.lang.String b(java.lang.String)> --> $r5 = virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r1, null)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$4
<jp.profilepassport.android.obfuscated.j.m: void h()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.m
<jp.profilepassport.android.obfuscated.j.m: void h()> --> $r4 = virtualinvoke r0.<jp.profilepassport.android.obfuscated.j.m: android.database.sqlite.SQLiteDatabase a()>()
<jp.profilepassport.android.obfuscated.j.m: void h()> --> $r7 := @caughtexception
<jp.profilepassport.android.obfuscated.j.m: void h()> --> virtualinvoke $r3.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.a$2: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.a$2
<jp.profilepassport.android.obfuscated.j.b: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.b
<jp.profilepassport.android.obfuscated.j.b: void i()> --> $r4 = virtualinvoke r0.<jp.profilepassport.android.obfuscated.j.b: android.database.sqlite.SQLiteDatabase a()>()
<jp.profilepassport.android.obfuscated.j.b: void i()> --> $r7 := @caughtexception
<jp.profilepassport.android.obfuscated.j.b: void i()> --> virtualinvoke $r3.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.geoarea.service.PPGeoAreaService$1: void run()> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService$1
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void access$000(jp.profilepassport.android.geoarea.service.PPGeoAreaService,com.google.android.gms.location.GeofencingEvent)> --> $r0 := @parameter0: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void geofenceEnter(com.google.android.gms.location.GeofencingEvent)> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.logger.PPLogger: void sendCooperationLocation(android.location.Location,int)> --> r0 := @this: jp.profilepassport.android.logger.PPLogger
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationManager: void sendLocationInfo(android.location.Location,int)> --> r0 := @this: jp.profilepassport.android.logger.cooperation.PPLoggerCooperationManager
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationManager: void setFusedLocationProvider(android.location.Location)> --> r0 := @this: jp.profilepassport.android.logger.cooperation.PPLoggerCooperationManager
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void judgeFusedLocationProvider(android.location.Location,android.location.Location,android.location.Location)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void setNetworkLocationType(android.location.Location,android.location.Location)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void setNetworkLocationType(android.location.Location,android.location.Location)> --> virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("networkLocationType", $r4)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.f$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f$4
<jp.profilepassport.android.obfuscated.j.f: void a(jp.profilepassport.android.obfuscated.j.f,java.util.List)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$3
<jp.profilepassport.android.obfuscated.j.l: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.l
<jp.profilepassport.android.obfuscated.j.l: void i()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.geoarea.service.PPGeoAreaService$1: void run()> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService$1
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void access$000(jp.profilepassport.android.geoarea.service.PPGeoAreaService,com.google.android.gms.location.GeofencingEvent)> --> $r0 := @parameter0: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void geofenceEnter(com.google.android.gms.location.GeofencingEvent)> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.tasks.l: boolean a(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.q.c: void a(android.content.Context,java.lang.String,java.lang.String,java.util.Date)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.B.f: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.B.f: boolean a(java.lang.String,java.lang.String,boolean)> --> $r0 := @parameter0: java.lang.String
<jp.profilepassport.android.obfuscated.B.f: boolean a(java.lang.String,java.lang.String,boolean)> --> virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r2)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.a$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.a$3
<jp.profilepassport.android.obfuscated.j.c: void b(java.lang.String)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.c
<jp.profilepassport.android.obfuscated.j.c: void b(java.lang.String)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.g.f$1: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.g.f$1
<com.navitime.inbound.profilepassport.a$1: void onSuccessServiceStart()> --> r0 := @this: com.navitime.inbound.profilepassport.a$1
<com.navitime.inbound.g.n: void M(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.navitime.inbound.g.n: void M(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r0, $r1)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.a$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.a$3
<jp.profilepassport.android.obfuscated.j.c: void b(java.lang.String)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.c
<jp.profilepassport.android.obfuscated.j.c: void b(java.lang.String)> --> $r5 = virtualinvoke r0.<jp.profilepassport.android.obfuscated.j.c: android.database.sqlite.SQLiteDatabase a()>()
<jp.profilepassport.android.obfuscated.j.c: void b(java.lang.String)> --> $r8 := @caughtexception
<jp.profilepassport.android.obfuscated.j.c: void b(java.lang.String)> --> virtualinvoke $r4.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.e$6: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.e$6
<jp.profilepassport.android.obfuscated.j.i: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.i
<jp.profilepassport.android.obfuscated.j.i: void i()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void execute()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.f$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.f$4
<jp.profilepassport.android.obfuscated.j.j: long a(jp.profilepassport.android.obfuscated.k.j)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.j
<jp.profilepassport.android.obfuscated.j.a: long a(android.content.ContentValues,java.lang.Object)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: long a(android.content.ContentValues,java.lang.Object)> --> $l0 = virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>($r3, null, $r1)
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d1 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.a$2: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.a$2
<jp.profilepassport.android.obfuscated.j.b: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.b
<jp.profilepassport.android.obfuscated.j.b: void i()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.geoarea.service.PPGeoAreaService$1: void run()> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService$1
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void access$000(jp.profilepassport.android.geoarea.service.PPGeoAreaService,com.google.android.gms.location.GeofencingEvent)> --> $r0 := @parameter0: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void geofenceEnter(com.google.android.gms.location.GeofencingEvent)> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.tasks.l: boolean a(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.q.c: void a(android.content.Context,java.lang.String,java.lang.String,java.util.Date)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.B.f: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.B.f: boolean a(java.lang.String,java.lang.String,boolean)> --> $r0 := @parameter0: java.lang.String
<jp.profilepassport.android.obfuscated.B.f: boolean a(java.lang.String,java.lang.String,boolean)> --> virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r2)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.tasks.PPScheduleReceiver$4: void run()> --> r0 := @this: jp.profilepassport.android.tasks.PPScheduleReceiver$4
<jp.profilepassport.android.schedule.a: void c()> --> r0 := @this: jp.profilepassport.android.schedule.a
<jp.profilepassport.android.schedule.a: void d()> --> r0 := @this: jp.profilepassport.android.schedule.a
<jp.profilepassport.android.obfuscated.C.c: void a(android.content.Context,long,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.C.c: void a(android.content.Context,long,boolean)> --> $r2 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>($r3, $l0)
--------------------------------------------------------

<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void judgeFusedLocationProvider(android.location.Location,android.location.Location,android.location.Location)> --> $d1 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void judgeFusedLocationProvider(android.location.Location,android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void judgeFusedLocationProvider(android.location.Location,android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void setNetworkLocationType(android.location.Location,android.location.Location)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void setNetworkLocationType(android.location.Location,android.location.Location)> --> virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("networkLocationType", $r4)
--------------------------------------------------------

<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)> --> $r4 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r1 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)>($r0, "gps")
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> if $r0 == null goto return 0
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $z0 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)>($r1, 900000L, 300.0)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> if $z0 != 0 goto return $r1
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r3 = null
<jp.profilepassport.android.obfuscated.f.b: void d(android.content.Context)> --> $r2 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)>($r1)
<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$5: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$5
<jp.profilepassport.android.obfuscated.j.l: long j()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.l
<jp.profilepassport.android.obfuscated.j.l: long j()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.geoarea.service.PPGeoAreaService$1: void run()> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService$1
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void access$000(jp.profilepassport.android.geoarea.service.PPGeoAreaService,com.google.android.gms.location.GeofencingEvent)> --> $r0 := @parameter0: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void geofenceEnter(com.google.android.gms.location.GeofencingEvent)> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.logger.PPLogger: void sendCooperationLocation(android.location.Location,int)> --> r0 := @this: jp.profilepassport.android.logger.PPLogger
<jp.profilepassport.android.logger.PPLoggerCfgManager: jp.profilepassport.android.logger.PPLoggerCfgManager getManager(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.PPLoggerCfgManager: void resetSysValue(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.preferences.PPLoggerTCCMPreferences: void commitPutResetVLLog(boolean)> --> r0 := @this: jp.profilepassport.android.logger.util.preferences.PPLoggerTCCMPreferences
<jp.profilepassport.android.logger.util.preferences.PPLoggerSharedPreferences: boolean commitPutBoolean(java.lang.String,boolean)> --> r0 := @this: jp.profilepassport.android.logger.util.preferences.PPLoggerSharedPreferences
<jp.profilepassport.android.logger.util.preferences.PPLoggerSharedPreferences: boolean commitPutBoolean(java.lang.String,boolean)> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>($r1, $z0)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.h$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.h$3
<jp.profilepassport.android.obfuscated.j.h: void b(jp.profilepassport.android.obfuscated.j.h,java.util.List)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.h
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> $r5 = r0.<jp.profilepassport.android.obfuscated.j.a: android.database.sqlite.SQLiteDatabase a>
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> $r12 := @caughtexception
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.geoarea.service.PPGeoAreaService$1: void run()> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService$1
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void access$000(jp.profilepassport.android.geoarea.service.PPGeoAreaService,com.google.android.gms.location.GeofencingEvent)> --> $r0 := @parameter0: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void geofenceEnter(com.google.android.gms.location.GeofencingEvent)> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.logger.PPLogger: void sendCooperationLocation(android.location.Location,int)> --> r0 := @this: jp.profilepassport.android.logger.PPLogger
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationManager: void sendLocationInfo(android.location.Location,int)> --> r0 := @this: jp.profilepassport.android.logger.cooperation.PPLoggerCooperationManager
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.tasks.PPScheduleReceiver$4: void run()> --> r0 := @this: jp.profilepassport.android.tasks.PPScheduleReceiver$4
<jp.profilepassport.android.schedule.a: jp.profilepassport.android.schedule.a a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.schedule.a: jp.profilepassport.android.schedule.a a(android.content.Context)> --> $r1 = new jp.profilepassport.android.schedule.a
<jp.profilepassport.android.schedule.a: jp.profilepassport.android.schedule.a a(android.content.Context)> --> <jp.profilepassport.android.schedule.a: jp.profilepassport.android.schedule.a a> = $r1
<jp.profilepassport.android.schedule.a: jp.profilepassport.android.schedule.a a(android.content.Context)> --> $r1 = <jp.profilepassport.android.schedule.a: jp.profilepassport.android.schedule.a a>
<jp.profilepassport.android.tasks.q: void a()> --> $r9 = staticinvoke <jp.profilepassport.android.schedule.a: jp.profilepassport.android.schedule.a a(android.content.Context)>($r1)
<jp.profilepassport.android.schedule.a: void a(java.lang.String,long)> --> r0 := @this: jp.profilepassport.android.schedule.a
<jp.profilepassport.android.schedule.a: void a(java.lang.String,long)> --> if $z0 == 0 goto $s2 = 3589
<jp.profilepassport.android.schedule.a: void a(java.lang.String,long)> --> $i3 = <android.os.Build$VERSION: int SDK_INT>
<jp.profilepassport.android.schedule.a: void a(java.lang.String,long)> --> virtualinvoke $r11.<android.os.PersistableBundle: void putString(java.lang.String,java.lang.String)>("intent_key_send_log_type", $r1)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.tasks.PPScheduleReceiver$2: void run()> --> r0 := @this: jp.profilepassport.android.tasks.PPScheduleReceiver$2
<jp.profilepassport.android.tasks.b: void f()> --> r0 := @this: jp.profilepassport.android.tasks.b
<jp.profilepassport.android.tasks.b: void a()> --> r0 := @this: jp.profilepassport.android.tasks.b
<jp.profilepassport.android.obfuscated.C.j: void a(android.content.Context,java.lang.String,java.lang.String,int)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.C.j: void a(android.content.Context,java.lang.String,java.lang.String,int)> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>($r2, $i0)
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d1 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.g$1: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.g$1
<jp.profilepassport.android.obfuscated.j.k: java.util.List h()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.k
<jp.profilepassport.android.obfuscated.j.k: java.util.List h()> --> $r4 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r3, null, null, null, null, null, null)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.f$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f$4
<jp.profilepassport.android.obfuscated.j.f: void a(jp.profilepassport.android.obfuscated.j.f,java.util.List)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> $r4 = r0.<jp.profilepassport.android.obfuscated.j.a: android.database.sqlite.SQLiteDatabase a>
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> $r11 := @caughtexception
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d1 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.f$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f$4
<jp.profilepassport.android.obfuscated.j.f: void a(jp.profilepassport.android.obfuscated.j.f,java.util.List)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> $r4 = r0.<jp.profilepassport.android.obfuscated.j.a: android.database.sqlite.SQLiteDatabase a>
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> $r11 := @caughtexception
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)> --> $r4 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r1 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)>($r0, "gps")
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> if $r0 == null goto return 0
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $z0 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)>($r1, 900000L, 300.0)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> if $z0 != 0 goto return $r1
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r3 = null
<jp.profilepassport.android.obfuscated.f.b: void d(android.content.Context)> --> $r2 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)>($r1)
<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$3
<jp.profilepassport.android.obfuscated.j.l: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.l
<jp.profilepassport.android.obfuscated.j.l: void i()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.g$1: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.g$1
<jp.profilepassport.android.obfuscated.j.k: java.util.List h()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.k
<jp.profilepassport.android.obfuscated.j.k: java.util.List h()> --> $r4 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r3, null, null, null, null, null, null)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.geoarea.service.PPGeoAreaService$1: void run()> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService$1
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void access$000(jp.profilepassport.android.geoarea.service.PPGeoAreaService,com.google.android.gms.location.GeofencingEvent)> --> $r0 := @parameter0: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void geofenceEnter(com.google.android.gms.location.GeofencingEvent)> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.tasks.l: boolean a(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.q.c: void a(android.content.Context,java.lang.String,java.lang.String,java.util.Date)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.B.f: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.B.f: boolean a(java.lang.String,java.lang.String,boolean)> --> $r0 := @parameter0: java.lang.String
<jp.profilepassport.android.obfuscated.B.f: boolean a(java.lang.String,java.lang.String,boolean)> --> virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r2)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$2
<jp.profilepassport.android.obfuscated.f.c: void a(android.content.Context,jp.profilepassport.android.PPTagInf,jp.profilepassport.android.PPNotificationListener)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.c
<jp.profilepassport.android.obfuscated.f.c: void a(int)> --> $i0 := @parameter0: int
<jp.profilepassport.android.obfuscated.g.e: void a(int)> --> r0 := @this: jp.profilepassport.android.obfuscated.g.e
<jp.profilepassport.android.tasks.w: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask$1: void run()> --> r0 := @this: jp.profilepassport.android.logger.task.PPLoggerErrorLogTask$1
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void access$100(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void insertErrorLog(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.db.PPLoggerLoggingDBUtil: void saveLogData(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.db.PPLoggerLoggingDBUtil: void saveLogData(android.content.Context,java.lang.String)> --> virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>("INSERT INTO tn_logging (detail,created) values (?,?)", $r8)
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d1 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$4
<jp.profilepassport.android.obfuscated.j.m: void h()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.m
<jp.profilepassport.android.obfuscated.j.m: void h()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void execute()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$2
<jp.profilepassport.android.obfuscated.f.c: void a(android.content.Context,jp.profilepassport.android.PPTagInf,jp.profilepassport.android.PPNotificationListener)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.c
<jp.profilepassport.android.obfuscated.f.c: void a(int)> --> $i0 := @parameter0: int
<jp.profilepassport.android.obfuscated.g.e: void a(int)> --> r0 := @this: jp.profilepassport.android.obfuscated.g.e
<jp.profilepassport.android.tasks.w: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.tasks.PPScheduleReceiver$3: void run()> --> r0 := @this: jp.profilepassport.android.tasks.PPScheduleReceiver$3
<jp.profilepassport.android.tasks.d: void b()> --> r0 := @this: jp.profilepassport.android.tasks.d
<jp.profilepassport.android.tasks.d: void b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.tasks.u: void a(java.lang.String)> --> r0 := @this: jp.profilepassport.android.tasks.u
<jp.profilepassport.android.tasks.u: void b()> --> r0 := @this: jp.profilepassport.android.tasks.u
<jp.profilepassport.android.tasks.u: void b()> --> virtualinvoke $r7.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r1)
--------------------------------------------------------

<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)> --> $r4 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r1 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)>($r0, "gps")
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> if $r0 == null goto return 0
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $z0 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)>($r1, 900000L, 300.0)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> if $z0 != 0 goto return $r1
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r3 = null
<jp.profilepassport.android.obfuscated.f.b: void d(android.content.Context)> --> $r2 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)>($r1)
<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$9: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$9
<jp.profilepassport.android.obfuscated.j.m: java.lang.String b(java.lang.String)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.m
<jp.profilepassport.android.obfuscated.j.m: java.lang.String b(java.lang.String)> --> $r5 = virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r1, null)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$8: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$8
<jp.profilepassport.android.obfuscated.j.l: long a(java.util.List,java.util.List)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.l
<jp.profilepassport.android.obfuscated.j.l: long a(java.util.List,java.util.List)> --> $r11 = virtualinvoke r0.<jp.profilepassport.android.obfuscated.j.l: android.database.sqlite.SQLiteDatabase a()>()
<jp.profilepassport.android.obfuscated.j.l: long a(java.util.List,java.util.List)> --> $r14 := @caughtexception
<jp.profilepassport.android.obfuscated.j.l: long a(java.util.List,java.util.List)> --> virtualinvoke $r10.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.geoarea.service.PPGeoAreaService$1: void run()> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService$1
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void access$000(jp.profilepassport.android.geoarea.service.PPGeoAreaService,com.google.android.gms.location.GeofencingEvent)> --> $r0 := @parameter0: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void geofenceEnter(com.google.android.gms.location.GeofencingEvent)> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.tasks.l: boolean a(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.q.c: void a(android.content.Context,java.lang.String,java.lang.String,java.util.Date)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.B.f: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.B.f: boolean a(java.lang.String,java.lang.String,boolean)> --> $r0 := @parameter0: java.lang.String
<jp.profilepassport.android.obfuscated.B.f: boolean a(java.lang.String,java.lang.String,boolean)> --> virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r2)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask$1: void run()> --> r0 := @this: jp.profilepassport.android.logger.task.PPLoggerErrorLogTask$1
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void access$100(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void insertErrorLog(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.db.PPLoggerLoggingDBUtil: void saveLogData(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.db.PPLoggerLoggingDBUtil: void saveLogData(android.content.Context,java.lang.String)> --> virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>("INSERT INTO tn_logging (detail,created) values (?,?)", $r8)
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d1 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.f$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.f$4
<jp.profilepassport.android.obfuscated.j.j: long a(jp.profilepassport.android.obfuscated.k.j)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.j
<jp.profilepassport.android.obfuscated.j.a: long a(android.content.ContentValues,java.lang.Object)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: long a(android.content.ContentValues,java.lang.Object)> --> $l0 = virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>($r3, null, $r1)
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d1 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.h$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.h$3
<jp.profilepassport.android.obfuscated.j.h: void b(jp.profilepassport.android.obfuscated.j.h,java.util.List)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.h
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> $r5 = r0.<jp.profilepassport.android.obfuscated.j.a: android.database.sqlite.SQLiteDatabase a>
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> $r13 := @caughtexception
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.h$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.h$3
<jp.profilepassport.android.obfuscated.j.h: void b(jp.profilepassport.android.obfuscated.j.h,java.util.List)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.h
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> $r5 = r0.<jp.profilepassport.android.obfuscated.j.a: android.database.sqlite.SQLiteDatabase a>
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> $r13 := @caughtexception
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$5: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$5
<jp.profilepassport.android.obfuscated.j.l: long j()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.l
<jp.profilepassport.android.obfuscated.j.l: long j()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)> --> $r4 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r1 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)>($r0, "gps")
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> if $r0 == null goto return 0
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $z0 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)>($r1, 900000L, 300.0)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> if $z0 != 0 goto return $r1
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r3 = null
<jp.profilepassport.android.obfuscated.f.b: void d(android.content.Context)> --> $r2 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)>($r1)
<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.g$2: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.g$2
<jp.profilepassport.android.obfuscated.j.k: void a(java.util.List)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.k
<jp.profilepassport.android.obfuscated.j.k: void a(java.util.List)> --> virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>($r7, "_tag_flag = ? AND _type = ? AND _type_key = ?", $r14)
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.a$2: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.a$2
<jp.profilepassport.android.obfuscated.j.b: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.b
<jp.profilepassport.android.obfuscated.j.b: void i()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$1: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$1
<jp.profilepassport.android.obfuscated.f.f: void a(android.content.Context,java.lang.String,jp.profilepassport.android.PPSDKManagerListener)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.f
<jp.profilepassport.android.logger.PPLogger: void start()> --> r0 := @this: jp.profilepassport.android.logger.PPLogger
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationManager: void startScreenReceiverService()> --> r0 := @this: jp.profilepassport.android.logger.cooperation.PPLoggerCooperationManager
<jp.profilepassport.android.logger.task.PPLoggerTaskUtil: int scheduleScreenJob(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.task.PPLoggerTaskUtil: int scheduleScreenJob(android.content.Context)> --> virtualinvoke $r1.<android.os.PersistableBundle: void putInt(java.lang.String,int)>("BUNDLE_JOB_KIND", 0)
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$8: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$8
<jp.profilepassport.android.obfuscated.j.l: long a(java.util.List,java.util.List)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.l
<jp.profilepassport.android.obfuscated.j.l: long a(java.util.List,java.util.List)> --> virtualinvoke $r12.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d1 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.e$6: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.e$6
<jp.profilepassport.android.obfuscated.j.i: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.i
<jp.profilepassport.android.obfuscated.j.i: void i()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$4
<jp.profilepassport.android.obfuscated.j.m: void h()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.m
<jp.profilepassport.android.obfuscated.j.m: void h()> --> $r4 = virtualinvoke r0.<jp.profilepassport.android.obfuscated.j.m: android.database.sqlite.SQLiteDatabase a()>()
<jp.profilepassport.android.obfuscated.j.m: void h()> --> $r7 := @caughtexception
<jp.profilepassport.android.obfuscated.j.m: void h()> --> virtualinvoke $r3.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.f$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f$4
<jp.profilepassport.android.obfuscated.j.f: void a(jp.profilepassport.android.obfuscated.j.f,java.util.List)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$2
<jp.profilepassport.android.obfuscated.f.c: void a(android.content.Context,jp.profilepassport.android.PPTagInf,jp.profilepassport.android.PPNotificationListener)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.c
<jp.profilepassport.android.obfuscated.f.c: void a(int)> --> $i0 := @parameter0: int
<jp.profilepassport.android.obfuscated.g.e: void a(int)> --> r0 := @this: jp.profilepassport.android.obfuscated.g.e
<jp.profilepassport.android.tasks.w: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<jp.profilepassport.android.obfuscated.g.e$1: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.g.e$1
<com.navitime.inbound.profilepassport.PPBeaconReceiver$1: void onFailureNotice(int)> --> r0 := @this: com.navitime.inbound.profilepassport.PPBeaconReceiver$1
<com.navitime.inbound.g.n: void M(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.navitime.inbound.g.n: void M(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r0, $r1)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.b$5: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.b$5
<jp.profilepassport.android.obfuscated.j.d: void a(int)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.d
<jp.profilepassport.android.obfuscated.j.d: void a(int)> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d1 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.h$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.h$4
<jp.profilepassport.android.obfuscated.j.h: long a(jp.profilepassport.android.obfuscated.j.h,jp.profilepassport.android.obfuscated.k.h)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.h
<jp.profilepassport.android.obfuscated.j.a: long a(android.content.ContentValues,java.lang.String,java.lang.String[],java.lang.Object)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: long a(android.content.ContentValues,java.lang.String,java.lang.String[],java.lang.Object)> --> $i0 = virtualinvoke $r8.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>($r7, $r1, $r2, $r3)
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d1 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.e$1: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.e$1
<jp.profilepassport.android.obfuscated.j.i: boolean h()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.i
<jp.profilepassport.android.obfuscated.j.a: android.database.Cursor a(java.lang.String)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: android.database.Cursor a(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r1, null)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.geoarea.service.PPGeoAreaService$1: void run()> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService$1
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void access$000(jp.profilepassport.android.geoarea.service.PPGeoAreaService,com.google.android.gms.location.GeofencingEvent)> --> $r0 := @parameter0: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void geofenceEnter(com.google.android.gms.location.GeofencingEvent)> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.tasks.l: boolean a(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.q.c: void a(android.content.Context,java.lang.String,java.lang.String,java.util.Date)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.B.f: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.B.f: boolean a(java.lang.String,java.lang.String,boolean)> --> $r0 := @parameter0: java.lang.String
<jp.profilepassport.android.obfuscated.B.f: boolean a(java.lang.String,java.lang.String,boolean)> --> virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r2)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.tasks.PPScheduleReceiver$2: void run()> --> r0 := @this: jp.profilepassport.android.tasks.PPScheduleReceiver$2
<jp.profilepassport.android.tasks.b: void f()> --> r0 := @this: jp.profilepassport.android.tasks.b
<jp.profilepassport.android.tasks.b: void a()> --> r0 := @this: jp.profilepassport.android.tasks.b
<jp.profilepassport.android.obfuscated.C.j: void a(android.content.Context,java.lang.String,java.lang.String,int)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.C.j: void a(android.content.Context,java.lang.String,java.lang.String,int)> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>($r2, $i0)
--------------------------------------------------------

<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)> --> $r4 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r1 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)>($r0, "gps")
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> if $r0 == null goto return 0
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $z0 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)>($r1, 900000L, 300.0)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> if $z0 != 0 goto return $r1
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r3 = null
<jp.profilepassport.android.obfuscated.f.b: void d(android.content.Context)> --> $r2 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)>($r1)
<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.a$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.a$3
<jp.profilepassport.android.obfuscated.j.c: void b(java.lang.String)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.c
<jp.profilepassport.android.obfuscated.j.c: void b(java.lang.String)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.h$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.h$3
<jp.profilepassport.android.obfuscated.j.h: void b(jp.profilepassport.android.obfuscated.j.h,java.util.List)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.h
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: void a(java.lang.String,java.util.List,java.lang.Object,java.util.List)> --> virtualinvoke $r7.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)> --> $r4 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r1 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)>($r0, "gps")
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> if $r0 == null goto return 0
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $z0 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)>($r1, 900000L, 300.0)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> if $z0 != 0 goto return $r1
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r3 = null
<jp.profilepassport.android.obfuscated.f.b: void d(android.content.Context)> --> $r2 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)>($r1)
<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.a$2: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.a$2
<jp.profilepassport.android.obfuscated.j.b: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.b
<jp.profilepassport.android.obfuscated.j.b: void i()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void execute()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.geoarea.service.PPGeoAreaService$1: void run()> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService$1
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void access$000(jp.profilepassport.android.geoarea.service.PPGeoAreaService,com.google.android.gms.location.GeofencingEvent)> --> $r0 := @parameter0: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void geofenceEnter(com.google.android.gms.location.GeofencingEvent)> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.tasks.l: boolean a(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.q.c: void a(android.content.Context,java.lang.String,java.lang.String,java.util.Date)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.B.f: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.B.f: boolean a(java.lang.String,java.lang.String,boolean)> --> $r0 := @parameter0: java.lang.String
<jp.profilepassport.android.obfuscated.B.f: boolean a(java.lang.String,java.lang.String,boolean)> --> virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r2)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.b$8: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.b$8
<jp.profilepassport.android.obfuscated.j.d: void h()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.d
<jp.profilepassport.android.obfuscated.j.d: void h()> --> virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r2)
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d1 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.b$5: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.b$5
<jp.profilepassport.android.obfuscated.j.d: void a(int)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.d
<jp.profilepassport.android.obfuscated.j.d: void a(int)> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.g$1: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.g$1
<jp.profilepassport.android.obfuscated.j.k: java.util.List h()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.k
<jp.profilepassport.android.obfuscated.j.k: java.util.List h()> --> $r4 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r3, null, null, null, null, null, null)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.a$5: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.a$5
<jp.profilepassport.android.obfuscated.j.c: java.util.List a(java.lang.String,java.lang.String)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.c
<jp.profilepassport.android.obfuscated.j.a: android.database.Cursor a(java.lang.String)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: android.database.Cursor a(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r1, null)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$5: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$5
<jp.profilepassport.android.obfuscated.j.l: long j()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.l
<jp.profilepassport.android.obfuscated.j.l: long j()> --> $r4 = virtualinvoke r0.<jp.profilepassport.android.obfuscated.j.l: android.database.sqlite.SQLiteDatabase a()>()
<jp.profilepassport.android.obfuscated.j.l: long j()> --> $r7 := @caughtexception
<jp.profilepassport.android.obfuscated.j.l: long j()> --> virtualinvoke $r3.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d1 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.e$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e$3
<jp.profilepassport.android.obfuscated.j.a: long a(java.lang.String,java.lang.String[])> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: long a(java.lang.String,java.lang.String[])> --> $i0 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>($r1, null, null)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.a$2: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.a$2
<jp.profilepassport.android.obfuscated.j.b: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.b
<jp.profilepassport.android.obfuscated.j.b: void i()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void execute()>()
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d1 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$3
<jp.profilepassport.android.obfuscated.j.l: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.l
<jp.profilepassport.android.obfuscated.j.l: void i()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void execute()>()
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.a$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.a$3
<jp.profilepassport.android.obfuscated.j.c: void b(java.lang.String)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.c
<jp.profilepassport.android.obfuscated.j.c: void b(java.lang.String)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d1 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.a$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.a$3
<jp.profilepassport.android.obfuscated.j.c: void b(java.lang.String)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.c
<jp.profilepassport.android.obfuscated.j.c: void b(java.lang.String)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.a$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.a$4
<jp.profilepassport.android.obfuscated.j.c: java.util.List a(java.lang.String,java.lang.String)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.c
<jp.profilepassport.android.obfuscated.j.a: android.database.Cursor a(java.lang.String)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: android.database.Cursor a(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r1, null)
--------------------------------------------------------

<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)> --> $r4 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r1 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)>($r0, "gps")
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> if $r0 == null goto return 0
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $z0 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)>($r1, 900000L, 300.0)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> if $z0 != 0 goto return $r1
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r3 = null
<jp.profilepassport.android.obfuscated.f.b: void d(android.content.Context)> --> $r2 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)>($r1)
<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.b$8: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.b$8
<jp.profilepassport.android.obfuscated.j.d: void h()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.d
<jp.profilepassport.android.obfuscated.j.d: void h()> --> virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r2)
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d1 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$8: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$8
<jp.profilepassport.android.obfuscated.j.l: long a(java.util.List,java.util.List)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.l
<jp.profilepassport.android.obfuscated.j.l: long a(java.util.List,java.util.List)> --> virtualinvoke $r12.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d1 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.b$5: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.b$5
<jp.profilepassport.android.obfuscated.j.d: void a(int)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.d
<jp.profilepassport.android.obfuscated.j.d: void a(int)> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void execute()>()
--------------------------------------------------------

<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)> --> $r4 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r1 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)>($r0, "gps")
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> if $r0 == null goto return 0
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $z0 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)>($r1, 900000L, 300.0)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> if $z0 != 0 goto return $r1
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r3 = null
<jp.profilepassport.android.obfuscated.f.b: void d(android.content.Context)> --> $r2 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)>($r1)
<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$8: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$8
<jp.profilepassport.android.obfuscated.j.l: long a(java.util.List,java.util.List)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.l
<jp.profilepassport.android.obfuscated.j.l: long a(java.util.List,java.util.List)> --> virtualinvoke $r12.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)> --> $r4 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r1 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)>($r0, "gps")
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> if $r0 == null goto return 0
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $z0 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)>($r1, 900000L, 300.0)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> if $z0 != 0 goto return $r1
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r3 = null
<jp.profilepassport.android.obfuscated.f.b: void d(android.content.Context)> --> $r2 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)>($r1)
<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.a$2: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.a$2
<jp.profilepassport.android.obfuscated.j.b: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.b
<jp.profilepassport.android.obfuscated.j.b: void i()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.e$6: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.e$6
<jp.profilepassport.android.obfuscated.j.i: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.i
<jp.profilepassport.android.obfuscated.j.i: void i()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void execute()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.g$2: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.g$2
<jp.profilepassport.android.obfuscated.j.k: void a(java.util.List)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.k
<jp.profilepassport.android.obfuscated.j.k: void a(java.util.List)> --> virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>($r7, "_tag_flag = ? AND _type = ? AND _type_key = ?", $r14)
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$4
<jp.profilepassport.android.obfuscated.j.m: void h()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.m
<jp.profilepassport.android.obfuscated.j.m: void h()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void judgeFusedLocationProvider(android.location.Location,android.location.Location,android.location.Location)> --> $d0 = virtualinvoke $r0.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void judgeFusedLocationProvider(android.location.Location,android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void judgeFusedLocationProvider(android.location.Location,android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void setNetworkLocationType(android.location.Location,android.location.Location)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void setNetworkLocationType(android.location.Location,android.location.Location)> --> virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("networkLocationType", $r4)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.g$2: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.g$2
<jp.profilepassport.android.obfuscated.j.k: void a(java.util.List)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.k
<jp.profilepassport.android.obfuscated.j.k: void a(java.util.List)> --> virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>($r7, "_tag_flag = ? AND _type = ? AND _type_key = ?", $r14)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.tasks.o: boolean a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.j.e: int c(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.e
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$5: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$5
<jp.profilepassport.android.obfuscated.j.l: long j()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.l
<jp.profilepassport.android.obfuscated.j.l: long j()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)> --> $r4 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r1 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)>($r0, "gps")
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> if $r0 == null goto return 0
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $z0 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)>($r1, 900000L, 300.0)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> if $z0 != 0 goto return $r1
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r3 = null
<jp.profilepassport.android.obfuscated.f.b: void d(android.content.Context)> --> $r2 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)>($r1)
<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.g$1: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.g$1
<jp.profilepassport.android.obfuscated.j.k: java.util.List h()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.k
<jp.profilepassport.android.obfuscated.j.k: java.util.List h()> --> $r4 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r3, null, null, null, null, null, null)
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$3
<jp.profilepassport.android.obfuscated.j.l: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.l
<jp.profilepassport.android.obfuscated.j.l: void i()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$4
<jp.profilepassport.android.obfuscated.j.m: void h()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.m
<jp.profilepassport.android.obfuscated.j.m: void h()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.geoarea.service.PPGeoAreaService$1: void run()> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService$1
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void access$000(jp.profilepassport.android.geoarea.service.PPGeoAreaService,com.google.android.gms.location.GeofencingEvent)> --> $r0 := @parameter0: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void geofenceEnter(com.google.android.gms.location.GeofencingEvent)> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.logger.PPLogger: void sendCooperationLocation(android.location.Location,int)> --> r0 := @this: jp.profilepassport.android.logger.PPLogger
<jp.profilepassport.android.logger.PPLoggerCfgManager: jp.profilepassport.android.logger.PPLoggerCfgManager getManager(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.PPLoggerCfgManager: jp.profilepassport.android.logger.PPLoggerCfgManager getManager(android.content.Context)> --> $r2 = new jp.profilepassport.android.logger.util.preferences.PPLoggerTCCMPreferences
<jp.profilepassport.android.logger.PPLoggerCfgManager: jp.profilepassport.android.logger.PPLoggerCfgManager getManager(android.content.Context)> --> $r6 := @caughtexception
<jp.profilepassport.android.logger.PPLoggerCfgManager: void <init>(android.content.Context)> --> r0 := @this: jp.profilepassport.android.logger.PPLoggerCfgManager
<jp.profilepassport.android.logger.PPLoggerCfgManager: void updateHash()> --> r0 := @this: jp.profilepassport.android.logger.PPLoggerCfgManager
<jp.profilepassport.android.logger.db.PPLoggerCfgDBUtil: java.util.HashMap getCfgValueHash(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.db.PPLoggerCfgDBUtil: java.util.HashMap getCfgValueHash(android.content.Context,java.lang.String)> --> $r6 = virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>(" SELECT key,value FROM pp_logger_cfg WHERE  type = ?", $r5)
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d1 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.j.f$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f$4
<jp.profilepassport.android.obfuscated.j.f: void a(jp.profilepassport.android.obfuscated.j.f,java.util.List)> --> $r0 := @parameter0: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: void b(java.lang.String,java.util.List,java.lang.Object)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteStatement: long executeInsert()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.geoarea.service.PPGeoAreaService$1: void run()> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService$1
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void access$000(jp.profilepassport.android.geoarea.service.PPGeoAreaService,com.google.android.gms.location.GeofencingEvent)> --> $r0 := @parameter0: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void geofenceEnter(com.google.android.gms.location.GeofencingEvent)> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.logger.PPLogger: void sendCooperationLocation(android.location.Location,int)> --> r0 := @this: jp.profilepassport.android.logger.PPLogger
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationManager: void sendLocationInfo(android.location.Location,int)> --> r0 := @this: jp.profilepassport.android.logger.cooperation.PPLoggerCooperationManager
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationManager: void setFusedLocationProvider(android.location.Location)> --> r0 := @this: jp.profilepassport.android.logger.cooperation.PPLoggerCooperationManager
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void judgeFusedLocationProvider(android.location.Location,android.location.Location,android.location.Location)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void setNetworkLocationType(android.location.Location,android.location.Location)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void setNetworkLocationType(android.location.Location,android.location.Location)> --> virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("networkLocationType", $r4)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$9: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$9
<jp.profilepassport.android.obfuscated.j.m: java.lang.String b(java.lang.String)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.m
<jp.profilepassport.android.obfuscated.j.m: java.lang.String b(java.lang.String)> --> $r5 = virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r1, null)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.f.e$13: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.f.e$13
<jp.profilepassport.android.obfuscated.f.b: void a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.f.b
<jp.profilepassport.android.obfuscated.C.j: void a(android.content.Context,java.lang.String,java.lang.String,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.C.j: void a(android.content.Context,java.lang.String,java.lang.String,boolean)> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>($r2, $z0)
--------------------------------------------------------

<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void judgeFusedLocationProvider(android.location.Location,android.location.Location,android.location.Location)> --> $d1 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void judgeFusedLocationProvider(android.location.Location,android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void judgeFusedLocationProvider(android.location.Location,android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void setNetworkLocationType(android.location.Location,android.location.Location)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void setNetworkLocationType(android.location.Location,android.location.Location)> --> virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("networkLocationType", $r4)
--------------------------------------------------------

<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)> --> $r4 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r1 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)>($r0, "gps")
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> if $r0 == null goto return 0
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $z0 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)>($r1, 900000L, 300.0)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> if $z0 != 0 goto return $r1
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r3 = null
<jp.profilepassport.android.obfuscated.f.b: void d(android.content.Context)> --> $r2 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)>($r1)
<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.e$6: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.e$6
<jp.profilepassport.android.obfuscated.j.i: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.i
<jp.profilepassport.android.obfuscated.j.i: void i()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void execute()>()
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.a$2: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.a$2
<jp.profilepassport.android.obfuscated.j.b: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.b
<jp.profilepassport.android.obfuscated.j.b: void i()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void execute()>()
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$9: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$9
<jp.profilepassport.android.obfuscated.j.m: java.lang.String b(java.lang.String)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.m
<jp.profilepassport.android.obfuscated.j.m: java.lang.String b(java.lang.String)> --> $r5 = virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r1, null)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.obfuscated.r.h$2: void run()> --> r0 := @this: jp.profilepassport.android.obfuscated.r.h$2
<jp.profilepassport.android.obfuscated.n.b: int b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.h$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.h$3
<jp.profilepassport.android.obfuscated.j.l: void i()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.l
<jp.profilepassport.android.obfuscated.j.l: void i()> --> virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>()
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d1 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.a$3: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.a$3
<jp.profilepassport.android.obfuscated.j.c: void b(java.lang.String)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.c
<jp.profilepassport.android.obfuscated.j.c: void b(java.lang.String)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteStatement: void execute()>()
--------------------------------------------------------

<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void judgeFusedLocationProvider(android.location.Location,android.location.Location,android.location.Location)> --> $d0 = virtualinvoke $r0.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void judgeFusedLocationProvider(android.location.Location,android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void judgeFusedLocationProvider(android.location.Location,android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void setNetworkLocationType(android.location.Location,android.location.Location)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.logger.util.PPLoggerLocationUtil: void setNetworkLocationType(android.location.Location,android.location.Location)> --> virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("networkLocationType", $r4)
--------------------------------------------------------

<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.b$8: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.b$8
<jp.profilepassport.android.obfuscated.j.d: void h()> --> r0 := @this: jp.profilepassport.android.obfuscated.j.d
<jp.profilepassport.android.obfuscated.j.d: void h()> --> virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r2)
--------------------------------------------------------

<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<jp.profilepassport.android.logger.cooperation.PPLoggerCooperationLocationOperator: void setCooperationLocationEntity(android.location.Location,int)> --> $r7 := @caughtexception
<jp.profilepassport.android.logger.task.PPLoggerErrorLogTask: void generateErrorLog(android.content.Context,jp.profilepassport.android.logger.error.exception.PPLoggerException)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.PPLoggerThreadUtil: boolean setPPLoggerErrorLogHandlerPost(java.lang.Runnable)> --> r0 := @this: jp.profilepassport.android.logger.util.PPLoggerThreadUtil
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<jp.profilepassport.android.geoarea.service.PPGeoAreaService$1: void run()> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService$1
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void access$000(jp.profilepassport.android.geoarea.service.PPGeoAreaService,com.google.android.gms.location.GeofencingEvent)> --> $r0 := @parameter0: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.geoarea.service.PPGeoAreaService: void geofenceEnter(com.google.android.gms.location.GeofencingEvent)> --> r0 := @this: jp.profilepassport.android.geoarea.service.PPGeoAreaService
<jp.profilepassport.android.logger.PPLogger: void sendCooperationLocation(android.location.Location,int)> --> r0 := @this: jp.profilepassport.android.logger.PPLogger
<jp.profilepassport.android.logger.PPLoggerCfgManager: jp.profilepassport.android.logger.PPLoggerCfgManager getManager(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.PPLoggerCfgManager: void resetSysValue(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.logger.util.preferences.PPLoggerTCCMPreferences: void commitPutResetVLLog(boolean)> --> r0 := @this: jp.profilepassport.android.logger.util.preferences.PPLoggerTCCMPreferences
<jp.profilepassport.android.logger.util.preferences.PPLoggerSharedPreferences: boolean commitPutBoolean(java.lang.String,boolean)> --> r0 := @this: jp.profilepassport.android.logger.util.preferences.PPLoggerSharedPreferences
<jp.profilepassport.android.logger.util.preferences.PPLoggerSharedPreferences: boolean commitPutBoolean(java.lang.String,boolean)> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>($r1, $z0)
--------------------------------------------------------

<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)> --> $r4 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r1 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context,java.lang.String)>($r0, "gps")
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> $r0 := @parameter0: android.location.Location
<jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)> --> if $r0 == null goto return 0
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $z0 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: boolean a(android.location.Location,long,double)>($r1, 900000L, 300.0)
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> if $z0 != 0 goto return $r1
<jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)> --> $r3 = null
<jp.profilepassport.android.obfuscated.f.b: void d(android.content.Context)> --> $r2 = staticinvoke <jp.profilepassport.android.obfuscated.B.g: android.location.Location a(android.content.Context)>($r1)
<jp.profilepassport.android.tasks.o: void a(android.content.Context,android.location.Location,boolean,boolean)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> $r0 := @parameter0: android.content.Context
<jp.profilepassport.android.obfuscated.n.c: java.util.List a(android.content.Context,android.location.Location)> --> if $r1 != null goto $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<jp.profilepassport.android.obfuscated.j.f: java.util.List a(android.content.Context)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.f
<jp.profilepassport.android.obfuscated.h.a: java.lang.Object b()> --> r0 := @this: jp.profilepassport.android.obfuscated.h.a
<jp.profilepassport.android.obfuscated.n.a$4: java.lang.Object a()> --> r0 := @this: jp.profilepassport.android.obfuscated.n.a$4
<jp.profilepassport.android.obfuscated.j.c: java.util.List a(java.lang.String,java.lang.String)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.c
<jp.profilepassport.android.obfuscated.j.a: android.database.Cursor a(java.lang.String)> --> r0 := @this: jp.profilepassport.android.obfuscated.j.a
<jp.profilepassport.android.obfuscated.j.a: android.database.Cursor a(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r1, null)
--------------------------------------------------------

