<com.lozzo.loadboard.android.utils.CurrentLocationTracker$GetLastLocation: void run()> --> $r6 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.lozzo.loadboard.android.utils.CurrentLocationTracker$GetLastLocation: void run()> --> r8 := @caughtexception
<com.lozzo.loadboard.android.utils.CurrentLocationTracker$GetLastLocation: void gotLocation(android.location.Location)> --> r0 := @this: com.lozzo.loadboard.android.utils.CurrentLocationTracker$GetLastLocation
<com.lozzo.loadboard.android.utils.CurrentLocationTracker: void access$500(com.lozzo.loadboard.android.utils.CurrentLocationTracker,android.location.Location)> --> $r0 := @parameter0: com.lozzo.loadboard.android.utils.CurrentLocationTracker
<com.lozzo.loadboard.android.utils.CurrentLocationTracker: void postLocation(android.location.Location)> --> r0 := @this: com.lozzo.loadboard.android.utils.CurrentLocationTracker
<com.lozzo.loadboard.android.data.AppPreferences: void setLongitude(java.lang.Double)> --> r0 := @this: com.lozzo.loadboard.android.data.AppPreferences
<com.lozzo.loadboard.android.data.AppPreferences: void setLongitude(java.lang.Double)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("longitude", $r4)
--------------------------------------------------------

<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $d1 = virtualinvoke $r3.<android.location.Location: double getLongitude()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = virtualinvoke $r1.<android.location.Location: long getTime()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> $z0 = virtualinvoke r0.<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)>($r1, $r2)
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> if $z0 == 0 goto return
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> $r0 := @parameter0: android.location.Location
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r2, "Location is unavailable")
--------------------------------------------------------

<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = virtualinvoke $r1.<android.location.Location: long getTime()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> $z0 = virtualinvoke r0.<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)>($r1, $r2)
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> if $z0 == 0 goto return
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> $r0 := @parameter0: android.location.Location
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r2, "Location is unavailable")
--------------------------------------------------------

<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $d1 = virtualinvoke $r3.<android.location.Location: double getLatitude()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = virtualinvoke $r1.<android.location.Location: long getTime()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> $z0 = virtualinvoke r0.<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)>($r1, $r2)
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> if $z0 == 0 goto return
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> $r0 := @parameter0: android.location.Location
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r2, "Location is unavailable")
--------------------------------------------------------

<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = virtualinvoke $r1.<android.location.Location: long getTime()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> $z0 = virtualinvoke r0.<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)>($r1, $r2)
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> if $z0 == 0 goto return
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> $r0 := @parameter0: android.location.Location
<com.lozzo.loadboard.android.utils.MqttBroker: void handleException(java.lang.Exception)> --> $r0 := @parameter0: java.lang.Exception
<com.lozzo.loadboard.android.utils.MqttBroker: void handleException(java.lang.Exception)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r2, "Internet isn\'t connected")
--------------------------------------------------------

<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $d1 = virtualinvoke $r3.<android.location.Location: double getLongitude()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = virtualinvoke $r1.<android.location.Location: long getTime()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> $z0 = virtualinvoke r0.<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)>($r1, $r2)
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> if $z0 == 0 goto return
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> $r0 := @parameter0: android.location.Location
<com.lozzo.loadboard.android.utils.MqttBroker: com.lozzo.loadboard.android.utils.MqttBroker newInstance()> --> $r0 = <com.lozzo.loadboard.android.utils.MqttBroker: com.lozzo.loadboard.android.utils.MqttBroker mInstance>
<com.lozzo.loadboard.android.utils.MqttBroker: void <init>()> --> r0 := @this: com.lozzo.loadboard.android.utils.MqttBroker
<com.lozzo.loadboard.android.utils.MqttBroker: void initMqtt()> --> r0 := @this: com.lozzo.loadboard.android.utils.MqttBroker
<com.lozzo.loadboard.android.utils.MqttBroker: void initMqtt()> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r7, $r8)
--------------------------------------------------------

<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $d1 = virtualinvoke $r3.<android.location.Location: double getLongitude()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = virtualinvoke $r1.<android.location.Location: long getTime()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> $z0 = virtualinvoke r0.<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)>($r1, $r2)
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> if $z0 == 0 goto return
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> $r0 := @parameter0: android.location.Location
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r2, "Internet isn\'t connected")
--------------------------------------------------------

<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $d1 = virtualinvoke $r3.<android.location.Location: double getLongitude()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = virtualinvoke $r1.<android.location.Location: long getTime()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> $z0 = virtualinvoke r0.<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)>($r1, $r2)
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> if $z0 == 0 goto return
<com.lozzo.loadboard.android.data.AppPreferences: void setFirstLaunchAfterLogin(boolean)> --> r0 := @this: com.lozzo.loadboard.android.data.AppPreferences
<com.lozzo.loadboard.android.data.AppPreferences: void setFirstLaunchAfterLogin(boolean)> --> interfaceinvoke $r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("first.launch.after.login", 0)
--------------------------------------------------------

<com.lozzo.loadboard.android.utils.CurrentLocationTracker$GetLastLocation: void run()> --> $r6 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.lozzo.loadboard.android.utils.CurrentLocationTracker$GetLastLocation: void run()> --> r7 := @caughtexception
<com.lozzo.loadboard.android.utils.CurrentLocationTracker$GetLastLocation: void gotLocation(android.location.Location)> --> r0 := @this: com.lozzo.loadboard.android.utils.CurrentLocationTracker$GetLastLocation
<com.lozzo.loadboard.android.utils.CurrentLocationTracker: void access$500(com.lozzo.loadboard.android.utils.CurrentLocationTracker,android.location.Location)> --> $r0 := @parameter0: com.lozzo.loadboard.android.utils.CurrentLocationTracker
<com.lozzo.loadboard.android.utils.CurrentLocationTracker: void postLocation(android.location.Location)> --> r0 := @this: com.lozzo.loadboard.android.utils.CurrentLocationTracker
<com.lozzo.loadboard.android.data.AppPreferences: void setLongitude(java.lang.Double)> --> r0 := @this: com.lozzo.loadboard.android.data.AppPreferences
<com.lozzo.loadboard.android.data.AppPreferences: void setLongitude(java.lang.Double)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("longitude", $r4)
--------------------------------------------------------

<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $d1 = virtualinvoke $r3.<android.location.Location: double getLongitude()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = virtualinvoke $r1.<android.location.Location: long getTime()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> $z0 = virtualinvoke r0.<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)>($r1, $r2)
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> if $z0 == 0 goto return
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> $r0 := @parameter0: android.location.Location
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> $r4 = staticinvoke <com.lozzo.loadboard.android.utils.MqttBroker: com.lozzo.loadboard.android.utils.MqttBroker newInstance()>()
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> r1 := @caughtexception
<com.lozzo.loadboard.android.utils.MqttBroker: void handleException(java.lang.Exception)> --> $r0 := @parameter0: java.lang.Exception
<com.lozzo.loadboard.android.utils.MqttBroker: void retryConnect()> --> $r1 = <com.lozzo.loadboard.android.utils.MqttBroker: java.lang.String TAG>
<com.lozzo.loadboard.android.utils.MqttBroker: void retryConnect()> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r3)
--------------------------------------------------------

<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = virtualinvoke $r1.<android.location.Location: long getTime()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> $z0 = virtualinvoke r0.<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)>($r1, $r2)
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> if $z0 == 0 goto return
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> $r0 := @parameter0: android.location.Location
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r2, "Location is unavailable")
--------------------------------------------------------

<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $d1 = virtualinvoke $r3.<android.location.Location: double getLatitude()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = virtualinvoke $r1.<android.location.Location: long getTime()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> $z0 = virtualinvoke r0.<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)>($r1, $r2)
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> if $z0 == 0 goto return
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> $r0 := @parameter0: android.location.Location
<com.lozzo.loadboard.android.utils.MqttBroker: void handleException(java.lang.Exception)> --> $r0 := @parameter0: java.lang.Exception
<com.lozzo.loadboard.android.utils.MqttBroker: void handleException(java.lang.Exception)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r2, "Internet isn\'t connected")
--------------------------------------------------------

<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $d1 = virtualinvoke $r3.<android.location.Location: double getLatitude()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = virtualinvoke $r1.<android.location.Location: long getTime()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> $z0 = virtualinvoke r0.<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)>($r1, $r2)
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> if $z0 == 0 goto return
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> $r0 := @parameter0: android.location.Location
<com.lozzo.loadboard.android.utils.MqttBroker: com.lozzo.loadboard.android.utils.MqttBroker newInstance()> --> $r0 = <com.lozzo.loadboard.android.utils.MqttBroker: com.lozzo.loadboard.android.utils.MqttBroker mInstance>
<com.lozzo.loadboard.android.utils.MqttBroker: void <init>()> --> r0 := @this: com.lozzo.loadboard.android.utils.MqttBroker
<com.lozzo.loadboard.android.utils.MqttBroker: void initMqtt()> --> r0 := @this: com.lozzo.loadboard.android.utils.MqttBroker
<com.lozzo.loadboard.android.utils.MqttBroker: void initMqtt()> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r7, $r8)
--------------------------------------------------------

<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $d1 = virtualinvoke $r3.<android.location.Location: double getLongitude()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = virtualinvoke $r1.<android.location.Location: long getTime()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> $z0 = virtualinvoke r0.<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)>($r1, $r2)
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> if $z0 == 0 goto return
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> $r0 := @parameter0: android.location.Location
<com.lozzo.loadboard.android.utils.MqttBroker: com.lozzo.loadboard.android.utils.MqttBroker newInstance()> --> $r0 = <com.lozzo.loadboard.android.utils.MqttBroker: com.lozzo.loadboard.android.utils.MqttBroker mInstance>
<com.lozzo.loadboard.android.utils.MqttBroker: void disconnect()> --> $r1 = <com.lozzo.loadboard.android.utils.MqttBroker: java.lang.String TAG>
<com.lozzo.loadboard.android.utils.MqttBroker: void disconnect()> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, "Disconnected")
--------------------------------------------------------

<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = virtualinvoke $r1.<android.location.Location: long getTime()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> $z0 = virtualinvoke r0.<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)>($r1, $r2)
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> if $z0 == 0 goto return
<com.lozzo.loadboard.android.data.AppPreferences: void setFirstLaunchAfterLogin(boolean)> --> r0 := @this: com.lozzo.loadboard.android.data.AppPreferences
<com.lozzo.loadboard.android.data.AppPreferences: void setFirstLaunchAfterLogin(boolean)> --> interfaceinvoke $r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("first.launch.after.login", 0)
--------------------------------------------------------

<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = virtualinvoke $r1.<android.location.Location: long getTime()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> $z0 = virtualinvoke r0.<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)>($r1, $r2)
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> if $z0 == 0 goto return
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> $r0 := @parameter0: android.location.Location
<com.lozzo.loadboard.android.utils.MqttBroker: com.lozzo.loadboard.android.utils.MqttBroker newInstance()> --> $r0 = <com.lozzo.loadboard.android.utils.MqttBroker: com.lozzo.loadboard.android.utils.MqttBroker mInstance>
<com.lozzo.loadboard.android.utils.MqttBroker: void disconnect()> --> $r1 = <com.lozzo.loadboard.android.utils.MqttBroker: java.lang.String TAG>
<com.lozzo.loadboard.android.utils.MqttBroker: void disconnect()> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, "Disconnected")
--------------------------------------------------------

<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $d1 = virtualinvoke $r3.<android.location.Location: double getLatitude()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = virtualinvoke $r1.<android.location.Location: long getTime()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> $z0 = virtualinvoke r0.<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)>($r1, $r2)
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> if $z0 == 0 goto return
<com.lozzo.loadboard.android.data.AppPreferences: void setFirstLaunchAfterLogin(boolean)> --> r0 := @this: com.lozzo.loadboard.android.data.AppPreferences
<com.lozzo.loadboard.android.data.AppPreferences: void setFirstLaunchAfterLogin(boolean)> --> interfaceinvoke $r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("first.launch.after.login", 0)
--------------------------------------------------------

<com.lozzo.loadboard.android.utils.CurrentLocationTracker$GetLastLocation: void run()> --> $r6 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.lozzo.loadboard.android.utils.CurrentLocationTracker$GetLastLocation: void run()> --> r8 := @caughtexception
<com.lozzo.loadboard.android.utils.CurrentLocationTracker$GetLastLocation: void gotLocation(android.location.Location)> --> r0 := @this: com.lozzo.loadboard.android.utils.CurrentLocationTracker$GetLastLocation
<com.lozzo.loadboard.android.utils.CurrentLocationTracker: void access$500(com.lozzo.loadboard.android.utils.CurrentLocationTracker,android.location.Location)> --> $r0 := @parameter0: com.lozzo.loadboard.android.utils.CurrentLocationTracker
<com.lozzo.loadboard.android.utils.CurrentLocationTracker: void postLocation(android.location.Location)> --> r0 := @this: com.lozzo.loadboard.android.utils.CurrentLocationTracker
<com.lozzo.loadboard.android.data.AppPreferences: void setLatitude(java.lang.Double)> --> r0 := @this: com.lozzo.loadboard.android.data.AppPreferences
<com.lozzo.loadboard.android.data.AppPreferences: void setLatitude(java.lang.Double)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("latitude", $r4)
--------------------------------------------------------

<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $d1 = virtualinvoke $r3.<android.location.Location: double getLongitude()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = virtualinvoke $r1.<android.location.Location: long getTime()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> $z0 = virtualinvoke r0.<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)>($r1, $r2)
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> if $z0 == 0 goto return
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> $r0 := @parameter0: android.location.Location
<com.lozzo.loadboard.android.utils.MqttBroker: void handleException(java.lang.Exception)> --> $r0 := @parameter0: java.lang.Exception
<com.lozzo.loadboard.android.utils.MqttBroker: void handleException(java.lang.Exception)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r2, "Internet isn\'t connected")
--------------------------------------------------------

<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = virtualinvoke $r1.<android.location.Location: long getTime()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> $z0 = virtualinvoke r0.<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)>($r1, $r2)
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> if $z0 == 0 goto return
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> $r0 := @parameter0: android.location.Location
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r2, "Internet isn\'t connected")
--------------------------------------------------------

<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = virtualinvoke $r1.<android.location.Location: long getTime()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> $z0 = virtualinvoke r0.<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)>($r1, $r2)
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> if $z0 == 0 goto return
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> $r0 := @parameter0: android.location.Location
<com.lozzo.loadboard.android.utils.MqttBroker: com.lozzo.loadboard.android.utils.MqttBroker newInstance()> --> $r0 = <com.lozzo.loadboard.android.utils.MqttBroker: com.lozzo.loadboard.android.utils.MqttBroker mInstance>
<com.lozzo.loadboard.android.utils.MqttBroker: void <init>()> --> r0 := @this: com.lozzo.loadboard.android.utils.MqttBroker
<com.lozzo.loadboard.android.utils.MqttBroker: void initMqtt()> --> r0 := @this: com.lozzo.loadboard.android.utils.MqttBroker
<com.lozzo.loadboard.android.utils.MqttBroker: void initMqtt()> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r7, $r8)
--------------------------------------------------------

<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = virtualinvoke $r1.<android.location.Location: long getTime()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> $z0 = virtualinvoke r0.<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)>($r1, $r2)
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> if $z0 == 0 goto return
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> $r0 := @parameter0: android.location.Location
<com.lozzo.loadboard.android.utils.MqttBroker: void handleException(java.lang.Exception)> --> $r0 := @parameter0: java.lang.Exception
<com.lozzo.loadboard.android.utils.MqttBroker: void handleException(java.lang.Exception)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r2, "Internet isn\'t connected")
--------------------------------------------------------

<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = virtualinvoke $r1.<android.location.Location: long getTime()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> $z0 = virtualinvoke r0.<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)>($r1, $r2)
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> if $z0 == 0 goto return
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> $r0 := @parameter0: android.location.Location
<com.lozzo.loadboard.android.utils.MqttBroker: com.lozzo.loadboard.android.utils.MqttBroker newInstance()> --> $r0 = <com.lozzo.loadboard.android.utils.MqttBroker: com.lozzo.loadboard.android.utils.MqttBroker mInstance>
<com.lozzo.loadboard.android.utils.MqttBroker: void <init>()> --> r0 := @this: com.lozzo.loadboard.android.utils.MqttBroker
<com.lozzo.loadboard.android.utils.MqttBroker: void initMqtt()> --> r0 := @this: com.lozzo.loadboard.android.utils.MqttBroker
<com.lozzo.loadboard.android.utils.MqttBroker: void initMqtt()> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r7, $r8)
--------------------------------------------------------

<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $d1 = virtualinvoke $r3.<android.location.Location: double getLatitude()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = virtualinvoke $r1.<android.location.Location: long getTime()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> $z0 = virtualinvoke r0.<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)>($r1, $r2)
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> if $z0 == 0 goto return
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> $r0 := @parameter0: android.location.Location
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> $r4 = staticinvoke <com.lozzo.loadboard.android.utils.MqttBroker: com.lozzo.loadboard.android.utils.MqttBroker newInstance()>()
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> r1 := @caughtexception
<com.lozzo.loadboard.android.utils.MqttBroker: void handleException(java.lang.Exception)> --> $r0 := @parameter0: java.lang.Exception
<com.lozzo.loadboard.android.utils.MqttBroker: void retryConnect()> --> $r1 = <com.lozzo.loadboard.android.utils.MqttBroker: java.lang.String TAG>
<com.lozzo.loadboard.android.utils.MqttBroker: void retryConnect()> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r3)
--------------------------------------------------------

<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = virtualinvoke $r1.<android.location.Location: long getTime()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> $z0 = virtualinvoke r0.<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)>($r1, $r2)
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> if $z0 == 0 goto return
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> $r0 := @parameter0: android.location.Location
<com.lozzo.loadboard.android.utils.MqttBroker: com.lozzo.loadboard.android.utils.MqttBroker newInstance()> --> $r0 = <com.lozzo.loadboard.android.utils.MqttBroker: com.lozzo.loadboard.android.utils.MqttBroker mInstance>
<com.lozzo.loadboard.android.utils.MqttBroker: void disconnect()> --> $r1 = <com.lozzo.loadboard.android.utils.MqttBroker: java.lang.String TAG>
<com.lozzo.loadboard.android.utils.MqttBroker: void disconnect()> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, "Disconnected")
--------------------------------------------------------

<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = virtualinvoke $r1.<android.location.Location: long getTime()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> $z0 = virtualinvoke r0.<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)>($r1, $r2)
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> if $z0 == 0 goto return
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> $r0 := @parameter0: android.location.Location
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> $r4 = staticinvoke <com.lozzo.loadboard.android.utils.MqttBroker: com.lozzo.loadboard.android.utils.MqttBroker newInstance()>()
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> r1 := @caughtexception
<com.lozzo.loadboard.android.utils.MqttBroker: void handleException(java.lang.Exception)> --> $r0 := @parameter0: java.lang.Exception
<com.lozzo.loadboard.android.utils.MqttBroker: void retryConnect()> --> $r1 = <com.lozzo.loadboard.android.utils.MqttBroker: java.lang.String TAG>
<com.lozzo.loadboard.android.utils.MqttBroker: void retryConnect()> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r3)
--------------------------------------------------------

<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = virtualinvoke $r1.<android.location.Location: long getTime()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> $z0 = virtualinvoke r0.<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)>($r1, $r2)
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> if $z0 == 0 goto return
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> $r0 := @parameter0: android.location.Location
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r2, "Internet isn\'t connected")
--------------------------------------------------------

<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = virtualinvoke $r1.<android.location.Location: long getTime()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> $z0 = virtualinvoke r0.<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)>($r1, $r2)
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> if $z0 == 0 goto return
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> $r0 := @parameter0: android.location.Location
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> $r4 = staticinvoke <com.lozzo.loadboard.android.utils.MqttBroker: com.lozzo.loadboard.android.utils.MqttBroker newInstance()>()
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> r1 := @caughtexception
<com.lozzo.loadboard.android.utils.MqttBroker: void handleException(java.lang.Exception)> --> $r0 := @parameter0: java.lang.Exception
<com.lozzo.loadboard.android.utils.MqttBroker: void retryConnect()> --> $r1 = <com.lozzo.loadboard.android.utils.MqttBroker: java.lang.String TAG>
<com.lozzo.loadboard.android.utils.MqttBroker: void retryConnect()> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r3)
--------------------------------------------------------

<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $d1 = virtualinvoke $r3.<android.location.Location: double getLatitude()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = virtualinvoke $r1.<android.location.Location: long getTime()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> $z0 = virtualinvoke r0.<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)>($r1, $r2)
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> if $z0 == 0 goto return
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> $r0 := @parameter0: android.location.Location
<com.lozzo.loadboard.android.utils.MqttBroker: com.lozzo.loadboard.android.utils.MqttBroker newInstance()> --> $r0 = <com.lozzo.loadboard.android.utils.MqttBroker: com.lozzo.loadboard.android.utils.MqttBroker mInstance>
<com.lozzo.loadboard.android.utils.MqttBroker: void disconnect()> --> $r1 = <com.lozzo.loadboard.android.utils.MqttBroker: java.lang.String TAG>
<com.lozzo.loadboard.android.utils.MqttBroker: void disconnect()> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, "Disconnected")
--------------------------------------------------------

<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = virtualinvoke $r1.<android.location.Location: long getTime()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> $z0 = virtualinvoke r0.<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)>($r1, $r2)
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> if $z0 == 0 goto return
<com.lozzo.loadboard.android.data.AppPreferences: void setFirstLaunchAfterLogin(boolean)> --> r0 := @this: com.lozzo.loadboard.android.data.AppPreferences
<com.lozzo.loadboard.android.data.AppPreferences: void setFirstLaunchAfterLogin(boolean)> --> interfaceinvoke $r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("first.launch.after.login", 0)
--------------------------------------------------------

<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $d1 = virtualinvoke $r3.<android.location.Location: double getLatitude()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> $b0 = $d0 cmpl $d1
<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)> --> if $b0 != 0 goto $l1 = virtualinvoke $r1.<android.location.Location: long getTime()>()
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> $z0 = virtualinvoke r0.<com.lozzo.loadboard.android.receiver.LocationReceiver: boolean isLocationBetter(android.location.Location,android.location.Location)>($r1, $r2)
<com.lozzo.loadboard.android.receiver.LocationReceiver: void locationChanged(android.location.Location)> --> if $z0 == 0 goto return
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> $r0 := @parameter0: android.location.Location
<com.lozzo.loadboard.android.utils.MqttBroker: void publish(android.location.Location,int)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r2, "Internet isn\'t connected")
--------------------------------------------------------

<com.lozzo.loadboard.android.utils.CurrentLocationTracker$GetLastLocation: void run()> --> $r6 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.lozzo.loadboard.android.utils.CurrentLocationTracker$GetLastLocation: void run()> --> r7 := @caughtexception
<com.lozzo.loadboard.android.utils.CurrentLocationTracker$GetLastLocation: void gotLocation(android.location.Location)> --> r0 := @this: com.lozzo.loadboard.android.utils.CurrentLocationTracker$GetLastLocation
<com.lozzo.loadboard.android.utils.CurrentLocationTracker: void access$500(com.lozzo.loadboard.android.utils.CurrentLocationTracker,android.location.Location)> --> $r0 := @parameter0: com.lozzo.loadboard.android.utils.CurrentLocationTracker
<com.lozzo.loadboard.android.utils.CurrentLocationTracker: void postLocation(android.location.Location)> --> r0 := @this: com.lozzo.loadboard.android.utils.CurrentLocationTracker
<com.lozzo.loadboard.android.data.AppPreferences: void setLatitude(java.lang.Double)> --> r0 := @this: com.lozzo.loadboard.android.data.AppPreferences
<com.lozzo.loadboard.android.data.AppPreferences: void setLatitude(java.lang.Double)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("latitude", $r4)
--------------------------------------------------------

