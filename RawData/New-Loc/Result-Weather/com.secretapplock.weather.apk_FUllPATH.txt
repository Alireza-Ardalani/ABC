<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("We got location, no need to ask for location updates.")
<com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r0)
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1: void run()> --> r0 := @this: com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1
<com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignalRestClient: void postSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient$4: void run()> --> r0 := @this: com.onesignal.OneSignalRestClient$4
<com.onesignal.OneSignalRestClient: java.lang.Thread access$100(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r15 = virtualinvoke $r11.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1: void run()> --> r0 := @this: com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1
<com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignalRestClient: void postSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.onesignal.OneSignalRestClient$5: void run()> --> r0 := @this: com.onesignal.OneSignalRestClient$5
<com.onesignal.TrackGooglePurchase$3: void onSuccess(java.lang.String)> --> r0 := @this: com.onesignal.TrackGooglePurchase$3
<com.onesignal.TrackGooglePurchase$3: void onSuccess(java.lang.String)> --> interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("purchaseTokens", $r1)
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1: void run()> --> r0 := @this: com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1
<com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignalRestClient: void postSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.onesignal.TrackGooglePurchase$2: void run()> --> r0 := @this: com.onesignal.TrackGooglePurchase$2
<com.onesignal.TrackGooglePurchase$2: void run()> --> interfaceinvoke $r18.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("ExistingPurchases", 0)
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1: void run()> --> r0 := @this: com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1
<com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignalRestClient: void postSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient$4: void run()> --> r0 := @this: com.onesignal.OneSignalRestClient$4
<com.onesignal.OneSignalRestClient: java.lang.Thread access$100(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> virtualinvoke $r14.<java.io.OutputStream: void write(byte[])>($r13)
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.ActivityLifecycleHandler$AppFocusRunnable: void run()> --> r0 := @this: com.onesignal.ActivityLifecycleHandler$AppFocusRunnable
<com.onesignal.OneSignal: boolean onAppLostFocus(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignal: void SaveUnsentActiveTime(long)> --> $l0 := @parameter0: long
<com.onesignal.OneSignal: void SaveUnsentActiveTime(long)> --> interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("GT_UNSENT_ACTIVE_TIME", $l0)
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1: void run()> --> r0 := @this: com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1
<com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignalRestClient: void postSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient$4: void run()> --> r0 := @this: com.onesignal.OneSignalRestClient$4
<com.onesignal.OneSignalRestClient: java.lang.Thread access$100(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> virtualinvoke $r11.<java.net.HttpURLConnection: void setDoInput(boolean)>(1)
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1: void run()> --> r0 := @this: com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1
<com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignalRestClient: void postSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient$4: void run()> --> r0 := @this: com.onesignal.OneSignalRestClient$4
<com.onesignal.OneSignalRestClient: java.lang.Thread access$100(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> virtualinvoke $r11.<java.net.HttpURLConnection: void setDoInput(boolean)>(1)
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.ActivityLifecycleHandler$AppFocusRunnable: void run()> --> r0 := @this: com.onesignal.ActivityLifecycleHandler$AppFocusRunnable
<com.onesignal.OneSignal: boolean onAppLostFocus(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignal: void Log(com.onesignal.OneSignal$LOG_LEVEL,java.lang.String)> --> $r0 := @parameter0: com.onesignal.OneSignal$LOG_LEVEL
<com.onesignal.OneSignal: void Log(com.onesignal.OneSignal$LOG_LEVEL,java.lang.String,java.lang.Throwable)> --> $r0 := @parameter0: com.onesignal.OneSignal$LOG_LEVEL
<com.onesignal.OneSignal: void Log(com.onesignal.OneSignal$LOG_LEVEL,java.lang.String,java.lang.Throwable)> --> $r8 = new java.lang.StringBuilder
<com.onesignal.OneSignal: void Log(com.onesignal.OneSignal$LOG_LEVEL,java.lang.String,java.lang.Throwable)> --> r5 := @caughtexception
<com.onesignal.OneSignal: void Log(com.onesignal.OneSignal$LOG_LEVEL,java.lang.String,java.lang.Throwable)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("OneSignal", "Error showing logging message.", r5)
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.ActivityLifecycleHandler$AppFocusRunnable: void run()> --> r0 := @this: com.onesignal.ActivityLifecycleHandler$AppFocusRunnable
<com.onesignal.OneSignal: boolean onAppLostFocus(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignal: void Log(com.onesignal.OneSignal$LOG_LEVEL,java.lang.String)> --> $r0 := @parameter0: com.onesignal.OneSignal$LOG_LEVEL
<com.onesignal.OneSignal: void Log(com.onesignal.OneSignal$LOG_LEVEL,java.lang.String,java.lang.Throwable)> --> $r0 := @parameter0: com.onesignal.OneSignal$LOG_LEVEL
<com.onesignal.OneSignal: void Log(com.onesignal.OneSignal$LOG_LEVEL,java.lang.String,java.lang.Throwable)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("OneSignal", $r1, $r2)
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1: void run()> --> r0 := @this: com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1
<com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignalRestClient: void postSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient$4: void run()> --> r0 := @this: com.onesignal.OneSignalRestClient$4
<com.onesignal.OneSignalRestClient: java.lang.Thread access$100(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> specialinvoke $r23.<java.net.URL: void <init>(java.lang.String)>($r9)
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1: void run()> --> r0 := @this: com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1
<com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignalRestClient: void postSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient$4: void run()> --> r0 := @this: com.onesignal.OneSignalRestClient$4
<com.onesignal.OneSignalRestClient: java.lang.Thread access$100(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> virtualinvoke $r11.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r1)
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.ActivityLifecycleHandler$AppFocusRunnable: void run()> --> r0 := @this: com.onesignal.ActivityLifecycleHandler$AppFocusRunnable
<com.onesignal.OneSignal: boolean onAppLostFocus(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignal: void Log(com.onesignal.OneSignal$LOG_LEVEL,java.lang.String)> --> $r0 := @parameter0: com.onesignal.OneSignal$LOG_LEVEL
<com.onesignal.OneSignal: void Log(com.onesignal.OneSignal$LOG_LEVEL,java.lang.String,java.lang.Throwable)> --> $r0 := @parameter0: com.onesignal.OneSignal$LOG_LEVEL
<com.onesignal.OneSignal: void Log(com.onesignal.OneSignal$LOG_LEVEL,java.lang.String,java.lang.Throwable)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("OneSignal", $r1, $r2)
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.ActivityLifecycleHandler$AppFocusRunnable: void run()> --> r0 := @this: com.onesignal.ActivityLifecycleHandler$AppFocusRunnable
<com.onesignal.OneSignal: boolean onAppLostFocus(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignal: void Log(com.onesignal.OneSignal$LOG_LEVEL,java.lang.String)> --> $r0 := @parameter0: com.onesignal.OneSignal$LOG_LEVEL
<com.onesignal.OneSignal: void Log(com.onesignal.OneSignal$LOG_LEVEL,java.lang.String,java.lang.Throwable)> --> $r0 := @parameter0: com.onesignal.OneSignal$LOG_LEVEL
<com.onesignal.OneSignal: void Log(com.onesignal.OneSignal$LOG_LEVEL,java.lang.String,java.lang.Throwable)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("OneSignal", $r1, $r2)
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1: void run()> --> r0 := @this: com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1
<com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignalRestClient: void postSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient$4: void run()> --> r0 := @this: com.onesignal.OneSignalRestClient$4
<com.onesignal.OneSignalRestClient: java.lang.Thread access$100(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> virtualinvoke $r11.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1: void run()> --> r0 := @this: com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1
<com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignalRestClient: void postSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient$4: void run()> --> r0 := @this: com.onesignal.OneSignalRestClient$4
<com.onesignal.OneSignalRestClient: java.lang.Thread access$100(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r15 = virtualinvoke $r11.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1: void run()> --> r0 := @this: com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1
<com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignalStateSynchronizer$UserState: void access$100(com.onesignal.OneSignalStateSynchronizer$UserState)> --> $r0 := @parameter0: com.onesignal.OneSignalStateSynchronizer$UserState
<com.onesignal.OneSignalStateSynchronizer$UserState: void persistState()> --> r0 := @this: com.onesignal.OneSignalStateSynchronizer$UserState
<com.onesignal.OneSignalStateSynchronizer$UserState: void persistState()> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r6, $r8)
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.ActivityLifecycleHandler$AppFocusRunnable: void run()> --> r0 := @this: com.onesignal.ActivityLifecycleHandler$AppFocusRunnable
<com.onesignal.OneSignal: boolean onAppLostFocus(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignal: void Log(com.onesignal.OneSignal$LOG_LEVEL,java.lang.String)> --> $r0 := @parameter0: com.onesignal.OneSignal$LOG_LEVEL
<com.onesignal.OneSignal: void Log(com.onesignal.OneSignal$LOG_LEVEL,java.lang.String,java.lang.Throwable)> --> $r0 := @parameter0: com.onesignal.OneSignal$LOG_LEVEL
<com.onesignal.OneSignal: void Log(com.onesignal.OneSignal$LOG_LEVEL,java.lang.String,java.lang.Throwable)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("OneSignal", $r1, $r2)
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1: void run()> --> r0 := @this: com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1
<com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignalRestClient: void postSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient$4: void run()> --> r0 := @this: com.onesignal.OneSignalRestClient$4
<com.onesignal.OneSignalRestClient: java.lang.Thread access$100(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r14 = virtualinvoke $r11.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.ActivityLifecycleHandler$AppFocusRunnable: void run()> --> r0 := @this: com.onesignal.ActivityLifecycleHandler$AppFocusRunnable
<com.onesignal.OneSignal: boolean onAppLostFocus(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignal: void Log(com.onesignal.OneSignal$LOG_LEVEL,java.lang.String)> --> $r0 := @parameter0: com.onesignal.OneSignal$LOG_LEVEL
<com.onesignal.OneSignal: void Log(com.onesignal.OneSignal$LOG_LEVEL,java.lang.String,java.lang.Throwable)> --> $r0 := @parameter0: com.onesignal.OneSignal$LOG_LEVEL
<com.onesignal.OneSignal: void Log(com.onesignal.OneSignal$LOG_LEVEL,java.lang.String,java.lang.Throwable)> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("OneSignal", $r1, $r2)
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1: void run()> --> r0 := @this: com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1
<com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignalRestClient: void postSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient$4: void run()> --> r0 := @this: com.onesignal.OneSignalRestClient$4
<com.onesignal.OneSignalRestClient: java.lang.Thread access$100(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> virtualinvoke $r14.<java.io.OutputStream: void write(byte[])>($r13)
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1: void run()> --> r0 := @this: com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1
<com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignalRestClient: void postSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient$4: void run()> --> r0 := @this: com.onesignal.OneSignalRestClient$4
<com.onesignal.OneSignalRestClient: java.lang.Thread access$100(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> virtualinvoke $r11.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.ActivityLifecycleHandler$AppFocusRunnable: void run()> --> r0 := @this: com.onesignal.ActivityLifecycleHandler$AppFocusRunnable
<com.onesignal.OneSignal: boolean onAppLostFocus(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignal$LOG_LEVEL: void <clinit>()> --> nop
<com.onesignal.OneSignal$LOG_LEVEL: void <clinit>()> --> <com.onesignal.OneSignal$LOG_LEVEL: com.onesignal.OneSignal$LOG_LEVEL INFO> = $r0
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r7 = <com.onesignal.OneSignal$LOG_LEVEL: com.onesignal.OneSignal$LOG_LEVEL INFO>
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r21 := @caughtexception
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> virtualinvoke r5.<java.net.HttpURLConnection: void disconnect()>()
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1: void run()> --> r0 := @this: com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1
<com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignalRestClient: void postSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient$4: void run()> --> r0 := @this: com.onesignal.OneSignalRestClient$4
<com.onesignal.OneSignalRestClient: java.lang.Thread access$100(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r15 = virtualinvoke $r11.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.ActivityLifecycleHandler$AppFocusRunnable: void run()> --> r0 := @this: com.onesignal.ActivityLifecycleHandler$AppFocusRunnable
<com.onesignal.OneSignal: boolean onAppLostFocus(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignal$LOG_LEVEL: void <clinit>()> --> nop
<com.onesignal.OneSignal$LOG_LEVEL: void <clinit>()> --> <com.onesignal.OneSignal$LOG_LEVEL: com.onesignal.OneSignal$LOG_LEVEL DEBUG> = $r0
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r7 = <com.onesignal.OneSignal$LOG_LEVEL: com.onesignal.OneSignal$LOG_LEVEL DEBUG>
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> r4 := @caughtexception
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> virtualinvoke r5.<java.net.HttpURLConnection: void disconnect()>()
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.ActivityLifecycleHandler$AppFocusRunnable: void run()> --> r0 := @this: com.onesignal.ActivityLifecycleHandler$AppFocusRunnable
<com.onesignal.OneSignal: boolean onAppLostFocus(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignal$LOG_LEVEL: void <clinit>()> --> nop
<com.onesignal.OneSignal$LOG_LEVEL: void <clinit>()> --> <com.onesignal.OneSignal$LOG_LEVEL: com.onesignal.OneSignal$LOG_LEVEL DEBUG> = $r0
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r7 = <com.onesignal.OneSignal$LOG_LEVEL: com.onesignal.OneSignal$LOG_LEVEL DEBUG>
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> r4 := @caughtexception
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> virtualinvoke r5.<java.net.HttpURLConnection: void disconnect()>()
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.ActivityLifecycleHandler$AppFocusRunnable: void run()> --> r0 := @this: com.onesignal.ActivityLifecycleHandler$AppFocusRunnable
<com.onesignal.OneSignal: boolean onAppLostFocus(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignal: void setLastSessionTime(long)> --> $l0 := @parameter0: long
<com.onesignal.OneSignal: void setLastSessionTime(long)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("OS_LAST_SESSION_TIME", $l0)
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1: void run()> --> r0 := @this: com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1
<com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignalRestClient: void postSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient$4: void run()> --> r0 := @this: com.onesignal.OneSignalRestClient$4
<com.onesignal.OneSignalRestClient: java.lang.Thread access$100(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $i0 = virtualinvoke $r11.<java.net.HttpURLConnection: int getResponseCode()>()
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.ActivityLifecycleHandler$AppFocusRunnable: void run()> --> r0 := @this: com.onesignal.ActivityLifecycleHandler$AppFocusRunnable
<com.onesignal.OneSignal: boolean onAppLostFocus(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignal$LOG_LEVEL: void <clinit>()> --> nop
<com.onesignal.OneSignal$LOG_LEVEL: void <clinit>()> --> <com.onesignal.OneSignal$LOG_LEVEL: com.onesignal.OneSignal$LOG_LEVEL INFO> = $r0
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r7 = <com.onesignal.OneSignal$LOG_LEVEL: com.onesignal.OneSignal$LOG_LEVEL INFO>
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r21 := @caughtexception
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> virtualinvoke r5.<java.net.HttpURLConnection: void disconnect()>()
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1: void run()> --> r0 := @this: com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1
<com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignalRestClient: void postSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.onesignal.TrackGooglePurchase$2: void run()> --> r0 := @this: com.onesignal.TrackGooglePurchase$2
<com.onesignal.TrackGooglePurchase: void access$1000(com.onesignal.TrackGooglePurchase,java.util.ArrayList,java.util.ArrayList)> --> $r0 := @parameter0: com.onesignal.TrackGooglePurchase
<com.onesignal.TrackGooglePurchase: void sendPurchases(java.util.ArrayList,java.util.ArrayList)> --> r0 := @this: com.onesignal.TrackGooglePurchase
<com.onesignal.TrackGooglePurchase: void sendPurchases(java.util.ArrayList,java.util.ArrayList)> --> virtualinvoke r7.<android.os.Bundle: void putStringArrayList(java.lang.String,java.util.ArrayList)>("ITEM_ID_LIST", r1)
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1: void run()> --> r0 := @this: com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1
<com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignalRestClient: void postSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient$4: void run()> --> r0 := @this: com.onesignal.OneSignalRestClient$4
<com.onesignal.OneSignalRestClient: java.lang.Thread access$100(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r14 = virtualinvoke $r11.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1: void run()> --> r0 := @this: com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1
<com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignalRestClient: void postSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient$4: void run()> --> r0 := @this: com.onesignal.OneSignalRestClient$4
<com.onesignal.OneSignalRestClient: java.lang.Thread access$100(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r10 = virtualinvoke $r23.<java.net.URL: java.net.URLConnection openConnection()>()
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1: void run()> --> r0 := @this: com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1
<com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignalStateSynchronizer$UserState: void access$100(com.onesignal.OneSignalStateSynchronizer$UserState)> --> $r0 := @parameter0: com.onesignal.OneSignalStateSynchronizer$UserState
<com.onesignal.OneSignalStateSynchronizer$UserState: void persistState()> --> r0 := @this: com.onesignal.OneSignalStateSynchronizer$UserState
<com.onesignal.OneSignalStateSynchronizer$UserState: void persistState()> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r6, $r8)
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1: void run()> --> r0 := @this: com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1
<com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignalRestClient: void postSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient$4: void run()> --> r0 := @this: com.onesignal.OneSignalRestClient$4
<com.onesignal.OneSignalRestClient: java.lang.Thread access$100(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: java.lang.Thread startHTTPConnection(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r15 = virtualinvoke $r11.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
--------------------------------------------------------

<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)> --> $r2 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $r3 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: android.location.Location getLastKnownLocation(java.lang.String)>($r2)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)> --> if $r1 != null goto $f1 = virtualinvoke $r1.<android.location.Location: float getAccuracy()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> $z0 = virtualinvoke $r1.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource: boolean isLocationSufficient(android.location.Location,long,float)>($r3, $l0, $f0)
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()> --> if $z0 == 0 goto staticinvoke <com.yayandroid.locationmanager.helper.LogUtils: void logI(java.lang.String)>("LastKnowLocation is not usable.")
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = virtualinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: boolean checkForLastKnowLocation()>()
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> if $z0 != 0 goto $z0 = 0
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void askForLocation(java.lang.String)> --> $z0 = 1
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> r0 := @this: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider
<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: void requestUpdateLocation(long,long,boolean)> --> if $z0 == 0 goto $r2 = specialinvoke r0.<com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider: com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationSource getSourceProvider()>()
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void delayed(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler: void set(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTaskScheduler
<com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask: void schedule(long)> --> r0 := @this: com.yayandroid.locationmanager.helper.continuoustask.ContinuousTask
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1: void run()> --> r0 := @this: com.onesignal.OneSignalStateSynchronizer$NetworkHandlerThread$1
<com.onesignal.OneSignalStateSynchronizer: void syncUserState(boolean)> --> $z0 := @parameter0: boolean
<com.onesignal.OneSignalRestClient: void postSync(java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignalRestClient: void makeRequest(java.lang.String,java.lang.String,org.json.JSONObject,com.onesignal.OneSignalRestClient$ResponseHandler,int)> --> $r0 := @parameter0: java.lang.String
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.onesignal.OneSignalRestClient$5: void run()> --> r0 := @this: com.onesignal.OneSignalRestClient$5
<com.onesignal.OneSignalStateSynchronizer$4: void onSuccess(java.lang.String)> --> r0 := @this: com.onesignal.OneSignalStateSynchronizer$4
<com.onesignal.OneSignal: void updateUserIdDependents(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignal: void saveUserId(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.onesignal.OneSignal: void saveUserId(java.lang.String)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("GT_PLAYER_ID", $r0)
--------------------------------------------------------

