<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void <clinit>()> --> nop
<dd.watchmaster.login.LoginManager: void <init>()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.common.mobile.a: void register(java.lang.Object)> --> r0 := @this: dd.watchmaster.common.mobile.a
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.samsung.android.sdk.accessoryfiletransfer.a$4: void run()> --> r0 := @this: com.samsung.android.sdk.accessoryfiletransfer.a$4
<com.samsung.android.sdk.accessoryfiletransfer.d: com.samsung.android.sdk.accessoryfiletransfer.d a(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.samsung.android.sdk.accessoryfiletransfer.d: com.samsung.android.sdk.accessoryfiletransfer.d a(android.content.Context,java.lang.String)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("[SA_SDK]SAFileTransferManager", "getInstance: Woken up , FTService Connected")
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r6 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.billing.c$2: void run()> --> r0 := @this: dd.watchmaster.billing.c$2
<dd.watchmaster.billing.c$2$1: void <init>(dd.watchmaster.billing.c$2)> --> r0 := @this: dd.watchmaster.billing.c$2$1
<dd.watchmaster.billing.c$2$1: void <init>(dd.watchmaster.billing.c$2)> --> r0.<dd.watchmaster.billing.c$2$1: dd.watchmaster.billing.c$2 a> = $r1
<dd.watchmaster.billing.c$2: void run()> --> specialinvoke $r1.<dd.watchmaster.billing.c$2$1: void <init>(dd.watchmaster.billing.c$2)>(r0)
<com.android.billingclient.api.c: void a(com.android.billingclient.api.d)> --> r0 := @this: com.android.billingclient.api.c
<dd.watchmaster.billing.c$2$1: void a(int)> --> r0 := @this: dd.watchmaster.billing.c$2$1
<dd.watchmaster.billing.c$2$1: void a(int)> --> $r4 = r0.<dd.watchmaster.billing.c$2$1: dd.watchmaster.billing.c$2 a>
<dd.watchmaster.billing.c$2$1: void a(int)> --> $r6 = $r4.<dd.watchmaster.billing.c$2: java.lang.Runnable a>
<dd.watchmaster.billing.c$7: void run()> --> r0 := @this: dd.watchmaster.billing.c$7
<dd.watchmaster.billing.c$7: void run()> --> $r1 = r0.<dd.watchmaster.billing.c$7: dd.watchmaster.billing.c c>
<dd.watchmaster.billing.c: void a(dd.watchmaster.billing.c,dd.watchmaster.billing.BillingFactory$b,int)> --> $r0 := @parameter0: dd.watchmaster.billing.c
<dd.watchmaster.billing.c: void a(dd.watchmaster.billing.BillingFactory$b,int)> --> r0 := @this: dd.watchmaster.billing.c
<dd.watchmaster.billing.c: void a(dd.watchmaster.billing.BillingFactory$b,int)> --> $r2 = r0.<dd.watchmaster.billing.c: com.android.billingclient.api.b a>
<dd.watchmaster.billing.c: void a(dd.watchmaster.billing.BillingFactory$b,int)> --> $r12 := @caughtexception
<dd.watchmaster.billing.c$6$1: void a(dd.watchmaster.billing.BillingFactory$BillingException)> --> r0 := @this: dd.watchmaster.billing.c$6$1
<dd.watchmaster.billing.d$3: void a(dd.watchmaster.billing.BillingFactory$BillingException)> --> r0 := @this: dd.watchmaster.billing.d$3
<dd.watchmaster.billing.b: void c(dd.watchmaster.billing.BillingFactory$a)> --> r0 := @this: dd.watchmaster.billing.b
<dd.watchmaster.billing.b: void d(dd.watchmaster.billing.BillingFactory$a)> --> r0 := @this: dd.watchmaster.billing.b
<dd.watchmaster.common.util.WmLogger: void w(dd.watchmaster.common.util.WmLogger$TAG,java.lang.String)> --> $r2 := @parameter0: dd.watchmaster.common.util.WmLogger$TAG
<dd.watchmaster.common.util.WmLogger: void w(dd.watchmaster.common.util.WmLogger$TAG,java.lang.String)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r4, $r0)
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r6 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void c()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.login.LoginFacebookImpl: void a()> --> r0 := @this: dd.watchmaster.login.LoginFacebookImpl
<dd.watchmaster.login.LoginBaseImpl: void g()> --> r0 := @this: dd.watchmaster.login.LoginBaseImpl
<dd.watchmaster.common.mobile.a: void post(java.lang.Object)> --> r0 := @this: dd.watchmaster.common.mobile.a
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.samsung.android.sdk.accessoryfiletransfer.a$3: void run()> --> r0 := @this: com.samsung.android.sdk.accessoryfiletransfer.a$3
<com.samsung.android.sdk.accessoryfiletransfer.a$3: void run()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("[SA_SDK]SAFileTransfer", $r6)
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void <clinit>()> --> nop
<dd.watchmaster.login.LoginManager: void <init>()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.common.mobile.a: void register(java.lang.Object)> --> r0 := @this: dd.watchmaster.common.mobile.a
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.AccessTokenManager$1: void run()> --> r0 := @this: com.facebook.AccessTokenManager$1
<com.facebook.AccessTokenManager: void access$000(com.facebook.AccessTokenManager,com.facebook.AccessToken$AccessTokenRefreshCallback)> --> $r0 := @parameter0: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: void refreshCurrentAccessTokenImpl(com.facebook.AccessToken$AccessTokenRefreshCallback)> --> r0 := @this: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: com.facebook.GraphRequest createExtendAccessTokenRequest(com.facebook.AccessToken,com.facebook.GraphRequest$Callback)> --> $r0 := @parameter0: com.facebook.AccessToken
<com.facebook.AccessTokenManager: com.facebook.GraphRequest createExtendAccessTokenRequest(com.facebook.AccessToken,com.facebook.GraphRequest$Callback)> --> virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("grant_type", "fb_extend_sso_token")
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $d0 = virtualinvoke $r7.<android.location.Location: double getLongitude()>()
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $b0 = $d0 cmpl 0.0
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $b0 == 0 goto $r8 = new dd.watchmaster.common.mobile.weather.WeatherManager$WeatherException
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(double,double)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.common.mobile.weather.WeatherManager: void a(dd.watchmaster.common.mobile.weather.WeatherManager,android.content.Context,double,double,com.survivingwithandroid.weather.lib.b$e)> --> $r0 := @parameter0: dd.watchmaster.common.mobile.weather.WeatherManager
<dd.watchmaster.common.mobile.weather.WeatherManager: void a(android.content.Context,double,double,com.survivingwithandroid.weather.lib.b$e)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager
<dd.watchmaster.common.util.WmLogger: void i(dd.watchmaster.common.util.WmLogger$TAG,java.lang.String)> --> $r2 := @parameter0: dd.watchmaster.common.util.WmLogger$TAG
<dd.watchmaster.common.util.WmLogger: void i(dd.watchmaster.common.util.WmLogger$TAG,java.lang.String)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r4, $r0)
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r6 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void c()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.login.LoginFacebookImpl: void a()> --> r0 := @this: dd.watchmaster.login.LoginFacebookImpl
<dd.watchmaster.login.LoginBaseImpl: void g()> --> r0 := @this: dd.watchmaster.login.LoginBaseImpl
<dd.watchmaster.common.mobile.a: void post(java.lang.Object)> --> r0 := @this: dd.watchmaster.common.mobile.a
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.samsung.android.sdk.accessoryfiletransfer.a$2: void run()> --> r0 := @this: com.samsung.android.sdk.accessoryfiletransfer.a$2
<com.samsung.android.sdk.accessoryfiletransfer.d: int a(android.content.Context,java.lang.String,com.samsung.android.sdk.accessoryfiletransfer.a$d,com.samsung.android.sdk.accessory.SAPeerAgent,java.lang.String,java.lang.String)> --> r0 := @this: com.samsung.android.sdk.accessoryfiletransfer.d
<com.samsung.android.sdk.accessoryfiletransfer.d: int a(android.content.Context,java.lang.String,com.samsung.android.sdk.accessoryfiletransfer.a$d,com.samsung.android.sdk.accessory.SAPeerAgent,java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("[SA_SDK]SAFileTransferManager", "Agent id was not found in prefs! Fetching from framework..")
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void <clinit>()> --> nop
<dd.watchmaster.login.LoginManager: void <init>()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.common.mobile.a: void register(java.lang.Object)> --> r0 := @this: dd.watchmaster.common.mobile.a
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.samsung.android.sdk.accessoryfiletransfer.a$2: void run()> --> r0 := @this: com.samsung.android.sdk.accessoryfiletransfer.a$2
<com.samsung.android.sdk.accessoryfiletransfer.d: int a(android.content.Context,java.lang.String,com.samsung.android.sdk.accessoryfiletransfer.a$d,com.samsung.android.sdk.accessory.SAPeerAgent,java.lang.String,java.lang.String)> --> r0 := @this: com.samsung.android.sdk.accessoryfiletransfer.d
<com.samsung.android.sdk.accessoryfiletransfer.d: int a(android.content.Context,java.lang.String,com.samsung.android.sdk.accessoryfiletransfer.a$d,com.samsung.android.sdk.accessory.SAPeerAgent,java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("[SA_SDK]SAFileTransferManager", "Agent id was not found in prefs! Fetching from framework..")
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r6 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void c()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.login.LoginFacebookImpl: void a()> --> r0 := @this: dd.watchmaster.login.LoginFacebookImpl
<dd.watchmaster.login.LoginBaseImpl: void g()> --> r0 := @this: dd.watchmaster.login.LoginBaseImpl
<dd.watchmaster.common.mobile.a: void post(java.lang.Object)> --> r0 := @this: dd.watchmaster.common.mobile.a
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.samsung.android.sdk.accessoryfiletransfer.a$2: void run()> --> r0 := @this: com.samsung.android.sdk.accessoryfiletransfer.a$2
<com.samsung.android.sdk.accessoryfiletransfer.a$2: void run()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("[SA_SDK]SAFileTransfer", $r3)
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r6 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void c()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.login.LoginFacebookImpl: void a()> --> r0 := @this: dd.watchmaster.login.LoginFacebookImpl
<dd.watchmaster.login.LoginBaseImpl: void g()> --> r0 := @this: dd.watchmaster.login.LoginBaseImpl
<dd.watchmaster.common.mobile.a: void post(java.lang.Object)> --> r0 := @this: dd.watchmaster.common.mobile.a
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.samsung.android.sdk.accessoryfiletransfer.a$3: void run()> --> r0 := @this: com.samsung.android.sdk.accessoryfiletransfer.a$3
<com.samsung.android.sdk.accessoryfiletransfer.d: com.samsung.android.sdk.accessoryfiletransfer.d a(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.samsung.android.sdk.accessoryfiletransfer.d: com.samsung.android.sdk.accessoryfiletransfer.d a(android.content.Context,java.lang.String)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("[SA_SDK]SAFileTransferManager", "SAFTAdapter: About start waiting")
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r6 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.service.a$5$1: void run()> --> r0 := @this: dd.watchmaster.service.a$5$1
<dd.watchmaster.service.a: void a(dd.watchmaster.service.a,java.lang.String,int)> --> $r0 := @parameter0: dd.watchmaster.service.a
<dd.watchmaster.service.a: void a(java.lang.String,int)> --> r0 := @this: dd.watchmaster.service.a
<dd.watchmaster.common.mobile.weather.WeatherManager: void b(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$b)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager
<dd.watchmaster.common.mobile.weather.WeatherManager: void a(android.content.Context)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager
<dd.watchmaster.common.mobile.weather.WeatherManager: com.survivingwithandroid.weather.lib.b a(android.content.Context,boolean)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager
<com.survivingwithandroid.weather.lib.b$b: com.survivingwithandroid.weather.lib.b a()> --> r0 := @this: com.survivingwithandroid.weather.lib.b$b
<com.survivingwithandroid.weather.lib.b$b: com.survivingwithandroid.weather.lib.b a()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SwA", $r8)
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 == null goto $r8 = new dd.watchmaster.common.mobile.weather.WeatherManager$WeatherException
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.billing.c$2: void run()> --> r0 := @this: dd.watchmaster.billing.c$2
<com.android.billingclient.api.c: void a(com.android.billingclient.api.d)> --> r0 := @this: com.android.billingclient.api.c
<dd.watchmaster.billing.c$2$1: void a(int)> --> r0 := @this: dd.watchmaster.billing.c$2$1
<dd.watchmaster.billing.c$1: void run()> --> r0 := @this: dd.watchmaster.billing.c$1
<dd.watchmaster.billing.c: void a(dd.watchmaster.billing.c,com.google.android.gms.analytics.Tracker,java.lang.String,dd.watchmaster.billing.BillingFactory$a)> --> $r0 := @parameter0: dd.watchmaster.billing.c
<dd.watchmaster.billing.c: void a(com.google.android.gms.analytics.Tracker,java.lang.String,dd.watchmaster.billing.BillingFactory$a)> --> r0 := @this: dd.watchmaster.billing.c
<dd.watchmaster.billing.c: void a(com.google.android.gms.analytics.Tracker,java.lang.String,dd.watchmaster.billing.BillingFactory$a,int)> --> r0 := @this: dd.watchmaster.billing.c
<dd.watchmaster.common.util.WmLogger: void i(dd.watchmaster.common.util.WmLogger$TAG,java.lang.String)> --> $r2 := @parameter0: dd.watchmaster.common.util.WmLogger$TAG
<dd.watchmaster.common.util.WmLogger: void i(dd.watchmaster.common.util.WmLogger$TAG,java.lang.String)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r4, $r0)
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.billing.c$2: void run()> --> r0 := @this: dd.watchmaster.billing.c$2
<dd.watchmaster.billing.c$2$1: void <init>(dd.watchmaster.billing.c$2)> --> r0 := @this: dd.watchmaster.billing.c$2$1
<dd.watchmaster.billing.c$2$1: void <init>(dd.watchmaster.billing.c$2)> --> r0.<dd.watchmaster.billing.c$2$1: dd.watchmaster.billing.c$2 a> = $r1
<dd.watchmaster.billing.c$2: void run()> --> specialinvoke $r1.<dd.watchmaster.billing.c$2$1: void <init>(dd.watchmaster.billing.c$2)>(r0)
<com.android.billingclient.api.c: void a(com.android.billingclient.api.d)> --> r0 := @this: com.android.billingclient.api.c
<dd.watchmaster.billing.c$2$1: void a(int)> --> r0 := @this: dd.watchmaster.billing.c$2$1
<dd.watchmaster.billing.c$2$1: void a(int)> --> $r4 = r0.<dd.watchmaster.billing.c$2$1: dd.watchmaster.billing.c$2 a>
<dd.watchmaster.billing.c$2$1: void a(int)> --> $r6 = $r4.<dd.watchmaster.billing.c$2: java.lang.Runnable a>
<dd.watchmaster.billing.c$7: void run()> --> r0 := @this: dd.watchmaster.billing.c$7
<dd.watchmaster.billing.c$7: void run()> --> $r1 = r0.<dd.watchmaster.billing.c$7: dd.watchmaster.billing.c c>
<dd.watchmaster.billing.c: void a(dd.watchmaster.billing.c,dd.watchmaster.billing.BillingFactory$b,int)> --> $r0 := @parameter0: dd.watchmaster.billing.c
<dd.watchmaster.billing.c: void a(dd.watchmaster.billing.BillingFactory$b,int)> --> r0 := @this: dd.watchmaster.billing.c
<dd.watchmaster.billing.c: void a(dd.watchmaster.billing.BillingFactory$b,int)> --> $r2 = r0.<dd.watchmaster.billing.c: com.android.billingclient.api.b a>
<dd.watchmaster.billing.c: void a(dd.watchmaster.billing.BillingFactory$b,int)> --> $r12 := @caughtexception
<dd.watchmaster.billing.c$6$1: void a(dd.watchmaster.billing.BillingFactory$BillingException)> --> r0 := @this: dd.watchmaster.billing.c$6$1
<dd.watchmaster.billing.d$3: void a(dd.watchmaster.billing.BillingFactory$BillingException)> --> r0 := @this: dd.watchmaster.billing.d$3
<dd.watchmaster.billing.b: void c(dd.watchmaster.billing.BillingFactory$a)> --> r0 := @this: dd.watchmaster.billing.b
<dd.watchmaster.billing.b: void d(dd.watchmaster.billing.BillingFactory$a)> --> r0 := @this: dd.watchmaster.billing.b
<dd.watchmaster.common.util.WmLogger: void w(dd.watchmaster.common.util.WmLogger$TAG,java.lang.String)> --> $r2 := @parameter0: dd.watchmaster.common.util.WmLogger$TAG
<dd.watchmaster.common.util.WmLogger: void w(dd.watchmaster.common.util.WmLogger$TAG,java.lang.String)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r4, $r0)
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r6 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void c()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.login.LoginManager: void h()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.login.LoginManager: void a(int)> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.login.LoginFacebookImpl: void <init>()> --> r0 := @this: dd.watchmaster.login.LoginFacebookImpl
<com.facebook.FacebookSdk: void sdkInitialize(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.FacebookSdk: void sdkInitialize(android.content.Context,com.facebook.FacebookSdk$InitializeCallback)> --> $r0 := @parameter0: android.content.Context
<com.facebook.internal.Validate: void hasInternetPermissions(android.content.Context,boolean)> --> $r0 := @parameter0: android.content.Context
<com.facebook.internal.Validate: void hasInternetPermissions(android.content.Context,boolean)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r1, "No internet permissions granted for the app, please add <uses-permission android:name=\"android.permission.INTERNET\" /> to your AndroidManifest.xml.")
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $d0 = virtualinvoke $r7.<android.location.Location: double getLongitude()>()
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $b0 = $d0 cmpl 0.0
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $b0 == 0 goto $r8 = new dd.watchmaster.common.mobile.weather.WeatherManager$WeatherException
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(double,double)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.common.c: void a(java.lang.Object)> --> $r1 := @parameter0: java.lang.Object
<dd.watchmaster.common.c: void a(int,java.lang.String,java.lang.String,int,int)> --> $i0 := @parameter0: int
<dd.watchmaster.common.c: void a(int,java.lang.String,java.lang.String)> --> $i0 := @parameter0: int
<dd.watchmaster.common.c: void a(int,java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r1, $r0)
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r6 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void c()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.login.LoginFacebookImpl: void a()> --> r0 := @this: dd.watchmaster.login.LoginFacebookImpl
<dd.watchmaster.login.LoginBaseImpl: void g()> --> r0 := @this: dd.watchmaster.login.LoginBaseImpl
<dd.watchmaster.common.mobile.a: void post(java.lang.Object)> --> r0 := @this: dd.watchmaster.common.mobile.a
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.samsung.android.sdk.accessoryfiletransfer.a$3: void run()> --> r0 := @this: com.samsung.android.sdk.accessoryfiletransfer.a$3
<com.samsung.android.sdk.accessoryfiletransfer.d: com.samsung.android.sdk.accessoryfiletransfer.d a(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.samsung.android.sdk.accessoryfiletransfer.d: com.samsung.android.sdk.accessoryfiletransfer.d a(android.content.Context,java.lang.String)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("[SA_SDK]SAFileTransferManager", "getInstance: Woken up , FTService Connected")
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r6 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<dd.watchmaster.common.notification.a: void a(android.content.Context,int,int)> --> $r0 := @parameter0: android.content.Context
<dd.watchmaster.common.notification.a: void a(android.content.Context,int,int)> --> $r11 = interfaceinvoke $r11.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("pref_permssion_noti_showed", 1)
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r6 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void c()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.login.LoginFacebookImpl: void a()> --> r0 := @this: dd.watchmaster.login.LoginFacebookImpl
<dd.watchmaster.login.LoginBaseImpl: void g()> --> r0 := @this: dd.watchmaster.login.LoginBaseImpl
<dd.watchmaster.common.mobile.a: void post(java.lang.Object)> --> r0 := @this: dd.watchmaster.common.mobile.a
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.samsung.android.sdk.accessoryfiletransfer.a$3: void run()> --> r0 := @this: com.samsung.android.sdk.accessoryfiletransfer.a$3
<com.samsung.android.sdk.accessoryfiletransfer.d: com.samsung.android.sdk.accessoryfiletransfer.d a(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.samsung.android.sdk.accessoryfiletransfer.d: com.samsung.android.sdk.accessoryfiletransfer.d a(android.content.Context,java.lang.String)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("[SA_SDK]SAFileTransferManager", "getInstance: FTService Connection Failed")
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r6 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void c()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.login.LoginFacebookImpl: void a()> --> r0 := @this: dd.watchmaster.login.LoginFacebookImpl
<com.facebook.login.LoginManager: void logOut()> --> r0 := @this: com.facebook.login.LoginManager
<com.facebook.login.LoginManager: void setExpressLoginStatus(boolean)> --> r0 := @this: com.facebook.login.LoginManager
<com.facebook.login.LoginManager: void setExpressLoginStatus(boolean)> --> interfaceinvoke $r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("express_login_allowed", 0)
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r6 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void c()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.login.LoginGoogleImpl: void a()> --> r0 := @this: dd.watchmaster.login.LoginGoogleImpl
<dd.watchmaster.login.LoginGoogleImpl: void a()> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("WatchMaster", "[LGI] signOut ")
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void <clinit>()> --> nop
<dd.watchmaster.login.LoginManager: void <init>()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.common.mobile.a: void register(java.lang.Object)> --> r0 := @this: dd.watchmaster.common.mobile.a
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.samsung.android.sdk.accessoryfiletransfer.a$4: void run()> --> r0 := @this: com.samsung.android.sdk.accessoryfiletransfer.a$4
<com.samsung.android.sdk.accessoryfiletransfer.d: com.samsung.android.sdk.accessoryfiletransfer.d a(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.samsung.android.sdk.accessoryfiletransfer.d: com.samsung.android.sdk.accessoryfiletransfer.d a(android.content.Context,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("[SA_SDK]SAFileTransferManager", $r1)
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void <clinit>()> --> nop
<dd.watchmaster.login.LoginManager: void <init>()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.common.mobile.a: void register(java.lang.Object)> --> r0 := @this: dd.watchmaster.common.mobile.a
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.samsung.android.sdk.accessoryfiletransfer.a$3: void run()> --> r0 := @this: com.samsung.android.sdk.accessoryfiletransfer.a$3
<com.samsung.android.sdk.accessoryfiletransfer.a$3: void run()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("[SA_SDK]SAFileTransfer", "cancelFile aborted because service connection or transaction already closed.")
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r6 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void c()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.login.LoginFacebookImpl: void a()> --> r0 := @this: dd.watchmaster.login.LoginFacebookImpl
<dd.watchmaster.login.LoginBaseImpl: void g()> --> r0 := @this: dd.watchmaster.login.LoginBaseImpl
<dd.watchmaster.common.mobile.a: void post(java.lang.Object)> --> r0 := @this: dd.watchmaster.common.mobile.a
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.samsung.android.sdk.accessoryfiletransfer.a$2: void run()> --> r0 := @this: com.samsung.android.sdk.accessoryfiletransfer.a$2
<com.samsung.android.sdk.accessoryfiletransfer.a$2: void run()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("[SA_SDK]SAFileTransfer", $r3)
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.service.a$5$1: void run()> --> r0 := @this: dd.watchmaster.service.a$5$1
<dd.watchmaster.service.a: void a(dd.watchmaster.service.a,java.lang.String,int)> --> $r0 := @parameter0: dd.watchmaster.service.a
<dd.watchmaster.service.a: void a(java.lang.String,int)> --> r0 := @this: dd.watchmaster.service.a
<dd.watchmaster.common.mobile.weather.WeatherManager: void b(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$b)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager
<dd.watchmaster.common.mobile.weather.WeatherManager: void a(android.content.Context)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager
<dd.watchmaster.common.mobile.weather.WeatherManager: com.survivingwithandroid.weather.lib.b a(android.content.Context,boolean)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager
<com.survivingwithandroid.weather.lib.b$b: com.survivingwithandroid.weather.lib.b a()> --> r0 := @this: com.survivingwithandroid.weather.lib.b$b
<com.survivingwithandroid.weather.lib.b$b: com.survivingwithandroid.weather.lib.b a()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SwA", $r8)
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void <clinit>()> --> nop
<dd.watchmaster.login.LoginManager: void <init>()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.common.mobile.a: void register(java.lang.Object)> --> r0 := @this: dd.watchmaster.common.mobile.a
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.samsung.android.sdk.accessoryfiletransfer.a$2: void run()> --> r0 := @this: com.samsung.android.sdk.accessoryfiletransfer.a$2
<com.samsung.android.sdk.accessoryfiletransfer.a$2: void run()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("[SA_SDK]SAFileTransfer", $r3)
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void <clinit>()> --> nop
<dd.watchmaster.login.LoginManager: void <init>()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.common.mobile.a: void register(java.lang.Object)> --> r0 := @this: dd.watchmaster.common.mobile.a
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.samsung.android.sdk.accessoryfiletransfer.a$4: void run()> --> r0 := @this: com.samsung.android.sdk.accessoryfiletransfer.a$4
<com.samsung.android.sdk.accessoryfiletransfer.d: com.samsung.android.sdk.accessoryfiletransfer.d a(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.samsung.android.sdk.accessoryfiletransfer.d: com.samsung.android.sdk.accessoryfiletransfer.d a(android.content.Context,java.lang.String)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("[SA_SDK]SAFileTransferManager", "SAFTAdapter: About start waiting")
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 == null goto $r8 = new dd.watchmaster.common.mobile.weather.WeatherManager$WeatherException
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(double,double)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.common.mobile.weather.WeatherManager: void a(dd.watchmaster.common.mobile.weather.WeatherManager,android.content.Context,double,double,com.survivingwithandroid.weather.lib.b$e)> --> $r0 := @parameter0: dd.watchmaster.common.mobile.weather.WeatherManager
<dd.watchmaster.common.mobile.weather.WeatherManager: void a(android.content.Context,double,double,com.survivingwithandroid.weather.lib.b$e)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager
<dd.watchmaster.common.util.WmLogger: void i(dd.watchmaster.common.util.WmLogger$TAG,java.lang.String)> --> $r2 := @parameter0: dd.watchmaster.common.util.WmLogger$TAG
<dd.watchmaster.common.util.WmLogger: void i(dd.watchmaster.common.util.WmLogger$TAG,java.lang.String)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r4, $r0)
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r6 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void c()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.login.LoginManager: void h()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.login.LoginManager: void a(int)> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.login.LoginFacebookImpl: void <init>()> --> r0 := @this: dd.watchmaster.login.LoginFacebookImpl
<com.facebook.FacebookSdk: void sdkInitialize(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.FacebookSdk: void sdkInitialize(android.content.Context,com.facebook.FacebookSdk$InitializeCallback)> --> $r0 := @parameter0: android.content.Context
<com.facebook.internal.Validate: void hasFacebookActivity(android.content.Context,boolean)> --> $r2 := @parameter0: android.content.Context
<com.facebook.internal.Validate: void hasFacebookActivity(android.content.Context,boolean)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r6, "FacebookActivity is not declared in the AndroidManifest.xml, please add com.facebook.FacebookActivity to your AndroidManifest.xml file. See https://developers.facebook.com/docs/android/getting-started for more info.")
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void c()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.login.LoginManager: void h()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.login.LoginManager: void a(int)> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.login.LoginFacebookImpl: void <init>()> --> r0 := @this: dd.watchmaster.login.LoginFacebookImpl
<com.facebook.FacebookSdk: void sdkInitialize(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.FacebookSdk: void sdkInitialize(android.content.Context,com.facebook.FacebookSdk$InitializeCallback)> --> $r0 := @parameter0: android.content.Context
<com.facebook.internal.Validate: void hasFacebookActivity(android.content.Context,boolean)> --> $r2 := @parameter0: android.content.Context
<com.facebook.internal.Validate: void hasFacebookActivity(android.content.Context,boolean)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r6, "FacebookActivity is not declared in the AndroidManifest.xml, please add com.facebook.FacebookActivity to your AndroidManifest.xml file. See https://developers.facebook.com/docs/android/getting-started for more info.")
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void <clinit>()> --> nop
<dd.watchmaster.login.LoginManager: void <init>()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.common.mobile.a: void register(java.lang.Object)> --> r0 := @this: dd.watchmaster.common.mobile.a
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.samsung.android.sdk.accessoryfiletransfer.a$3: void run()> --> r0 := @this: com.samsung.android.sdk.accessoryfiletransfer.a$3
<com.samsung.android.sdk.accessoryfiletransfer.a$3: void run()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("[SA_SDK]SAFileTransfer", $r6)
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void <clinit>()> --> nop
<dd.watchmaster.login.LoginManager: void <init>()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.common.mobile.a: void register(java.lang.Object)> --> r0 := @this: dd.watchmaster.common.mobile.a
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.samsung.android.sdk.accessoryfiletransfer.a$3: void run()> --> r0 := @this: com.samsung.android.sdk.accessoryfiletransfer.a$3
<com.samsung.android.sdk.accessoryfiletransfer.a$3: void run()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("[SA_SDK]SAFileTransfer", $r6)
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r6 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void c()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.login.LoginFacebookImpl: void a()> --> r0 := @this: dd.watchmaster.login.LoginFacebookImpl
<dd.watchmaster.login.LoginBaseImpl: void g()> --> r0 := @this: dd.watchmaster.login.LoginBaseImpl
<dd.watchmaster.common.mobile.a: void post(java.lang.Object)> --> r0 := @this: dd.watchmaster.common.mobile.a
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.samsung.android.sdk.accessoryfiletransfer.a$3: void run()> --> r0 := @this: com.samsung.android.sdk.accessoryfiletransfer.a$3
<com.samsung.android.sdk.accessoryfiletransfer.a$3: void run()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("[SA_SDK]SAFileTransfer", $r6)
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 == null goto $r8 = new dd.watchmaster.common.mobile.weather.WeatherManager$WeatherException
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(double,double)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.common.c: void a(java.lang.Object)> --> $r1 := @parameter0: java.lang.Object
<dd.watchmaster.common.c: void a(int,java.lang.String,java.lang.String,int,int)> --> $i0 := @parameter0: int
<dd.watchmaster.common.c: void a(int,java.lang.String,java.lang.String)> --> $i0 := @parameter0: int
<dd.watchmaster.common.c: void a(int,java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r1, $r0)
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void c()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.login.LoginManager: void h()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.login.LoginManager: void a(int)> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.login.LoginFacebookImpl: void <init>()> --> r0 := @this: dd.watchmaster.login.LoginFacebookImpl
<com.facebook.FacebookSdk: void sdkInitialize(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.FacebookSdk: void sdkInitialize(android.content.Context,com.facebook.FacebookSdk$InitializeCallback)> --> $r0 := @parameter0: android.content.Context
<com.facebook.internal.Validate: void hasInternetPermissions(android.content.Context,boolean)> --> $r0 := @parameter0: android.content.Context
<com.facebook.internal.Validate: void hasInternetPermissions(android.content.Context,boolean)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r1, "No internet permissions granted for the app, please add <uses-permission android:name=\"android.permission.INTERNET\" /> to your AndroidManifest.xml.")
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r6 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 == null goto $r8 = new dd.watchmaster.common.mobile.weather.WeatherManager$WeatherException
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(double,double)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.common.c: void a(java.lang.Object)> --> $r1 := @parameter0: java.lang.Object
<dd.watchmaster.common.c: void a(int,java.lang.String,java.lang.String,int,int)> --> $i0 := @parameter0: int
<dd.watchmaster.common.c: void a(int,java.lang.String,java.lang.String)> --> $i0 := @parameter0: int
<dd.watchmaster.common.c: void a(int,java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r1, $r0)
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r6 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void c()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.login.LoginFacebookImpl: void a()> --> r0 := @this: dd.watchmaster.login.LoginFacebookImpl
<dd.watchmaster.login.LoginBaseImpl: void g()> --> r0 := @this: dd.watchmaster.login.LoginBaseImpl
<dd.watchmaster.common.mobile.a: void post(java.lang.Object)> --> r0 := @this: dd.watchmaster.common.mobile.a
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.AccessTokenManager$1: void run()> --> r0 := @this: com.facebook.AccessTokenManager$1
<com.facebook.AccessTokenManager: void access$000(com.facebook.AccessTokenManager,com.facebook.AccessToken$AccessTokenRefreshCallback)> --> $r0 := @parameter0: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: void refreshCurrentAccessTokenImpl(com.facebook.AccessToken$AccessTokenRefreshCallback)> --> r0 := @this: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: com.facebook.GraphRequest createExtendAccessTokenRequest(com.facebook.AccessToken,com.facebook.GraphRequest$Callback)> --> $r0 := @parameter0: com.facebook.AccessToken
<com.facebook.AccessTokenManager: com.facebook.GraphRequest createExtendAccessTokenRequest(com.facebook.AccessToken,com.facebook.GraphRequest$Callback)> --> virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("grant_type", "fb_extend_sso_token")
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $d0 = virtualinvoke $r7.<android.location.Location: double getLongitude()>()
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $b0 = $d0 cmpl 0.0
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $b0 == 0 goto $r8 = new dd.watchmaster.common.mobile.weather.WeatherManager$WeatherException
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(double,double)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.common.c: void a(java.lang.Object)> --> $r1 := @parameter0: java.lang.Object
<dd.watchmaster.common.c: void a(int,java.lang.String,java.lang.String,int,int)> --> $i0 := @parameter0: int
<dd.watchmaster.common.c: void a(int,java.lang.String,java.lang.String)> --> $i0 := @parameter0: int
<dd.watchmaster.common.c: void a(int,java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r1, $r0)
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r6 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void c()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.login.LoginFacebookImpl: void a()> --> r0 := @this: dd.watchmaster.login.LoginFacebookImpl
<dd.watchmaster.login.LoginBaseImpl: void g()> --> r0 := @this: dd.watchmaster.login.LoginBaseImpl
<dd.watchmaster.common.mobile.a: void post(java.lang.Object)> --> r0 := @this: dd.watchmaster.common.mobile.a
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.samsung.android.sdk.accessoryfiletransfer.a$2: void run()> --> r0 := @this: com.samsung.android.sdk.accessoryfiletransfer.a$2
<com.samsung.android.sdk.accessoryfiletransfer.a$2: void run()> --> $r7 = staticinvoke <com.samsung.android.sdk.accessoryfiletransfer.d: com.samsung.android.sdk.accessoryfiletransfer.d a(android.content.Context,java.lang.String)>($r6, $r3)
<com.samsung.android.sdk.accessoryfiletransfer.a$2: void run()> --> $r13 := @caughtexception
<com.samsung.android.sdk.accessoryfiletransfer.a: void b(int)> --> $i0 := @parameter0: int
<com.samsung.android.sdk.accessoryfiletransfer.a: void b(int)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("[SA_SDK]SAFileTransfer", "onTransferCompleted() -> ERROR_FATAL")
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void <clinit>()> --> nop
<dd.watchmaster.login.LoginManager: void <init>()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.common.mobile.a: void register(java.lang.Object)> --> r0 := @this: dd.watchmaster.common.mobile.a
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.samsung.android.sdk.accessoryfiletransfer.a$2: void run()> --> r0 := @this: com.samsung.android.sdk.accessoryfiletransfer.a$2
<com.samsung.android.sdk.accessoryfiletransfer.a$2: void run()> --> $r7 = staticinvoke <com.samsung.android.sdk.accessoryfiletransfer.d: com.samsung.android.sdk.accessoryfiletransfer.d a(android.content.Context,java.lang.String)>($r6, $r3)
<com.samsung.android.sdk.accessoryfiletransfer.a$2: void run()> --> $r13 := @caughtexception
<com.samsung.android.sdk.accessoryfiletransfer.a: void b(int)> --> $i0 := @parameter0: int
<com.samsung.android.sdk.accessoryfiletransfer.a: void b(int)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("[SA_SDK]SAFileTransfer", "onTransferCompleted() -> ERROR_FATAL")
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 == null goto $r8 = new dd.watchmaster.common.mobile.weather.WeatherManager$WeatherException
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(double,double)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.common.c: void a(java.lang.Object)> --> $r1 := @parameter0: java.lang.Object
<dd.watchmaster.common.c: void a(int,java.lang.String,java.lang.String,int,int)> --> $i0 := @parameter0: int
<dd.watchmaster.common.c: void a(int,java.lang.String,java.lang.String)> --> $i0 := @parameter0: int
<dd.watchmaster.common.c: void a(int,java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r1, $r0)
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $d0 = virtualinvoke $r7.<android.location.Location: double getLongitude()>()
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $b0 = $d0 cmpl 0.0
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $b0 == 0 goto $r8 = new dd.watchmaster.common.mobile.weather.WeatherManager$WeatherException
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(double,double)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.common.mobile.weather.WeatherManager: void a(dd.watchmaster.common.mobile.weather.WeatherManager,android.content.Context,double,double,com.survivingwithandroid.weather.lib.b$e)> --> $r0 := @parameter0: dd.watchmaster.common.mobile.weather.WeatherManager
<dd.watchmaster.common.mobile.weather.WeatherManager: void a(android.content.Context,double,double,com.survivingwithandroid.weather.lib.b$e)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager
<dd.watchmaster.common.util.WmLogger: void i(dd.watchmaster.common.util.WmLogger$TAG,java.lang.String)> --> $r2 := @parameter0: dd.watchmaster.common.util.WmLogger$TAG
<dd.watchmaster.common.util.WmLogger: void i(dd.watchmaster.common.util.WmLogger$TAG,java.lang.String)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r4, $r0)
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r6 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$1: void a(double,double)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$1
<dd.watchmaster.common.mobile.weather.WeatherManager: void a(dd.watchmaster.common.mobile.weather.WeatherManager,android.content.Context,double,double,com.survivingwithandroid.weather.lib.b$c)> --> $r0 := @parameter0: dd.watchmaster.common.mobile.weather.WeatherManager
<dd.watchmaster.common.mobile.weather.WeatherManager: void a(android.content.Context,double,double,com.survivingwithandroid.weather.lib.b$c)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager
<dd.watchmaster.common.util.WmLogger: void i(dd.watchmaster.common.util.WmLogger$TAG,java.lang.String)> --> $r2 := @parameter0: dd.watchmaster.common.util.WmLogger$TAG
<dd.watchmaster.common.util.WmLogger: void i(dd.watchmaster.common.util.WmLogger$TAG,java.lang.String)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r4, $r0)
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void <clinit>()> --> nop
<dd.watchmaster.login.LoginManager: void <init>()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.common.mobile.a: void register(java.lang.Object)> --> r0 := @this: dd.watchmaster.common.mobile.a
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.samsung.android.sdk.accessoryfiletransfer.a$4: void run()> --> r0 := @this: com.samsung.android.sdk.accessoryfiletransfer.a$4
<com.samsung.android.sdk.accessoryfiletransfer.d: com.samsung.android.sdk.accessoryfiletransfer.d a(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.samsung.android.sdk.accessoryfiletransfer.d: com.samsung.android.sdk.accessoryfiletransfer.d a(android.content.Context,java.lang.String)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("[SA_SDK]SAFileTransferManager", "getInstance: FTService Connection Failed")
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void c()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.login.LoginFacebookImpl: void a()> --> r0 := @this: dd.watchmaster.login.LoginFacebookImpl
<com.facebook.login.LoginManager: void logOut()> --> r0 := @this: com.facebook.login.LoginManager
<com.facebook.login.LoginManager: void setExpressLoginStatus(boolean)> --> r0 := @this: com.facebook.login.LoginManager
<com.facebook.login.LoginManager: void setExpressLoginStatus(boolean)> --> interfaceinvoke $r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("express_login_allowed", 0)
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<dd.watchmaster.common.notification.a: void a(android.content.Context,int,int)> --> $r0 := @parameter0: android.content.Context
<dd.watchmaster.common.notification.a: void a(android.content.Context,int,int)> --> $r11 = interfaceinvoke $r11.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("pref_permssion_noti_showed", 1)
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r6 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void c()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.login.LoginFacebookImpl: void a()> --> r0 := @this: dd.watchmaster.login.LoginFacebookImpl
<dd.watchmaster.login.LoginBaseImpl: void g()> --> r0 := @this: dd.watchmaster.login.LoginBaseImpl
<dd.watchmaster.common.mobile.a: void post(java.lang.Object)> --> r0 := @this: dd.watchmaster.common.mobile.a
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.samsung.android.sdk.accessoryfiletransfer.a$3: void run()> --> r0 := @this: com.samsung.android.sdk.accessoryfiletransfer.a$3
<com.samsung.android.sdk.accessoryfiletransfer.a$3: void run()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("[SA_SDK]SAFileTransfer", "cancelFile aborted because service connection or transaction already closed.")
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r6 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void c()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.login.LoginFacebookImpl: void a()> --> r0 := @this: dd.watchmaster.login.LoginFacebookImpl
<dd.watchmaster.login.LoginBaseImpl: void g()> --> r0 := @this: dd.watchmaster.login.LoginBaseImpl
<dd.watchmaster.common.mobile.a: void post(java.lang.Object)> --> r0 := @this: dd.watchmaster.common.mobile.a
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.samsung.android.sdk.accessoryfiletransfer.a$3: void run()> --> r0 := @this: com.samsung.android.sdk.accessoryfiletransfer.a$3
<com.samsung.android.sdk.accessoryfiletransfer.d: com.samsung.android.sdk.accessoryfiletransfer.d a(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.samsung.android.sdk.accessoryfiletransfer.d: com.samsung.android.sdk.accessoryfiletransfer.d a(android.content.Context,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("[SA_SDK]SAFileTransferManager", $r1)
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void c()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.login.LoginGoogleImpl: void a()> --> r0 := @this: dd.watchmaster.login.LoginGoogleImpl
<dd.watchmaster.login.LoginGoogleImpl: void a()> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("WatchMaster", "[LGI] signOut ")
--------------------------------------------------------

<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> $r7 = $r6
<dd.watchmaster.common.mobile.weather.WeatherManager: void c(android.content.Context,dd.watchmaster.common.mobile.weather.WeatherManager$a)> --> if $r7 != null goto (branch)
<dd.watchmaster.common.mobile.weather.WeatherManager$2: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.common.mobile.weather.WeatherManager$2
<dd.watchmaster.service.a$5: void a(java.lang.Throwable)> --> r0 := @this: dd.watchmaster.service.a$5
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<dd.watchmaster.ui.fragment.BaseFragment$2: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.BaseFragment$2
<io.realm.RealmObject: boolean load()> --> r0 := @this: io.realm.RealmObject
<io.realm.RealmObject: boolean load(io.realm.RealmModel)> --> $r0 := @parameter0: io.realm.RealmModel
<io.realm.ProxyState: void load()> --> r0 := @this: io.realm.ProxyState
<io.realm.internal.PendingRow: void executeQuery()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.PendingRow: void notifyFrontEnd()> --> r0 := @this: io.realm.internal.PendingRow
<io.realm.internal.Collection: io.realm.internal.UncheckedRow firstUncheckedRow()> --> r0 := @this: io.realm.internal.Collection
<io.realm.internal.Table: io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)> --> r0 := @this: io.realm.internal.Table
<io.realm.internal.UncheckedRow: io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> $r0 := @parameter0: io.realm.internal.NativeContext
<io.realm.internal.UncheckedRow: void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)> --> r0 := @this: io.realm.internal.UncheckedRow
<io.realm.internal.NativeContext: void addReference(io.realm.internal.NativeObject)> --> r0 := @this: io.realm.internal.NativeContext
<io.realm.internal.NativeContext: void <clinit>()> --> nop
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<dd.watchmaster.ui.fragment.t$3$1: void run()> --> r0 := @this: dd.watchmaster.ui.fragment.t$3$1
<dd.watchmaster.login.LoginManager: void <clinit>()> --> nop
<dd.watchmaster.login.LoginManager: void <init>()> --> r0 := @this: dd.watchmaster.login.LoginManager
<dd.watchmaster.common.mobile.a: void register(java.lang.Object)> --> r0 := @this: dd.watchmaster.common.mobile.a
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.samsung.android.sdk.accessoryfiletransfer.a$2: void run()> --> r0 := @this: com.samsung.android.sdk.accessoryfiletransfer.a$2
<com.samsung.android.sdk.accessoryfiletransfer.a$2: void run()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("[SA_SDK]SAFileTransfer", $r3)
--------------------------------------------------------

