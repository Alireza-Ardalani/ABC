<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: java.lang.Double distancecalculate(android.location.Location)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: java.lang.Double distancecalculate(android.location.Location)> --> $b0 = $d0 cmpl 0.0
<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: java.lang.Double distancecalculate(android.location.Location)> --> if $b0 == 0 goto $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0)
<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: void MapsLocationSharedPreference(com.google.android.gms.maps.model.LatLng)> --> r0 := @this: activity.com.myactivity2.RunningWithMaps.RunningMapsActivity
<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: void MapsLocationSharedPreference(com.google.android.gms.maps.model.LatLng)> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("array", $r3)
--------------------------------------------------------

<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: java.lang.Double distancecalculate(android.location.Location)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: java.lang.Double distancecalculate(android.location.Location)> --> $b0 = $d0 cmpl 0.0
<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: java.lang.Double distancecalculate(android.location.Location)> --> if $b0 == 0 goto $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0)
<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: void MapsLocationSharedPreference(com.google.android.gms.maps.model.LatLng)> --> r0 := @this: activity.com.myactivity2.RunningWithMaps.RunningMapsActivity
<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: void MapsLocationSharedPreference(com.google.android.gms.maps.model.LatLng)> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("array", $r3)
--------------------------------------------------------

<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: java.lang.Double distancecalculate(android.location.Location)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: java.lang.Double distancecalculate(android.location.Location)> --> $b0 = $d0 cmpl 0.0
<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: java.lang.Double distancecalculate(android.location.Location)> --> if $b0 == 0 goto $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0)
<activity.com.myactivity2.Interfaces.Presenters.RunningMapsPresenter: void getVenueBasedQuery(float,float,java.lang.String)> --> r0 := @this: activity.com.myactivity2.Interfaces.Presenters.RunningMapsPresenter
<activity.com.myactivity2.Interfaces.Presenters.RunningMapsPresenter: io.reactivex.Observable getRecommadationObservable(float,float,java.lang.String)> --> r0 := @this: activity.com.myactivity2.Interfaces.Presenters.RunningMapsPresenter
<activity.com.myactivity2.Network.NetworkClient: retrofit2.Retrofit getRetrofit()> --> $r0 = <activity.com.myactivity2.Network.NetworkClient: retrofit2.Retrofit retrofit>
<retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(java.lang.String)> --> r0 := @this: retrofit2.Retrofit$Builder
<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult a(okhttp3.HttpUrl,java.lang.String)> --> r0 := @this: okhttp3.HttpUrl$Builder
<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)> --> $r0 := @parameter0: java.lang.String
<okhttp3.internal.Util: java.lang.String canonicalizeHost(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<okhttp3.internal.Util: java.net.InetAddress decodeIpv6(java.lang.String,int,int)> --> $r0 := @parameter0: java.lang.String
<okhttp3.internal.Util: java.net.InetAddress decodeIpv6(java.lang.String,int,int)> --> $r2 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>($r1)
--------------------------------------------------------

<activity.com.myactivity2.RunningWithNormal.RunningNormalActivity: java.lang.Double distancecalculate(android.location.Location)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<activity.com.myactivity2.RunningWithNormal.RunningNormalActivity: java.lang.Double distancecalculate(android.location.Location)> --> $b0 = $d0 cmpl 0.0
<activity.com.myactivity2.RunningWithNormal.RunningNormalActivity: java.lang.Double distancecalculate(android.location.Location)> --> if $b0 == 0 goto $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0)
<activity.com.myactivity2.RunningWithNormal.RunningNormalActivity: void MapsLocationSharedPreference(com.google.android.gms.maps.model.LatLng)> --> r0 := @this: activity.com.myactivity2.RunningWithNormal.RunningNormalActivity
<activity.com.myactivity2.RunningWithNormal.RunningNormalActivity: void MapsLocationSharedPreference(com.google.android.gms.maps.model.LatLng)> --> interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("array", $r4)
--------------------------------------------------------

<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: java.lang.Double distancecalculate(android.location.Location)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: java.lang.Double distancecalculate(android.location.Location)> --> $b0 = $d0 cmpl 0.0
<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: java.lang.Double distancecalculate(android.location.Location)> --> if $b0 == 0 goto $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0)
<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: void MapsLocationSharedPreference(com.google.android.gms.maps.model.LatLng)> --> r0 := @this: activity.com.myactivity2.RunningWithMaps.RunningMapsActivity
<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: void MapsLocationSharedPreference(com.google.android.gms.maps.model.LatLng)> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("array", $r3)
--------------------------------------------------------

<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: java.lang.Double distancecalculate(android.location.Location)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: java.lang.Double distancecalculate(android.location.Location)> --> $b0 = $d0 cmpl 0.0
<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: java.lang.Double distancecalculate(android.location.Location)> --> if $b0 == 0 goto $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0)
<activity.com.myactivity2.Interfaces.Presenters.RunningMapsPresenter: void getVenueBasedQuery(float,float,java.lang.String)> --> r0 := @this: activity.com.myactivity2.Interfaces.Presenters.RunningMapsPresenter
<activity.com.myactivity2.Interfaces.Presenters.RunningMapsPresenter: io.reactivex.Observable getRecommadationObservable(float,float,java.lang.String)> --> r0 := @this: activity.com.myactivity2.Interfaces.Presenters.RunningMapsPresenter
<activity.com.myactivity2.Network.NetworkClient: retrofit2.Retrofit getRetrofit()> --> $r0 = <activity.com.myactivity2.Network.NetworkClient: retrofit2.Retrofit retrofit>
<retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(java.lang.String)> --> r0 := @this: retrofit2.Retrofit$Builder
<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult a(okhttp3.HttpUrl,java.lang.String)> --> r0 := @this: okhttp3.HttpUrl$Builder
<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)> --> $r0 := @parameter0: java.lang.String
<okhttp3.internal.Util: java.lang.String canonicalizeHost(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<okhttp3.internal.Util: java.net.InetAddress decodeIpv6(java.lang.String,int,int)> --> $r0 := @parameter0: java.lang.String
<okhttp3.internal.Util: java.net.InetAddress decodeIpv6(java.lang.String,int,int)> --> $r2 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>($r1)
--------------------------------------------------------

<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: java.lang.Double distancecalculate(android.location.Location)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: java.lang.Double distancecalculate(android.location.Location)> --> $b0 = $d0 cmpl 0.0
<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: java.lang.Double distancecalculate(android.location.Location)> --> if $b0 == 0 goto $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0)
<activity.com.myactivity2.Interfaces.Presenters.RunningMapsPresenter: void getVenueBasedQuery(float,float,java.lang.String)> --> r0 := @this: activity.com.myactivity2.Interfaces.Presenters.RunningMapsPresenter
<activity.com.myactivity2.Interfaces.Presenters.RunningMapsPresenter: io.reactivex.Observable getRecommadationObservable(float,float,java.lang.String)> --> r0 := @this: activity.com.myactivity2.Interfaces.Presenters.RunningMapsPresenter
<retrofit2.Retrofit: java.lang.Object create(java.lang.Class)> --> r0 := @this: retrofit2.Retrofit
<retrofit2.Retrofit: void eagerlyValidateMethods(java.lang.Class)> --> r0 := @this: retrofit2.Retrofit
<retrofit2.Retrofit: retrofit2.ServiceMethod a(java.lang.reflect.Method)> --> r0 := @this: retrofit2.Retrofit
<retrofit2.ServiceMethod$Builder: retrofit2.ServiceMethod build()> --> r0 := @this: retrofit2.ServiceMethod$Builder
<retrofit2.ServiceMethod$Builder: void parseMethodAnnotation(java.lang.'annotation'.Annotation)> --> r0 := @this: retrofit2.ServiceMethod$Builder
<retrofit2.ServiceMethod$Builder: okhttp3.Headers parseHeaders(java.lang.String[])> --> r0 := @this: retrofit2.ServiceMethod$Builder
<retrofit2.ServiceMethod$Builder: okhttp3.Headers parseHeaders(java.lang.String[])> --> $r7 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>($r2)
--------------------------------------------------------

<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: java.lang.Double distancecalculate(android.location.Location)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: java.lang.Double distancecalculate(android.location.Location)> --> $b0 = $d0 cmpl 0.0
<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: java.lang.Double distancecalculate(android.location.Location)> --> if $b0 == 0 goto $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0)
<activity.com.myactivity2.Interfaces.Presenters.RunningMapsPresenter: void getVenueBasedQuery(float,float,java.lang.String)> --> r0 := @this: activity.com.myactivity2.Interfaces.Presenters.RunningMapsPresenter
<activity.com.myactivity2.Interfaces.Presenters.RunningMapsPresenter: io.reactivex.Observable getRecommadationObservable(float,float,java.lang.String)> --> r0 := @this: activity.com.myactivity2.Interfaces.Presenters.RunningMapsPresenter
<retrofit2.Retrofit: java.lang.Object create(java.lang.Class)> --> r0 := @this: retrofit2.Retrofit
<retrofit2.Retrofit: void eagerlyValidateMethods(java.lang.Class)> --> r0 := @this: retrofit2.Retrofit
<retrofit2.Retrofit: retrofit2.ServiceMethod a(java.lang.reflect.Method)> --> r0 := @this: retrofit2.Retrofit
<retrofit2.ServiceMethod$Builder: retrofit2.ServiceMethod build()> --> r0 := @this: retrofit2.ServiceMethod$Builder
<retrofit2.ServiceMethod$Builder: void parseMethodAnnotation(java.lang.'annotation'.Annotation)> --> r0 := @this: retrofit2.ServiceMethod$Builder
<retrofit2.ServiceMethod$Builder: okhttp3.Headers parseHeaders(java.lang.String[])> --> r0 := @this: retrofit2.ServiceMethod$Builder
<retrofit2.ServiceMethod$Builder: okhttp3.Headers parseHeaders(java.lang.String[])> --> $r7 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>($r2)
--------------------------------------------------------

<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: java.lang.Double distancecalculate(android.location.Location)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: java.lang.Double distancecalculate(android.location.Location)> --> $b0 = $d0 cmpl 0.0
<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: java.lang.Double distancecalculate(android.location.Location)> --> if $b0 == 0 goto $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0)
<activity.com.myactivity2.Interfaces.Presenters.RunningMapsPresenter: void getVenueBasedQuery(float,float,java.lang.String)> --> r0 := @this: activity.com.myactivity2.Interfaces.Presenters.RunningMapsPresenter
<activity.com.myactivity2.Interfaces.Presenters.RunningMapsPresenter: io.reactivex.Observable getRecommadationObservable(float,float,java.lang.String)> --> r0 := @this: activity.com.myactivity2.Interfaces.Presenters.RunningMapsPresenter
<activity.com.myactivity2.Network.NetworkClient: retrofit2.Retrofit getRetrofit()> --> $r0 = <activity.com.myactivity2.Network.NetworkClient: retrofit2.Retrofit retrofit>
<okhttp3.logging.HttpLoggingInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)> --> r0 := @this: okhttp3.logging.HttpLoggingInterceptor
<okhttp3.logging.HttpLoggingInterceptor$Logger$1: void log(java.lang.String)> --> r0 := @this: okhttp3.logging.HttpLoggingInterceptor$Logger$1
<okhttp3.internal.platform.AndroidPlatform: void log(int,java.lang.String,java.lang.Throwable)> --> r0 := @this: okhttp3.internal.platform.AndroidPlatform
<okhttp3.internal.platform.AndroidPlatform: void log(int,java.lang.String,java.lang.Throwable)> --> staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>($b1, "OkHttp", $r4)
--------------------------------------------------------

<activity.com.myactivity2.RunningWithNormal.RunningNormalActivity: java.lang.Double distancecalculate(android.location.Location)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<activity.com.myactivity2.RunningWithNormal.RunningNormalActivity: java.lang.Double distancecalculate(android.location.Location)> --> $b0 = $d0 cmpl 0.0
<activity.com.myactivity2.RunningWithNormal.RunningNormalActivity: java.lang.Double distancecalculate(android.location.Location)> --> if $b0 == 0 goto $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0)
<activity.com.myactivity2.RunningWithNormal.RunningNormalActivity: void MapsLocationSharedPreference(com.google.android.gms.maps.model.LatLng)> --> r0 := @this: activity.com.myactivity2.RunningWithNormal.RunningNormalActivity
<activity.com.myactivity2.RunningWithNormal.RunningNormalActivity: void MapsLocationSharedPreference(com.google.android.gms.maps.model.LatLng)> --> interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("array", $r4)
--------------------------------------------------------

<activity.com.myactivity2.RunningWithNormal.RunningNormalActivity: java.lang.Double distancecalculate(android.location.Location)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<activity.com.myactivity2.RunningWithNormal.RunningNormalActivity: java.lang.Double distancecalculate(android.location.Location)> --> $b0 = $d0 cmpl 0.0
<activity.com.myactivity2.RunningWithNormal.RunningNormalActivity: java.lang.Double distancecalculate(android.location.Location)> --> if $b0 == 0 goto $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0)
<activity.com.myactivity2.RunningWithNormal.RunningNormalActivity: void MapsLocationSharedPreference(com.google.android.gms.maps.model.LatLng)> --> r0 := @this: activity.com.myactivity2.RunningWithNormal.RunningNormalActivity
<activity.com.myactivity2.RunningWithNormal.RunningNormalActivity: void MapsLocationSharedPreference(com.google.android.gms.maps.model.LatLng)> --> interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("array", $r4)
--------------------------------------------------------

<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: java.lang.Double distancecalculate(android.location.Location)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: java.lang.Double distancecalculate(android.location.Location)> --> $b0 = $d0 cmpl 0.0
<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: java.lang.Double distancecalculate(android.location.Location)> --> if $b0 == 0 goto $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0)
<activity.com.myactivity2.Interfaces.Presenters.RunningMapsPresenter: void getVenueBasedQuery(float,float,java.lang.String)> --> r0 := @this: activity.com.myactivity2.Interfaces.Presenters.RunningMapsPresenter
<activity.com.myactivity2.Interfaces.Presenters.RunningMapsPresenter: io.reactivex.Observable getRecommadationObservable(float,float,java.lang.String)> --> r0 := @this: activity.com.myactivity2.Interfaces.Presenters.RunningMapsPresenter
<activity.com.myactivity2.Network.NetworkClient: retrofit2.Retrofit getRetrofit()> --> $r0 = <activity.com.myactivity2.Network.NetworkClient: retrofit2.Retrofit retrofit>
<okhttp3.logging.HttpLoggingInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)> --> r0 := @this: okhttp3.logging.HttpLoggingInterceptor
<okhttp3.logging.HttpLoggingInterceptor$Logger$1: void log(java.lang.String)> --> r0 := @this: okhttp3.logging.HttpLoggingInterceptor$Logger$1
<okhttp3.internal.platform.AndroidPlatform: void log(int,java.lang.String,java.lang.Throwable)> --> r0 := @this: okhttp3.internal.platform.AndroidPlatform
<okhttp3.internal.platform.AndroidPlatform: void log(int,java.lang.String,java.lang.Throwable)> --> staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>($b1, "OkHttp", $r4)
--------------------------------------------------------

<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: java.lang.Double distancecalculate(android.location.Location)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: java.lang.Double distancecalculate(android.location.Location)> --> $b0 = $d0 cmpl 0.0
<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: java.lang.Double distancecalculate(android.location.Location)> --> if $b0 == 0 goto $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0)
<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: void MapsLocationSharedPreference(com.google.android.gms.maps.model.LatLng)> --> r0 := @this: activity.com.myactivity2.RunningWithMaps.RunningMapsActivity
<activity.com.myactivity2.RunningWithMaps.RunningMapsActivity: void MapsLocationSharedPreference(com.google.android.gms.maps.model.LatLng)> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("array", $r3)
--------------------------------------------------------

<activity.com.myactivity2.RunningWithNormal.RunningNormalActivity: java.lang.Double distancecalculate(android.location.Location)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<activity.com.myactivity2.RunningWithNormal.RunningNormalActivity: java.lang.Double distancecalculate(android.location.Location)> --> $b0 = $d0 cmpl 0.0
<activity.com.myactivity2.RunningWithNormal.RunningNormalActivity: java.lang.Double distancecalculate(android.location.Location)> --> if $b0 == 0 goto $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0)
<activity.com.myactivity2.RunningWithNormal.RunningNormalActivity: void MapsLocationSharedPreference(com.google.android.gms.maps.model.LatLng)> --> r0 := @this: activity.com.myactivity2.RunningWithNormal.RunningNormalActivity
<activity.com.myactivity2.RunningWithNormal.RunningNormalActivity: void MapsLocationSharedPreference(com.google.android.gms.maps.model.LatLng)> --> interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("array", $r4)
--------------------------------------------------------

