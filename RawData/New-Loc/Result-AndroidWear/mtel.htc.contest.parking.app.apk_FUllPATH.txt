<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $d0 = virtualinvoke $r3.<android.location.Location: double getLongitude()>()
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $r14 = virtualinvoke $r13.<com.j256.ormlite.stmt.QueryBuilder: com.j256.ormlite.stmt.Where where()>()
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $r8 = r0.<mtel.htc.contest.parking.app.service.a: java.lang.String n>
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> if $r20 == null goto $r8 = null
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $r21 = r0.<mtel.htc.contest.parking.app.service.a: android.content.Context e>
<mtel.htc.contest.parking.app.ak: java.lang.String a(android.content.Context,android.location.Location,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<mtel.htc.contest.parking.app.ak: java.lang.String a(android.content.Context,android.location.Location,java.lang.String,java.lang.String)> --> if $r2 != null goto $z0 = 0
<com.j256.ormlite.dao.RuntimeExceptionDao: java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery)> --> r0 := @this: com.j256.ormlite.dao.RuntimeExceptionDao
<com.j256.ormlite.dao.BaseDaoImpl: java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery)> --> r0 := @this: com.j256.ormlite.dao.BaseDaoImpl
<com.j256.ormlite.android.AndroidConnectionSource: com.j256.ormlite.support.DatabaseConnection getReadOnlyConnection(java.lang.String)> --> r0 := @this: com.j256.ormlite.android.AndroidConnectionSource
<com.j256.ormlite.android.AndroidConnectionSource: com.j256.ormlite.support.DatabaseConnection getReadWriteConnection(java.lang.String)> --> r0 := @this: com.j256.ormlite.android.AndroidConnectionSource
<com.b.a.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()> --> r0 := @this: com.b.a.b
<com.b.a.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()> --> r0.<com.b.a.b: boolean g> = 1
<com.b.a.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()> --> $r10 := @caughtexception
<com.b.a.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()> --> virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void close()>()
--------------------------------------------------------

<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $d0 = virtualinvoke $r3.<android.location.Location: double getLongitude()>()
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $r14 = virtualinvoke $r13.<com.j256.ormlite.stmt.QueryBuilder: com.j256.ormlite.stmt.Where where()>()
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $r8 = r0.<mtel.htc.contest.parking.app.service.a: java.lang.String n>
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> if $r20 == null goto $r8 = null
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $r21 = r0.<mtel.htc.contest.parking.app.service.a: android.content.Context e>
<mtel.htc.contest.parking.app.ak: java.lang.String a(android.content.Context,android.location.Location,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<mtel.htc.contest.parking.app.ak: java.lang.String a(android.content.Context,android.location.Location,java.lang.String,java.lang.String)> --> if $r2 != null goto $z0 = 0
<com.j256.ormlite.dao.RuntimeExceptionDao: java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery)> --> r0 := @this: com.j256.ormlite.dao.RuntimeExceptionDao
<com.j256.ormlite.dao.BaseDaoImpl: java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery)> --> r0 := @this: com.j256.ormlite.dao.BaseDaoImpl
<com.j256.ormlite.stmt.StatementExecutor: java.lang.Object queryForFirst(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedStmt,com.j256.ormlite.dao.ObjectCache)> --> r0 := @this: com.j256.ormlite.stmt.StatementExecutor
<com.j256.ormlite.android.AndroidCompiledStatement: com.j256.ormlite.support.DatabaseResults runQuery(com.j256.ormlite.dao.ObjectCache)> --> r0 := @this: com.j256.ormlite.android.AndroidCompiledStatement
<com.j256.ormlite.android.AndroidCompiledStatement: android.database.Cursor getCursor()> --> r0 := @this: com.j256.ormlite.android.AndroidCompiledStatement
<com.j256.ormlite.android.compat.JellyBeanApiCompatibility: android.database.Cursor rawQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook)> --> r0 := @this: com.j256.ormlite.android.compat.JellyBeanApiCompatibility
<com.j256.ormlite.android.compat.JellyBeanApiCompatibility: android.database.Cursor rawQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook)> --> $r5 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r1, $r2)
--------------------------------------------------------

<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $d0 = virtualinvoke $r3.<android.location.Location: double getLatitude()>()
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $r14 = virtualinvoke $r13.<com.j256.ormlite.stmt.QueryBuilder: com.j256.ormlite.stmt.Where where()>()
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $r8 = r0.<mtel.htc.contest.parking.app.service.a: java.lang.String n>
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> if $r20 == null goto $r8 = null
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $r21 = r0.<mtel.htc.contest.parking.app.service.a: android.content.Context e>
<mtel.htc.contest.parking.app.ak: java.lang.String a(android.content.Context,android.location.Location,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<mtel.htc.contest.parking.app.ak: java.lang.String a(android.content.Context,android.location.Location,java.lang.String,java.lang.String)> --> if $r2 != null goto $z0 = 0
<com.j256.ormlite.dao.RuntimeExceptionDao: java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery)> --> r0 := @this: com.j256.ormlite.dao.RuntimeExceptionDao
<com.j256.ormlite.dao.BaseDaoImpl: java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery)> --> r0 := @this: com.j256.ormlite.dao.BaseDaoImpl
<com.j256.ormlite.android.AndroidConnectionSource: com.j256.ormlite.support.DatabaseConnection getReadOnlyConnection(java.lang.String)> --> r0 := @this: com.j256.ormlite.android.AndroidConnectionSource
<com.j256.ormlite.android.AndroidConnectionSource: com.j256.ormlite.support.DatabaseConnection getReadWriteConnection(java.lang.String)> --> r0 := @this: com.j256.ormlite.android.AndroidConnectionSource
<com.b.a.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()> --> r0 := @this: com.b.a.b
<com.b.a.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r7, $r9)
--------------------------------------------------------

<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $d0 = virtualinvoke $r3.<android.location.Location: double getLongitude()>()
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $r14 = virtualinvoke $r13.<com.j256.ormlite.stmt.QueryBuilder: com.j256.ormlite.stmt.Where where()>()
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $r8 = r0.<mtel.htc.contest.parking.app.service.a: java.lang.String n>
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> if $r20 == null goto $r8 = null
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $r21 = r0.<mtel.htc.contest.parking.app.service.a: android.content.Context e>
<mtel.htc.contest.parking.app.ak: java.lang.String a(android.content.Context,android.location.Location,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<mtel.htc.contest.parking.app.ak: java.lang.String a(android.content.Context,android.location.Location,java.lang.String,java.lang.String)> --> if $r2 != null goto $z0 = 0
<com.j256.ormlite.dao.RuntimeExceptionDao: java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery)> --> r0 := @this: com.j256.ormlite.dao.RuntimeExceptionDao
<com.j256.ormlite.dao.BaseDaoImpl: java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery)> --> r0 := @this: com.j256.ormlite.dao.BaseDaoImpl
<com.j256.ormlite.android.AndroidConnectionSource: com.j256.ormlite.support.DatabaseConnection getReadOnlyConnection(java.lang.String)> --> r0 := @this: com.j256.ormlite.android.AndroidConnectionSource
<com.j256.ormlite.android.AndroidConnectionSource: com.j256.ormlite.support.DatabaseConnection getReadWriteConnection(java.lang.String)> --> r0 := @this: com.j256.ormlite.android.AndroidConnectionSource
<com.b.a.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()> --> r0 := @this: com.b.a.b
<com.b.a.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r7, $r9)
--------------------------------------------------------

<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $d0 = virtualinvoke $r3.<android.location.Location: double getLatitude()>()
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $r14 = virtualinvoke $r13.<com.j256.ormlite.stmt.QueryBuilder: com.j256.ormlite.stmt.Where where()>()
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $r8 = r0.<mtel.htc.contest.parking.app.service.a: java.lang.String n>
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> if $r20 == null goto $r8 = null
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $r21 = r0.<mtel.htc.contest.parking.app.service.a: android.content.Context e>
<mtel.htc.contest.parking.app.ak: java.lang.String a(android.content.Context,android.location.Location,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<mtel.htc.contest.parking.app.ak: java.lang.String a(android.content.Context,android.location.Location,java.lang.String,java.lang.String)> --> if $r2 != null goto $z0 = 0
<com.j256.ormlite.dao.RuntimeExceptionDao: java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery)> --> r0 := @this: com.j256.ormlite.dao.RuntimeExceptionDao
<com.j256.ormlite.dao.BaseDaoImpl: java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery)> --> r0 := @this: com.j256.ormlite.dao.BaseDaoImpl
<com.j256.ormlite.android.AndroidConnectionSource: com.j256.ormlite.support.DatabaseConnection getReadOnlyConnection(java.lang.String)> --> r0 := @this: com.j256.ormlite.android.AndroidConnectionSource
<com.j256.ormlite.android.AndroidConnectionSource: com.j256.ormlite.support.DatabaseConnection getReadWriteConnection(java.lang.String)> --> r0 := @this: com.j256.ormlite.android.AndroidConnectionSource
<com.b.a.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()> --> r0 := @this: com.b.a.b
<com.b.a.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()> --> r0.<com.b.a.b: boolean g> = 1
<com.b.a.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()> --> $r10 := @caughtexception
<com.b.a.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()> --> virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void close()>()
--------------------------------------------------------

<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $d0 = virtualinvoke $r3.<android.location.Location: double getLongitude()>()
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $r14 = virtualinvoke $r13.<com.j256.ormlite.stmt.QueryBuilder: com.j256.ormlite.stmt.Where where()>()
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $r8 = r0.<mtel.htc.contest.parking.app.service.a: java.lang.String n>
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> if $r20 == null goto $r8 = null
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $r21 = r0.<mtel.htc.contest.parking.app.service.a: android.content.Context e>
<mtel.htc.contest.parking.app.ak: java.lang.String a(android.content.Context,android.location.Location,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<mtel.htc.contest.parking.app.ak: java.lang.String a(android.content.Context,android.location.Location,java.lang.String,java.lang.String)> --> if $r2 != null goto $z0 = 0
<com.j256.ormlite.dao.RuntimeExceptionDao: java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery)> --> r0 := @this: com.j256.ormlite.dao.RuntimeExceptionDao
<com.j256.ormlite.dao.BaseDaoImpl: java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery)> --> r0 := @this: com.j256.ormlite.dao.BaseDaoImpl
<com.j256.ormlite.android.AndroidConnectionSource: com.j256.ormlite.support.DatabaseConnection getReadOnlyConnection(java.lang.String)> --> r0 := @this: com.j256.ormlite.android.AndroidConnectionSource
<com.j256.ormlite.android.AndroidConnectionSource: com.j256.ormlite.support.DatabaseConnection getReadWriteConnection(java.lang.String)> --> r0 := @this: com.j256.ormlite.android.AndroidConnectionSource
<com.b.a.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()> --> r0 := @this: com.b.a.b
<com.b.a.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()> --> virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void close()>()
--------------------------------------------------------

<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $d0 = virtualinvoke $r3.<android.location.Location: double getLatitude()>()
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $r14 = virtualinvoke $r13.<com.j256.ormlite.stmt.QueryBuilder: com.j256.ormlite.stmt.Where where()>()
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $r8 = r0.<mtel.htc.contest.parking.app.service.a: java.lang.String n>
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> if $r20 == null goto $r8 = null
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $r21 = r0.<mtel.htc.contest.parking.app.service.a: android.content.Context e>
<mtel.htc.contest.parking.app.ak: java.lang.String a(android.content.Context,android.location.Location,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<mtel.htc.contest.parking.app.ak: java.lang.String a(android.content.Context,android.location.Location,java.lang.String,java.lang.String)> --> if $r2 != null goto $z0 = 0
<com.j256.ormlite.dao.RuntimeExceptionDao: java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery)> --> r0 := @this: com.j256.ormlite.dao.RuntimeExceptionDao
<com.j256.ormlite.dao.BaseDaoImpl: java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery)> --> r0 := @this: com.j256.ormlite.dao.BaseDaoImpl
<com.j256.ormlite.stmt.StatementExecutor: java.lang.Object queryForFirst(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedStmt,com.j256.ormlite.dao.ObjectCache)> --> r0 := @this: com.j256.ormlite.stmt.StatementExecutor
<com.j256.ormlite.android.AndroidCompiledStatement: com.j256.ormlite.support.DatabaseResults runQuery(com.j256.ormlite.dao.ObjectCache)> --> r0 := @this: com.j256.ormlite.android.AndroidCompiledStatement
<com.j256.ormlite.android.AndroidCompiledStatement: android.database.Cursor getCursor()> --> r0 := @this: com.j256.ormlite.android.AndroidCompiledStatement
<com.j256.ormlite.android.compat.JellyBeanApiCompatibility: android.database.Cursor rawQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook)> --> r0 := @this: com.j256.ormlite.android.compat.JellyBeanApiCompatibility
<com.j256.ormlite.android.compat.JellyBeanApiCompatibility: android.database.Cursor rawQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook)> --> $r5 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r1, $r2)
--------------------------------------------------------

<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $d0 = virtualinvoke $r3.<android.location.Location: double getLatitude()>()
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $r14 = virtualinvoke $r13.<com.j256.ormlite.stmt.QueryBuilder: com.j256.ormlite.stmt.Where where()>()
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $r8 = r0.<mtel.htc.contest.parking.app.service.a: java.lang.String n>
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> if $r20 == null goto $r8 = null
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $r21 = r0.<mtel.htc.contest.parking.app.service.a: android.content.Context e>
<mtel.htc.contest.parking.app.ak: java.lang.String a(android.content.Context,android.location.Location,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<mtel.htc.contest.parking.app.ak: java.lang.String a(android.content.Context,android.location.Location,java.lang.String,java.lang.String)> --> if $r2 != null goto $z0 = 0
<com.j256.ormlite.dao.RuntimeExceptionDao: java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery)> --> r0 := @this: com.j256.ormlite.dao.RuntimeExceptionDao
<com.j256.ormlite.dao.BaseDaoImpl: java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery)> --> r0 := @this: com.j256.ormlite.dao.BaseDaoImpl
<com.j256.ormlite.android.AndroidConnectionSource: com.j256.ormlite.support.DatabaseConnection getReadOnlyConnection(java.lang.String)> --> r0 := @this: com.j256.ormlite.android.AndroidConnectionSource
<com.j256.ormlite.android.AndroidConnectionSource: com.j256.ormlite.support.DatabaseConnection getReadWriteConnection(java.lang.String)> --> r0 := @this: com.j256.ormlite.android.AndroidConnectionSource
<com.b.a.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()> --> r0 := @this: com.b.a.b
<com.b.a.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()> --> virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void close()>()
--------------------------------------------------------

<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $d0 = virtualinvoke $r3.<android.location.Location: double getLatitude()>()
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $r14 = virtualinvoke $r13.<com.j256.ormlite.stmt.QueryBuilder: com.j256.ormlite.stmt.Where where()>()
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $r8 = r0.<mtel.htc.contest.parking.app.service.a: java.lang.String n>
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> if $r20 == null goto $r8 = null
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $r21 = r0.<mtel.htc.contest.parking.app.service.a: android.content.Context e>
<mtel.htc.contest.parking.app.ak: java.lang.String a(android.content.Context,android.location.Location,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<mtel.htc.contest.parking.app.ak: java.lang.String a(android.content.Context,android.location.Location,java.lang.String,java.lang.String)> --> if $r2 != null goto $z0 = 0
<com.j256.ormlite.dao.RuntimeExceptionDao: java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery)> --> r0 := @this: com.j256.ormlite.dao.RuntimeExceptionDao
<com.j256.ormlite.dao.BaseDaoImpl: java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery)> --> r0 := @this: com.j256.ormlite.dao.BaseDaoImpl
<com.j256.ormlite.stmt.StatementExecutor: java.lang.Object queryForFirst(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedStmt,com.j256.ormlite.dao.ObjectCache)> --> r0 := @this: com.j256.ormlite.stmt.StatementExecutor
<com.j256.ormlite.android.AndroidCompiledStatement: com.j256.ormlite.support.DatabaseResults runQuery(com.j256.ormlite.dao.ObjectCache)> --> r0 := @this: com.j256.ormlite.android.AndroidCompiledStatement
<com.j256.ormlite.android.AndroidCompiledStatement: android.database.Cursor getCursor()> --> r0 := @this: com.j256.ormlite.android.AndroidCompiledStatement
<com.j256.ormlite.android.compat.BasicApiCompatibility: android.database.Cursor rawQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook)> --> r0 := @this: com.j256.ormlite.android.compat.BasicApiCompatibility
<com.j256.ormlite.android.compat.BasicApiCompatibility: android.database.Cursor rawQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook)> --> $r4 = virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r1, $r2)
--------------------------------------------------------

<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $d0 = virtualinvoke $r3.<android.location.Location: double getLongitude()>()
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $r14 = virtualinvoke $r13.<com.j256.ormlite.stmt.QueryBuilder: com.j256.ormlite.stmt.Where where()>()
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $r8 = r0.<mtel.htc.contest.parking.app.service.a: java.lang.String n>
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> if $r20 == null goto $r8 = null
<mtel.htc.contest.parking.app.service.a: java.lang.Void a(android.location.Location,boolean,mtel.htc.contest.parking.app.service.a$a,a.i)> --> $r21 = r0.<mtel.htc.contest.parking.app.service.a: android.content.Context e>
<mtel.htc.contest.parking.app.ak: java.lang.String a(android.content.Context,android.location.Location,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<mtel.htc.contest.parking.app.ak: java.lang.String a(android.content.Context,android.location.Location,java.lang.String,java.lang.String)> --> if $r2 != null goto $z0 = 0
<com.j256.ormlite.dao.RuntimeExceptionDao: java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery)> --> r0 := @this: com.j256.ormlite.dao.RuntimeExceptionDao
<com.j256.ormlite.dao.BaseDaoImpl: java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery)> --> r0 := @this: com.j256.ormlite.dao.BaseDaoImpl
<com.j256.ormlite.stmt.StatementExecutor: java.lang.Object queryForFirst(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedStmt,com.j256.ormlite.dao.ObjectCache)> --> r0 := @this: com.j256.ormlite.stmt.StatementExecutor
<com.j256.ormlite.android.AndroidCompiledStatement: com.j256.ormlite.support.DatabaseResults runQuery(com.j256.ormlite.dao.ObjectCache)> --> r0 := @this: com.j256.ormlite.android.AndroidCompiledStatement
<com.j256.ormlite.android.AndroidCompiledStatement: android.database.Cursor getCursor()> --> r0 := @this: com.j256.ormlite.android.AndroidCompiledStatement
<com.j256.ormlite.android.compat.BasicApiCompatibility: android.database.Cursor rawQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook)> --> r0 := @this: com.j256.ormlite.android.compat.BasicApiCompatibility
<com.j256.ormlite.android.compat.BasicApiCompatibility: android.database.Cursor rawQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook)> --> $r4 = virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r1, $r2)
--------------------------------------------------------

