<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r4 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r1 = r0.<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: com.gpsClassic.trackers.directions.MyLocation this$0>
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $z0 == 0 goto $r5 = null
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r4 == null goto (branch)
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r4 == null goto (branch)
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherActivity$1
<com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask: java.lang.Object doInBackground(java.lang.Object[])> --> r0 := @this: com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask
<com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask: org.json.JSONObject doInBackground(java.lang.String[])> --> r0 := @this: com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask
<com.gpsClassic.trackers.directions.models.WeatherFamous: org.json.JSONObject getWeatherJSON(java.lang.String,java.lang.String)> --> $r1 := @parameter0: java.lang.String
<com.gpsClassic.trackers.directions.models.WeatherFamous: org.json.JSONObject getWeatherJSON(java.lang.String,java.lang.String)> --> $r9 = virtualinvoke $r6.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
--------------------------------------------------------

<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r4 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r1 = r0.<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: com.gpsClassic.trackers.directions.MyLocation this$0>
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r4 == null goto (branch)
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherActivity$1
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> $r3 = r0.<com.gpsClassic.trackers.directions.WeatherActivity$1: com.gpsClassic.trackers.directions.WeatherActivity this$0>
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> $r1 := @caughtexception
<com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask: java.lang.Object doInBackground(java.lang.Object[])> --> r0 := @this: com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask
<com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask: org.json.JSONObject doInBackground(java.lang.String[])> --> r0 := @this: com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask
<com.gpsClassic.trackers.directions.models.WeatherFamous: org.json.JSONObject getWeatherJSON(java.lang.String,java.lang.String)> --> $r1 := @parameter0: java.lang.String
<com.gpsClassic.trackers.directions.models.WeatherFamous: org.json.JSONObject getWeatherJSON(java.lang.String,java.lang.String)> --> specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)
--------------------------------------------------------

<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r4 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r1 = r0.<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: com.gpsClassic.trackers.directions.MyLocation this$0>
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $z0 == 0 goto $r5 = null
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r4 == null goto (branch)
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r4 == null goto (branch)
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherActivity$1
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> $r3 = r0.<com.gpsClassic.trackers.directions.WeatherActivity$1: com.gpsClassic.trackers.directions.WeatherActivity this$0>
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> $r1 := @caughtexception
<com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask: java.lang.Object doInBackground(java.lang.Object[])> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask
<com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask: org.json.JSONObject doInBackground(java.lang.String[])> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask
<com.gpsClassic.trackers.directions.WeatherWeekForecast: org.json.JSONObject getWeatherJSON(java.lang.String,java.lang.String)> --> $r1 := @parameter0: java.lang.String
<com.gpsClassic.trackers.directions.WeatherWeekForecast: org.json.JSONObject getWeatherJSON(java.lang.String,java.lang.String)> --> specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)
--------------------------------------------------------

<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r4 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r1 = r0.<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: com.gpsClassic.trackers.directions.MyLocation this$0>
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $z0 == 0 goto $r5 = null
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r4 == null goto (branch)
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r4 == null goto (branch)
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherActivity$1
<com.gpsClassic.trackers.directions.WeatherActivity$GetAddressAsyncTask: java.lang.Object doInBackground(java.lang.Object[])> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherActivity$GetAddressAsyncTask
<com.gpsClassic.trackers.directions.WeatherActivity$GetAddressAsyncTask: android.location.Address doInBackground(java.lang.Void[])> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherActivity$GetAddressAsyncTask
<com.gpsClassic.trackers.directions.WeatherActivity$GetAddressAsyncTask: android.location.Address doInBackground(java.lang.Void[])> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("null", "null")
--------------------------------------------------------

<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r5 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r4 == null goto (branch)
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r5 == null goto (branch)
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherActivity$1
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> $r3 = r0.<com.gpsClassic.trackers.directions.WeatherActivity$1: com.gpsClassic.trackers.directions.WeatherActivity this$0>
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> $r1 := @caughtexception
<com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask: java.lang.Object doInBackground(java.lang.Object[])> --> r0 := @this: com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask
<com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask: org.json.JSONObject doInBackground(java.lang.String[])> --> r0 := @this: com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask
<com.gpsClassic.trackers.directions.models.WeatherFamous: org.json.JSONObject getWeatherJSON(java.lang.String,java.lang.String)> --> $r1 := @parameter0: java.lang.String
<com.gpsClassic.trackers.directions.models.WeatherFamous: org.json.JSONObject getWeatherJSON(java.lang.String,java.lang.String)> --> $r5 = virtualinvoke $r3.<java.net.URL: java.net.URLConnection openConnection()>()
--------------------------------------------------------

<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r4 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r1 = r0.<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: com.gpsClassic.trackers.directions.MyLocation this$0>
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $z0 == 0 goto $r5 = null
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r4 == null goto (branch)
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r4 == null goto (branch)
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherActivity$1
<com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask: java.lang.Object doInBackground(java.lang.Object[])> --> r0 := @this: com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask
<com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask: org.json.JSONObject doInBackground(java.lang.String[])> --> r0 := @this: com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask
<com.gpsClassic.trackers.directions.models.WeatherFamous: org.json.JSONObject getWeatherJSON(java.lang.String,java.lang.String)> --> $r1 := @parameter0: java.lang.String
<com.gpsClassic.trackers.directions.models.WeatherFamous: org.json.JSONObject getWeatherJSON(java.lang.String,java.lang.String)> --> $r5 = virtualinvoke $r3.<java.net.URL: java.net.URLConnection openConnection()>()
--------------------------------------------------------

<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r4 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r1 = r0.<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: com.gpsClassic.trackers.directions.MyLocation this$0>
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $z0 == 0 goto $r5 = null
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r4 == null goto (branch)
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r4 == null goto (branch)
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherActivity$1
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> $r3 = r0.<com.gpsClassic.trackers.directions.WeatherActivity$1: com.gpsClassic.trackers.directions.WeatherActivity this$0>
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> $r1 := @caughtexception
<com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask: java.lang.Object doInBackground(java.lang.Object[])> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask
<com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask: org.json.JSONObject doInBackground(java.lang.String[])> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask
<com.gpsClassic.trackers.directions.WeatherWeekForecast: org.json.JSONObject getWeatherJSON(java.lang.String,java.lang.String)> --> $r1 := @parameter0: java.lang.String
<com.gpsClassic.trackers.directions.WeatherWeekForecast: org.json.JSONObject getWeatherJSON(java.lang.String,java.lang.String)> --> $r5 = virtualinvoke $r3.<java.net.URL: java.net.URLConnection openConnection()>()
--------------------------------------------------------

<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r5 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r4 == null goto (branch)
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r5 == null goto $r1 = r0.<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: com.gpsClassic.trackers.directions.MyLocation this$0>
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherActivity$1
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> $r3 = r0.<com.gpsClassic.trackers.directions.WeatherActivity$1: com.gpsClassic.trackers.directions.WeatherActivity this$0>
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> $r1 := @caughtexception
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> $r8 = newarray (java.lang.String)[2]
<com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask: java.lang.Object doInBackground(java.lang.Object[])> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask
<com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask: java.lang.Object doInBackground(java.lang.Object[])> --> $r3 = (java.lang.String[]) $r2
<com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask: org.json.JSONObject doInBackground(java.lang.String[])> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask
<com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask: org.json.JSONObject doInBackground(java.lang.String[])> --> $r3 = $r2[0]
<com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask: org.json.JSONObject doInBackground(java.lang.String[])> --> $r5 := @caughtexception
<com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask: org.json.JSONObject doInBackground(java.lang.String[])> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("Error", "Cannot process JSON results", $r5)
--------------------------------------------------------

<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r4 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r1 = r0.<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: com.gpsClassic.trackers.directions.MyLocation this$0>
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $z0 == 0 goto $r5 = null
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r4 == null goto (branch)
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r4 == null goto (branch)
<com.gpsClassic.trackers.directions.WeatherDetails$1: void gotLocation(android.location.Location)> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherDetails$1
<com.gpsClassic.trackers.directions.WeatherDetails$GetAddressAsyncTask: java.lang.Object doInBackground(java.lang.Object[])> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherDetails$GetAddressAsyncTask
<com.gpsClassic.trackers.directions.WeatherDetails$GetAddressAsyncTask: android.location.Address doInBackground(java.lang.Void[])> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherDetails$GetAddressAsyncTask
<com.gpsClassic.trackers.directions.WeatherDetails$GetAddressAsyncTask: android.location.Address doInBackground(java.lang.Void[])> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("null", "null")
--------------------------------------------------------

<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r4 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r1 = r0.<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: com.gpsClassic.trackers.directions.MyLocation this$0>
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $z0 == 0 goto $r5 = null
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r4 == null goto (branch)
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r4 == null goto (branch)
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherActivity$1
<com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask: java.lang.Object doInBackground(java.lang.Object[])> --> r0 := @this: com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask
<com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask: org.json.JSONObject doInBackground(java.lang.String[])> --> r0 := @this: com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask
<com.gpsClassic.trackers.directions.models.WeatherFamous: org.json.JSONObject getWeatherJSON(java.lang.String,java.lang.String)> --> $r1 := @parameter0: java.lang.String
<com.gpsClassic.trackers.directions.models.WeatherFamous: org.json.JSONObject getWeatherJSON(java.lang.String,java.lang.String)> --> $r9 = virtualinvoke $r6.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
--------------------------------------------------------

<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r4 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r1 = r0.<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: com.gpsClassic.trackers.directions.MyLocation this$0>
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r4 == null goto (branch)
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherActivity$1
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> $r8 = newarray (java.lang.String)[2]
<com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask: java.lang.Object doInBackground(java.lang.Object[])> --> r0 := @this: com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask
<com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask: java.lang.Object doInBackground(java.lang.Object[])> --> $r3 = (java.lang.String[]) $r2
<com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask: org.json.JSONObject doInBackground(java.lang.String[])> --> r0 := @this: com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask
<com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask: org.json.JSONObject doInBackground(java.lang.String[])> --> $r3 = $r2[0]
<com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask: org.json.JSONObject doInBackground(java.lang.String[])> --> $r5 := @caughtexception
<com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask: org.json.JSONObject doInBackground(java.lang.String[])> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("Error", "Cannot process JSON results", $r5)
--------------------------------------------------------

<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r5 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r4 == null goto (branch)
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r5 == null goto (branch)
<com.gpsClassic.trackers.directions.WeatherDetails$1: void gotLocation(android.location.Location)> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherDetails$1
<com.gpsClassic.trackers.directions.WeatherDetails$GetAddressAsyncTask: java.lang.Object doInBackground(java.lang.Object[])> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherDetails$GetAddressAsyncTask
<com.gpsClassic.trackers.directions.WeatherDetails$GetAddressAsyncTask: android.location.Address doInBackground(java.lang.Void[])> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherDetails$GetAddressAsyncTask
<com.gpsClassic.trackers.directions.WeatherDetails$GetAddressAsyncTask: android.location.Address doInBackground(java.lang.Void[])> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("null", "null")
--------------------------------------------------------

<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r4 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r1 = r0.<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: com.gpsClassic.trackers.directions.MyLocation this$0>
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $z0 == 0 goto $r5 = null
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r4 == null goto (branch)
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r4 == null goto (branch)
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherActivity$1
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> $r3 = r0.<com.gpsClassic.trackers.directions.WeatherActivity$1: com.gpsClassic.trackers.directions.WeatherActivity this$0>
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> $r1 := @caughtexception
<com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask: java.lang.Object doInBackground(java.lang.Object[])> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask
<com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask: org.json.JSONObject doInBackground(java.lang.String[])> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask
<com.gpsClassic.trackers.directions.WeatherWeekForecast: org.json.JSONObject getWeatherJSON(java.lang.String,java.lang.String)> --> $r1 := @parameter0: java.lang.String
<com.gpsClassic.trackers.directions.WeatherWeekForecast: org.json.JSONObject getWeatherJSON(java.lang.String,java.lang.String)> --> $r9 = virtualinvoke $r6.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
--------------------------------------------------------

<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r4 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r1 = r0.<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: com.gpsClassic.trackers.directions.MyLocation this$0>
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $z0 == 0 goto $r5 = null
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r4 == null goto (branch)
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r4 == null goto (branch)
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherActivity$1
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> $r3 = r0.<com.gpsClassic.trackers.directions.WeatherActivity$1: com.gpsClassic.trackers.directions.WeatherActivity this$0>
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> $r1 := @caughtexception
<com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask: java.lang.Object doInBackground(java.lang.Object[])> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask
<com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask: java.lang.Object doInBackground(java.lang.Object[])> --> $r3 = (java.lang.String[]) $r2
<com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask: org.json.JSONObject doInBackground(java.lang.String[])> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask
<com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask: org.json.JSONObject doInBackground(java.lang.String[])> --> $r3 = $r2[0]
<com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask: org.json.JSONObject doInBackground(java.lang.String[])> --> $r5 := @caughtexception
<com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask: org.json.JSONObject doInBackground(java.lang.String[])> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("Error", "Cannot process JSON results", $r5)
--------------------------------------------------------

<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r5 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r4 == null goto (branch)
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r5 == null goto (branch)
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherActivity$1
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> $r3 = r0.<com.gpsClassic.trackers.directions.WeatherActivity$1: com.gpsClassic.trackers.directions.WeatherActivity this$0>
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> $r1 := @caughtexception
<com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask: java.lang.Object doInBackground(java.lang.Object[])> --> r0 := @this: com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask
<com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask: org.json.JSONObject doInBackground(java.lang.String[])> --> r0 := @this: com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask
<com.gpsClassic.trackers.directions.models.WeatherFamous: org.json.JSONObject getWeatherJSON(java.lang.String,java.lang.String)> --> $r1 := @parameter0: java.lang.String
<com.gpsClassic.trackers.directions.models.WeatherFamous: org.json.JSONObject getWeatherJSON(java.lang.String,java.lang.String)> --> $r9 = virtualinvoke $r6.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
--------------------------------------------------------

<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r5 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r4 == null goto (branch)
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r5 == null goto (branch)
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherActivity$1
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> $r3 = r0.<com.gpsClassic.trackers.directions.WeatherActivity$1: com.gpsClassic.trackers.directions.WeatherActivity this$0>
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> $r1 := @caughtexception
<com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask: java.lang.Object doInBackground(java.lang.Object[])> --> r0 := @this: com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask
<com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask: org.json.JSONObject doInBackground(java.lang.String[])> --> r0 := @this: com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask
<com.gpsClassic.trackers.directions.models.WeatherFamous: org.json.JSONObject getWeatherJSON(java.lang.String,java.lang.String)> --> $r1 := @parameter0: java.lang.String
<com.gpsClassic.trackers.directions.models.WeatherFamous: org.json.JSONObject getWeatherJSON(java.lang.String,java.lang.String)> --> specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)
--------------------------------------------------------

<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r5 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r4 == null goto (branch)
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r5 == null goto (branch)
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherActivity$1
<com.gpsClassic.trackers.directions.WeatherActivity$GetAddressAsyncTask: java.lang.Object doInBackground(java.lang.Object[])> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherActivity$GetAddressAsyncTask
<com.gpsClassic.trackers.directions.WeatherActivity$GetAddressAsyncTask: android.location.Address doInBackground(java.lang.Void[])> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherActivity$GetAddressAsyncTask
<com.gpsClassic.trackers.directions.WeatherActivity$GetAddressAsyncTask: android.location.Address doInBackground(java.lang.Void[])> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("null", "null")
--------------------------------------------------------

<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r5 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r4 == null goto (branch)
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r5 == null goto (branch)
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherActivity$1
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> $r3 = r0.<com.gpsClassic.trackers.directions.WeatherActivity$1: com.gpsClassic.trackers.directions.WeatherActivity this$0>
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> $r1 := @caughtexception
<com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask: java.lang.Object doInBackground(java.lang.Object[])> --> r0 := @this: com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask
<com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask: org.json.JSONObject doInBackground(java.lang.String[])> --> r0 := @this: com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask
<com.gpsClassic.trackers.directions.models.WeatherFamous: org.json.JSONObject getWeatherJSON(java.lang.String,java.lang.String)> --> $r1 := @parameter0: java.lang.String
<com.gpsClassic.trackers.directions.models.WeatherFamous: org.json.JSONObject getWeatherJSON(java.lang.String,java.lang.String)> --> $r9 = virtualinvoke $r6.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
--------------------------------------------------------

<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r4 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r1 = r0.<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: com.gpsClassic.trackers.directions.MyLocation this$0>
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $z0 == 0 goto $r5 = null
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r4 == null goto (branch)
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r4 == null goto (branch)
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherActivity$1
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> $r3 = r0.<com.gpsClassic.trackers.directions.WeatherActivity$1: com.gpsClassic.trackers.directions.WeatherActivity this$0>
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> $r1 := @caughtexception
<com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask: java.lang.Object doInBackground(java.lang.Object[])> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask
<com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask: org.json.JSONObject doInBackground(java.lang.String[])> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherWeekForecast$placeIdTask
<com.gpsClassic.trackers.directions.WeatherWeekForecast: org.json.JSONObject getWeatherJSON(java.lang.String,java.lang.String)> --> $r1 := @parameter0: java.lang.String
<com.gpsClassic.trackers.directions.WeatherWeekForecast: org.json.JSONObject getWeatherJSON(java.lang.String,java.lang.String)> --> $r9 = virtualinvoke $r6.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
--------------------------------------------------------

<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> $r5 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r4 == null goto (branch)
<com.gpsClassic.trackers.directions.MyLocation$GetLastLocation: void run()> --> if $r5 == null goto (branch)
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> r0 := @this: com.gpsClassic.trackers.directions.WeatherActivity$1
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> $r3 = r0.<com.gpsClassic.trackers.directions.WeatherActivity$1: com.gpsClassic.trackers.directions.WeatherActivity this$0>
<com.gpsClassic.trackers.directions.WeatherActivity$1: void gotLocation(android.location.Location)> --> $r1 := @caughtexception
<com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask: java.lang.Object doInBackground(java.lang.Object[])> --> r0 := @this: com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask
<com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask: java.lang.Object doInBackground(java.lang.Object[])> --> $r3 = (java.lang.String[]) $r2
<com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask: org.json.JSONObject doInBackground(java.lang.String[])> --> r0 := @this: com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask
<com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask: org.json.JSONObject doInBackground(java.lang.String[])> --> $r3 = $r2[0]
<com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask: org.json.JSONObject doInBackground(java.lang.String[])> --> $r5 := @caughtexception
<com.gpsClassic.trackers.directions.models.WeatherFamous$placeIdTask: org.json.JSONObject doInBackground(java.lang.String[])> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("Error", "Cannot process JSON results", $r5)
--------------------------------------------------------

