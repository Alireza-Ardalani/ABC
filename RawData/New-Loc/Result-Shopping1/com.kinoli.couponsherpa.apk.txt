Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLatitude()>()
Sink=> $r4 = virtualinvoke $r3.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, null, null, null, null)
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLongitude()>()
Sink=> $r4 = virtualinvoke $r3.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, null, null, null, null)
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLongitude()>()
Sink=> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("errors", $r5)
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLatitude()>()
Sink=> virtualinvoke $r2.<java.io.OutputStreamWriter: void write(java.lang.String)>("\n")
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLatitude()>()
Sink=> virtualinvoke $r5.<java.io.OutputStream: void write(byte[],int,int)>($r2, $i4, $i3)
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLatitude()>()
Sink=> virtualinvoke $r2.<java.io.OutputStreamWriter: void write(java.lang.String)>($r1)
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLongitude()>()
Sink=> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r5, $r4)
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLatitude()>()
Sink=> virtualinvoke $r2.<java.io.OutputStreamWriter: void write(java.lang.String)>($r1)
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLatitude()>()
Sink=> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("errors", $r5)
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLatitude()>()
Sink=> virtualinvoke $r2.<java.io.OutputStreamWriter: void write(java.lang.String)>("\n")
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLatitude()>()
Sink=> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, $r2)
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLongitude()>()
Sink=> virtualinvoke $r2.<java.io.OutputStreamWriter: void write(java.lang.String)>($r1)
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLatitude()>()
Sink=> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r2)
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLatitude()>()
Sink=> virtualinvoke $r2.<java.io.OutputStreamWriter: void write(java.lang.String)>("\n")
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLongitude()>()
Sink=> virtualinvoke $r2.<java.io.OutputStreamWriter: void write(java.lang.String)>("\n")
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLatitude()>()
Sink=> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r6)
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLongitude()>()
Sink=> virtualinvoke $r5.<java.io.OutputStream: void write(byte[],int,int)>($r2, $i4, $i3)
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLongitude()>()
Sink=> virtualinvoke $r2.<java.io.OutputStreamWriter: void write(java.lang.String)>($r1)
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLongitude()>()
Sink=> virtualinvoke $r2.<java.io.OutputStreamWriter: void write(java.lang.String)>("\n")
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLatitude()>()
Sink=> virtualinvoke $r2.<java.io.OutputStreamWriter: void write(java.lang.String)>($r1)
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLatitude()>()
Sink=> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r1, $r2)
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLatitude()>()
Sink=> virtualinvoke $r0.<java.net.Socket: void close()>()
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLongitude()>()
Sink=> virtualinvoke $r0.<java.net.Socket: void close()>()
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLongitude()>()
Sink=> virtualinvoke $r2.<java.io.OutputStreamWriter: void write(java.lang.String)>($r1)
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLatitude()>()
Sink=> virtualinvoke $r2.<java.io.OutputStreamWriter: void write(java.lang.String)>($r1)
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLongitude()>()
Sink=> virtualinvoke $r2.<java.io.OutputStreamWriter: void write(java.lang.String)>("\n")
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLongitude()>()
Sink=> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, $r2)
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLatitude()>()
Sink=> virtualinvoke $r2.<java.io.OutputStreamWriter: void write(java.lang.String)>("\n")
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLongitude()>()
Sink=> virtualinvoke $r16.<java.net.Socket: void close()>()
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLongitude()>()
Sink=> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r1, $r2)
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLongitude()>()
Sink=> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r6)
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLongitude()>()
Sink=> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r2)
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLongitude()>()
Sink=> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r3, $r1)
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLatitude()>()
Sink=> virtualinvoke $r16.<java.net.Socket: void close()>()
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLongitude()>()
Sink=> virtualinvoke $r2.<java.io.OutputStreamWriter: void write(java.lang.String)>("\n")
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLatitude()>()
Sink=> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r3, $r1)
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLatitude()>()
Sink=> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r5, $r4)
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
Source=> $d0 = virtualinvoke $r8.<android.location.Location: double getLongitude()>()
Sink=> virtualinvoke $r2.<java.io.OutputStreamWriter: void write(java.lang.String)>($r1)
Component=> com.inmarket.m2m.internal.geofence.locations.LocationFixService
ComponentColor=> RED
Category: LEGIT
-----------------------------------------------------------------
