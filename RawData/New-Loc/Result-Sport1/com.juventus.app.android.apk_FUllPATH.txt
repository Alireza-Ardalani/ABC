<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r6 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r11 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: void run()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void access$2900(org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>("</stream:stream>")
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r7 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r12 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<java.lang.Thread: void run()> --> target = this.<java.lang.Thread: java.lang.Runnable target0>
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: void run()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: void run()> --> $r1 = r0.<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter this$1>
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void access$2900(org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: boolean done()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> $z0 = specialinvoke r0.<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: boolean done()>()
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> $r11 = r0.<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: org.jivesoftware.smack.util.ArrayBlockingQueueWithShutdown queue>
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> $r18 := @caughtexception
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>("</stream:stream>")
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r6 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r11 := @caughtexception
<tv.tok.h.a$1: void run()> --> r0 := @this: tv.tok.h.a$1
<tv.tok.h.a$1: void run()> --> $r5 = <tv.tok.a: java.lang.String m>
<tv.tok.h.a$1: void run()> --> $r12 := @caughtexception
<tv.tok.h.a$1: void run()> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "errore while performing geolocation call", $r12)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r7 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r12 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<tv.tok.q.e: void run()> --> r0 := @this: tv.tok.q.e
<tv.tok.chat.d$3: void a()> --> r0 := @this: tv.tok.chat.d$3
<tv.tok.chat.d: android.database.Cursor a(android.content.Context,java.lang.String,java.lang.String[],java.lang.String,java.lang.Object[])> --> $r0 := @parameter0: android.content.Context
<tv.tok.chat.d: android.database.Cursor b(android.content.Context,java.lang.String,java.lang.String[],java.lang.String,java.lang.Object[])> --> $r0 := @parameter0: android.content.Context
<tv.tok.chat.d: android.database.Cursor b(android.content.Context,java.lang.String,java.lang.String[],java.lang.String,java.lang.Object[])> --> $r8 = virtualinvoke $r5.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r6, $r2, $r3, $r7, null)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r6 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r11 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<tv.tok.q.e: void run()> --> r0 := @this: tv.tok.q.e
<tv.tok.chat.d$3: void a()> --> r0 := @this: tv.tok.chat.d$3
<tv.tok.chat.d: android.database.Cursor a(android.content.Context,java.lang.String,java.lang.String[],java.lang.String,java.lang.Object[])> --> $r0 := @parameter0: android.content.Context
<tv.tok.chat.d: android.database.Cursor b(android.content.Context,java.lang.String,java.lang.String[],java.lang.String,java.lang.Object[])> --> $r0 := @parameter0: android.content.Context
<tv.tok.chat.d: android.database.Cursor b(android.content.Context,java.lang.String,java.lang.String[],java.lang.String,java.lang.Object[])> --> $r8 = virtualinvoke $r5.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r6, $r2, $r3, $r7, null)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r7 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r12 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: void run()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void access$2900(org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>($r10)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r6 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r11 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<tv.tok.b$c: void run()> --> r0 := @this: tv.tok.b$c
<tv.tok.a: void a(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<tv.tok.a: void a(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r0, $r1)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r7 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r12 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<java.lang.Thread: void run()> --> target = this.<java.lang.Thread: java.lang.Runnable target0>
<tv.tok.b$c: void run()> --> r0 := @this: tv.tok.b$c
<tv.tok.b$c: void run()> --> $r3 = r0.<tv.tok.b$c: tv.tok.b a>
<tv.tok.b$c: void run()> --> $r6 := @caughtexception
<tv.tok.b$c: void run()> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "unable to start capturing audio", $r6)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r6 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r11 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: void run()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void access$2900(org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>($r10)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r7 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r12 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<java.lang.Thread: void run()> --> target = this.<java.lang.Thread: java.lang.Runnable target0>
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: void run()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: void run()> --> $r1 = r0.<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter this$1>
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void access$2900(org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> $r11 = r0.<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: org.jivesoftware.smack.util.ArrayBlockingQueueWithShutdown queue>
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> $r12 := @caughtexception
<org.jivesoftware.smack.tcp.XMPPTCPConnection: void access$2800(org.jivesoftware.smack.tcp.XMPPTCPConnection,java.lang.Exception)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection
<org.jivesoftware.smack.tcp.XMPPTCPConnection: void notifyConnectionError(java.lang.Exception)> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection
<org.jivesoftware.smack.tcp.XMPPTCPConnection: void instantShutdown()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection
<org.jivesoftware.smack.tcp.XMPPTCPConnection: void shutdown(boolean)> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection
<org.jivesoftware.smack.tcp.XMPPTCPConnection: void shutdown(boolean)> --> virtualinvoke $r5.<java.net.Socket: void close()>()
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r6 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r11 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: void run()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void access$2900(org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>($r10)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r6 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r11 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: void run()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void access$2900(org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>($r10)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r7 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r12 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: void run()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void access$2900(org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>($r10)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r7 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r12 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader$1: void run()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader$1
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader: void access$300(org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader: void parsePackets()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader
<org.jivesoftware.smack.tcp.XMPPTCPConnection: void access$1600(org.jivesoftware.smack.tcp.XMPPTCPConnection)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection
<org.jivesoftware.smack.tcp.XMPPTCPConnection: void initReaderAndWriter()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection
<org.jivesoftware.smack.tcp.XMPPTCPConnection: void initReaderAndWriter()> --> $r2 = virtualinvoke $r1.<java.net.Socket: java.io.InputStream getInputStream()>()
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r7 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r12 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: void run()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void access$2900(org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>($r10)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r6 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r11 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<tv.tok.q.e: void run()> --> r0 := @this: tv.tok.q.e
<tv.tok.chat.d$2: void a()> --> r0 := @this: tv.tok.chat.d$2
<tv.tok.chat.d: int a(android.content.Context,java.lang.String,java.lang.String,java.lang.Object[])> --> $r0 := @parameter0: android.content.Context
<tv.tok.chat.d: int b(android.content.Context,java.lang.String,java.lang.String,java.lang.Object[])> --> $r0 := @parameter0: android.content.Context
<tv.tok.chat.d: int b(android.content.Context,java.lang.String,java.lang.String,java.lang.Object[])> --> $i0 = virtualinvoke $r4.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>($r5, $r2, $r6)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r7 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r12 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<java.lang.Thread: void run()> --> target = this.<java.lang.Thread: java.lang.Runnable target0>
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: void run()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: void run()> --> $r1 = r0.<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter this$1>
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void access$2900(org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: boolean done()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> $z0 = specialinvoke r0.<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: boolean done()>()
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> $r11 = r0.<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: org.jivesoftware.smack.util.ArrayBlockingQueueWithShutdown queue>
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> $r18 := @caughtexception
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>("</stream:stream>")
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r6 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r11 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: void run()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void access$2900(org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>("</stream:stream>")
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r6 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r11 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: void run()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void access$2900(org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>($r10)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r6 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r11 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: void run()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void access$2900(org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>($r10)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r7 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r12 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: void run()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void access$2900(org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>($r10)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r6 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r11 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<tv.tok.q.e: void run()> --> r0 := @this: tv.tok.q.e
<tv.tok.chat.d$3: void a()> --> r0 := @this: tv.tok.chat.d$3
<tv.tok.chat.d: tv.tok.chat.Chat a(android.database.Cursor)> --> $r0 := @parameter0: android.database.Cursor
<tv.tok.chat.d: tv.tok.user.User a(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<tv.tok.chat.d: tv.tok.user.User a(java.lang.String)> --> $r3 = staticinvoke <tv.tok.user.UserManager: tv.tok.user.User c(android.content.Context,java.lang.String)>($r2, $r0)
<tv.tok.chat.d: tv.tok.user.User a(java.lang.String)> --> $r4 := @caughtexception
<tv.tok.chat.d: tv.tok.user.User a(java.lang.String)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, $r0, $r4)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r6 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r11 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: void run()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void access$2900(org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>($r10)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r7 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r12 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<tv.tok.q.e: void run()> --> r0 := @this: tv.tok.q.e
<tv.tok.d.d$1: void a()> --> r0 := @this: tv.tok.d.d$1
<tv.tok.d.d: void a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<tv.tok.d.d: void b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<tv.tok.d.e: void a(android.content.Context,tv.tok.d.c)> --> $r0 := @parameter0: android.content.Context
<tv.tok.d.e: void a(android.content.Context,tv.tok.d.c)> --> specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r2)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r7 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r12 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<java.lang.Thread: void run()> --> target = this.<java.lang.Thread: java.lang.Runnable target0>
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: void run()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: void run()> --> $r1 = r0.<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter this$1>
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void access$2900(org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: boolean done()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> $z0 = specialinvoke r0.<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: boolean done()>()
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> $r11 = r0.<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: org.jivesoftware.smack.util.ArrayBlockingQueueWithShutdown queue>
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> $r18 := @caughtexception
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>("</stream:stream>")
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r7 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r12 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<tv.tok.q.e: void run()> --> r0 := @this: tv.tok.q.e
<tv.tok.chat.d$2: void a()> --> r0 := @this: tv.tok.chat.d$2
<tv.tok.chat.d: int a(android.content.Context,java.lang.String,java.lang.String,java.lang.Object[])> --> $r0 := @parameter0: android.content.Context
<tv.tok.chat.d: int b(android.content.Context,java.lang.String,java.lang.String,java.lang.Object[])> --> $r0 := @parameter0: android.content.Context
<tv.tok.chat.d: int b(android.content.Context,java.lang.String,java.lang.String,java.lang.Object[])> --> $i0 = virtualinvoke $r4.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>($r5, $r2, $r6)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r7 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r12 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<tv.tok.q.e: void run()> --> r0 := @this: tv.tok.q.e
<tv.tok.chat.d$3: void a()> --> r0 := @this: tv.tok.chat.d$3
<tv.tok.chat.d: tv.tok.chat.Chat a(android.database.Cursor)> --> $r0 := @parameter0: android.database.Cursor
<tv.tok.chat.d: tv.tok.user.User a(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<tv.tok.chat.d: tv.tok.user.User a(java.lang.String)> --> $r3 = staticinvoke <tv.tok.user.UserManager: tv.tok.user.User c(android.content.Context,java.lang.String)>($r2, $r0)
<tv.tok.chat.d: tv.tok.user.User a(java.lang.String)> --> $r4 := @caughtexception
<tv.tok.chat.d: tv.tok.user.User a(java.lang.String)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, $r0, $r4)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r7 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r12 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<tv.tok.q.e: void run()> --> r0 := @this: tv.tok.q.e
<tv.tok.d.d$1: void a()> --> r0 := @this: tv.tok.d.d$1
<tv.tok.d.d: void a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<tv.tok.d.d: void b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<tv.tok.d.d: void b(android.content.Context)> --> $r6 = $r5.<tv.tok.d.d$a: tv.tok.d.c a>
<tv.tok.d.d: void b(android.content.Context)> --> $r7 := @caughtexception
<tv.tok.d.d: void b(android.content.Context)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, "unable to send crash report", $r7)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r7 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r12 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<tv.tok.b$c: void run()> --> r0 := @this: tv.tok.b$c
<tv.tok.b$c: void run()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, "CaptureRoutine stopped")
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r7 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r12 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<tv.tok.ui.groupphoto.SummaryActivity$1: void run()> --> r0 := @this: tv.tok.ui.groupphoto.SummaryActivity$1
<tv.tok.ui.groupphoto.SummaryActivity$1: void run()> --> $r2 = r0.<tv.tok.ui.groupphoto.SummaryActivity$1: tv.tok.ui.groupphoto.SummaryActivity a>
<tv.tok.ui.groupphoto.SummaryActivity$1: void run()> --> $r11 := @caughtexception
<tv.tok.ui.groupphoto.SummaryActivity$1: void run()> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "unable to download social photo", $r11)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r7 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r12 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<java.lang.Thread: void run()> --> target = this.<java.lang.Thread: java.lang.Runnable target0>
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: void run()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: void run()> --> $r1 = r0.<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter this$1>
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void access$2900(org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: boolean done()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> $z0 = specialinvoke r0.<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: boolean done()>()
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> $r11 = r0.<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: org.jivesoftware.smack.util.ArrayBlockingQueueWithShutdown queue>
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> $r18 := @caughtexception
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>("</stream:stream>")
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r6 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r11 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<tv.tok.q.e: void run()> --> r0 := @this: tv.tok.q.e
<tv.tok.d.d$1: void a()> --> r0 := @this: tv.tok.d.d$1
<tv.tok.d.d: void a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<tv.tok.d.d: void b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<tv.tok.d.e: void a(android.content.Context,tv.tok.d.c)> --> $r0 := @parameter0: android.content.Context
<tv.tok.d.e: void a(android.content.Context,tv.tok.d.c)> --> specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r2)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r6 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r11 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<tv.tok.q.e: void run()> --> r0 := @this: tv.tok.q.e
<tv.tok.d.d$1: void a()> --> r0 := @this: tv.tok.d.d$1
<tv.tok.d.d: void a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<tv.tok.d.d: void b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<tv.tok.d.d: void b(android.content.Context)> --> $r6 = $r5.<tv.tok.d.d$a: tv.tok.d.c a>
<tv.tok.d.d: void b(android.content.Context)> --> $r7 := @caughtexception
<tv.tok.d.d: void b(android.content.Context)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, "unable to send crash report", $r7)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r7 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r12 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader$1: void run()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader$1
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader: void access$300(org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader: void parsePackets()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader
<org.jivesoftware.smack.tcp.XMPPTCPConnection: void access$1600(org.jivesoftware.smack.tcp.XMPPTCPConnection)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection
<org.jivesoftware.smack.tcp.XMPPTCPConnection: void initReaderAndWriter()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection
<org.jivesoftware.smack.tcp.XMPPTCPConnection: void initReaderAndWriter()> --> $r4 = virtualinvoke $r1.<java.net.Socket: java.io.OutputStream getOutputStream()>()
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r7 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r12 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: void run()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void access$2900(org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>($r10)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r6 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r11 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader$1: void run()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader$1
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader: void access$300(org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader: void parsePackets()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader
<org.jivesoftware.smack.tcp.XMPPTCPConnection: void access$1600(org.jivesoftware.smack.tcp.XMPPTCPConnection)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection
<org.jivesoftware.smack.tcp.XMPPTCPConnection: void initReaderAndWriter()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection
<org.jivesoftware.smack.tcp.XMPPTCPConnection: void initReaderAndWriter()> --> $r2 = virtualinvoke $r1.<java.net.Socket: java.io.InputStream getInputStream()>()
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r7 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r12 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: void run()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void access$2900(org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>($r10)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r7 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r12 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<tv.tok.b$c: void run()> --> r0 := @this: tv.tok.b$c
<tv.tok.a: void a(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<tv.tok.a: void a(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r0, $r1)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r7 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r12 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: void run()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void access$2900(org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>($r10)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r6 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r11 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: void run()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void access$2900(org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>("</stream:stream>")
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r6 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r11 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader$1: void run()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader$1
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader: void access$300(org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader: void parsePackets()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader
<org.jivesoftware.smack.AbstractXMPPConnection: void disconnect()> --> r0 := @this: org.jivesoftware.smack.AbstractXMPPConnection
<org.jivesoftware.smack.AbstractXMPPConnection: void disconnect(org.jivesoftware.smack.packet.Presence)> --> r0 := @this: org.jivesoftware.smack.AbstractXMPPConnection
<org.jivesoftware.smack.tcp.XMPPTCPConnection: void shutdown()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection
<org.jivesoftware.smack.tcp.XMPPTCPConnection: void shutdown(boolean)> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection
<org.jivesoftware.smack.tcp.XMPPTCPConnection: void shutdown(boolean)> --> virtualinvoke $r5.<java.net.Socket: void close()>()
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r6 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r11 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader$1: void run()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader$1
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader: void access$300(org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader: void parsePackets()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader
<org.jivesoftware.smack.tcp.XMPPTCPConnection: void access$1600(org.jivesoftware.smack.tcp.XMPPTCPConnection)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection
<org.jivesoftware.smack.tcp.XMPPTCPConnection: void initReaderAndWriter()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection
<org.jivesoftware.smack.tcp.XMPPTCPConnection: void initReaderAndWriter()> --> $r4 = virtualinvoke $r1.<java.net.Socket: java.io.OutputStream getOutputStream()>()
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r6 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r11 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<tv.tok.b$c: void run()> --> r0 := @this: tv.tok.b$c
<tv.tok.b$c: void run()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, "CaptureRoutine stopped")
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r6 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r11 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<tv.tok.ui.groupphoto.SummaryActivity$1: void run()> --> r0 := @this: tv.tok.ui.groupphoto.SummaryActivity$1
<tv.tok.ui.groupphoto.SummaryActivity$1: void run()> --> $r3 = r0.<tv.tok.ui.groupphoto.SummaryActivity$1: tv.tok.ui.groupphoto.SummaryActivity a>
<tv.tok.ui.groupphoto.SummaryActivity$1: void run()> --> $r11 := @caughtexception
<tv.tok.ui.groupphoto.SummaryActivity$1: void run()> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "unable to download social photo", $r11)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r6 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r11 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: void run()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void access$2900(org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>($r10)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r6 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r11 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: void run()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void access$2900(org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>($r10)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r7 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r12 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: void run()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void access$2900(org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>($r10)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r6 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r11 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1: void run()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter$1
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void access$2900(org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter)> --> $r0 := @parameter0: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> r0 := @this: org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter
<org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketWriter: void writePackets()> --> virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>("</stream:stream>")
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r6 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r11 := @caughtexception
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<tv.tok.b$c: void run()> --> r0 := @this: tv.tok.b$c
<tv.tok.b$c: void run()> --> $r17 = new android.media.AudioRecord
<tv.tok.b$c: void run()> --> $r6 := @caughtexception
<tv.tok.b$c: void run()> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "unable to start capturing audio", $r6)
--------------------------------------------------------

<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r7 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<tv.tok.h.a: void a(android.content.Context,java.lang.String)> --> $r12 := @caughtexception
<tv.tok.h.a$1: void run()> --> r0 := @this: tv.tok.h.a$1
<tv.tok.h.a$1: void run()> --> $r5 = <tv.tok.a: java.lang.String m>
<tv.tok.h.a$1: void run()> --> $r12 := @caughtexception
<tv.tok.h.a$1: void run()> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "errore while performing geolocation call", $r12)
--------------------------------------------------------

