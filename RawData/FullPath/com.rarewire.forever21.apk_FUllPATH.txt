<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r5 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> $r4 = interfaceinvoke $r3.<com.qsl.faar.service.location.d: com.qsl.faar.service.location.b a()>()
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> if $r4 == null goto interfaceinvoke $r1.<com.qsl.faar.service.b: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.gimbal.internal.location.services.d$1: void a(int,java.lang.String)> --> r0 := @this: com.gimbal.internal.location.services.d$1
<com.gimbal.d.c: void d(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.d.c
<org.slf4j.impl.AndroidLogger: void warn(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<com.gimbal.logging.capture.LogCapture: void capture(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)> --> $r3 := @parameter0: java.lang.String
<com.gimbal.logging.capture.LogCapture: void logEntry(com.gimbal.logging.capture.LogCapture$LogEntry)> --> $r0 := @parameter0: com.gimbal.logging.capture.LogCapture$LogEntry
<com.gimbal.logging.capture.LogCapture: void notifyDests(com.gimbal.logging.capture.LogCapture$LogEntry)> --> $r0 := @parameter0: com.gimbal.logging.capture.LogCapture$LogEntry
<com.gimbal.logging.capture.LogCapture: void notifyDests(com.gimbal.logging.capture.LogCapture$LogEntry)> --> $z0 = interfaceinvoke $r4.<com.gimbal.logging.capture.LogDest: boolean log(com.gimbal.logging.capture.LogCapture$LogEntry)>($r0)
<com.gimbal.logging.capture.LogCapture: void notifyDests(com.gimbal.logging.capture.LogCapture$LogEntry)> --> $r9 := @caughtexception
<com.gimbal.logging.capture.LogCapture: void notifyDests(com.gimbal.logging.capture.LogCapture$LogEntry)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("Log Capture", "Listener failed", $r9)
--------------------------------------------------------

<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $d0 = virtualinvoke $r5.<android.location.Location: double getLatitude()>()
<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> $r4 = interfaceinvoke $r3.<com.qsl.faar.service.location.d: com.qsl.faar.service.location.b a()>()
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> if $r4 == null goto interfaceinvoke $r1.<com.qsl.faar.service.b: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.b,com.qsl.faar.service.b)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.d: void b(com.qsl.faar.service.location.b,com.qsl.faar.service.b)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.d$1: void a(int,java.lang.String)> --> r0 := @this: com.qsl.faar.service.b.d$1
<com.qsl.faar.service.b.d: void <clinit>()> --> nop
<com.gimbal.d.b: com.gimbal.d.a a(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.gimbal.d.a: void <init>(java.lang.String)> --> r0 := @this: com.gimbal.d.a
<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()> --> $i0 = <org.slf4j.LoggerFactory: int INITIALIZATION_STATE>
<org.slf4j.impl.StaticLoggerBinder: void <clinit>()> --> nop
<org.slf4j.impl.StaticLoggerBinder: void <init>()> --> r0 := @this: org.slf4j.impl.StaticLoggerBinder
<org.slf4j.impl.StaticLoggerBinder: void <init>()> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("-----", "Using android logger factory")
--------------------------------------------------------

<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r5 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> $r4 = interfaceinvoke $r3.<com.qsl.faar.service.location.d: com.qsl.faar.service.location.b a()>()
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> if $r4 == null goto interfaceinvoke $r1.<com.qsl.faar.service.b: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.b,com.qsl.faar.service.b)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.d: void b(com.qsl.faar.service.location.b,com.qsl.faar.service.b)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.d: void b(com.qsl.faar.service.location.b,com.qsl.faar.service.b)> --> $d0 = $r2.<com.qsl.faar.service.location.b: double a>
<com.qsl.faar.service.b.d: void b(com.qsl.faar.service.location.b,com.qsl.faar.service.b)> --> $r8 := @caughtexception
<com.qsl.faar.service.b.d: void a(java.lang.Throwable,com.qsl.faar.service.b)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.d$1: void a(int,java.lang.String)> --> r0 := @this: com.qsl.faar.service.b.d$1
<com.gimbal.android.jobs.b: void g()> --> r0 := @this: com.gimbal.android.jobs.b
<com.gimbal.android.jobs.c: void d()> --> r0 := @this: com.gimbal.android.jobs.c
<com.gimbal.android.jobs.c: void e()> --> r0 := @this: com.gimbal.android.jobs.c
<com.gimbal.android.jobs.c: void f()> --> r0 := @this: com.gimbal.android.jobs.c
<com.gimbal.android.jobs.AlarmWakeupManager: void a()> --> r0 := @this: com.gimbal.android.jobs.AlarmWakeupManager
<com.gimbal.android.jobs.AlarmWakeupManager: void a(long)> --> r0 := @this: com.gimbal.android.jobs.AlarmWakeupManager
<com.gimbal.android.util.b: void b(java.lang.String,long)> --> r0 := @this: com.gimbal.android.util.b
<com.gimbal.android.util.b: void b(java.lang.String,long)> --> interfaceinvoke $r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("JM_NEXT_ALARM", $l0)
--------------------------------------------------------

<com.gimbal.proximity.core.g.a.a: com.gimbal.proximity.core.g.c a()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.gimbal.proximity.core.g.a.a: com.gimbal.proximity.core.g.c a()> --> if $r4 == null goto return null
<com.gimbal.proximity.core.g.a.a: com.gimbal.proximity.core.g.c a()> --> $r5 = staticinvoke <com.gimbal.proximity.core.g.a.a: com.gimbal.proximity.core.g.c a(android.location.Location)>($r4)
<com.gimbal.internal.location.services.a: void b(com.gimbal.proximity.impl.InternalBeaconFenceVisit)> --> $r16 = interfaceinvoke $r15.<com.gimbal.proximity.core.g.a: com.gimbal.proximity.core.g.c a()>()
<com.gimbal.internal.location.services.a: void b(com.gimbal.proximity.impl.InternalBeaconFenceVisit)> --> if $r16 == null goto $r19 = staticinvoke <com.gimbal.internal.location.services.a: com.gimbal.internal.location.services.InternalPlaceEvent$InternalPlaceEventFenceType c(com.gimbal.proximity.impl.InternalBeaconFenceVisit)>($r3)
<com.gimbal.internal.location.services.a: void b(com.gimbal.proximity.impl.InternalBeaconFenceVisit)> --> $r26 := @caughtexception
<com.gimbal.internal.persistance.q$a: void a()> --> r0 := @this: com.gimbal.internal.persistance.q$a
<com.gimbal.internal.persistance.q: void <clinit>()> --> nop
<com.gimbal.d.b: com.gimbal.d.a a(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.gimbal.d.a: void <init>(java.lang.String)> --> r0 := @this: com.gimbal.d.a
<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()> --> $i0 = <org.slf4j.LoggerFactory: int INITIALIZATION_STATE>
<org.slf4j.impl.StaticLoggerBinder: void <clinit>()> --> nop
<org.slf4j.impl.StaticLoggerBinder: void <init>()> --> r0 := @this: org.slf4j.impl.StaticLoggerBinder
<org.slf4j.impl.StaticLoggerBinder: void <init>()> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("-----", "Using android logger factory")
--------------------------------------------------------

<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $d0 = virtualinvoke $r5.<android.location.Location: double getLatitude()>()
<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> $r4 = interfaceinvoke $r3.<com.qsl.faar.service.location.d: com.qsl.faar.service.location.b a()>()
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> if $r4 == null goto interfaceinvoke $r1.<com.qsl.faar.service.b: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.b,com.qsl.faar.service.b)> --> r0 := @this: com.qsl.faar.service.b.d
<com.gimbal.internal.cache.a: java.lang.Object a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.a
<com.gimbal.internal.cache.a: java.lang.Object a(java.lang.String)> --> $r2 = r0.<com.gimbal.internal.cache.a: com.gimbal.internal.cache.c a>
<com.gimbal.internal.cache.d: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.d
<com.gimbal.internal.cache.d: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> $r1 = r0.<com.gimbal.internal.cache.d: com.gimbal.internal.cache.c a>
<com.gimbal.internal.cache.e: void a(java.lang.String,com.gimbal.internal.cache.CacheEntry)> --> r0 := @this: com.gimbal.internal.cache.e
<com.gimbal.internal.cache.e: void a(java.lang.String,com.gimbal.internal.cache.CacheEntry)> --> $r3 = r0.<com.gimbal.internal.cache.e: com.gimbal.internal.cache.b d>
<com.gimbal.internal.cache.b: java.lang.String a(com.gimbal.internal.cache.CacheEntry)> --> r0 := @this: com.gimbal.internal.cache.b
<com.gimbal.internal.cache.b: java.lang.String a(com.gimbal.internal.cache.CacheEntry)> --> $r3 = r0.<com.gimbal.internal.cache.b: com.gimbal.internal.json.JsonMapper a>
<com.gimbal.internal.cache.b: java.lang.String a(com.gimbal.internal.cache.CacheEntry)> --> $r4 := @caughtexception
<com.gimbal.d.c: void e(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.d.c
<org.slf4j.impl.AndroidLogger: void error(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<org.slf4j.impl.AndroidLogger: void error(java.lang.String,java.lang.Object[])> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, $r4)
--------------------------------------------------------

<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $d0 = virtualinvoke $r5.<android.location.Location: double getLatitude()>()
<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> $r4 = interfaceinvoke $r3.<com.qsl.faar.service.location.d: com.qsl.faar.service.location.b a()>()
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> if $r4 == null goto interfaceinvoke $r1.<com.qsl.faar.service.b: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.b,com.qsl.faar.service.b)> --> r0 := @this: com.qsl.faar.service.b.d
<com.gimbal.internal.cache.a: java.lang.Object a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.a
<com.gimbal.internal.cache.d: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.d
<com.gimbal.internal.cache.e: void a(java.lang.String,com.gimbal.internal.cache.CacheEntry)> --> r0 := @this: com.gimbal.internal.cache.e
<com.gimbal.internal.cache.e: void a(java.lang.String,com.gimbal.internal.cache.CacheEntry)> --> interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r1, $r4)
--------------------------------------------------------

<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $d1 = virtualinvoke $r5.<android.location.Location: double getLongitude()>()
<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> $r4 = interfaceinvoke $r3.<com.qsl.faar.service.location.d: com.qsl.faar.service.location.b a()>()
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> if $r4 == null goto interfaceinvoke $r1.<com.qsl.faar.service.b: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.b,com.qsl.faar.service.b)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.d: void b(com.qsl.faar.service.location.b,com.qsl.faar.service.b)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.d$1: void a(int,java.lang.String)> --> r0 := @this: com.qsl.faar.service.b.d$1
<com.gimbal.android.jobs.b: void g()> --> r0 := @this: com.gimbal.android.jobs.b
<com.gimbal.android.jobs.c: void d()> --> r0 := @this: com.gimbal.android.jobs.c
<com.gimbal.android.jobs.c: void e()> --> r0 := @this: com.gimbal.android.jobs.c
<com.gimbal.android.jobs.c: void f()> --> r0 := @this: com.gimbal.android.jobs.c
<com.gimbal.android.jobs.AlarmWakeupManager: void a()> --> r0 := @this: com.gimbal.android.jobs.AlarmWakeupManager
<com.gimbal.android.jobs.AlarmWakeupManager: void a(long)> --> r0 := @this: com.gimbal.android.jobs.AlarmWakeupManager
<com.gimbal.android.util.b: void b(java.lang.String,long)> --> r0 := @this: com.gimbal.android.util.b
<com.gimbal.android.util.b: void b(java.lang.String,long)> --> interfaceinvoke $r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("JM_NEXT_ALARM", $l0)
--------------------------------------------------------

<com.gimbal.proximity.core.g.a.a: com.gimbal.proximity.core.g.c a()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.gimbal.proximity.core.g.a.a: com.gimbal.proximity.core.g.c a()> --> if $r4 == null goto return null
<com.gimbal.proximity.core.g.a.a: com.gimbal.proximity.core.g.c a()> --> $r5 = staticinvoke <com.gimbal.proximity.core.g.a.a: com.gimbal.proximity.core.g.c a(android.location.Location)>($r4)
<com.gimbal.internal.location.services.a: void b(com.gimbal.proximity.impl.InternalBeaconFenceVisit)> --> $r16 = interfaceinvoke $r15.<com.gimbal.proximity.core.g.a: com.gimbal.proximity.core.g.c a()>()
<com.gimbal.internal.location.services.a: void b(com.gimbal.proximity.impl.InternalBeaconFenceVisit)> --> if $r16 == null goto $r19 = staticinvoke <com.gimbal.internal.location.services.a: com.gimbal.internal.location.services.InternalPlaceEvent$InternalPlaceEventFenceType c(com.gimbal.proximity.impl.InternalBeaconFenceVisit)>($r3)
<com.gimbal.internal.persistance.b: boolean m()> --> r0 := @this: com.gimbal.internal.persistance.b
<com.gimbal.internal.persistance.b: com.gimbal.protocol.ApplicationConfiguration a()> --> r0 := @this: com.gimbal.internal.persistance.b
<com.gimbal.internal.persistance.b: void b()> --> r0 := @this: com.gimbal.internal.persistance.b
<com.gimbal.internal.persistance.b: void b()> --> $r1 = new com.gimbal.protocol.ApplicationConfiguration
<com.gimbal.internal.persistance.b: void b()> --> r0.<com.gimbal.internal.persistance.b: com.gimbal.protocol.ApplicationConfiguration g> = $r1
<com.gimbal.internal.persistance.b: void b()> --> $r1 = r0.<com.gimbal.internal.persistance.b: com.gimbal.protocol.ApplicationConfiguration g>
<com.gimbal.internal.persistance.b: void b()> --> if $r1 != null goto return
<com.gimbal.internal.persistance.a: void a()> --> r0 := @this: com.gimbal.internal.persistance.a
<com.gimbal.internal.persistance.p: boolean b(java.lang.String,java.lang.Float)> --> r0 := @this: com.gimbal.internal.persistance.p
<com.gimbal.internal.persistance.p: boolean b(java.lang.String,java.lang.Float)> --> interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putFloat(java.lang.String,float)>("bcBigDelta", $f0)
--------------------------------------------------------

<com.gimbal.internal.location.services.a: void b(com.gimbal.proximity.impl.InternalBeaconFenceVisit)> --> $d1 = virtualinvoke $r18.<android.location.Location: double getLongitude()>()
<com.gimbal.internal.location.services.a: void b(com.gimbal.proximity.impl.InternalBeaconFenceVisit)> --> $r26 := @caughtexception
<com.gimbal.internal.persistance.q$a: void a()> --> r0 := @this: com.gimbal.internal.persistance.q$a
<com.gimbal.internal.persistance.q: void <clinit>()> --> nop
<com.gimbal.d.b: com.gimbal.d.a a(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.gimbal.d.a: void <init>(java.lang.String)> --> r0 := @this: com.gimbal.d.a
<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()> --> $i0 = <org.slf4j.LoggerFactory: int INITIALIZATION_STATE>
<org.slf4j.impl.StaticLoggerBinder: void <clinit>()> --> nop
<org.slf4j.impl.StaticLoggerBinder: void <init>()> --> r0 := @this: org.slf4j.impl.StaticLoggerBinder
<org.slf4j.impl.StaticLoggerBinder: void <init>()> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("-----", "Using android logger factory")
--------------------------------------------------------

<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $d0 = virtualinvoke $r5.<android.location.Location: double getLatitude()>()
<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> $r4 = interfaceinvoke $r3.<com.qsl.faar.service.location.d: com.qsl.faar.service.location.b a()>()
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> if $r4 == null goto interfaceinvoke $r1.<com.qsl.faar.service.b: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.gimbal.internal.location.services.d$1: void a(int,java.lang.String)> --> r0 := @this: com.gimbal.internal.location.services.d$1
<com.gimbal.d.c: void d(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.d.c
<org.slf4j.impl.AndroidLogger: void warn(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<com.gimbal.logging.capture.LogCapture: void capture(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)> --> $r3 := @parameter0: java.lang.String
<com.gimbal.logging.capture.LogCapture: void stack(com.gimbal.logging.capture.LogCapture$LogEntry,java.lang.Throwable)> --> $r2 := @parameter0: com.gimbal.logging.capture.LogCapture$LogEntry
<com.gimbal.logging.capture.LogCapture: void stack(com.gimbal.logging.capture.LogCapture$LogEntry,java.lang.Throwable)> --> $r4 = virtualinvoke $r3.<java.lang.Throwable: java.lang.String getMessage()>()
<com.gimbal.logging.capture.LogCapture: void stack(com.gimbal.logging.capture.LogCapture$LogEntry,java.lang.Throwable)> --> $r1 := @caughtexception
<com.gimbal.logging.capture.LogCapture: void stack(com.gimbal.logging.capture.LogCapture$LogEntry,java.lang.Throwable)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Log Capture", "Unable to capture stack")
--------------------------------------------------------

<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $d0 = virtualinvoke $r5.<android.location.Location: double getLatitude()>()
<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> $r4 = interfaceinvoke $r3.<com.qsl.faar.service.location.d: com.qsl.faar.service.location.b a()>()
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> if $r4 == null goto interfaceinvoke $r1.<com.qsl.faar.service.b: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.gimbal.internal.location.services.d$1: void a(int,java.lang.String)> --> r0 := @this: com.gimbal.internal.location.services.d$1
<com.gimbal.d.c: void d(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.d.c
<org.slf4j.impl.AndroidLogger: void warn(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<com.gimbal.logging.capture.LogCapture: void capture(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)> --> $r3 := @parameter0: java.lang.String
<com.gimbal.logging.capture.LogCapture: void logEntry(com.gimbal.logging.capture.LogCapture$LogEntry)> --> $r0 := @parameter0: com.gimbal.logging.capture.LogCapture$LogEntry
<com.gimbal.logging.capture.LogCapture: void notifyDests(com.gimbal.logging.capture.LogCapture$LogEntry)> --> $r0 := @parameter0: com.gimbal.logging.capture.LogCapture$LogEntry
<com.gimbal.logging.capture.LogCapture: void notifyDests(com.gimbal.logging.capture.LogCapture$LogEntry)> --> $z0 = interfaceinvoke $r4.<com.gimbal.logging.capture.LogDest: boolean log(com.gimbal.logging.capture.LogCapture$LogEntry)>($r0)
<com.gimbal.logging.capture.LogCapture: void notifyDests(com.gimbal.logging.capture.LogCapture$LogEntry)> --> $r9 := @caughtexception
<com.gimbal.logging.capture.LogCapture: void notifyDests(com.gimbal.logging.capture.LogCapture$LogEntry)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("Log Capture", "Listener failed", $r9)
--------------------------------------------------------

<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $d0 = virtualinvoke $r5.<android.location.Location: double getLatitude()>()
<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> $r4 = interfaceinvoke $r3.<com.qsl.faar.service.location.d: com.qsl.faar.service.location.b a()>()
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> if $r4 == null goto interfaceinvoke $r1.<com.qsl.faar.service.b: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.gimbal.internal.location.services.d$1: void a(int,java.lang.String)> --> r0 := @this: com.gimbal.internal.location.services.d$1
<com.gimbal.d.c: void d(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.d.c
<org.slf4j.impl.AndroidLogger: void warn(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<org.slf4j.impl.AndroidLogger: void warn(java.lang.String,java.lang.Object[])> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r3, $r4)
--------------------------------------------------------

<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $d0 = virtualinvoke $r5.<android.location.Location: double getLatitude()>()
<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> $r4 = interfaceinvoke $r3.<com.qsl.faar.service.location.d: com.qsl.faar.service.location.b a()>()
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> if $r4 == null goto interfaceinvoke $r1.<com.qsl.faar.service.b: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.b,com.qsl.faar.service.b)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.d: void b(com.qsl.faar.service.location.b,com.qsl.faar.service.b)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.d$1: void a(int,java.lang.String)> --> r0 := @this: com.qsl.faar.service.b.d$1
<com.gimbal.android.jobs.b: void g()> --> r0 := @this: com.gimbal.android.jobs.b
<com.gimbal.android.jobs.b: void a(int)> --> r0 := @this: com.gimbal.android.jobs.b
<com.gimbal.android.util.b: void a(java.lang.String,int)> --> r0 := @this: com.gimbal.android.util.b
<com.gimbal.android.util.b: void a(java.lang.String,int)> --> interfaceinvoke $r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>($r2, $i0)
--------------------------------------------------------

<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $d1 = virtualinvoke $r5.<android.location.Location: double getLongitude()>()
<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> $r4 = interfaceinvoke $r3.<com.qsl.faar.service.location.d: com.qsl.faar.service.location.b a()>()
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> if $r4 == null goto interfaceinvoke $r1.<com.qsl.faar.service.b: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.b,com.qsl.faar.service.b)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.d: void b(com.qsl.faar.service.location.b,com.qsl.faar.service.b)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.d$1: void a(int,java.lang.String)> --> r0 := @this: com.qsl.faar.service.b.d$1
<com.gimbal.android.jobs.b: void g()> --> r0 := @this: com.gimbal.android.jobs.b
<com.gimbal.android.jobs.b: void a(int)> --> r0 := @this: com.gimbal.android.jobs.b
<com.gimbal.android.util.b: void a(java.lang.String,int)> --> r0 := @this: com.gimbal.android.util.b
<com.gimbal.android.util.b: void a(java.lang.String,int)> --> interfaceinvoke $r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>($r2, $i0)
--------------------------------------------------------

<com.gimbal.internal.location.services.a: void b(com.gimbal.proximity.impl.InternalBeaconFenceVisit)> --> $d0 = virtualinvoke $r18.<android.location.Location: double getLatitude()>()
<com.gimbal.internal.location.services.a: void b(com.gimbal.proximity.impl.InternalBeaconFenceVisit)> --> $r26 := @caughtexception
<com.gimbal.internal.persistance.q$a: void a()> --> r0 := @this: com.gimbal.internal.persistance.q$a
<com.gimbal.internal.persistance.q: void <clinit>()> --> nop
<com.gimbal.d.b: com.gimbal.d.a a(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.gimbal.d.a: void <init>(java.lang.String)> --> r0 := @this: com.gimbal.d.a
<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()> --> $i0 = <org.slf4j.LoggerFactory: int INITIALIZATION_STATE>
<org.slf4j.impl.StaticLoggerBinder: void <clinit>()> --> nop
<org.slf4j.impl.StaticLoggerBinder: void <init>()> --> r0 := @this: org.slf4j.impl.StaticLoggerBinder
<org.slf4j.impl.StaticLoggerBinder: void <init>()> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("-----", "Using android logger factory")
--------------------------------------------------------

<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $d1 = virtualinvoke $r5.<android.location.Location: double getLongitude()>()
<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> $r4 = interfaceinvoke $r3.<com.qsl.faar.service.location.d: com.qsl.faar.service.location.b a()>()
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> if $r4 == null goto interfaceinvoke $r1.<com.qsl.faar.service.b: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.b,com.qsl.faar.service.b)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.d: void b(com.qsl.faar.service.location.b,com.qsl.faar.service.b)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.d$1: void a(int,java.lang.String)> --> r0 := @this: com.qsl.faar.service.b.d$1
<com.gimbal.d.c: void e(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.d.c
<org.slf4j.impl.AndroidLogger: void error(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<com.gimbal.logging.capture.LogCapture: void capture(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)> --> $r3 := @parameter0: java.lang.String
<com.gimbal.logging.capture.LogCapture: void stack(com.gimbal.logging.capture.LogCapture$LogEntry,java.lang.Throwable)> --> $r2 := @parameter0: com.gimbal.logging.capture.LogCapture$LogEntry
<com.gimbal.logging.capture.LogCapture: void stack(com.gimbal.logging.capture.LogCapture$LogEntry,java.lang.Throwable)> --> $r4 = virtualinvoke $r3.<java.lang.Throwable: java.lang.String getMessage()>()
<com.gimbal.logging.capture.LogCapture: void stack(com.gimbal.logging.capture.LogCapture$LogEntry,java.lang.Throwable)> --> $r1 := @caughtexception
<com.gimbal.logging.capture.LogCapture: void stack(com.gimbal.logging.capture.LogCapture$LogEntry,java.lang.Throwable)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Log Capture", "Unable to capture stack")
--------------------------------------------------------

<com.gimbal.proximity.core.g.a.a: com.gimbal.proximity.core.g.c a()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.gimbal.proximity.core.g.a.a: com.gimbal.proximity.core.g.c a()> --> if $r4 == null goto return null
<com.gimbal.proximity.core.g.a.a: com.gimbal.proximity.core.g.c a()> --> $r5 = staticinvoke <com.gimbal.proximity.core.g.a.a: com.gimbal.proximity.core.g.c a(android.location.Location)>($r4)
<com.gimbal.internal.location.services.a: void b(com.gimbal.proximity.impl.InternalBeaconFenceVisit)> --> $r16 = interfaceinvoke $r15.<com.gimbal.proximity.core.g.a: com.gimbal.proximity.core.g.c a()>()
<com.gimbal.internal.location.services.a: void b(com.gimbal.proximity.impl.InternalBeaconFenceVisit)> --> if $r16 == null goto $r19 = staticinvoke <com.gimbal.internal.location.services.a: com.gimbal.internal.location.services.InternalPlaceEvent$InternalPlaceEventFenceType c(com.gimbal.proximity.impl.InternalBeaconFenceVisit)>($r3)
<com.gimbal.internal.persistance.b: boolean m()> --> r0 := @this: com.gimbal.internal.persistance.b
<com.gimbal.internal.persistance.b: com.gimbal.protocol.ApplicationConfiguration a()> --> r0 := @this: com.gimbal.internal.persistance.b
<com.gimbal.internal.persistance.b: void b()> --> r0 := @this: com.gimbal.internal.persistance.b
<com.gimbal.internal.persistance.b: void b()> --> $r1 = new com.gimbal.protocol.ApplicationConfiguration
<com.gimbal.internal.persistance.b: void b()> --> r0.<com.gimbal.internal.persistance.b: com.gimbal.protocol.ApplicationConfiguration g> = $r1
<com.gimbal.internal.persistance.b: void b()> --> $r1 = r0.<com.gimbal.internal.persistance.b: com.gimbal.protocol.ApplicationConfiguration g>
<com.gimbal.internal.persistance.b: void b()> --> if $r1 != null goto return
<com.gimbal.internal.persistance.a: void a()> --> r0 := @this: com.gimbal.internal.persistance.a
<com.gimbal.internal.persistance.p: boolean b(java.lang.String,java.lang.Boolean)> --> r0 := @this: com.gimbal.internal.persistance.p
<com.gimbal.internal.persistance.p: boolean b(java.lang.String,java.lang.Boolean)> --> interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>($r1, $z0)
--------------------------------------------------------

<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $d0 = virtualinvoke $r5.<android.location.Location: double getLatitude()>()
<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> $r4 = interfaceinvoke $r3.<com.qsl.faar.service.location.d: com.qsl.faar.service.location.b a()>()
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> if $r4 == null goto interfaceinvoke $r1.<com.qsl.faar.service.b: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.b,com.qsl.faar.service.b)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.d: void b(com.qsl.faar.service.location.b,com.qsl.faar.service.b)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.d$1: void a(int,java.lang.String)> --> r0 := @this: com.qsl.faar.service.b.d$1
<com.gimbal.android.jobs.b: void g()> --> r0 := @this: com.gimbal.android.jobs.b
<com.gimbal.android.jobs.c: void d()> --> r0 := @this: com.gimbal.android.jobs.c
<com.gimbal.android.jobs.c: void e()> --> r0 := @this: com.gimbal.android.jobs.c
<com.gimbal.android.jobs.c: void f()> --> r0 := @this: com.gimbal.android.jobs.c
<com.gimbal.android.jobs.AlarmWakeupManager: void a()> --> r0 := @this: com.gimbal.android.jobs.AlarmWakeupManager
<com.gimbal.android.jobs.AlarmWakeupManager: void a(long)> --> r0 := @this: com.gimbal.android.jobs.AlarmWakeupManager
<com.gimbal.android.util.b: void b(java.lang.String,long)> --> r0 := @this: com.gimbal.android.util.b
<com.gimbal.android.util.b: void b(java.lang.String,long)> --> interfaceinvoke $r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("JM_NEXT_ALARM", $l0)
--------------------------------------------------------

<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r5 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> $r4 = interfaceinvoke $r3.<com.qsl.faar.service.location.d: com.qsl.faar.service.location.b a()>()
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> if $r4 == null goto interfaceinvoke $r1.<com.qsl.faar.service.b: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.gimbal.internal.location.services.d$1: void a(int,java.lang.String)> --> r0 := @this: com.gimbal.internal.location.services.d$1
<com.gimbal.d.c: void d(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.d.c
<org.slf4j.impl.AndroidLogger: void warn(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<com.gimbal.logging.capture.LogCapture: void capture(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)> --> $r3 := @parameter0: java.lang.String
<com.gimbal.logging.capture.LogCapture: void stack(com.gimbal.logging.capture.LogCapture$LogEntry,java.lang.Throwable)> --> $r2 := @parameter0: com.gimbal.logging.capture.LogCapture$LogEntry
<com.gimbal.logging.capture.LogCapture: void stack(com.gimbal.logging.capture.LogCapture$LogEntry,java.lang.Throwable)> --> $r4 = virtualinvoke $r3.<java.lang.Throwable: java.lang.String getMessage()>()
<com.gimbal.logging.capture.LogCapture: void stack(com.gimbal.logging.capture.LogCapture$LogEntry,java.lang.Throwable)> --> $r1 := @caughtexception
<com.gimbal.logging.capture.LogCapture: void stack(com.gimbal.logging.capture.LogCapture$LogEntry,java.lang.Throwable)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Log Capture", "Unable to capture stack")
--------------------------------------------------------

<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $d1 = virtualinvoke $r5.<android.location.Location: double getLongitude()>()
<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> $r4 = interfaceinvoke $r3.<com.qsl.faar.service.location.d: com.qsl.faar.service.location.b a()>()
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> if $r4 == null goto interfaceinvoke $r1.<com.qsl.faar.service.b: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.b,com.qsl.faar.service.b)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.d: void b(com.qsl.faar.service.location.b,com.qsl.faar.service.b)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.d$1: void a(int,java.lang.String)> --> r0 := @this: com.qsl.faar.service.b.d$1
<com.gimbal.d.c: void e(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.d.c
<org.slf4j.impl.AndroidLogger: void error(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<com.gimbal.logging.capture.LogCapture: void capture(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)> --> $r3 := @parameter0: java.lang.String
<com.gimbal.logging.capture.LogCapture: void logEntry(com.gimbal.logging.capture.LogCapture$LogEntry)> --> $r0 := @parameter0: com.gimbal.logging.capture.LogCapture$LogEntry
<com.gimbal.logging.capture.LogCapture: void notifyDests(com.gimbal.logging.capture.LogCapture$LogEntry)> --> $r0 := @parameter0: com.gimbal.logging.capture.LogCapture$LogEntry
<com.gimbal.logging.capture.LogCapture: void notifyDests(com.gimbal.logging.capture.LogCapture$LogEntry)> --> $z0 = interfaceinvoke $r4.<com.gimbal.logging.capture.LogDest: boolean log(com.gimbal.logging.capture.LogCapture$LogEntry)>($r0)
<com.gimbal.logging.capture.LogCapture: void notifyDests(com.gimbal.logging.capture.LogCapture$LogEntry)> --> $r9 := @caughtexception
<com.gimbal.logging.capture.LogCapture: void notifyDests(com.gimbal.logging.capture.LogCapture$LogEntry)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("Log Capture", "Listener failed", $r9)
--------------------------------------------------------

<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r5 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> $r4 = interfaceinvoke $r3.<com.qsl.faar.service.location.d: com.qsl.faar.service.location.b a()>()
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> if $r4 == null goto interfaceinvoke $r1.<com.qsl.faar.service.b: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.b,com.qsl.faar.service.b)> --> r0 := @this: com.qsl.faar.service.b.d
<com.gimbal.internal.cache.a: java.lang.Object a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.a
<com.gimbal.internal.cache.d: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.d
<com.gimbal.internal.cache.e: void a(java.lang.String,com.gimbal.internal.cache.CacheEntry)> --> r0 := @this: com.gimbal.internal.cache.e
<com.gimbal.internal.cache.e: void a(java.lang.String,com.gimbal.internal.cache.CacheEntry)> --> interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r1, $r4)
--------------------------------------------------------

<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r5 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> $r4 = interfaceinvoke $r3.<com.qsl.faar.service.location.d: com.qsl.faar.service.location.b a()>()
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> if $r4 == null goto interfaceinvoke $r1.<com.qsl.faar.service.b: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.b,com.qsl.faar.service.b)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.d: void b(com.qsl.faar.service.location.b,com.qsl.faar.service.b)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.d: void b(com.qsl.faar.service.location.b,com.qsl.faar.service.b)> --> $d0 = $r2.<com.qsl.faar.service.location.b: double a>
<com.qsl.faar.service.b.d: void b(com.qsl.faar.service.location.b,com.qsl.faar.service.b)> --> $r8 := @caughtexception
<com.qsl.faar.service.b.d: void a(java.lang.Throwable,com.qsl.faar.service.b)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.d$1: void a(int,java.lang.String)> --> r0 := @this: com.qsl.faar.service.b.d$1
<com.gimbal.android.jobs.b: void g()> --> r0 := @this: com.gimbal.android.jobs.b
<com.gimbal.android.jobs.b: void a(int)> --> r0 := @this: com.gimbal.android.jobs.b
<com.gimbal.android.util.b: void a(java.lang.String,int)> --> r0 := @this: com.gimbal.android.util.b
<com.gimbal.android.util.b: void a(java.lang.String,int)> --> interfaceinvoke $r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>($r2, $i0)
--------------------------------------------------------

<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r5 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> $r4 = interfaceinvoke $r3.<com.qsl.faar.service.location.d: com.qsl.faar.service.location.b a()>()
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> if $r4 == null goto interfaceinvoke $r1.<com.qsl.faar.service.b: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.b,com.qsl.faar.service.b)> --> r0 := @this: com.qsl.faar.service.b.d
<com.gimbal.internal.cache.a: java.lang.Object a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.a
<com.gimbal.internal.cache.d: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.d
<com.gimbal.internal.cache.e: void a(java.lang.String,com.gimbal.internal.cache.CacheEntry)> --> r0 := @this: com.gimbal.internal.cache.e
<com.gimbal.internal.cache.b: java.lang.String a(com.gimbal.internal.cache.CacheEntry)> --> r0 := @this: com.gimbal.internal.cache.b
<com.gimbal.internal.cache.b: java.lang.String a(com.gimbal.internal.cache.CacheEntry)> --> $r3 = r0.<com.gimbal.internal.cache.b: com.gimbal.internal.json.JsonMapper a>
<com.gimbal.internal.cache.b: java.lang.String a(com.gimbal.internal.cache.CacheEntry)> --> $r4 := @caughtexception
<com.gimbal.d.c: void e(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.d.c
<org.slf4j.impl.AndroidLogger: void error(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<org.slf4j.impl.AndroidLogger: void error(java.lang.String,java.lang.Object[])> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, $r4)
--------------------------------------------------------

<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $d1 = virtualinvoke $r5.<android.location.Location: double getLongitude()>()
<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> $r4 = interfaceinvoke $r3.<com.qsl.faar.service.location.d: com.qsl.faar.service.location.b a()>()
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> if $r4 == null goto interfaceinvoke $r1.<com.qsl.faar.service.b: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.b,com.qsl.faar.service.b)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.d: void b(com.qsl.faar.service.location.b,com.qsl.faar.service.b)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.d$1: void a(int,java.lang.String)> --> r0 := @this: com.qsl.faar.service.b.d$1
<com.gimbal.d.c: void e(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.d.c
<org.slf4j.impl.AndroidLogger: void error(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<org.slf4j.impl.AndroidLogger: void error(java.lang.String,java.lang.Object[])> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, $r4)
--------------------------------------------------------

<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $d1 = virtualinvoke $r5.<android.location.Location: double getLongitude()>()
<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> $r4 = interfaceinvoke $r3.<com.qsl.faar.service.location.d: com.qsl.faar.service.location.b a()>()
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> if $r4 == null goto interfaceinvoke $r1.<com.qsl.faar.service.b: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.b,com.qsl.faar.service.b)> --> r0 := @this: com.qsl.faar.service.b.d
<com.gimbal.internal.cache.a: java.lang.Object a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.a
<com.gimbal.internal.cache.d: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.d
<com.gimbal.internal.cache.e: void a(java.lang.String,com.gimbal.internal.cache.CacheEntry)> --> r0 := @this: com.gimbal.internal.cache.e
<com.gimbal.internal.cache.e: void a(java.lang.String,com.gimbal.internal.cache.CacheEntry)> --> interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r1, $r4)
--------------------------------------------------------

<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r5 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> $r4 = interfaceinvoke $r3.<com.qsl.faar.service.location.d: com.qsl.faar.service.location.b a()>()
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> if $r4 == null goto interfaceinvoke $r1.<com.qsl.faar.service.b: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.gimbal.internal.location.services.d$1: void a(int,java.lang.String)> --> r0 := @this: com.gimbal.internal.location.services.d$1
<com.gimbal.internal.location.services.d: void <clinit>()> --> nop
<com.gimbal.d.b: com.gimbal.d.a a(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.gimbal.d.a: void <init>(java.lang.String)> --> r0 := @this: com.gimbal.d.a
<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()> --> $i0 = <org.slf4j.LoggerFactory: int INITIALIZATION_STATE>
<org.slf4j.impl.StaticLoggerBinder: void <clinit>()> --> nop
<org.slf4j.impl.StaticLoggerBinder: void <init>()> --> r0 := @this: org.slf4j.impl.StaticLoggerBinder
<org.slf4j.impl.StaticLoggerBinder: void <init>()> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("-----", "Using android logger factory")
--------------------------------------------------------

<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r5 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> $r4 = interfaceinvoke $r3.<com.qsl.faar.service.location.d: com.qsl.faar.service.location.b a()>()
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> if $r4 == null goto interfaceinvoke $r1.<com.qsl.faar.service.b: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.gimbal.internal.location.services.d$1: void a(int,java.lang.String)> --> r0 := @this: com.gimbal.internal.location.services.d$1
<com.gimbal.d.c: void d(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.d.c
<org.slf4j.impl.AndroidLogger: void warn(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<org.slf4j.impl.AndroidLogger: void warn(java.lang.String,java.lang.Object[])> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r3, $r4)
--------------------------------------------------------

<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $d1 = virtualinvoke $r5.<android.location.Location: double getLongitude()>()
<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> $r4 = interfaceinvoke $r3.<com.qsl.faar.service.location.d: com.qsl.faar.service.location.b a()>()
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> if $r4 == null goto interfaceinvoke $r1.<com.qsl.faar.service.b: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.gimbal.internal.location.services.d$1: void a(int,java.lang.String)> --> r0 := @this: com.gimbal.internal.location.services.d$1
<com.gimbal.d.c: void d(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.d.c
<org.slf4j.impl.AndroidLogger: void warn(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<org.slf4j.impl.AndroidLogger: void warn(java.lang.String,java.lang.Object[])> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r3, $r4)
--------------------------------------------------------

<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $d1 = virtualinvoke $r5.<android.location.Location: double getLongitude()>()
<com.qsl.faar.service.location.d.e: com.qsl.faar.service.location.b a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> $r4 = interfaceinvoke $r3.<com.qsl.faar.service.location.d: com.qsl.faar.service.location.b a()>()
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.b)> --> if $r4 == null goto interfaceinvoke $r1.<com.qsl.faar.service.b: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.b,com.qsl.faar.service.b)> --> r0 := @this: com.qsl.faar.service.b.d
<com.gimbal.internal.cache.a: java.lang.Object a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.a
<com.gimbal.internal.cache.d: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.d
<com.gimbal.internal.cache.e: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.e
<com.gimbal.internal.cache.b: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.b
<com.gimbal.internal.cache.b: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> $r3 = r0.<com.gimbal.internal.cache.b: com.gimbal.internal.json.JsonMapper a>
<com.gimbal.internal.cache.b: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> $r5 := @caughtexception
<com.gimbal.internal.cache.b: void <clinit>()> --> nop
<com.gimbal.d.d: com.gimbal.d.c a(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.gimbal.d.c: void <init>(java.lang.String)> --> r0 := @this: com.gimbal.d.c
<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()> --> $i0 = <org.slf4j.LoggerFactory: int INITIALIZATION_STATE>
<org.slf4j.impl.StaticLoggerBinder: void <clinit>()> --> nop
<org.slf4j.impl.StaticLoggerBinder: void <init>()> --> r0 := @this: org.slf4j.impl.StaticLoggerBinder
<org.slf4j.impl.StaticLoggerBinder: void <init>()> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("-----", "Using android logger factory")
--------------------------------------------------------

