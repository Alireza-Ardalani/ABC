<com.passportparking.mobile.ZoneActivity: void findEnclosingZone()> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.passportparking.mobile.ZoneActivity: void findEnclosingZone()> --> if $r6 == null goto return
<com.passportparking.mobile.ZoneActivity: void onLocationChanged(android.location.Location)> --> r0 := @this: com.passportparking.mobile.ZoneActivity
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.passportparking.mobile.ProfilePreviewActivity$1: void run()> --> r0 := @this: com.passportparking.mobile.ProfilePreviewActivity$1
<com.passportparking.mobile.server.PRestService: com.passportparking.mobile.server.PResponse getAccountInfo(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.passportparking.mobile.server.utils.RestService: void execute()> --> r0 := @this: com.passportparking.mobile.server.utils.RestService
<com.passportparking.mobile.server.utils.RestService: void execute(com.passportparking.mobile.server.utils.RestService$RequestMethod)> --> r0 := @this: com.passportparking.mobile.server.utils.RestService
<com.passportparking.mobile.server.utils.RestService: void executeRequest(org.apache.http.client.methods.HttpUriRequest,java.lang.String)> --> r0 := @this: com.passportparking.mobile.server.utils.RestService
<com.passportparking.mobile.server.utils.RestService: void execute(org.apache.http.client.methods.HttpUriRequest,java.lang.String,org.apache.http.client.HttpClient)> --> r0 := @this: com.passportparking.mobile.server.utils.RestService
<com.passportparking.mobile.server.utils.RestService: void execute(org.apache.http.client.methods.HttpUriRequest,java.lang.String,org.apache.http.client.HttpClient)> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("Method", $r5)
--------------------------------------------------------

<com.passportparking.mobile.ZoneActivity: void findEnclosingZone()> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.passportparking.mobile.ZoneActivity: void findEnclosingZone()> --> if $r6 == null goto return
<com.passportparking.mobile.ZoneActivity: void onLocationChanged(android.location.Location)> --> r0 := @this: com.passportparking.mobile.ZoneActivity
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.passportparking.mobile.OtherActivity$11: void run()> --> r0 := @this: com.passportparking.mobile.OtherActivity$11
<com.passportparking.mobile.OtherActivity: void access$13(com.passportparking.mobile.OtherActivity,com.passportparking.mobile.server.PResponse)> --> $r0 := @parameter0: com.passportparking.mobile.OtherActivity
<com.passportparking.mobile.OtherActivity: void parseGetStringResponse(com.passportparking.mobile.server.PResponse)> --> r0 := @this: com.passportparking.mobile.OtherActivity
<com.passportparking.mobile.utils.PLog: void i(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()> --> $i0 = <org.slf4j.LoggerFactory: int INITIALIZATION_STATE>
<org.slf4j.impl.StaticLoggerBinder: void <clinit>()> --> nop
<org.slf4j.impl.StaticLoggerBinder: void init()> --> r0 := @this: org.slf4j.impl.StaticLoggerBinder
<ch.qos.logback.classic.util.ContextInitializer: void autoConfig()> --> r0 := @this: ch.qos.logback.classic.util.ContextInitializer
<ch.qos.logback.core.joran.GenericConfigurator: void doConfigure(java.net.URL)> --> r0 := @this: ch.qos.logback.core.joran.GenericConfigurator
<ch.qos.logback.core.joran.GenericConfigurator: void doConfigure(java.net.URL)> --> $r3 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()
--------------------------------------------------------

<com.passportparking.mobile.ZoneActivity: void findEnclosingZone()> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.passportparking.mobile.ZoneActivity: void findEnclosingZone()> --> if $r6 == null goto return
<com.passportparking.mobile.ZoneActivity: void onLocationChanged(android.location.Location)> --> r0 := @this: com.passportparking.mobile.ZoneActivity
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.passportparking.mobile.SplashActivity$14: void run()> --> r0 := @this: com.passportparking.mobile.SplashActivity$14
<com.passportparking.mobile.SplashActivity: void parseSettingsResponse(com.passportparking.mobile.server.PResponse)> --> r0 := @this: com.passportparking.mobile.SplashActivity
<com.passportparking.mobile.SplashActivity: void checkForExistingOrNewUser()> --> r0 := @this: com.passportparking.mobile.SplashActivity
<com.passportparking.mobile.SplashActivity: void checkGPS()> --> r0 := @this: com.passportparking.mobile.SplashActivity
<com.passportparking.mobile.SplashActivity: void navigateForward()> --> r0 := @this: com.passportparking.mobile.SplashActivity
<com.passportparking.mobile.utils.ViewUtils: boolean passedMinVersionCheck(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.passportparking.mobile.utils.ViewUtils: boolean passedMinVersionCheck(java.lang.String)> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("VER CHECK", "fails")
--------------------------------------------------------

<com.passportparking.mobile.utils.CountryHelper: java.lang.String getCountryFromLocation(android.content.Context)> --> $r7 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.passportparking.mobile.utils.CountryHelper: java.lang.String getCountryFromLocation(android.content.Context)> --> r3 := @caughtexception
<com.passportparking.mobile.utils.PLog: void i(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()> --> $i0 = <org.slf4j.LoggerFactory: int INITIALIZATION_STATE>
<org.slf4j.impl.StaticLoggerBinder: void <clinit>()> --> nop
<org.slf4j.impl.StaticLoggerBinder: void init()> --> r0 := @this: org.slf4j.impl.StaticLoggerBinder
<ch.qos.logback.classic.util.ContextInitializer: void autoConfig()> --> r0 := @this: ch.qos.logback.classic.util.ContextInitializer
<ch.qos.logback.core.joran.GenericConfigurator: void doConfigure(java.net.URL)> --> r0 := @this: ch.qos.logback.core.joran.GenericConfigurator
<ch.qos.logback.core.joran.GenericConfigurator: void informContextOfURLUsedForConfiguration(ch.qos.logback.core.Context,java.net.URL)> --> $r0 := @parameter0: ch.qos.logback.core.Context
<ch.qos.logback.core.joran.util.ConfigurationWatchListUtil: void setMainWatchURL(ch.qos.logback.core.Context,java.net.URL)> --> $r0 := @parameter0: ch.qos.logback.core.Context
<ch.qos.logback.core.joran.spi.ConfigurationWatchList: void setMainURL(java.net.URL)> --> r0 := @this: ch.qos.logback.core.joran.spi.ConfigurationWatchList
<ch.qos.logback.core.joran.spi.ConfigurationWatchList: void addAsFileToWatch(java.net.URL)> --> r0 := @this: ch.qos.logback.core.joran.spi.ConfigurationWatchList
<ch.qos.logback.core.joran.spi.ConfigurationWatchList: java.io.File convertToFile(java.net.URL)> --> r0 := @this: ch.qos.logback.core.joran.spi.ConfigurationWatchList
<ch.qos.logback.core.joran.spi.ConfigurationWatchList: java.io.File convertToFile(java.net.URL)> --> $r2 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String)>($r2)
--------------------------------------------------------

<com.passportparking.mobile.ZoneActivity: void findEnclosingZone()> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.passportparking.mobile.ZoneActivity: void findEnclosingZone()> --> if $r6 == null goto return
<com.passportparking.mobile.ZoneActivity: void onLocationChanged(android.location.Location)> --> r0 := @this: com.passportparking.mobile.ZoneActivity
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.passportparking.mobile.ProfileActivity$14: void run()> --> r0 := @this: com.passportparking.mobile.ProfileActivity$14
<com.passportparking.mobile.ProfileActivity: void access$29(com.passportparking.mobile.ProfileActivity,com.passportparking.mobile.server.PResponse)> --> $r0 := @parameter0: com.passportparking.mobile.ProfileActivity
<com.passportparking.mobile.ProfileActivity: void parseSaveResponse(com.passportparking.mobile.server.PResponse)> --> r0 := @this: com.passportparking.mobile.ProfileActivity
<com.passportparking.mobile.utils.ApplicationSettings: void setIsEmailReceiptInProgress(android.content.Context,java.lang.Boolean)> --> $r0 := @parameter0: android.content.Context
<com.passportparking.mobile.utils.SecurePreferences: void put(java.lang.String,java.lang.String)> --> r0 := @this: com.passportparking.mobile.utils.SecurePreferences
<com.passportparking.mobile.utils.SecurePreferences: void putValue(java.lang.String,java.lang.String)> --> r0 := @this: com.passportparking.mobile.utils.SecurePreferences
<com.passportparking.mobile.utils.SecurePreferences: void putValue(java.lang.String,java.lang.String)> --> $r5 = interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.passportparking.mobile.ZoneActivity: void findEnclosingZone()> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.passportparking.mobile.ZoneActivity: void findEnclosingZone()> --> if $r6 == null goto return
<com.passportparking.mobile.ZoneActivity: void onLocationChanged(android.location.Location)> --> r0 := @this: com.passportparking.mobile.ZoneActivity
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.passportparking.mobile.ParkingTransitMapActivity$22: void run()> --> r0 := @this: com.passportparking.mobile.ParkingTransitMapActivity$22
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.callback.AbstractAjaxCallback: void run()> --> r0 := @this: com.androidquery.callback.AbstractAjaxCallback
<com.androidquery.callback.AbstractAjaxCallback: void backgroundWork()> --> r0 := @this: com.androidquery.callback.AbstractAjaxCallback
<com.androidquery.callback.AbstractAjaxCallback: void networkWork()> --> r0 := @this: com.androidquery.callback.AbstractAjaxCallback
<com.androidquery.callback.AbstractAjaxCallback: void network(int)> --> r0 := @this: com.androidquery.callback.AbstractAjaxCallback
<com.androidquery.callback.AbstractAjaxCallback: void network()> --> r0 := @this: com.androidquery.callback.AbstractAjaxCallback
<com.androidquery.callback.AbstractAjaxCallback: void httpDelete(java.lang.String,com.androidquery.callback.AjaxStatus)> --> r0 := @this: com.androidquery.callback.AbstractAjaxCallback
<com.androidquery.callback.AbstractAjaxCallback: void httpDo(org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.androidquery.callback.AjaxStatus)> --> r0 := @this: com.androidquery.callback.AbstractAjaxCallback
<com.androidquery.callback.AbstractAjaxCallback: org.apache.http.impl.client.DefaultHttpClient getClient()> --> $r0 = <com.androidquery.callback.AbstractAjaxCallback: org.apache.http.impl.client.DefaultHttpClient client>
<com.androidquery.util.AQUtility: void debug(java.lang.Object)> --> $r0 := @parameter0: java.lang.Object
<com.androidquery.util.AQUtility: void debug(java.lang.Object)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AQuery", $r2)
--------------------------------------------------------

<com.passportparking.mobile.ZoneActivity: void findEnclosingZone()> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.passportparking.mobile.ZoneActivity: void findEnclosingZone()> --> if $r6 == null goto return
<com.passportparking.mobile.ZoneActivity: void onLocationChanged(android.location.Location)> --> r0 := @this: com.passportparking.mobile.ZoneActivity
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.passportparking.mobile.PaymentActivity$8: void run()> --> r0 := @this: com.passportparking.mobile.PaymentActivity$8
<com.passportparking.mobile.server.PRestService: com.passportparking.mobile.server.PResponse savePaymentCardToCardStore(java.lang.String,java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.passportparking.mobile.server.utils.RestService: void executeUnencrypted(com.passportparking.mobile.server.utils.RestService$RequestMethod)> --> r0 := @this: com.passportparking.mobile.server.utils.RestService
<com.passportparking.mobile.server.utils.RestService: void executeUnencrypted(com.passportparking.mobile.server.utils.RestService$RequestMethod)> --> $r7 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r7, "UTF-8")
--------------------------------------------------------

<com.passportparking.mobile.ZoneActivity: void findEnclosingZone()> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.passportparking.mobile.ZoneActivity: void findEnclosingZone()> --> if $r6 == null goto return
<com.passportparking.mobile.ZoneActivity: void onLocationChanged(android.location.Location)> --> r0 := @this: com.passportparking.mobile.ZoneActivity
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.passportparking.mobile.ParkingTransitMapActivity$22: void run()> --> r0 := @this: com.passportparking.mobile.ParkingTransitMapActivity$22
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.callback.AbstractAjaxCallback: void run()> --> r0 := @this: com.androidquery.callback.AbstractAjaxCallback
<com.androidquery.callback.AbstractAjaxCallback: void backgroundWork()> --> r0 := @this: com.androidquery.callback.AbstractAjaxCallback
<com.androidquery.callback.AbstractAjaxCallback: void networkWork()> --> r0 := @this: com.androidquery.callback.AbstractAjaxCallback
<com.androidquery.callback.AbstractAjaxCallback: void network(int)> --> r0 := @this: com.androidquery.callback.AbstractAjaxCallback
<com.androidquery.callback.AbstractAjaxCallback: void network()> --> r0 := @this: com.androidquery.callback.AbstractAjaxCallback
<com.androidquery.callback.AbstractAjaxCallback: void httpMulti(java.lang.String,java.util.Map,com.androidquery.callback.AjaxStatus)> --> r0 := @this: com.androidquery.callback.AbstractAjaxCallback
<com.androidquery.callback.AbstractAjaxCallback: void httpMulti(java.lang.String,java.util.Map,com.androidquery.callback.AjaxStatus)> --> specialinvoke r4.<java.net.URL: void <init>(java.lang.String)>($r1)
--------------------------------------------------------

<com.passportparking.mobile.utils.CountryHelper: java.lang.String getCountryFromLocation(android.content.Context)> --> $d1 = virtualinvoke $r7.<android.location.Location: double getLongitude()>()
<com.passportparking.mobile.utils.CountryHelper: java.lang.String getCountryFromLocation(android.content.Context)> --> r3 := @caughtexception
<com.passportparking.mobile.utils.PLog: void i(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()> --> $i0 = <org.slf4j.LoggerFactory: int INITIALIZATION_STATE>
<org.slf4j.impl.StaticLoggerBinder: void <clinit>()> --> nop
<org.slf4j.impl.StaticLoggerBinder: void init()> --> r0 := @this: org.slf4j.impl.StaticLoggerBinder
<ch.qos.logback.classic.util.ContextInitializer: void autoConfig()> --> r0 := @this: ch.qos.logback.classic.util.ContextInitializer
<ch.qos.logback.core.joran.GenericConfigurator: void doConfigure(java.net.URL)> --> r0 := @this: ch.qos.logback.core.joran.GenericConfigurator
<ch.qos.logback.core.joran.GenericConfigurator: void doConfigure(java.net.URL)> --> $r3 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()
--------------------------------------------------------

<com.passportparking.mobile.utils.CountryHelper: java.lang.String getCountryFromLocation(android.content.Context)> --> $r7 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.passportparking.mobile.utils.CountryHelper: java.lang.String getCountryFromLocation(android.content.Context)> --> r3 := @caughtexception
<com.passportparking.mobile.utils.PLog: void i(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()> --> $i0 = <org.slf4j.LoggerFactory: int INITIALIZATION_STATE>
<org.slf4j.impl.StaticLoggerBinder: void <clinit>()> --> nop
<org.slf4j.impl.StaticLoggerBinder: void init()> --> r0 := @this: org.slf4j.impl.StaticLoggerBinder
<ch.qos.logback.classic.util.ContextInitializer: void autoConfig()> --> r0 := @this: ch.qos.logback.classic.util.ContextInitializer
<ch.qos.logback.core.joran.GenericConfigurator: void doConfigure(java.net.URL)> --> r0 := @this: ch.qos.logback.core.joran.GenericConfigurator
<ch.qos.logback.core.joran.GenericConfigurator: void doConfigure(java.net.URL)> --> $r4 = virtualinvoke $r3.<java.net.URLConnection: java.io.InputStream getInputStream()>()
--------------------------------------------------------

<com.passportparking.mobile.utils.CountryHelper: java.lang.String getCountryFromLocation(android.content.Context)> --> $r7 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r6)
<com.passportparking.mobile.utils.CountryHelper: java.lang.String getCountryFromLocation(android.content.Context)> --> r3 := @caughtexception
<com.passportparking.mobile.utils.PLog: void i(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()> --> $i0 = <org.slf4j.LoggerFactory: int INITIALIZATION_STATE>
<org.slf4j.impl.StaticLoggerBinder: void <clinit>()> --> nop
<org.slf4j.impl.StaticLoggerBinder: void init()> --> r0 := @this: org.slf4j.impl.StaticLoggerBinder
<ch.qos.logback.classic.util.ContextInitializer: void autoConfig()> --> r0 := @this: ch.qos.logback.classic.util.ContextInitializer
<ch.qos.logback.core.joran.GenericConfigurator: void doConfigure(java.net.URL)> --> r0 := @this: ch.qos.logback.core.joran.GenericConfigurator
<ch.qos.logback.core.joran.GenericConfigurator: void doConfigure(java.net.URL)> --> $r3 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()
--------------------------------------------------------

<com.passportparking.mobile.ZoneActivity: void findEnclosingZone()> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.passportparking.mobile.ZoneActivity: void findEnclosingZone()> --> if $r6 == null goto return
<com.passportparking.mobile.ZoneActivity: void onLocationChanged(android.location.Location)> --> r0 := @this: com.passportparking.mobile.ZoneActivity
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.passportparking.mobile.ParkingTransitMapActivity$22: void run()> --> r0 := @this: com.passportparking.mobile.ParkingTransitMapActivity$22
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.callback.AbstractAjaxCallback: void run()> --> r0 := @this: com.androidquery.callback.AbstractAjaxCallback
<com.androidquery.callback.AbstractAjaxCallback: void afterWork()> --> r0 := @this: com.androidquery.callback.AbstractAjaxCallback
<com.androidquery.callback.AbstractAjaxCallback: void callback()> --> r0 := @this: com.androidquery.callback.AbstractAjaxCallback
<com.androidquery.callback.AbstractAjaxCallback: void callback()> --> $r6 = r0.<com.androidquery.callback.AbstractAjaxCallback: java.lang.Object result>
<com.androidquery.callback.AbstractAjaxCallback: void callback()> --> r4 := @caughtexception
<com.androidquery.util.AQUtility: void report(java.lang.Throwable)> --> $r0 := @parameter0: java.lang.Throwable
<com.androidquery.util.AQUtility: void warn(java.lang.Object,java.lang.Object)> --> $r0 := @parameter0: java.lang.Object
<com.androidquery.util.AQUtility: void warn(java.lang.Object,java.lang.Object)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AQuery", $r3)
--------------------------------------------------------

<com.passportparking.mobile.ZoneActivity: void findEnclosingZone()> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.passportparking.mobile.ZoneActivity: void findEnclosingZone()> --> if $r6 == null goto return
<com.passportparking.mobile.ZoneActivity: void onLocationChanged(android.location.Location)> --> r0 := @this: com.passportparking.mobile.ZoneActivity
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.passportparking.mobile.SplashActivity$14: void run()> --> r0 := @this: com.passportparking.mobile.SplashActivity$14
<com.passportparking.mobile.SplashActivity: void parseSettingsResponse(com.passportparking.mobile.server.PResponse)> --> r0 := @this: com.passportparking.mobile.SplashActivity
<com.passportparking.mobile.SplashActivity: void checkForExistingOrNewUser()> --> r0 := @this: com.passportparking.mobile.SplashActivity
<com.passportparking.mobile.SplashActivity: void checkGPS()> --> r0 := @this: com.passportparking.mobile.SplashActivity
<com.passportparking.mobile.SplashActivity: void startGPSService()> --> r0 := @this: com.passportparking.mobile.SplashActivity
<com.passportparking.mobile.HelperActivity: void startGPSService(java.lang.Class,android.content.Context,android.app.Activity,java.lang.Boolean)> --> r0 := @parameter0: java.lang.Class
<com.passportparking.mobile.HelperActivity: void startGPSService(java.lang.Class,android.content.Context,android.app.Activity,java.lang.Boolean)> --> virtualinvoke r4.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("keepRunning", $z0)
--------------------------------------------------------

<com.passportparking.mobile.ZoneActivity: void findEnclosingZone()> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.passportparking.mobile.ZoneActivity: void findEnclosingZone()> --> if $r6 == null goto return
<com.passportparking.mobile.ZoneActivity: void onLocationChanged(android.location.Location)> --> r0 := @this: com.passportparking.mobile.ZoneActivity
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.passportparking.mobile.ParkingTransitMapActivity$22: void run()> --> r0 := @this: com.passportparking.mobile.ParkingTransitMapActivity$22
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.callback.AbstractAjaxCallback: void run()> --> r0 := @this: com.androidquery.callback.AbstractAjaxCallback
<com.androidquery.callback.AbstractAjaxCallback: void backgroundWork()> --> r0 := @this: com.androidquery.callback.AbstractAjaxCallback
<com.androidquery.callback.AbstractAjaxCallback: void networkWork()> --> r0 := @this: com.androidquery.callback.AbstractAjaxCallback
<com.androidquery.callback.AbstractAjaxCallback: void networkWork()> --> $r4 = r0.<com.androidquery.callback.AbstractAjaxCallback: com.androidquery.auth.AccountHandle ah>
<com.androidquery.callback.AbstractAjaxCallback: void networkWork()> --> r8 := @caughtexception
<com.androidquery.util.AQUtility: void debug(java.lang.Throwable)> --> $r0 := @parameter0: java.lang.Throwable
<com.androidquery.util.AQUtility: void debug(java.lang.Throwable)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AQuery", $r1)
--------------------------------------------------------

<com.passportparking.mobile.ZoneActivity: void findEnclosingZone()> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.passportparking.mobile.ZoneActivity: void findEnclosingZone()> --> if $r6 == null goto return
<com.passportparking.mobile.ZoneActivity: void onLocationChanged(android.location.Location)> --> r0 := @this: com.passportparking.mobile.ZoneActivity
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.passportparking.mobile.SplashActivity$14: void run()> --> r0 := @this: com.passportparking.mobile.SplashActivity$14
<com.passportparking.mobile.SplashActivity: void parseSettingsResponse(com.passportparking.mobile.server.PResponse)> --> r0 := @this: com.passportparking.mobile.SplashActivity
<com.passportparking.mobile.SplashActivity: void checkForExistingOrNewUser()> --> r0 := @this: com.passportparking.mobile.SplashActivity
<com.passportparking.mobile.SplashActivity: void checkGPS()> --> r0 := @this: com.passportparking.mobile.SplashActivity
<com.passportparking.mobile.SplashActivity: void navigateForward()> --> r0 := @this: com.passportparking.mobile.SplashActivity
<com.passportparking.mobile.utils.ViewUtils: boolean passedMinVersionCheck(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.passportparking.mobile.utils.ViewUtils: boolean passedMinVersionCheck(java.lang.String)> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("VER CHECK", "pass")
--------------------------------------------------------

<com.passportparking.mobile.ZoneActivity: void findEnclosingZone()> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.passportparking.mobile.ZoneActivity: void findEnclosingZone()> --> if $r6 == null goto return
<com.passportparking.mobile.ZoneActivity: void onLocationChanged(android.location.Location)> --> r0 := @this: com.passportparking.mobile.ZoneActivity
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.passportparking.mobile.ParkingTransitMapActivity$15: void run()> --> r0 := @this: com.passportparking.mobile.ParkingTransitMapActivity$15
<com.passportparking.mobile.ParkingTransitMapActivity$15$1: void run()> --> r0 := @this: com.passportparking.mobile.ParkingTransitMapActivity$15$1
<com.passportparking.mobile.ParkingTransitMapActivity$15$1: void run()> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r8, "Error retrieving GooglePlaces Detail")
--------------------------------------------------------

<com.passportparking.mobile.utils.CountryHelper: java.lang.String getCountryFromLocation(android.content.Context)> --> $d0 = virtualinvoke $r7.<android.location.Location: double getLatitude()>()
<com.passportparking.mobile.utils.CountryHelper: java.lang.String getCountryFromLocation(android.content.Context)> --> r3 := @caughtexception
<com.passportparking.mobile.utils.PLog: void i(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()> --> $i0 = <org.slf4j.LoggerFactory: int INITIALIZATION_STATE>
<org.slf4j.impl.StaticLoggerBinder: void <clinit>()> --> nop
<org.slf4j.impl.StaticLoggerBinder: void init()> --> r0 := @this: org.slf4j.impl.StaticLoggerBinder
<ch.qos.logback.classic.util.ContextInitializer: void autoConfig()> --> r0 := @this: ch.qos.logback.classic.util.ContextInitializer
<ch.qos.logback.core.joran.GenericConfigurator: void doConfigure(java.net.URL)> --> r0 := @this: ch.qos.logback.core.joran.GenericConfigurator
<ch.qos.logback.core.joran.GenericConfigurator: void doConfigure(java.net.URL)> --> $r3 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()
--------------------------------------------------------

<com.passportparking.mobile.ZoneActivity: void findEnclosingZone()> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.passportparking.mobile.ZoneActivity: void findEnclosingZone()> --> if $r6 == null goto return
<com.passportparking.mobile.ZoneActivity: void onLocationChanged(android.location.Location)> --> r0 := @this: com.passportparking.mobile.ZoneActivity
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.passportparking.mobile.ZoneCashDetailActivity$4: void run()> --> r0 := @this: com.passportparking.mobile.ZoneCashDetailActivity$4
<com.passportparking.mobile.ZoneCashDetailActivity: void access$3(com.passportparking.mobile.ZoneCashDetailActivity,com.passportparking.mobile.server.PResponse,com.passportparking.mobile.utils.PCard)> --> $r0 := @parameter0: com.passportparking.mobile.ZoneCashDetailActivity
<com.passportparking.mobile.ZoneCashDetailActivity: void parseResponse(com.passportparking.mobile.server.PResponse,com.passportparking.mobile.utils.PCard)> --> r0 := @this: com.passportparking.mobile.ZoneCashDetailActivity
<com.passportparking.mobile.ZoneCashDetailActivity$5: void run()> --> r0 := @this: com.passportparking.mobile.ZoneCashDetailActivity$5
<com.passportparking.mobile.ZoneCashDetailActivity: void access$4(com.passportparking.mobile.ZoneCashDetailActivity)> --> $r0 := @parameter0: com.passportparking.mobile.ZoneCashDetailActivity
<com.passportparking.mobile.ZoneCashDetailActivity: void initComponents()> --> r0 := @this: com.passportparking.mobile.ZoneCashDetailActivity
<com.passportparking.mobile.ZoneCashDetailActivity: void initComponents()> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OFFER DESCRIPTION", $r2)
--------------------------------------------------------

<com.passportparking.mobile.ZoneActivity: void findEnclosingZone()> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.passportparking.mobile.ZoneActivity: void findEnclosingZone()> --> if $r6 == null goto return
<com.passportparking.mobile.ZoneActivity: void onLocationChanged(android.location.Location)> --> r0 := @this: com.passportparking.mobile.ZoneActivity
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.passportparking.mobile.CreatePinActivity$11: void run()> --> r0 := @this: com.passportparking.mobile.CreatePinActivity$11
<com.passportparking.mobile.CreatePinActivity: void access$7(com.passportparking.mobile.CreatePinActivity,com.passportparking.mobile.server.PResponse)> --> $r0 := @parameter0: com.passportparking.mobile.CreatePinActivity
<com.passportparking.mobile.CreatePinActivity: void parseLoginResponse(com.passportparking.mobile.server.PResponse)> --> r0 := @this: com.passportparking.mobile.CreatePinActivity
<com.passportparking.mobile.CreatePinActivity: void showSuccessDialog()> --> r0 := @this: com.passportparking.mobile.CreatePinActivity
<com.passportparking.mobile.CreatePinActivity: void showSuccessDialog()> --> virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("whitelabelsignupzonecash", 1)
--------------------------------------------------------

<com.passportparking.mobile.ZoneActivity: void findEnclosingZone()> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r5)
<com.passportparking.mobile.ZoneActivity: void findEnclosingZone()> --> if $r6 == null goto return
<com.passportparking.mobile.ZoneActivity: void onLocationChanged(android.location.Location)> --> r0 := @this: com.passportparking.mobile.ZoneActivity
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.passportparking.mobile.SplashActivity$14: void run()> --> r0 := @this: com.passportparking.mobile.SplashActivity$14
<com.passportparking.mobile.SplashActivity: void parseSettingsResponse(com.passportparking.mobile.server.PResponse)> --> r0 := @this: com.passportparking.mobile.SplashActivity
<com.passportparking.mobile.SplashActivity: void checkForExistingOrNewUser()> --> r0 := @this: com.passportparking.mobile.SplashActivity
<com.passportparking.mobile.SplashActivity: void checkGPS()> --> r0 := @this: com.passportparking.mobile.SplashActivity
<com.passportparking.mobile.SplashActivity: void navigateForward()> --> r0 := @this: com.passportparking.mobile.SplashActivity
<com.passportparking.mobile.SplashActivity$11: void run()> --> r0 := @this: com.passportparking.mobile.SplashActivity$11
<com.passportparking.mobile.PActivity: void initMenuHelper()> --> r0 := @this: com.passportparking.mobile.PActivity
<com.passportparking.mobile.slidemenu.MenuHelper: void <init>(com.slidingmenu.lib.SlidingMenu,android.content.Context,android.app.Activity,com.passportparking.mobile.slidemenu.SlideMenuInterface$OnSlideMenuItemClickListener)> --> r0 := @this: com.passportparking.mobile.slidemenu.MenuHelper
<com.passportparking.mobile.slidemenu.PSlideMenuItems: java.util.ArrayList initSlideMenuItems(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.passportparking.mobile.slidemenu.PSlideMenuItems: java.util.ArrayList initSlideMenuItemsLoggedIn(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.passportparking.mobile.slidemenu.PSlideMenuItems: java.util.ArrayList initSlideMenuItemsLoggedIn(android.content.Context)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SM", $r4)
--------------------------------------------------------

<com.passportparking.mobile.services.GPSService$MyNetworkLocationListener: void onLocationChanged(android.location.Location)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.passportparking.mobile.services.GPSService: void access$12(com.passportparking.mobile.services.GPSService,double)> --> $r0 := @parameter0: com.passportparking.mobile.services.GPSService
<com.passportparking.mobile.services.GPSService: void access$12(com.passportparking.mobile.services.GPSService,double)> --> $r0.<com.passportparking.mobile.services.GPSService: double netLongitude> = $d0
<com.passportparking.mobile.services.GPSService$MyNetworkLocationListener: void onLocationChanged(android.location.Location)> --> staticinvoke <com.passportparking.mobile.services.GPSService: void access$12(com.passportparking.mobile.services.GPSService,double)>($r2, $d0)
<com.passportparking.mobile.services.GPSService$MyNetworkLocationListener: void onLocationChanged(android.location.Location)> --> $r2 = r0.<com.passportparking.mobile.services.GPSService$MyNetworkLocationListener: com.passportparking.mobile.services.GPSService this$0>
<com.passportparking.mobile.services.GPSService$MyNetworkLocationListener: void onLocationChanged(android.location.Location)> --> $r2 = r0.<com.passportparking.mobile.services.GPSService$MyNetworkLocationListener: com.passportparking.mobile.services.GPSService this$0>
<com.passportparking.mobile.services.GPSService: void access$6(com.passportparking.mobile.services.GPSService)> --> $r0 := @parameter0: com.passportparking.mobile.services.GPSService
<com.passportparking.mobile.services.GPSService: void saveCoordinate()> --> r0 := @this: com.passportparking.mobile.services.GPSService
<com.passportparking.mobile.services.GPSService: void saveCoordinate()> --> $d0 = r0.<com.passportparking.mobile.services.GPSService: double netLongitude>
<com.passportparking.mobile.services.GPSService: void saveCoordinate()> --> $b0 = $d0 cmpl 0.0
<com.passportparking.mobile.services.GPSService: void saveCoordinate()> --> if $b0 == 0 goto $r4 = new java.lang.StringBuilder
<com.passportparking.mobile.utils.ApplicationSettings: void setUserLatitude(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.passportparking.mobile.utils.SecurePreferences: void put(java.lang.String,java.lang.String)> --> r0 := @this: com.passportparking.mobile.utils.SecurePreferences
<com.passportparking.mobile.utils.SecurePreferences: void putValue(java.lang.String,java.lang.String)> --> r0 := @this: com.passportparking.mobile.utils.SecurePreferences
<com.passportparking.mobile.utils.SecurePreferences: void putValue(java.lang.String,java.lang.String)> --> $r5 = interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

