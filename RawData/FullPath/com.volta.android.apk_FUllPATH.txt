<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.react.ReactInstanceManager$5$2: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$2
<com.facebook.react.ReactInstanceManager: void access$1300(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.ReactApplicationContext)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void setupReactContext(com.facebook.react.bridge.ReactApplicationContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void attachRootViewToInstance(com.facebook.react.ReactRootView,com.facebook.react.bridge.CatalystInstance)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void attachRootViewToInstance(com.facebook.react.ReactRootView,com.facebook.react.bridge.CatalystInstance)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "ReactInstanceManager.attachRootViewToInstance()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r10 = (android.view.View) $r6
<com.facebook.marketing.internal.ButtonIndexingLogger: org.json.JSONObject generateButtonDetail(android.view.View,java.lang.String,boolean)> --> $r2 := @parameter0: android.view.View
<com.facebook.marketing.internal.ButtonIndexingLogger: org.json.JSONObject generateButtonDetail(android.view.View,java.lang.String,boolean)> --> $r12 = (android.widget.ImageView) $r2
<com.facebook.marketing.internal.ButtonIndexingLogger: org.json.JSONObject generateButtonDetail(android.view.View,java.lang.String,boolean)> --> $r18 := @caughtexception
<com.facebook.marketing.internal.ButtonIndexingLogger: org.json.JSONObject generateButtonDetail(android.view.View,java.lang.String,boolean)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "Log button indexing error", $r18)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<com.facebook.react.ReactInstanceManager$5$1: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$1
<com.facebook.react.ReactInstanceManager: void access$1200(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void tearDownReactContext(com.facebook.react.bridge.ReactContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.ReactContext: void destroy()> --> r0 := @this: com.facebook.react.bridge.ReactContext
<com.facebook.react.bridge.CatalystInstanceImpl: void destroy()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void destroy()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "CatalystInstanceImpl.destroy() start")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarSettings: void updateSentAt(android.content.Context)> --> $r1 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void updateSentAt(android.content.Context)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("radar-sentAt", $l0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context)> --> $r11 = virtualinvoke $r10.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r9, $r0, null, null, null)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.AccessTokenManager$1: void run()> --> r0 := @this: com.facebook.AccessTokenManager$1
<com.facebook.AccessTokenManager: void access$000(com.facebook.AccessTokenManager,com.facebook.AccessToken$AccessTokenRefreshCallback)> --> $r0 := @parameter0: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: void refreshCurrentAccessTokenImpl(com.facebook.AccessToken$AccessTokenRefreshCallback)> --> r0 := @this: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: com.facebook.GraphRequest createGrantedPermissionsRequest(com.facebook.AccessToken,com.facebook.GraphRequest$Callback)> --> $r0 := @parameter0: com.facebook.AccessToken
<com.facebook.GraphRequest: void <init>(com.facebook.AccessToken,java.lang.String,android.os.Bundle,com.facebook.HttpMethod,com.facebook.GraphRequest$Callback)> --> r0 := @this: com.facebook.GraphRequest
<com.facebook.GraphRequest: void <init>(com.facebook.AccessToken,java.lang.String,android.os.Bundle,com.facebook.HttpMethod,com.facebook.GraphRequest$Callback,java.lang.String)> --> r0 := @this: com.facebook.GraphRequest
<com.facebook.FacebookSdk: java.lang.String getGraphApiVersion()> --> $r1 = <com.facebook.FacebookSdk: java.lang.String TAG>
<com.facebook.internal.Utility: void logd(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.facebook.internal.Utility: void logd(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r0, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext access$900(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> $r3 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl build()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl$Builder
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler,com.facebook.react.bridge.CatalystInstanceImpl$1)> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler)> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "Initializing React Xplat Bridge before initializeBridge")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> virtualinvoke $r0.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("app_version", $r6)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.AccessTokenManager$1: void run()> --> r0 := @this: com.facebook.AccessTokenManager$1
<com.facebook.AccessTokenManager: void access$000(com.facebook.AccessTokenManager,com.facebook.AccessToken$AccessTokenRefreshCallback)> --> $r0 := @parameter0: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: void refreshCurrentAccessTokenImpl(com.facebook.AccessToken$AccessTokenRefreshCallback)> --> r0 := @this: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: com.facebook.GraphRequest createExtendAccessTokenRequest(com.facebook.AccessToken,com.facebook.GraphRequest$Callback)> --> $r0 := @parameter0: com.facebook.AccessToken
<com.facebook.AccessTokenManager: com.facebook.GraphRequest createExtendAccessTokenRequest(com.facebook.AccessToken,com.facebook.GraphRequest$Callback)> --> virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("grant_type", "fb_extend_sso_token")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.appevents.codeless.CodelessMatcher$1: void run()> --> r0 := @this: com.facebook.appevents.codeless.CodelessMatcher$1
<com.facebook.appevents.codeless.CodelessMatcher: void access$000(com.facebook.appevents.codeless.CodelessMatcher)> --> $r0 := @parameter0: com.facebook.appevents.codeless.CodelessMatcher
<com.facebook.appevents.codeless.CodelessMatcher: void matchViews()> --> r0 := @this: com.facebook.appevents.codeless.CodelessMatcher
<com.facebook.appevents.codeless.CodelessMatcher$ViewMatcher: void <init>(android.view.View,android.os.Handler,java.util.HashMap,java.lang.String)> --> r0 := @this: com.facebook.appevents.codeless.CodelessMatcher$ViewMatcher
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r8 = newarray (java.lang.Object)[1]
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r12 := @caughtexception
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "failed to send button indexing request", $r12)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context)> --> $r11 = virtualinvoke $r10.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r9, $r0, null, null, null)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarClient: void updateLocation(android.content.Context,android.location.Location,boolean,boolean,com.onradar.sdk._RadarCallback)> --> r0 := @this: com.onradar.sdk._RadarClient
<com.onradar.sdk._Radar$3: void onCallback(com.onradar.sdk.Radar$RadarStatus,org.json.JSONObject,com.onradar.sdk.model.RadarEvent[],com.onradar.sdk.model.RadarUser)> --> r0 := @this: com.onradar.sdk._Radar$3
<com.onradar.sdk._RadarSettings: void setRadarId(android.content.Context,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void setRadarId(android.content.Context,java.lang.String)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-_id", $r0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.react.ReactInstanceManager$5$2: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$2
<com.facebook.react.ReactInstanceManager: void access$1300(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.ReactApplicationContext)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void setupReactContext(com.facebook.react.bridge.ReactApplicationContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void setupReactContext(com.facebook.react.bridge.ReactApplicationContext)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "ReactInstanceManager.setupReactContext()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext access$900(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> $r3 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.CatalystInstanceImpl: void runJSBundle()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void runJSBundle()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "CatalystInstanceImpl.runJSBundle()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> $r2 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void clearStoppedAt(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void clearStoppedAt(android.content.Context)> --> if $r0 != null goto $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("RadarSDK", 0)
<com.onradar.sdk._RadarSettings: void clearStoppedAt(android.content.Context)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("radar-stoppedAt", 0L)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext access$900(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> $r3 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "ReactInstanceManager.createReactContext()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r8 = newarray (java.lang.Object)[1]
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r12 := @caughtexception
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "failed to send button indexing request", $r12)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings$1: void run()> --> r0 := @this: com.onradar.sdk._RadarSettings$1
<com.onradar.sdk._RadarSettings$1: void run()> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-ad-id", $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.react.ReactInstanceManager$5$2: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$2
<com.facebook.react.ReactInstanceManager: void access$1300(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.ReactApplicationContext)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void setupReactContext(com.facebook.react.bridge.ReactApplicationContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.CatalystInstanceImpl: void initialize()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void initialize()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "CatalystInstanceImpl.initialize()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r8 = newarray (java.lang.Object)[1]
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r12 := @caughtexception
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "failed to send button indexing request", $r12)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context)> --> $r11 = virtualinvoke $r10.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r9, $r0, null, null, null)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext access$900(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> $r3 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "ReactInstanceManager.createReactContext()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, "getAttributionIdentifiers should not be called from the main thread")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext access$900(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> $r3 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl build()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl$Builder
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler,com.facebook.react.bridge.CatalystInstanceImpl$1)> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler)> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "Initializing React Xplat Bridge.")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAndroidId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAndroidIdViaReflection(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAndroidIdViaReflection(android.content.Context)> --> $r4 = newarray (java.lang.Class)[1]
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAndroidIdViaReflection(android.content.Context)> --> $r15 := @caughtexception
<com.facebook.internal.Utility: void logd(java.lang.String,java.lang.Exception)> --> $r0 := @parameter0: java.lang.String
<com.facebook.internal.Utility: void logd(java.lang.String,java.lang.Exception)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r0, $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<com.facebook.react.ReactInstanceManager$5$1: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$1
<com.facebook.react.ReactInstanceManager: void access$1200(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void tearDownReactContext(com.facebook.react.bridge.ReactContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.ReactContext: void destroy()> --> r0 := @this: com.facebook.react.bridge.ReactContext
<com.facebook.react.bridge.CatalystInstanceImpl: void destroy()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void destroy()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "CatalystInstanceImpl.destroy() start")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.appsee.zd: void run()> --> r0 := @this: com.appsee.zd
<com.appsee.rd: void b()> --> r0 := @this: com.appsee.rd
<com.appsee.gd: void M(int,java.lang.String)> --> $i0 := @parameter0: int
<com.appsee.gd: void H(java.lang.String,java.lang.Exception,int,boolean)> --> $r1 := @parameter0: java.lang.String
<com.appsee.gd: void H(java.lang.String,java.lang.Exception,int,boolean)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("appsee", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> virtualinvoke $r0.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("device_id", $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> virtualinvoke $r0.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("indexed_button_list", $r2)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext access$900(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> $r3 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "ReactInstanceManager.createReactContext()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.AccessTokenManager$1: void run()> --> r0 := @this: com.facebook.AccessTokenManager$1
<com.facebook.AccessTokenManager: void access$000(com.facebook.AccessTokenManager,com.facebook.AccessToken$AccessTokenRefreshCallback)> --> $r0 := @parameter0: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: void refreshCurrentAccessTokenImpl(com.facebook.AccessToken$AccessTokenRefreshCallback)> --> r0 := @this: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: com.facebook.GraphRequest createExtendAccessTokenRequest(com.facebook.AccessToken,com.facebook.GraphRequest$Callback)> --> $r0 := @parameter0: com.facebook.AccessToken
<com.facebook.AccessTokenManager: com.facebook.GraphRequest createExtendAccessTokenRequest(com.facebook.AccessToken,com.facebook.GraphRequest$Callback)> --> virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("grant_type", "fb_extend_sso_token")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.AccessTokenManager$1: void run()> --> r0 := @this: com.facebook.AccessTokenManager$1
<com.facebook.AccessTokenManager: void access$000(com.facebook.AccessTokenManager,com.facebook.AccessToken$AccessTokenRefreshCallback)> --> $r0 := @parameter0: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: void refreshCurrentAccessTokenImpl(com.facebook.AccessToken$AccessTokenRefreshCallback)> --> r0 := @this: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: com.facebook.GraphRequest createExtendAccessTokenRequest(com.facebook.AccessToken,com.facebook.GraphRequest$Callback)> --> $r0 := @parameter0: com.facebook.AccessToken
<com.facebook.GraphRequest: void <init>(com.facebook.AccessToken,java.lang.String,android.os.Bundle,com.facebook.HttpMethod,com.facebook.GraphRequest$Callback)> --> r0 := @this: com.facebook.GraphRequest
<com.facebook.GraphRequest: void <init>(com.facebook.AccessToken,java.lang.String,android.os.Bundle,com.facebook.HttpMethod,com.facebook.GraphRequest$Callback,java.lang.String)> --> r0 := @this: com.facebook.GraphRequest
<com.facebook.FacebookSdk: java.lang.String getGraphApiVersion()> --> $r1 = <com.facebook.FacebookSdk: java.lang.String TAG>
<com.facebook.internal.Utility: void logd(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.facebook.internal.Utility: void logd(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r0, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<com.facebook.react.ReactInstanceManager$5$1: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$1
<com.facebook.react.ReactInstanceManager: void access$1200(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void tearDownReactContext(com.facebook.react.bridge.ReactContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void tearDownReactContext(com.facebook.react.bridge.ReactContext)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "ReactInstanceManager.tearDownReactContext()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<com.facebook.react.ReactInstanceManager$5$1: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$1
<com.facebook.react.ReactInstanceManager: void access$1200(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "ReactInstanceManager.runCreateReactContextOnNewThread()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings$1: void run()> --> r0 := @this: com.onradar.sdk._RadarSettings$1
<com.onradar.sdk._RadarSettings$1: void run()> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-ad-id", $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<com.facebook.react.ReactInstanceManager$5$1: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$1
<com.facebook.react.ReactInstanceManager: void access$1200(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void tearDownReactContext(com.facebook.react.bridge.ReactContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.ReactContext: void destroy()> --> r0 := @this: com.facebook.react.bridge.ReactContext
<com.facebook.react.bridge.CatalystInstanceImpl: void destroy()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.queue.MessageQueueThreadImpl: void runOnQueue(java.lang.Runnable)> --> r0 := @this: com.facebook.react.bridge.queue.MessageQueueThreadImpl
<com.facebook.common.logging.FLog: void w(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.facebook.common.logging.FLogDefaultLoggingDelegate: void w(java.lang.String,java.lang.String)> --> r0 := @this: com.facebook.common.logging.FLogDefaultLoggingDelegate
<com.facebook.common.logging.FLogDefaultLoggingDelegate: void println(int,java.lang.String,java.lang.String)> --> r0 := @this: com.facebook.common.logging.FLogDefaultLoggingDelegate
<com.facebook.common.logging.FLogDefaultLoggingDelegate: void println(int,java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>($i0, $r2, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<com.facebook.react.ReactInstanceManager$5$1: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$1
<com.facebook.react.ReactInstanceManager: void access$1200(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void tearDownReactContext(com.facebook.react.bridge.ReactContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void tearDownReactContext(com.facebook.react.bridge.ReactContext)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "ReactInstanceManager.tearDownReactContext()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.react.ReactInstanceManager$5$2: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$2
<com.facebook.react.ReactInstanceManager: void access$1300(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.ReactApplicationContext)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void setupReactContext(com.facebook.react.bridge.ReactApplicationContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void attachRootViewToInstance(com.facebook.react.ReactRootView,com.facebook.react.bridge.CatalystInstance)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void attachRootViewToInstance(com.facebook.react.ReactRootView,com.facebook.react.bridge.CatalystInstance)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "ReactInstanceManager.attachRootViewToInstance()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.AccessTokenManager$1: void run()> --> r0 := @this: com.facebook.AccessTokenManager$1
<com.facebook.AccessTokenManager: void access$000(com.facebook.AccessTokenManager,com.facebook.AccessToken$AccessTokenRefreshCallback)> --> $r0 := @parameter0: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: void refreshCurrentAccessTokenImpl(com.facebook.AccessToken$AccessTokenRefreshCallback)> --> r0 := @this: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: com.facebook.GraphRequest createExtendAccessTokenRequest(com.facebook.AccessToken,com.facebook.GraphRequest$Callback)> --> $r0 := @parameter0: com.facebook.AccessToken
<com.facebook.GraphRequest: void <init>(com.facebook.AccessToken,java.lang.String,android.os.Bundle,com.facebook.HttpMethod,com.facebook.GraphRequest$Callback)> --> r0 := @this: com.facebook.GraphRequest
<com.facebook.GraphRequest: void <init>(com.facebook.AccessToken,java.lang.String,android.os.Bundle,com.facebook.HttpMethod,com.facebook.GraphRequest$Callback,java.lang.String)> --> r0 := @this: com.facebook.GraphRequest
<com.facebook.FacebookSdk: java.lang.String getGraphApiVersion()> --> $r1 = <com.facebook.FacebookSdk: java.lang.String TAG>
<com.facebook.internal.Utility: void logd(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.facebook.internal.Utility: void logd(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r0, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.appevents.codeless.CodelessMatcher$1: void run()> --> r0 := @this: com.facebook.appevents.codeless.CodelessMatcher$1
<com.facebook.appevents.codeless.CodelessMatcher: void access$000(com.facebook.appevents.codeless.CodelessMatcher)> --> $r0 := @parameter0: com.facebook.appevents.codeless.CodelessMatcher
<com.facebook.appevents.codeless.CodelessMatcher: void matchViews()> --> r0 := @this: com.facebook.appevents.codeless.CodelessMatcher
<com.facebook.appevents.codeless.CodelessMatcher$ViewMatcher: void <init>(android.view.View,android.os.Handler,java.util.HashMap,java.lang.String)> --> r0 := @this: com.facebook.appevents.codeless.CodelessMatcher$ViewMatcher
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r10 = (android.view.View) $r6
<com.facebook.marketing.internal.ButtonIndexingLogger: org.json.JSONObject generateButtonDetail(android.view.View,java.lang.String,boolean)> --> $r2 := @parameter0: android.view.View
<com.facebook.marketing.internal.ButtonIndexingLogger: org.json.JSONObject generateButtonDetail(android.view.View,java.lang.String,boolean)> --> $r12 = (android.widget.ImageView) $r2
<com.facebook.marketing.internal.ButtonIndexingLogger: org.json.JSONObject generateButtonDetail(android.view.View,java.lang.String,boolean)> --> $r18 := @caughtexception
<com.facebook.marketing.internal.ButtonIndexingLogger: org.json.JSONObject generateButtonDetail(android.view.View,java.lang.String,boolean)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "Log button indexing error", $r18)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> virtualinvoke $r0.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("indexed_button_list", $r2)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarLogger: void log(android.content.Context,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.onradar.sdk._RadarLogger: void log(android.content.Context,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("_RadarLogger", $r0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r10 = (android.view.View) $r6
<com.facebook.marketing.internal.ButtonIndexingLogger: org.json.JSONObject generateButtonDetail(android.view.View,java.lang.String,boolean)> --> $r2 := @parameter0: android.view.View
<com.facebook.marketing.internal.ButtonIndexingLogger: org.json.JSONObject generateButtonDetail(android.view.View,java.lang.String,boolean)> --> $r12 = (android.widget.ImageView) $r2
<com.facebook.marketing.internal.ButtonIndexingLogger: org.json.JSONObject generateButtonDetail(android.view.View,java.lang.String,boolean)> --> $r18 := @caughtexception
<com.facebook.marketing.internal.ButtonIndexingLogger: org.json.JSONObject generateButtonDetail(android.view.View,java.lang.String,boolean)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "Log button indexing error", $r18)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> $r2 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void clearStoppedAt(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void clearStoppedAt(android.content.Context)> --> if $r0 != null goto $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("RadarSDK", 0)
<com.onradar.sdk._RadarSettings: void clearStoppedAt(android.content.Context)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("radar-stoppedAt", 0L)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<com.facebook.react.ReactInstanceManager$5$1: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$1
<com.facebook.react.ReactInstanceManager: void access$1200(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void tearDownReactContext(com.facebook.react.bridge.ReactContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.ReactContext: void destroy()> --> r0 := @this: com.facebook.react.bridge.ReactContext
<com.facebook.react.bridge.CatalystInstanceImpl: void destroy()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.queue.MessageQueueThreadImpl: void runOnQueue(java.lang.Runnable)> --> r0 := @this: com.facebook.react.bridge.queue.MessageQueueThreadImpl
<com.facebook.common.logging.FLog: void w(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.facebook.common.logging.FLogDefaultLoggingDelegate: void w(java.lang.String,java.lang.String)> --> r0 := @this: com.facebook.common.logging.FLogDefaultLoggingDelegate
<com.facebook.common.logging.FLogDefaultLoggingDelegate: void println(int,java.lang.String,java.lang.String)> --> r0 := @this: com.facebook.common.logging.FLogDefaultLoggingDelegate
<com.facebook.common.logging.FLogDefaultLoggingDelegate: void println(int,java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>($i0, $r2, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.react.ReactInstanceManager$5$1: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$1
<com.facebook.react.ReactInstanceManager: void access$1200(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void tearDownReactContext(com.facebook.react.bridge.ReactContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.ReactContext: void destroy()> --> r0 := @this: com.facebook.react.bridge.ReactContext
<com.facebook.react.bridge.CatalystInstanceImpl: void destroy()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void destroy()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "CatalystInstanceImpl.destroy() start")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r8 = newarray (java.lang.Object)[1]
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r12 := @caughtexception
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "failed to send button indexing request", $r12)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<com.facebook.react.ReactInstanceManager$5$1: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$1
<com.facebook.react.ReactInstanceManager: void access$1200(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void tearDownReactContext(com.facebook.react.bridge.ReactContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.ReactContext: void destroy()> --> r0 := @this: com.facebook.react.bridge.ReactContext
<com.facebook.react.bridge.CatalystInstanceImpl: void destroy()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void destroy()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "CatalystInstanceImpl.destroy() start")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings$1: void run()> --> r0 := @this: com.onradar.sdk._RadarSettings$1
<com.onradar.sdk._RadarSettings$1: void run()> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-ad-id", "OptedOut")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context)> --> $r11 = virtualinvoke $r10.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r9, $r0, null, null, null)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.react.ReactInstanceManager$5$2: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$2
<com.facebook.react.ReactInstanceManager: void access$1300(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.ReactApplicationContext)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void setupReactContext(com.facebook.react.bridge.ReactApplicationContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.CatalystInstanceImpl: void initialize()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.queue.MessageQueueThreadImpl: void runOnQueue(java.lang.Runnable)> --> r0 := @this: com.facebook.react.bridge.queue.MessageQueueThreadImpl
<com.facebook.common.logging.FLog: void w(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.facebook.common.logging.FLogDefaultLoggingDelegate: void w(java.lang.String,java.lang.String)> --> r0 := @this: com.facebook.common.logging.FLogDefaultLoggingDelegate
<com.facebook.common.logging.FLogDefaultLoggingDelegate: void println(int,java.lang.String,java.lang.String)> --> r0 := @this: com.facebook.common.logging.FLogDefaultLoggingDelegate
<com.facebook.common.logging.FLogDefaultLoggingDelegate: void println(int,java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>($i0, $r2, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> $r2 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void clearStoppedAt(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void clearStoppedAt(android.content.Context)> --> if $r0 != null goto $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("RadarSDK", 0)
<com.onradar.sdk._RadarSettings: void clearStoppedAt(android.content.Context)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("radar-stoppedAt", 0L)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext access$900(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> $r3 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl build()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl$Builder
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler,com.facebook.react.bridge.CatalystInstanceImpl$1)> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler)> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "Initializing React Xplat Bridge before initializeBridge")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.AccessTokenManager$1: void run()> --> r0 := @this: com.facebook.AccessTokenManager$1
<com.facebook.AccessTokenManager: void access$000(com.facebook.AccessTokenManager,com.facebook.AccessToken$AccessTokenRefreshCallback)> --> $r0 := @parameter0: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: void refreshCurrentAccessTokenImpl(com.facebook.AccessToken$AccessTokenRefreshCallback)> --> r0 := @this: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: com.facebook.GraphRequest createExtendAccessTokenRequest(com.facebook.AccessToken,com.facebook.GraphRequest$Callback)> --> $r0 := @parameter0: com.facebook.AccessToken
<com.facebook.AccessTokenManager: com.facebook.GraphRequest createExtendAccessTokenRequest(com.facebook.AccessToken,com.facebook.GraphRequest$Callback)> --> virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("grant_type", "fb_extend_sso_token")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.react.ReactInstanceManager$5$2: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$2
<com.facebook.react.ReactInstanceManager: void access$1300(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.ReactApplicationContext)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void setupReactContext(com.facebook.react.bridge.ReactApplicationContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void attachRootViewToInstance(com.facebook.react.ReactRootView,com.facebook.react.bridge.CatalystInstance)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void attachRootViewToInstance(com.facebook.react.ReactRootView,com.facebook.react.bridge.CatalystInstance)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "ReactInstanceManager.attachRootViewToInstance()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> virtualinvoke $r0.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("indexed_button_list", $r2)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext access$900(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> $r3 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "ReactInstanceManager.createReactContext()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.AccessTokenManager$1: void run()> --> r0 := @this: com.facebook.AccessTokenManager$1
<com.facebook.AccessTokenManager: void access$000(com.facebook.AccessTokenManager,com.facebook.AccessToken$AccessTokenRefreshCallback)> --> $r0 := @parameter0: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: void refreshCurrentAccessTokenImpl(com.facebook.AccessToken$AccessTokenRefreshCallback)> --> r0 := @this: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: com.facebook.GraphRequest createGrantedPermissionsRequest(com.facebook.AccessToken,com.facebook.GraphRequest$Callback)> --> $r0 := @parameter0: com.facebook.AccessToken
<com.facebook.GraphRequest: void <init>(com.facebook.AccessToken,java.lang.String,android.os.Bundle,com.facebook.HttpMethod,com.facebook.GraphRequest$Callback)> --> r0 := @this: com.facebook.GraphRequest
<com.facebook.GraphRequest: void <init>(com.facebook.AccessToken,java.lang.String,android.os.Bundle,com.facebook.HttpMethod,com.facebook.GraphRequest$Callback,java.lang.String)> --> r0 := @this: com.facebook.GraphRequest
<com.facebook.FacebookSdk: java.lang.String getGraphApiVersion()> --> $r1 = <com.facebook.FacebookSdk: java.lang.String TAG>
<com.facebook.internal.Utility: void logd(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.facebook.internal.Utility: void logd(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r0, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext access$900(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> $r3 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl build()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl$Builder
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler,com.facebook.react.bridge.CatalystInstanceImpl$1)> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler)> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "Initializing React Xplat Bridge.")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarSettings: void updateSentAt(android.content.Context)> --> $r1 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void updateSentAt(android.content.Context)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("radar-sentAt", $l0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> virtualinvoke $r0.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("indexed_button_list", $r2)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.appsee.zd: void run()> --> r0 := @this: com.appsee.zd
<com.appsee.rd: void b()> --> r0 := @this: com.appsee.rd
<com.appsee.gd: void M(int,java.lang.String)> --> $i0 := @parameter0: int
<com.appsee.gd: void H(java.lang.String,java.lang.Exception,int,boolean)> --> $r1 := @parameter0: java.lang.String
<com.appsee.gd: void H(java.lang.String,java.lang.Exception,int,boolean)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("appsee", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.AccessTokenManager$1: void run()> --> r0 := @this: com.facebook.AccessTokenManager$1
<com.facebook.AccessTokenManager: void access$000(com.facebook.AccessTokenManager,com.facebook.AccessToken$AccessTokenRefreshCallback)> --> $r0 := @parameter0: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: void refreshCurrentAccessTokenImpl(com.facebook.AccessToken$AccessTokenRefreshCallback)> --> r0 := @this: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: com.facebook.GraphRequest createExtendAccessTokenRequest(com.facebook.AccessToken,com.facebook.GraphRequest$Callback)> --> $r0 := @parameter0: com.facebook.AccessToken
<com.facebook.AccessTokenManager: com.facebook.GraphRequest createExtendAccessTokenRequest(com.facebook.AccessToken,com.facebook.GraphRequest$Callback)> --> virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("grant_type", "fb_extend_sso_token")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAndroidId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAndroidIdViaReflection(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAndroidIdViaReflection(android.content.Context)> --> $r4 = newarray (java.lang.Class)[1]
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAndroidIdViaReflection(android.content.Context)> --> $r15 := @caughtexception
<com.facebook.internal.Utility: void logd(java.lang.String,java.lang.Exception)> --> $r0 := @parameter0: java.lang.String
<com.facebook.internal.Utility: void logd(java.lang.String,java.lang.Exception)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r0, $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<com.facebook.react.ReactInstanceManager$5$1: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$1
<com.facebook.react.ReactInstanceManager: void access$1200(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "ReactInstanceManager.runCreateReactContextOnNewThread()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.on: void run()> --> r0 := @this: com.appsee.on
<com.appsee.vd: void H()> --> r0 := @this: com.appsee.vd
<com.appsee.gd: void M(int,java.lang.String)> --> $i0 := @parameter0: int
<com.appsee.gd: void H(java.lang.String,java.lang.Exception,int,boolean)> --> $r1 := @parameter0: java.lang.String
<com.appsee.gd: void H(java.lang.String,java.lang.Exception,int,boolean)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("appsee", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.react.ReactInstanceManager$5$2: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$2
<com.facebook.react.ReactInstanceManager: void access$1300(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.ReactApplicationContext)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void setupReactContext(com.facebook.react.bridge.ReactApplicationContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void attachRootViewToInstance(com.facebook.react.ReactRootView,com.facebook.react.bridge.CatalystInstance)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void attachRootViewToInstance(com.facebook.react.ReactRootView,com.facebook.react.bridge.CatalystInstance)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "ReactInstanceManager.attachRootViewToInstance()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.onradar.sdk._RadarSettings$1: void run()> --> r0 := @this: com.onradar.sdk._RadarSettings$1
<com.onradar.sdk._RadarSettings$1: void run()> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-ad-id", "OptedOut")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.react.ReactInstanceManager$5$2: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$2
<com.facebook.react.ReactInstanceManager: void access$1300(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.ReactApplicationContext)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void setupReactContext(com.facebook.react.bridge.ReactApplicationContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void setupReactContext(com.facebook.react.bridge.ReactApplicationContext)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "ReactInstanceManager.setupReactContext()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, "getAttributionIdentifiers should not be called from the main thread")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.on: void run()> --> r0 := @this: com.appsee.on
<com.appsee.vd: void H()> --> r0 := @this: com.appsee.vd
<com.appsee.gd: void M(int,java.lang.String)> --> $i0 := @parameter0: int
<com.appsee.gd: void H(java.lang.String,java.lang.Exception,int,boolean)> --> $r1 := @parameter0: java.lang.String
<com.appsee.gd: void H(java.lang.String,java.lang.Exception,int,boolean)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("appsee", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r10 = (android.view.View) $r6
<com.facebook.marketing.internal.ButtonIndexingLogger: org.json.JSONObject generateButtonDetail(android.view.View,java.lang.String,boolean)> --> $r2 := @parameter0: android.view.View
<com.facebook.marketing.internal.ButtonIndexingLogger: org.json.JSONObject generateButtonDetail(android.view.View,java.lang.String,boolean)> --> $r12 = (android.widget.ImageView) $r2
<com.facebook.marketing.internal.ButtonIndexingLogger: org.json.JSONObject generateButtonDetail(android.view.View,java.lang.String,boolean)> --> $r18 := @caughtexception
<com.facebook.marketing.internal.ButtonIndexingLogger: org.json.JSONObject generateButtonDetail(android.view.View,java.lang.String,boolean)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "Log button indexing error", $r18)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, "getAttributionIdentifiers should not be called from the main thread")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r10 = (android.view.View) $r6
<com.facebook.marketing.internal.ButtonIndexingLogger: org.json.JSONObject generateButtonDetail(android.view.View,java.lang.String,boolean)> --> $r2 := @parameter0: android.view.View
<com.facebook.marketing.internal.ButtonIndexingLogger: org.json.JSONObject generateButtonDetail(android.view.View,java.lang.String,boolean)> --> $r12 = (android.widget.ImageView) $r2
<com.facebook.marketing.internal.ButtonIndexingLogger: org.json.JSONObject generateButtonDetail(android.view.View,java.lang.String,boolean)> --> $r18 := @caughtexception
<com.facebook.marketing.internal.ButtonIndexingLogger: org.json.JSONObject generateButtonDetail(android.view.View,java.lang.String,boolean)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "Log button indexing error", $r18)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext access$900(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> $r3 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.CatalystInstanceImpl: void runJSBundle()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void runJSBundle()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "CatalystInstanceImpl.runJSBundle()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<com.facebook.react.ReactInstanceManager$5$1: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$1
<com.facebook.react.ReactInstanceManager: void access$1200(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "ReactInstanceManager.runCreateReactContextOnNewThread()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<com.facebook.react.ReactInstanceManager$5$1: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$1
<com.facebook.react.ReactInstanceManager: void access$1200(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void tearDownReactContext(com.facebook.react.bridge.ReactContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.ReactContext: void destroy()> --> r0 := @this: com.facebook.react.bridge.ReactContext
<com.facebook.react.bridge.CatalystInstanceImpl: void destroy()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.queue.MessageQueueThreadImpl: void runOnQueue(java.lang.Runnable)> --> r0 := @this: com.facebook.react.bridge.queue.MessageQueueThreadImpl
<com.facebook.common.logging.FLog: void w(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.facebook.common.logging.FLogDefaultLoggingDelegate: void w(java.lang.String,java.lang.String)> --> r0 := @this: com.facebook.common.logging.FLogDefaultLoggingDelegate
<com.facebook.common.logging.FLogDefaultLoggingDelegate: void println(int,java.lang.String,java.lang.String)> --> r0 := @this: com.facebook.common.logging.FLogDefaultLoggingDelegate
<com.facebook.common.logging.FLogDefaultLoggingDelegate: void println(int,java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>($i0, $r2, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.appevents.codeless.CodelessMatcher$1: void run()> --> r0 := @this: com.facebook.appevents.codeless.CodelessMatcher$1
<com.facebook.appevents.codeless.CodelessMatcher: void access$000(com.facebook.appevents.codeless.CodelessMatcher)> --> $r0 := @parameter0: com.facebook.appevents.codeless.CodelessMatcher
<com.facebook.appevents.codeless.CodelessMatcher: void matchViews()> --> r0 := @this: com.facebook.appevents.codeless.CodelessMatcher
<com.facebook.appevents.codeless.CodelessMatcher$ViewMatcher: void <init>(android.view.View,android.os.Handler,java.util.HashMap,java.lang.String)> --> r0 := @this: com.facebook.appevents.codeless.CodelessMatcher$ViewMatcher
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, "getAttributionIdentifiers should not be called from the main thread")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.AccessTokenManager$1: void run()> --> r0 := @this: com.facebook.AccessTokenManager$1
<com.facebook.AccessTokenManager: void access$000(com.facebook.AccessTokenManager,com.facebook.AccessToken$AccessTokenRefreshCallback)> --> $r0 := @parameter0: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: void refreshCurrentAccessTokenImpl(com.facebook.AccessToken$AccessTokenRefreshCallback)> --> r0 := @this: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: com.facebook.GraphRequest createExtendAccessTokenRequest(com.facebook.AccessToken,com.facebook.GraphRequest$Callback)> --> $r0 := @parameter0: com.facebook.AccessToken
<com.facebook.AccessTokenManager: com.facebook.GraphRequest createExtendAccessTokenRequest(com.facebook.AccessToken,com.facebook.GraphRequest$Callback)> --> virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("grant_type", "fb_extend_sso_token")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<com.appsee.qe: void H(java.lang.Throwable,java.lang.String)> --> $r0 := @parameter0: java.lang.Throwable
<com.appsee.qe: void H(java.lang.Throwable,java.lang.String,boolean)> --> $r1 := @parameter0: java.lang.Throwable
<com.appsee.gd: void H(int,java.lang.String)> --> $i0 := @parameter0: int
<com.appsee.gd: void H(java.lang.String,java.lang.Exception,int,boolean)> --> $r1 := @parameter0: java.lang.String
<com.appsee.gd: void H(java.lang.String,java.lang.Exception,int,boolean)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("appsee", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext access$900(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> $r3 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl build()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl$Builder
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler,com.facebook.react.bridge.CatalystInstanceImpl$1)> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler)> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "Initializing React Xplat Bridge before initializeBridge")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> $r2 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void clearStoppedAt(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void clearStoppedAt(android.content.Context)> --> if $r0 != null goto $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("RadarSDK", 0)
<com.onradar.sdk._RadarSettings: void clearStoppedAt(android.content.Context)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("radar-stoppedAt", 0L)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext access$900(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> $r3 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl build()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl$Builder
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler,com.facebook.react.bridge.CatalystInstanceImpl$1)> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler)> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "Initializing React Xplat Bridge before initializeBridge")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.on: void run()> --> r0 := @this: com.appsee.on
<com.appsee.vd: void H()> --> r0 := @this: com.appsee.vd
<com.appsee.gd: void M(int,java.lang.String)> --> $i0 := @parameter0: int
<com.appsee.gd: void H(java.lang.String,java.lang.Exception,int,boolean)> --> $r1 := @parameter0: java.lang.String
<com.appsee.gd: void H(java.lang.String,java.lang.Exception,int,boolean)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("appsee", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarSettings: void updateSentAt(android.content.Context)> --> $r1 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void updateSentAt(android.content.Context)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("radar-sentAt", $l0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAndroidId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAndroidIdViaService(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAndroidIdViaService(android.content.Context)> --> $r3 = new com.facebook.internal.AttributionIdentifiers$GoogleAdInfo
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAndroidIdViaService(android.content.Context)> --> $r8 := @caughtexception
<com.facebook.internal.Utility: void logd(java.lang.String,java.lang.Exception)> --> $r0 := @parameter0: java.lang.String
<com.facebook.internal.Utility: void logd(java.lang.String,java.lang.Exception)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r0, $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context)> --> $r11 = virtualinvoke $r10.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r9, $r0, null, null, null)
--------------------------------------------------------

<com.onradar.sdk._RadarSettings: void updateLastMovingLocation(android.content.Context,android.location.Location)> --> $d0 = virtualinvoke $r0.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._RadarSettings: void updateLastMovingLocation(android.content.Context,android.location.Location)> --> $f0 = (float) $d0
<com.onradar.sdk._RadarSettings: void updateLastMovingLocation(android.content.Context,android.location.Location)> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putFloat(java.lang.String,float)>("radar-lastMovingLocationLatitude", $f0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<com.appsee.qe: void H(java.lang.Throwable,java.lang.String)> --> $r0 := @parameter0: java.lang.Throwable
<com.appsee.qe: void H(java.lang.Throwable,java.lang.String,boolean)> --> $r1 := @parameter0: java.lang.Throwable
<com.appsee.gd: void H(int,java.lang.String)> --> $i0 := @parameter0: int
<com.appsee.gd: void H(java.lang.String,java.lang.Exception,int,boolean)> --> $r1 := @parameter0: java.lang.String
<com.appsee.gd: void H(java.lang.String,java.lang.Exception,int,boolean)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("appsee", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.appevents.codeless.CodelessMatcher$1: void run()> --> r0 := @this: com.facebook.appevents.codeless.CodelessMatcher$1
<com.facebook.appevents.codeless.CodelessMatcher: void access$000(com.facebook.appevents.codeless.CodelessMatcher)> --> $r0 := @parameter0: com.facebook.appevents.codeless.CodelessMatcher
<com.facebook.appevents.codeless.CodelessMatcher: void matchViews()> --> r0 := @this: com.facebook.appevents.codeless.CodelessMatcher
<com.facebook.appevents.codeless.CodelessMatcher$ViewMatcher: void <init>(android.view.View,android.os.Handler,java.util.HashMap,java.lang.String)> --> r0 := @this: com.facebook.appevents.codeless.CodelessMatcher$ViewMatcher
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAndroidId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAndroidIdViaReflection(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAndroidIdViaReflection(android.content.Context)> --> $r4 = newarray (java.lang.Class)[1]
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAndroidIdViaReflection(android.content.Context)> --> $r15 := @caughtexception
<com.facebook.internal.Utility: void logd(java.lang.String,java.lang.Exception)> --> $r0 := @parameter0: java.lang.String
<com.facebook.internal.Utility: void logd(java.lang.String,java.lang.Exception)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r0, $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<com.facebook.react.ReactInstanceManager$5$1: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$1
<com.facebook.react.ReactInstanceManager: void access$1200(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void tearDownReactContext(com.facebook.react.bridge.ReactContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.ReactContext: void destroy()> --> r0 := @this: com.facebook.react.bridge.ReactContext
<com.facebook.react.bridge.CatalystInstanceImpl: void destroy()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void destroy()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "CatalystInstanceImpl.destroy() start")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext access$900(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> $r3 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.CatalystInstanceImpl: void runJSBundle()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void runJSBundle()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "CatalystInstanceImpl.runJSBundle()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.react.ReactInstanceManager$5$2: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$2
<com.facebook.react.ReactInstanceManager: void access$1300(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.ReactApplicationContext)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void setupReactContext(com.facebook.react.bridge.ReactApplicationContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.CatalystInstanceImpl: void initialize()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void initialize()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "CatalystInstanceImpl.initialize()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarSettings: void updateSentAt(android.content.Context)> --> $r1 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void updateSentAt(android.content.Context)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("radar-sentAt", $l0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> virtualinvoke $r0.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("device_id", $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.appevents.codeless.CodelessMatcher$1: void run()> --> r0 := @this: com.facebook.appevents.codeless.CodelessMatcher$1
<com.facebook.appevents.codeless.CodelessMatcher: void access$000(com.facebook.appevents.codeless.CodelessMatcher)> --> $r0 := @parameter0: com.facebook.appevents.codeless.CodelessMatcher
<com.facebook.appevents.codeless.CodelessMatcher: void matchViews()> --> r0 := @this: com.facebook.appevents.codeless.CodelessMatcher
<com.facebook.appevents.codeless.CodelessMatcher$ViewMatcher: void <init>(android.view.View,android.os.Handler,java.util.HashMap,java.lang.String)> --> r0 := @this: com.facebook.appevents.codeless.CodelessMatcher$ViewMatcher
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> virtualinvoke $r0.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("indexed_button_list", $r2)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, "getAttributionIdentifiers should not be called from the main thread")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext access$900(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> $r3 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "ReactInstanceManager.createReactContext()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.AccessTokenManager$1: void run()> --> r0 := @this: com.facebook.AccessTokenManager$1
<com.facebook.AccessTokenManager: void access$000(com.facebook.AccessTokenManager,com.facebook.AccessToken$AccessTokenRefreshCallback)> --> $r0 := @parameter0: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: void refreshCurrentAccessTokenImpl(com.facebook.AccessToken$AccessTokenRefreshCallback)> --> r0 := @this: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: com.facebook.GraphRequest createExtendAccessTokenRequest(com.facebook.AccessToken,com.facebook.GraphRequest$Callback)> --> $r0 := @parameter0: com.facebook.AccessToken
<com.facebook.AccessTokenManager: com.facebook.GraphRequest createExtendAccessTokenRequest(com.facebook.AccessToken,com.facebook.GraphRequest$Callback)> --> virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("grant_type", "fb_extend_sso_token")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.react.ReactInstanceManager$5$2: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$2
<com.facebook.react.ReactInstanceManager: void access$1300(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.ReactApplicationContext)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void setupReactContext(com.facebook.react.bridge.ReactApplicationContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void attachRootViewToInstance(com.facebook.react.ReactRootView,com.facebook.react.bridge.CatalystInstance)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void attachRootViewToInstance(com.facebook.react.ReactRootView,com.facebook.react.bridge.CatalystInstance)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "ReactInstanceManager.attachRootViewToInstance()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> $r2 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void clearStoppedAt(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void clearStoppedAt(android.content.Context)> --> if $r0 != null goto $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("RadarSDK", 0)
<com.onradar.sdk._RadarSettings: void clearStoppedAt(android.content.Context)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("radar-stoppedAt", 0L)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.react.ReactInstanceManager$5$2: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$2
<com.facebook.react.ReactInstanceManager: void access$1300(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.ReactApplicationContext)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void setupReactContext(com.facebook.react.bridge.ReactApplicationContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void setupReactContext(com.facebook.react.bridge.ReactApplicationContext)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "ReactInstanceManager.setupReactContext()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.react.ReactInstanceManager$5$1: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$1
<com.facebook.react.ReactInstanceManager: void access$1200(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "ReactInstanceManager.runCreateReactContextOnNewThread()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<com.facebook.react.ReactInstanceManager$5$1: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$1
<com.facebook.react.ReactInstanceManager: void access$1200(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void tearDownReactContext(com.facebook.react.bridge.ReactContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void tearDownReactContext(com.facebook.react.bridge.ReactContext)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "ReactInstanceManager.tearDownReactContext()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.react.ReactInstanceManager$5$2: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$2
<com.facebook.react.ReactInstanceManager: void access$1300(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.ReactApplicationContext)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void setupReactContext(com.facebook.react.bridge.ReactApplicationContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.CatalystInstanceImpl: void initialize()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void initialize()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "CatalystInstanceImpl.initialize()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.react.ReactInstanceManager$5$1: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$1
<com.facebook.react.ReactInstanceManager: void access$1200(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void tearDownReactContext(com.facebook.react.bridge.ReactContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.ReactContext: void destroy()> --> r0 := @this: com.facebook.react.bridge.ReactContext
<com.facebook.react.bridge.CatalystInstanceImpl: void destroy()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.queue.MessageQueueThreadImpl: void runOnQueue(java.lang.Runnable)> --> r0 := @this: com.facebook.react.bridge.queue.MessageQueueThreadImpl
<com.facebook.common.logging.FLog: void w(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.facebook.common.logging.FLogDefaultLoggingDelegate: void w(java.lang.String,java.lang.String)> --> r0 := @this: com.facebook.common.logging.FLogDefaultLoggingDelegate
<com.facebook.common.logging.FLogDefaultLoggingDelegate: void println(int,java.lang.String,java.lang.String)> --> r0 := @this: com.facebook.common.logging.FLogDefaultLoggingDelegate
<com.facebook.common.logging.FLogDefaultLoggingDelegate: void println(int,java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>($i0, $r2, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r10 = (android.view.View) $r6
<com.facebook.marketing.internal.ButtonIndexingLogger: org.json.JSONObject generateButtonDetail(android.view.View,java.lang.String,boolean)> --> $r2 := @parameter0: android.view.View
<com.facebook.marketing.internal.ButtonIndexingLogger: org.json.JSONObject generateButtonDetail(android.view.View,java.lang.String,boolean)> --> $r12 = (android.widget.ImageView) $r2
<com.facebook.marketing.internal.ButtonIndexingLogger: org.json.JSONObject generateButtonDetail(android.view.View,java.lang.String,boolean)> --> $r18 := @caughtexception
<com.facebook.marketing.internal.ButtonIndexingLogger: org.json.JSONObject generateButtonDetail(android.view.View,java.lang.String,boolean)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "Log button indexing error", $r18)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAndroidId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAndroidIdViaReflection(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAndroidIdViaReflection(android.content.Context)> --> $r4 = newarray (java.lang.Class)[1]
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAndroidIdViaReflection(android.content.Context)> --> $r15 := @caughtexception
<com.facebook.internal.Utility: void logd(java.lang.String,java.lang.Exception)> --> $r0 := @parameter0: java.lang.String
<com.facebook.internal.Utility: void logd(java.lang.String,java.lang.Exception)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r0, $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> virtualinvoke $r0.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("device_id", $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> virtualinvoke $r0.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("app_version", $r6)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.on: void run()> --> r0 := @this: com.appsee.on
<com.appsee.vd: void H()> --> r0 := @this: com.appsee.vd
<com.appsee.gd: void M(int,java.lang.String)> --> $i0 := @parameter0: int
<com.appsee.gd: void H(java.lang.String,java.lang.Exception,int,boolean)> --> $r1 := @parameter0: java.lang.String
<com.appsee.gd: void H(java.lang.String,java.lang.Exception,int,boolean)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("appsee", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.on: void run()> --> r0 := @this: com.appsee.on
<com.appsee.vd: void H()> --> r0 := @this: com.appsee.vd
<com.appsee.gd: void M(int,java.lang.String)> --> $i0 := @parameter0: int
<com.appsee.gd: void H(java.lang.String,java.lang.Exception,int,boolean)> --> $r1 := @parameter0: java.lang.String
<com.appsee.gd: void H(java.lang.String,java.lang.Exception,int,boolean)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("appsee", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings$1: void run()> --> r0 := @this: com.onradar.sdk._RadarSettings$1
<com.onradar.sdk._RadarSettings$1: void run()> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-ad-id", "OptedOut")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.react.ReactInstanceManager$5$2: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$2
<com.facebook.react.ReactInstanceManager: void access$1300(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.ReactApplicationContext)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void setupReactContext(com.facebook.react.bridge.ReactApplicationContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.CatalystInstanceImpl: void initialize()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void initialize()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "CatalystInstanceImpl.initialize()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<com.facebook.react.ReactInstanceManager$5$1: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$1
<com.facebook.react.ReactInstanceManager: void access$1200(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void tearDownReactContext(com.facebook.react.bridge.ReactContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.ReactContext: void destroy()> --> r0 := @this: com.facebook.react.bridge.ReactContext
<com.facebook.react.bridge.CatalystInstanceImpl: void destroy()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void destroy()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "CatalystInstanceImpl.destroy() start")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings$1: void run()> --> r0 := @this: com.onradar.sdk._RadarSettings$1
<com.onradar.sdk._RadarSettings$1: void run()> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-ad-id", "OptedOut")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> virtualinvoke $r0.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("app_version", $r6)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarClient: void updateLocation(android.content.Context,android.location.Location,boolean,boolean,com.onradar.sdk._RadarCallback)> --> r0 := @this: com.onradar.sdk._RadarClient
<com.onradar.sdk._Radar$3: void onCallback(com.onradar.sdk.Radar$RadarStatus,org.json.JSONObject,com.onradar.sdk.model.RadarEvent[],com.onradar.sdk.model.RadarUser)> --> r0 := @this: com.onradar.sdk._Radar$3
<com.onradar.sdk._RadarSettings: void setRadarId(android.content.Context,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void setRadarId(android.content.Context,java.lang.String)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-_id", $r0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext access$900(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> $r3 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl build()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl$Builder
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler,com.facebook.react.bridge.CatalystInstanceImpl$1)> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler)> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "Initializing React Xplat Bridge before initializeBridge")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r8 = newarray (java.lang.Object)[1]
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r12 := @caughtexception
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "failed to send button indexing request", $r12)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.react.ReactInstanceManager$5$2: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$2
<com.facebook.react.ReactInstanceManager: void access$1300(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.ReactApplicationContext)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void setupReactContext(com.facebook.react.bridge.ReactApplicationContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.CatalystInstanceImpl: void initialize()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void initialize()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "CatalystInstanceImpl.initialize()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext access$900(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> $r3 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl build()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl$Builder
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler,com.facebook.react.bridge.CatalystInstanceImpl$1)> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler)> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "Initializing React Xplat Bridge.")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.react.ReactInstanceManager$5$2: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$2
<com.facebook.react.ReactInstanceManager: void access$1300(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.ReactApplicationContext)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void setupReactContext(com.facebook.react.bridge.ReactApplicationContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void setupReactContext(com.facebook.react.bridge.ReactApplicationContext)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "ReactInstanceManager.setupReactContext()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarLogger: void log(android.content.Context,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.onradar.sdk._RadarLogger: void log(android.content.Context,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("_RadarLogger", $r0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings$1: void run()> --> r0 := @this: com.onradar.sdk._RadarSettings$1
<com.onradar.sdk._RadarSettings$1: void run()> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-ad-id", $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> virtualinvoke $r0.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("device_id", $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<com.facebook.react.ReactInstanceManager$5$1: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$1
<com.facebook.react.ReactInstanceManager: void access$1200(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "ReactInstanceManager.runCreateReactContextOnNewThread()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<com.facebook.react.ReactInstanceManager$5$1: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$1
<com.facebook.react.ReactInstanceManager: void access$1200(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void tearDownReactContext(com.facebook.react.bridge.ReactContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void tearDownReactContext(com.facebook.react.bridge.ReactContext)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "ReactInstanceManager.tearDownReactContext()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<com.facebook.react.ReactInstanceManager$5$1: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$1
<com.facebook.react.ReactInstanceManager: void access$1200(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "ReactInstanceManager.runCreateReactContextOnNewThread()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.react.ReactInstanceManager$5$2: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$2
<com.facebook.react.ReactInstanceManager: void access$1300(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.ReactApplicationContext)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void setupReactContext(com.facebook.react.bridge.ReactApplicationContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void attachRootViewToInstance(com.facebook.react.ReactRootView,com.facebook.react.bridge.CatalystInstance)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void attachRootViewToInstance(com.facebook.react.ReactRootView,com.facebook.react.bridge.CatalystInstance)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "ReactInstanceManager.attachRootViewToInstance()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings$1: void run()> --> r0 := @this: com.onradar.sdk._RadarSettings$1
<com.onradar.sdk._RadarSettings$1: void run()> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-ad-id", $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarLogger: void log(android.content.Context,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.onradar.sdk._RadarLogger: void log(android.content.Context,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("_RadarLogger", $r0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, "getAttributionIdentifiers should not be called from the main thread")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> virtualinvoke $r0.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("app_version", $r6)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.AccessTokenManager$1: void run()> --> r0 := @this: com.facebook.AccessTokenManager$1
<com.facebook.AccessTokenManager: void access$000(com.facebook.AccessTokenManager,com.facebook.AccessToken$AccessTokenRefreshCallback)> --> $r0 := @parameter0: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: void refreshCurrentAccessTokenImpl(com.facebook.AccessToken$AccessTokenRefreshCallback)> --> r0 := @this: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: com.facebook.GraphRequest createGrantedPermissionsRequest(com.facebook.AccessToken,com.facebook.GraphRequest$Callback)> --> $r0 := @parameter0: com.facebook.AccessToken
<com.facebook.GraphRequest: void <init>(com.facebook.AccessToken,java.lang.String,android.os.Bundle,com.facebook.HttpMethod,com.facebook.GraphRequest$Callback)> --> r0 := @this: com.facebook.GraphRequest
<com.facebook.GraphRequest: void <init>(com.facebook.AccessToken,java.lang.String,android.os.Bundle,com.facebook.HttpMethod,com.facebook.GraphRequest$Callback,java.lang.String)> --> r0 := @this: com.facebook.GraphRequest
<com.facebook.FacebookSdk: java.lang.String getGraphApiVersion()> --> $r1 = <com.facebook.FacebookSdk: java.lang.String TAG>
<com.facebook.internal.Utility: void logd(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.facebook.internal.Utility: void logd(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r0, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.on: void run()> --> r0 := @this: com.appsee.on
<com.appsee.vd: void H()> --> r0 := @this: com.appsee.vd
<com.appsee.gd: void M(int,java.lang.String)> --> $i0 := @parameter0: int
<com.appsee.gd: void H(java.lang.String,java.lang.Exception,int,boolean)> --> $r1 := @parameter0: java.lang.String
<com.appsee.gd: void H(java.lang.String,java.lang.Exception,int,boolean)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("appsee", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext access$900(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> $r3 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.CatalystInstanceImpl: void runJSBundle()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void runJSBundle()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "CatalystInstanceImpl.runJSBundle()")
--------------------------------------------------------

<com.onradar.sdk._RadarSettings: void updateLastMovingLocation(android.content.Context,android.location.Location)> --> $d0 = virtualinvoke $r0.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._RadarSettings: void updateLastMovingLocation(android.content.Context,android.location.Location)> --> $f0 = (float) $d0
<com.onradar.sdk._RadarSettings: void updateLastMovingLocation(android.content.Context,android.location.Location)> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putFloat(java.lang.String,float)>("radar-lastMovingLocationLongitude", $f0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.appevents.codeless.CodelessMatcher$1: void run()> --> r0 := @this: com.facebook.appevents.codeless.CodelessMatcher$1
<com.facebook.appevents.codeless.CodelessMatcher: void access$000(com.facebook.appevents.codeless.CodelessMatcher)> --> $r0 := @parameter0: com.facebook.appevents.codeless.CodelessMatcher
<com.facebook.appevents.codeless.CodelessMatcher: void matchViews()> --> r0 := @this: com.facebook.appevents.codeless.CodelessMatcher
<com.facebook.appevents.codeless.CodelessMatcher$ViewMatcher: void <init>(android.view.View,android.os.Handler,java.util.HashMap,java.lang.String)> --> r0 := @this: com.facebook.appevents.codeless.CodelessMatcher$ViewMatcher
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> virtualinvoke $r0.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("app_version", $r6)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarClient: void updateLocation(android.content.Context,android.location.Location,boolean,boolean,com.onradar.sdk._RadarCallback)> --> r0 := @this: com.onradar.sdk._RadarClient
<com.onradar.sdk._Radar$3: void onCallback(com.onradar.sdk.Radar$RadarStatus,org.json.JSONObject,com.onradar.sdk.model.RadarEvent[],com.onradar.sdk.model.RadarUser)> --> r0 := @this: com.onradar.sdk._Radar$3
<com.onradar.sdk._RadarSettings: void setRadarId(android.content.Context,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void setRadarId(android.content.Context,java.lang.String)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-_id", $r0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarLogger: void log(android.content.Context,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.onradar.sdk._RadarLogger: void log(android.content.Context,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("_RadarLogger", $r0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext access$900(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> $r3 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.CatalystInstanceImpl: void runJSBundle()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void runJSBundle()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "CatalystInstanceImpl.runJSBundle()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.react.ReactInstanceManager$5$1: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$1
<com.facebook.react.ReactInstanceManager: void access$1200(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void tearDownReactContext(com.facebook.react.bridge.ReactContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void tearDownReactContext(com.facebook.react.bridge.ReactContext)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "ReactInstanceManager.tearDownReactContext()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings$1: void run()> --> r0 := @this: com.onradar.sdk._RadarSettings$1
<com.onradar.sdk._RadarSettings$1: void run()> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-ad-id", $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarClient: void updateLocation(android.content.Context,android.location.Location,boolean,boolean,com.onradar.sdk._RadarCallback)> --> r0 := @this: com.onradar.sdk._RadarClient
<com.onradar.sdk._Radar$3: void onCallback(com.onradar.sdk.Radar$RadarStatus,org.json.JSONObject,com.onradar.sdk.model.RadarEvent[],com.onradar.sdk.model.RadarUser)> --> r0 := @this: com.onradar.sdk._Radar$3
<com.onradar.sdk._RadarSettings: void setRadarId(android.content.Context,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void setRadarId(android.content.Context,java.lang.String)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-_id", $r0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings$1: void run()> --> r0 := @this: com.onradar.sdk._RadarSettings$1
<com.onradar.sdk._RadarSettings$1: void run()> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-ad-id", $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext access$900(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> $r3 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "ReactInstanceManager.createReactContext()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<com.facebook.react.ReactInstanceManager$5$1: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$1
<com.facebook.react.ReactInstanceManager: void access$1200(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void tearDownReactContext(com.facebook.react.bridge.ReactContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void tearDownReactContext(com.facebook.react.bridge.ReactContext)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "ReactInstanceManager.tearDownReactContext()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.on: void run()> --> r0 := @this: com.appsee.on
<com.appsee.vd: void H()> --> r0 := @this: com.appsee.vd
<com.appsee.gd: void M(int,java.lang.String)> --> $i0 := @parameter0: int
<com.appsee.gd: void H(java.lang.String,java.lang.Exception,int,boolean)> --> $r1 := @parameter0: java.lang.String
<com.appsee.gd: void H(java.lang.String,java.lang.Exception,int,boolean)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("appsee", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> virtualinvoke $r0.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("device_id", $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext access$900(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> $r3 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl build()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl$Builder
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler,com.facebook.react.bridge.CatalystInstanceImpl$1)> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler)> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "Initializing React Xplat Bridge.")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarLogger: void log(android.content.Context,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.onradar.sdk._RadarLogger: void log(android.content.Context,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("_RadarLogger", $r0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.appevents.codeless.CodelessMatcher$1: void run()> --> r0 := @this: com.facebook.appevents.codeless.CodelessMatcher$1
<com.facebook.appevents.codeless.CodelessMatcher: void access$000(com.facebook.appevents.codeless.CodelessMatcher)> --> $r0 := @parameter0: com.facebook.appevents.codeless.CodelessMatcher
<com.facebook.appevents.codeless.CodelessMatcher: void matchViews()> --> r0 := @this: com.facebook.appevents.codeless.CodelessMatcher
<com.facebook.appevents.codeless.CodelessMatcher$ViewMatcher: void <init>(android.view.View,android.os.Handler,java.util.HashMap,java.lang.String)> --> r0 := @this: com.facebook.appevents.codeless.CodelessMatcher$ViewMatcher
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context)> --> $r11 = virtualinvoke $r10.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r9, $r0, null, null, null)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings$1: void run()> --> r0 := @this: com.onradar.sdk._RadarSettings$1
<com.onradar.sdk._RadarSettings$1: void run()> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-ad-id", "OptedOut")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> virtualinvoke $r0.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("indexed_button_list", $r2)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> $r2 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void clearStoppedAt(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void clearStoppedAt(android.content.Context)> --> if $r0 != null goto $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("RadarSDK", 0)
<com.onradar.sdk._RadarSettings: void clearStoppedAt(android.content.Context)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("radar-stoppedAt", 0L)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r8 = newarray (java.lang.Object)[1]
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r12 := @caughtexception
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "failed to send button indexing request", $r12)
--------------------------------------------------------

<com.onradar.sdk._Radar: void backgroundSendLocation(android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void backgroundSendLocation(android.location.Location,boolean,boolean)> --> virtualinvoke $r4.<android.os.PersistableBundle: void putDouble(java.lang.String,double)>("longitude", $d0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarLogger: void log(android.content.Context,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.onradar.sdk._RadarLogger: void log(android.content.Context,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("_RadarLogger", $r0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> virtualinvoke $r0.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("device_id", $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.react.ReactInstanceManager$5$2: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$2
<com.facebook.react.ReactInstanceManager: void access$1300(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.ReactApplicationContext)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void setupReactContext(com.facebook.react.bridge.ReactApplicationContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.CatalystInstanceImpl: void initialize()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.queue.MessageQueueThreadImpl: void runOnQueue(java.lang.Runnable)> --> r0 := @this: com.facebook.react.bridge.queue.MessageQueueThreadImpl
<com.facebook.common.logging.FLog: void w(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.facebook.common.logging.FLogDefaultLoggingDelegate: void w(java.lang.String,java.lang.String)> --> r0 := @this: com.facebook.common.logging.FLogDefaultLoggingDelegate
<com.facebook.common.logging.FLogDefaultLoggingDelegate: void println(int,java.lang.String,java.lang.String)> --> r0 := @this: com.facebook.common.logging.FLogDefaultLoggingDelegate
<com.facebook.common.logging.FLogDefaultLoggingDelegate: void println(int,java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>($i0, $r2, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.react.ReactInstanceManager$5$2: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$2
<com.facebook.react.ReactInstanceManager: void access$1300(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.ReactApplicationContext)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void setupReactContext(com.facebook.react.bridge.ReactApplicationContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.CatalystInstanceImpl: void initialize()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void initialize()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "CatalystInstanceImpl.initialize()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext access$900(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> $r3 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.CatalystInstanceImpl: void runJSBundle()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void runJSBundle()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "CatalystInstanceImpl.runJSBundle()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext access$900(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> $r3 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl build()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl$Builder
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler,com.facebook.react.bridge.CatalystInstanceImpl$1)> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler)> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "Initializing React Xplat Bridge before initializeBridge")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext access$900(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> $r3 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl build()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl$Builder
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler,com.facebook.react.bridge.CatalystInstanceImpl$1)> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler)> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "Initializing React Xplat Bridge.")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.AccessTokenManager$1: void run()> --> r0 := @this: com.facebook.AccessTokenManager$1
<com.facebook.AccessTokenManager: void access$000(com.facebook.AccessTokenManager,com.facebook.AccessToken$AccessTokenRefreshCallback)> --> $r0 := @parameter0: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: void refreshCurrentAccessTokenImpl(com.facebook.AccessToken$AccessTokenRefreshCallback)> --> r0 := @this: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: com.facebook.GraphRequest createGrantedPermissionsRequest(com.facebook.AccessToken,com.facebook.GraphRequest$Callback)> --> $r0 := @parameter0: com.facebook.AccessToken
<com.facebook.GraphRequest: void <init>(com.facebook.AccessToken,java.lang.String,android.os.Bundle,com.facebook.HttpMethod,com.facebook.GraphRequest$Callback)> --> r0 := @this: com.facebook.GraphRequest
<com.facebook.GraphRequest: void <init>(com.facebook.AccessToken,java.lang.String,android.os.Bundle,com.facebook.HttpMethod,com.facebook.GraphRequest$Callback,java.lang.String)> --> r0 := @this: com.facebook.GraphRequest
<com.facebook.FacebookSdk: java.lang.String getGraphApiVersion()> --> $r1 = <com.facebook.FacebookSdk: java.lang.String TAG>
<com.facebook.internal.Utility: void logd(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.facebook.internal.Utility: void logd(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r0, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarSettings: void updateSentAt(android.content.Context)> --> $r1 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void updateSentAt(android.content.Context)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("radar-sentAt", $l0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.react.ReactInstanceManager$5$2: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$2
<com.facebook.react.ReactInstanceManager: void access$1300(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.ReactApplicationContext)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void setupReactContext(com.facebook.react.bridge.ReactApplicationContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void setupReactContext(com.facebook.react.bridge.ReactApplicationContext)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "ReactInstanceManager.setupReactContext()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context)> --> $r1 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAndroidId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAndroidIdViaReflection(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAndroidIdViaReflection(android.content.Context)> --> $r4 = newarray (java.lang.Class)[1]
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAndroidIdViaReflection(android.content.Context)> --> $r15 := @caughtexception
<com.facebook.internal.Utility: void logd(java.lang.String,java.lang.Exception)> --> $r0 := @parameter0: java.lang.String
<com.facebook.internal.Utility: void logd(java.lang.String,java.lang.Exception)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r0, $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void backgroundSendLocation(android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void backgroundSendLocation(android.location.Location,boolean,boolean)> --> virtualinvoke $r4.<android.os.PersistableBundle: void putDouble(java.lang.String,double)>("latitude", $d0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext access$900(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> $r3 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl build()> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl$Builder
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler,com.facebook.react.bridge.CatalystInstanceImpl$1)> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler)> --> r0 := @this: com.facebook.react.bridge.CatalystInstanceImpl
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "Initializing React Xplat Bridge.")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings$1: void run()> --> r0 := @this: com.onradar.sdk._RadarSettings$1
<com.onradar.sdk._RadarSettings$1: void run()> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-ad-id", "OptedOut")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r7
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.kb: void run()> --> r0 := @this: com.appsee.kb
<com.appsee.kb: void run()> --> $r1 = r0.<com.appsee.kb: com.appsee.bb H>
<com.appsee.kb: void run()> --> $r5 := @caughtexception
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void process()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor: void attachListeners(android.view.View)> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor
<com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1: void run()> --> r0 := @this: com.facebook.marketing.internal.ButtonIndexer$ViewProcessor$1
<com.facebook.marketing.internal.ButtonIndexingLogger: void logAllIndexing(java.lang.String,java.util.HashMap,android.content.Context)> --> $r0 := @parameter0: java.lang.String
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.facebook.marketing.internal.ButtonIndexingLogger: void sendGraphAPIRequest(android.content.Context,java.lang.String,java.lang.String)> --> virtualinvoke $r0.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("app_version", $r6)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)>($r1)
<dummyMainClass: com.onradar.sdk._RadarReceiver dummyMainMethod_com_onradar_sdk___RadarReceiver(android.content.Intent)> --> virtualinvoke $r0.<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r7 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.react.ReactInstanceManager$5$2: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5$2
<com.facebook.react.ReactInstanceManager: void access$1300(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.ReactApplicationContext)> --> $r0 := @parameter0: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void setupReactContext(com.facebook.react.bridge.ReactApplicationContext)> --> r0 := @this: com.facebook.react.ReactInstanceManager
<com.facebook.react.ReactInstanceManager: void setupReactContext(com.facebook.react.bridge.ReactApplicationContext)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ReactNative", "ReactInstanceManager.setupReactContext()")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)>($r2, null)
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r4 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r4 != null goto $r7 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.facebook.react.ReactInstanceManager$5: void run()> --> r0 := @this: com.facebook.react.ReactInstanceManager$5
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)> --> $r1 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.appsee.on: void run()> --> r0 := @this: com.appsee.on
<com.appsee.vd: void H()> --> r0 := @this: com.appsee.vd
<com.appsee.gd: void M(int,java.lang.String)> --> $i0 := @parameter0: int
<com.appsee.gd: void H(java.lang.String,java.lang.Exception,int,boolean)> --> $r1 := @parameter0: java.lang.String
<com.appsee.gd: void H(java.lang.String,java.lang.Exception,int,boolean)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("appsee", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r2.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto $r12 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarClient: void updateLocation(android.content.Context,android.location.Location,boolean,boolean,com.onradar.sdk._RadarCallback)> --> r0 := @this: com.onradar.sdk._RadarClient
<com.onradar.sdk._Radar$3: void onCallback(com.onradar.sdk.Radar$RadarStatus,org.json.JSONObject,com.onradar.sdk.model.RadarEvent[],com.onradar.sdk.model.RadarUser)> --> r0 := @this: com.onradar.sdk._Radar$3
<com.onradar.sdk._RadarSettings: void setRadarId(android.content.Context,java.lang.String)> --> $r1 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void setRadarId(android.content.Context,java.lang.String)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-_id", $r0)
--------------------------------------------------------

