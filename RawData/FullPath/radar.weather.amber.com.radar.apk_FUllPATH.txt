<radar.weather.amber.com.radar.location.AddressUtils: android.location.Location getLocation(android.content.Context)> --> $r5 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r4)
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> $r1 = staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: android.location.Location getLocation(android.content.Context)>($r0)
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> if $r1 == null goto staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: void l(java.lang.String)>("location is null")
<radar.weather.amber.com.radar.location.AddressUtils: java.lang.String getCityFromIP(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<radar.weather.amber.com.radar.location.OKHttpGetClientUtil: java.lang.String getDataStringFromUrl(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<radar.weather.amber.com.radar.location.OKHttpGetClientUtil: java.lang.String getDataStringFromUrl(java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("wzw", $r3)
--------------------------------------------------------

<radar.weather.amber.com.radar.location.AddressUtils: android.location.Location getLocation(android.content.Context)> --> $r5 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r4)
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> $r1 = staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: android.location.Location getLocation(android.content.Context)>($r0)
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> if $r1 == null goto staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: void l(java.lang.String)>("location is null")
<radar.weather.amber.com.radar.location.AddressController$1: void run()> --> r1 = staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)>($r2)
<radar.weather.amber.com.radar.location.AddressController$1: void run()> --> if r1 == null goto $r4 = r0.<radar.weather.amber.com.radar.location.AddressController$1: radar.weather.amber.com.radar.location.LocationUpdateListener val$locationUpdateListener>
<radar.weather.amber.com.radar.weather.service.WeatherUpdateService$1: void onSuccess(radar.weather.amber.com.radar.location.AmberLocation)> --> r0 := @this: radar.weather.amber.com.radar.weather.service.WeatherUpdateService$1
<radar.weather.amber.com.radar.weather.provider.WeatherDBManager: int insertLocation(radar.weather.amber.com.radar.weather.model.entity.Location)> --> r0 := @this: radar.weather.amber.com.radar.weather.provider.WeatherDBManager
<org.greenrobot.greendao.AbstractDao: long insert(java.lang.Object)> --> r0 := @this: org.greenrobot.greendao.AbstractDao
<org.greenrobot.greendao.AbstractDao: long executeInsert(java.lang.Object,org.greenrobot.greendao.database.DatabaseStatement,boolean)> --> r0 := @this: org.greenrobot.greendao.AbstractDao
<org.greenrobot.greendao.AbstractDao: long insertInsideTx(java.lang.Object,org.greenrobot.greendao.database.DatabaseStatement)> --> r0 := @this: org.greenrobot.greendao.AbstractDao
<org.greenrobot.greendao.AbstractDao: long insertInsideTx(java.lang.Object,org.greenrobot.greendao.database.DatabaseStatement)> --> $l0 = virtualinvoke r4.<android.database.sqlite.SQLiteStatement: long executeInsert()>()
--------------------------------------------------------

<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> $d1 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> if $i1 >= 0 goto z0 = 0
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> $d2 = (double) $f1
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> if $i1 >= 0 goto z1 = 0
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> $r8 = new java.lang.StringBuilder
<radar.weather.amber.com.radar.location.PreferenceUtils: void setGPSCityLon(android.content.Context,double)> --> $r0 := @parameter0: android.content.Context
<radar.weather.amber.com.radar.location.PreferenceUtils: void setGPSCityLon(android.content.Context,double)> --> $f0 = (float) $d0
<radar.weather.amber.com.radar.location.PreferenceUtils: void setGPSCityLon(android.content.Context,double)> --> $r2 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putFloat(java.lang.String,float)>("Located_CityLon", $f0)
--------------------------------------------------------

<radar.weather.amber.com.radar.location.AddressUtils: android.location.Location getLocation(android.content.Context)> --> $r5 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r4)
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> $r1 = staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: android.location.Location getLocation(android.content.Context)>($r0)
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> if $r1 == null goto staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: void l(java.lang.String)>("location is null")
<radar.weather.amber.com.radar.location.AddressController$1: void run()> --> r1 = staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)>($r2)
<radar.weather.amber.com.radar.location.AddressController$1: void run()> --> if r1 == null goto $r4 = r0.<radar.weather.amber.com.radar.location.AddressController$1: radar.weather.amber.com.radar.location.LocationUpdateListener val$locationUpdateListener>
<radar.weather.amber.com.radar.weather.service.WeatherUpdateService$1: void onSuccess(radar.weather.amber.com.radar.location.AmberLocation)> --> r0 := @this: radar.weather.amber.com.radar.weather.service.WeatherUpdateService$1
<radar.weather.amber.com.radar.weather.service.WeatherUpdateService: void access$100(radar.weather.amber.com.radar.weather.service.WeatherUpdateService)> --> $r0 := @parameter0: radar.weather.amber.com.radar.weather.service.WeatherUpdateService
<radar.weather.amber.com.radar.weather.service.WeatherUpdateService: void updateWeather()> --> r0 := @this: radar.weather.amber.com.radar.weather.service.WeatherUpdateService
<radar.weather.amber.com.radar.weather.service.WeatherUpdateService: void fetchWeatherData(radar.weather.amber.com.radar.weather.model.entity.Location)> --> r0 := @this: radar.weather.amber.com.radar.weather.service.WeatherUpdateService
<radar.weather.amber.com.radar.weather.service.WeatherUpdateService: void fetchWeatherData(radar.weather.amber.com.radar.weather.model.entity.Location)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WeatherUpdateService", $r4)
--------------------------------------------------------

<radar.weather.amber.com.radar.location.AddressUtils: android.location.Location getLocation(android.content.Context)> --> $r5 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r4)
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> $r1 = staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: android.location.Location getLocation(android.content.Context)>($r0)
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> if $r1 == null goto staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: void l(java.lang.String)>("location is null")
<radar.weather.amber.com.radar.location.AddressController$1: void run()> --> r1 = staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)>($r2)
<radar.weather.amber.com.radar.location.AddressController$1: void run()> --> if r1 == null goto $r4 = r0.<radar.weather.amber.com.radar.location.AddressController$1: radar.weather.amber.com.radar.location.LocationUpdateListener val$locationUpdateListener>
<radar.weather.amber.com.radar.weather.service.WeatherUpdateService$1: void onSuccess(radar.weather.amber.com.radar.location.AmberLocation)> --> r0 := @this: radar.weather.amber.com.radar.weather.service.WeatherUpdateService$1
<radar.weather.amber.com.radar.weather.service.WeatherUpdateService: void access$000(radar.weather.amber.com.radar.weather.service.WeatherUpdateService,radar.weather.amber.com.radar.weather.model.entity.Location)> --> $r0 := @parameter0: radar.weather.amber.com.radar.weather.service.WeatherUpdateService
<radar.weather.amber.com.radar.weather.service.WeatherUpdateService: void fetchGeo(radar.weather.amber.com.radar.weather.model.entity.Location)> --> r0 := @this: radar.weather.amber.com.radar.weather.service.WeatherUpdateService
<radar.weather.amber.com.radar.weather.service.WeatherUpdateService: void fetchGeo(radar.weather.amber.com.radar.weather.model.entity.Location)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WeatherUpdateService", "ready fetchGeo")
--------------------------------------------------------

<radar.weather.amber.com.radar.location.AddressUtils: android.location.Location getLocation(android.content.Context)> --> $r5 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r4)
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> $r1 = staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: android.location.Location getLocation(android.content.Context)>($r0)
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> if $r1 == null goto staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: void l(java.lang.String)>("location is null")
<radar.weather.amber.com.radar.location.AddressController$1: void run()> --> r1 = staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)>($r2)
<radar.weather.amber.com.radar.location.AddressController$1: void run()> --> if r1 == null goto $r4 = r0.<radar.weather.amber.com.radar.location.AddressController$1: radar.weather.amber.com.radar.location.LocationUpdateListener val$locationUpdateListener>
<radar.weather.amber.com.radar.location.PreferenceUtils: void setAddressLastUpdate(android.content.Context,long)> --> $r0 := @parameter0: android.content.Context
<radar.weather.amber.com.radar.location.PreferenceUtils: void setAddressLastUpdate(android.content.Context,long)> --> $r2 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("address_last_update", $l0)
--------------------------------------------------------

<radar.weather.amber.com.radar.location.AddressUtils: android.location.Location getLocation(android.content.Context)> --> $r5 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r4)
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> $r1 = staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: android.location.Location getLocation(android.content.Context)>($r0)
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> if $r1 == null goto staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: void l(java.lang.String)>("location is null")
<radar.weather.amber.com.radar.location.AddressController$1: void run()> --> r1 = staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)>($r2)
<radar.weather.amber.com.radar.location.AddressController$1: void run()> --> if r1 == null goto $r4 = r0.<radar.weather.amber.com.radar.location.AddressController$1: radar.weather.amber.com.radar.location.LocationUpdateListener val$locationUpdateListener>
<radar.weather.amber.com.radar.weather.service.WeatherUpdateService$1: void onSuccess(radar.weather.amber.com.radar.location.AmberLocation)> --> r0 := @this: radar.weather.amber.com.radar.weather.service.WeatherUpdateService$1
<radar.weather.amber.com.radar.weather.service.WeatherUpdateService: void access$000(radar.weather.amber.com.radar.weather.service.WeatherUpdateService,radar.weather.amber.com.radar.weather.model.entity.Location)> --> $r0 := @parameter0: radar.weather.amber.com.radar.weather.service.WeatherUpdateService
<radar.weather.amber.com.radar.weather.service.WeatherUpdateService: void fetchGeo(radar.weather.amber.com.radar.weather.model.entity.Location)> --> r0 := @this: radar.weather.amber.com.radar.weather.service.WeatherUpdateService
<radar.weather.amber.com.radar.weather.network.WeatherClient: radar.weather.amber.com.radar.weather.network.IBackGeo getBackGeoRetrofitInstance()> --> $r0 = <radar.weather.amber.com.radar.weather.network.WeatherClient: java.lang.Object monitor>
<radar.weather.amber.com.radar.weather.network.WeatherClient: okhttp3.OkHttpClient getOkHttpClient()> --> $r1 = <radar.weather.amber.com.radar.weather.network.WeatherClient: okhttp3.OkHttpClient okHttpClient>
<okhttp3.logging.HttpLoggingInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)> --> r0 := @this: okhttp3.logging.HttpLoggingInterceptor
<okhttp3.logging.HttpLoggingInterceptor$Logger$1: void log(java.lang.String)> --> r0 := @this: okhttp3.logging.HttpLoggingInterceptor$Logger$1
<okhttp3.internal.platform.AndroidPlatform: void log(int,java.lang.String,java.lang.Throwable)> --> r0 := @this: okhttp3.internal.platform.AndroidPlatform
<okhttp3.internal.platform.AndroidPlatform: void log(int,java.lang.String,java.lang.Throwable)> --> staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>(b1, "OkHttp", $r4)
--------------------------------------------------------

<radar.weather.amber.com.radar.location.AddressUtils: android.location.Location getLocation(android.content.Context)> --> $r5 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r4)
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> $r1 = staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: android.location.Location getLocation(android.content.Context)>($r0)
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> if $r1 == null goto staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: void l(java.lang.String)>("location is null")
<radar.weather.amber.com.radar.location.AddressController$1: void run()> --> r1 = staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)>($r2)
<radar.weather.amber.com.radar.location.AddressController$1: void run()> --> if r1 == null goto $r4 = r0.<radar.weather.amber.com.radar.location.AddressController$1: radar.weather.amber.com.radar.location.LocationUpdateListener val$locationUpdateListener>
<radar.weather.amber.com.radar.weather.service.WeatherUpdateService$1: void onSuccess(radar.weather.amber.com.radar.location.AmberLocation)> --> r0 := @this: radar.weather.amber.com.radar.weather.service.WeatherUpdateService$1
<radar.weather.amber.com.radar.weather.service.WeatherUpdateService: void access$000(radar.weather.amber.com.radar.weather.service.WeatherUpdateService,radar.weather.amber.com.radar.weather.model.entity.Location)> --> $r0 := @parameter0: radar.weather.amber.com.radar.weather.service.WeatherUpdateService
<radar.weather.amber.com.radar.weather.service.WeatherUpdateService: void fetchGeo(radar.weather.amber.com.radar.weather.model.entity.Location)> --> r0 := @this: radar.weather.amber.com.radar.weather.service.WeatherUpdateService
<radar.weather.amber.com.radar.weather.network.WeatherClient: radar.weather.amber.com.radar.weather.network.IBackGeo getBackGeoRetrofitInstance()> --> $r0 = <radar.weather.amber.com.radar.weather.network.WeatherClient: java.lang.Object monitor>
<retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(java.lang.String)> --> r0 := @this: retrofit2.Retrofit$Builder
<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)> --> r0 := @this: okhttp3.HttpUrl$Builder
<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)> --> $r0 := @parameter0: java.lang.String
<okhttp3.HttpUrl$Builder: java.net.InetAddress decodeIpv6(java.lang.String,int,int)> --> $r0 := @parameter0: java.lang.String
<okhttp3.HttpUrl$Builder: java.net.InetAddress decodeIpv6(java.lang.String,int,int)> --> $r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>(r1)
--------------------------------------------------------

<radar.weather.amber.com.radar.location.AddressUtils: android.location.Location getLocation(android.content.Context)> --> $r5 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r4)
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> $r1 = staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: android.location.Location getLocation(android.content.Context)>($r0)
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> if $r1 == null goto staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: void l(java.lang.String)>("location is null")
<radar.weather.amber.com.radar.location.AddressController$1: void run()> --> r1 = staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)>($r2)
<radar.weather.amber.com.radar.location.AddressController$1: void run()> --> if r1 == null goto $r4 = r0.<radar.weather.amber.com.radar.location.AddressController$1: radar.weather.amber.com.radar.location.LocationUpdateListener val$locationUpdateListener>
<radar.weather.amber.com.radar.weather.service.WeatherUpdateService$1: void onSuccess(radar.weather.amber.com.radar.location.AmberLocation)> --> r0 := @this: radar.weather.amber.com.radar.weather.service.WeatherUpdateService$1
<radar.weather.amber.com.radar.weather.service.WeatherUpdateService: void access$100(radar.weather.amber.com.radar.weather.service.WeatherUpdateService)> --> $r0 := @parameter0: radar.weather.amber.com.radar.weather.service.WeatherUpdateService
<radar.weather.amber.com.radar.weather.service.WeatherUpdateService: void updateWeather()> --> r0 := @this: radar.weather.amber.com.radar.weather.service.WeatherUpdateService
<radar.weather.amber.com.radar.weather.service.WeatherUpdateService: void fetchWeatherData(radar.weather.amber.com.radar.weather.model.entity.Location)> --> r0 := @this: radar.weather.amber.com.radar.weather.service.WeatherUpdateService
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableEmpty: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableEmpty
<io.reactivex.internal.disposables.EmptyDisposable: void complete(io.reactivex.Observer)> --> r0 := @parameter0: io.reactivex.Observer
<io.reactivex.internal.operators.observable.ObservableZip$ZipObserver: void onComplete()> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableZip$ZipObserver
<io.reactivex.internal.operators.observable.ObservableZip$ZipCoordinator: void drain()> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableZip$ZipCoordinator
<radar.weather.amber.com.radar.weather.service.WeatherUpdateService$5: void onError(java.lang.Throwable)> --> r0 := @this: radar.weather.amber.com.radar.weather.service.WeatherUpdateService$5
<radar.weather.amber.com.radar.weather.service.WeatherUpdateService$5: void onError(java.lang.Throwable)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("WeatherUpdateService", "fetch weather failed")
--------------------------------------------------------

<radar.weather.amber.com.radar.location.AddressUtils: android.location.Location getLocation(android.content.Context)> --> $r5 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r4)
<radar.weather.amber.com.radar.location.AddressUtils: android.location.Location getLocation(android.content.Context)> --> r1 := @caughtexception
<radar.weather.amber.com.radar.location.AddressUtils: void l(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<radar.weather.amber.com.radar.location.AddressUtils: void l(java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, $r0)
--------------------------------------------------------

<radar.weather.amber.com.radar.location.AddressUtils: android.location.Location getLocation(android.content.Context)> --> $r5 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r4)
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> $r1 = staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: android.location.Location getLocation(android.content.Context)>($r0)
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> if $r1 == null goto staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: void l(java.lang.String)>("location is null")
<radar.weather.amber.com.radar.location.AddressController$1: void run()> --> r1 = staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)>($r2)
<radar.weather.amber.com.radar.location.AddressController$1: void run()> --> if r1 == null goto $r4 = r0.<radar.weather.amber.com.radar.location.AddressController$1: radar.weather.amber.com.radar.location.LocationUpdateListener val$locationUpdateListener>
<radar.weather.amber.com.radar.weather.service.WeatherUpdateService$1: void onSuccess(radar.weather.amber.com.radar.location.AmberLocation)> --> r0 := @this: radar.weather.amber.com.radar.weather.service.WeatherUpdateService$1
<radar.weather.amber.com.radar.weather.provider.WeatherDBManager: int insertLocation(radar.weather.amber.com.radar.weather.model.entity.Location)> --> r0 := @this: radar.weather.amber.com.radar.weather.provider.WeatherDBManager
<org.greenrobot.greendao.AbstractDao: long insert(java.lang.Object)> --> r0 := @this: org.greenrobot.greendao.AbstractDao
<org.greenrobot.greendao.AbstractDao: long executeInsert(java.lang.Object,org.greenrobot.greendao.database.DatabaseStatement,boolean)> --> r0 := @this: org.greenrobot.greendao.AbstractDao
<org.greenrobot.greendao.AbstractDao: void updateKeyAfterInsertAndAttach(java.lang.Object,long,boolean)> --> r0 := @this: org.greenrobot.greendao.AbstractDao
<org.greenrobot.greendao.DaoLog: int w(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.greenrobot.greendao.DaoLog: int w(java.lang.String)> --> $i0 = staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("greenDAO", "Could not insert row (executeInsert returned -1)")
--------------------------------------------------------

<radar.weather.amber.com.radar.location.AddressUtils: android.location.Location getLocation(android.content.Context)> --> $r5 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r4)
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> $r1 = staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: android.location.Location getLocation(android.content.Context)>($r0)
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> if $r1 == null goto staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: void l(java.lang.String)>("location is null")
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> $r3 = $r4
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> if $r3 == null goto return $r7
<radar.weather.amber.com.radar.location.PreferenceUtils: void setLocatedCity(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<radar.weather.amber.com.radar.location.PreferenceUtils: void setLocatedCity(android.content.Context,java.lang.String)> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("located_city", $r1)
--------------------------------------------------------

<radar.weather.amber.com.radar.location.AddressUtils: android.location.Location getLocation(android.content.Context)> --> $r5 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r4)
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> $r1 = staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: android.location.Location getLocation(android.content.Context)>($r0)
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> if $r1 == null goto staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: void l(java.lang.String)>("location is null")
<radar.weather.amber.com.radar.location.AddressController$1: void run()> --> r1 = staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)>($r2)
<radar.weather.amber.com.radar.location.AddressController$1: void run()> --> if r1 == null goto $r4 = r0.<radar.weather.amber.com.radar.location.AddressController$1: radar.weather.amber.com.radar.location.LocationUpdateListener val$locationUpdateListener>
<radar.weather.amber.com.radar.weather.service.WeatherUpdateService$1: void onSuccess(radar.weather.amber.com.radar.location.AmberLocation)> --> r0 := @this: radar.weather.amber.com.radar.weather.service.WeatherUpdateService$1
<radar.weather.amber.com.radar.weather.provider.WeatherDBManager: void updateLocation(radar.weather.amber.com.radar.weather.model.entity.Location)> --> r0 := @this: radar.weather.amber.com.radar.weather.provider.WeatherDBManager
<org.greenrobot.greendao.AbstractDao: void update(java.lang.Object)> --> r0 := @this: org.greenrobot.greendao.AbstractDao
<org.greenrobot.greendao.AbstractDao: void updateInsideSynchronized(java.lang.Object,android.database.sqlite.SQLiteStatement,boolean)> --> r0 := @this: org.greenrobot.greendao.AbstractDao
<org.greenrobot.greendao.AbstractDao: void updateInsideSynchronized(java.lang.Object,android.database.sqlite.SQLiteStatement,boolean)> --> virtualinvoke $r2.<android.database.sqlite.SQLiteStatement: void execute()>()
--------------------------------------------------------

<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> if $i1 >= 0 goto z0 = 0
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> $d2 = (double) $f1
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> if $i1 >= 0 goto z1 = 0
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> $r8 = new java.lang.StringBuilder
<radar.weather.amber.com.radar.location.PreferenceUtils: void setGPSCityLat(android.content.Context,double)> --> $r0 := @parameter0: android.content.Context
<radar.weather.amber.com.radar.location.PreferenceUtils: void setGPSCityLat(android.content.Context,double)> --> f0 = (float) $d0
<radar.weather.amber.com.radar.location.PreferenceUtils: void setGPSCityLat(android.content.Context,double)> --> $r2 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putFloat(java.lang.String,float)>("Located_CityLat", f0)
--------------------------------------------------------

<radar.weather.amber.com.radar.location.AddressUtils: android.location.Location getLocation(android.content.Context)> --> $r5 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r4)
<radar.weather.amber.com.radar.location.AddressUtils: android.location.Location getLocation(android.content.Context)> --> if $i3 > 0 goto $r6 = (android.app.Activity) $r0
<radar.weather.amber.com.radar.location.AddressController$1: void run()> --> $r3 = staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: android.location.Location getLocation(android.content.Context)>($r2)
<radar.weather.amber.com.radar.location.AddressController$1: void run()> --> if $r3 == null goto $r4 = r0.<radar.weather.amber.com.radar.location.AddressController$1: radar.weather.amber.com.radar.location.LocationUpdateListener val$locationUpdateListener>
<radar.weather.amber.com.radar.location.PreferenceUtils: void setLatLongLastUpdate(android.content.Context,long)> --> $r0 := @parameter0: android.content.Context
<radar.weather.amber.com.radar.location.PreferenceUtils: void setLatLongLastUpdate(android.content.Context,long)> --> $r2 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("lat_long_last_update", $l0)
--------------------------------------------------------

<radar.weather.amber.com.radar.location.AddressUtils: android.location.Location getLocation(android.content.Context)> --> $r5 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r4)
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> $r1 = staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: android.location.Location getLocation(android.content.Context)>($r0)
<radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)> --> if $r1 == null goto staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: void l(java.lang.String)>("location is null")
<radar.weather.amber.com.radar.location.AddressController$1: void run()> --> r1 = staticinvoke <radar.weather.amber.com.radar.location.AddressUtils: radar.weather.amber.com.radar.location.AmberLocation updateAddress(android.content.Context)>($r2)
<radar.weather.amber.com.radar.location.AddressController$1: void run()> --> if r1 == null goto $r4 = r0.<radar.weather.amber.com.radar.location.AddressController$1: radar.weather.amber.com.radar.location.LocationUpdateListener val$locationUpdateListener>
<radar.weather.amber.com.radar.weather.service.WeatherUpdateService$1: void onSuccess(radar.weather.amber.com.radar.location.AmberLocation)> --> r0 := @this: radar.weather.amber.com.radar.weather.service.WeatherUpdateService$1
<radar.weather.amber.com.radar.weather.service.WeatherUpdateService: void access$100(radar.weather.amber.com.radar.weather.service.WeatherUpdateService)> --> $r0 := @parameter0: radar.weather.amber.com.radar.weather.service.WeatherUpdateService
<radar.weather.amber.com.radar.weather.service.WeatherUpdateService: void updateWeather()> --> r0 := @this: radar.weather.amber.com.radar.weather.service.WeatherUpdateService
<radar.weather.amber.com.radar.weather.service.WeatherUpdateService: void fetchWeatherData(radar.weather.amber.com.radar.weather.model.entity.Location)> --> r0 := @this: radar.weather.amber.com.radar.weather.service.WeatherUpdateService
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableEmpty: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableEmpty
<io.reactivex.internal.disposables.EmptyDisposable: void complete(io.reactivex.Observer)> --> r0 := @parameter0: io.reactivex.Observer
<io.reactivex.internal.operators.observable.ObservableZip$ZipObserver: void onComplete()> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableZip$ZipObserver
<io.reactivex.internal.operators.observable.ObservableZip$ZipCoordinator: void drain()> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableZip$ZipCoordinator
<io.reactivex.internal.operators.observable.ObservableZip$ZipCoordinator: void drain()> --> $r8 = r0.<io.reactivex.internal.operators.observable.ObservableZip$ZipCoordinator: io.reactivex.functions.Function zipper>
<io.reactivex.internal.operators.observable.ObservableZip$ZipCoordinator: void drain()> --> r7 := @caughtexception
<io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver: void onError(java.lang.Throwable)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver
<radar.weather.amber.com.radar.weather.service.WeatherUpdateService$3: java.lang.Object apply(java.lang.Object)> --> r0 := @this: radar.weather.amber.com.radar.weather.service.WeatherUpdateService$3
<radar.weather.amber.com.radar.weather.service.WeatherUpdateService$3: radar.weather.amber.com.radar.weather.model.WeatherDataResult apply(java.lang.Throwable)> --> r0 := @this: radar.weather.amber.com.radar.weather.service.WeatherUpdateService$3
<radar.weather.amber.com.radar.weather.service.WeatherUpdateService$3: radar.weather.amber.com.radar.weather.model.WeatherDataResult apply(java.lang.Throwable)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WeatherUpdateService", "weatherRx onError")
--------------------------------------------------------

