<com.ansca.corona.CoronaSensorManager$1: void run()> --> r14 = virtualinvoke $r16.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.ansca.corona.CoronaSensorManager$1: void run()> --> if r14 == null goto (branch)
<com.ansca.corona.CoronaRuntimeTaskDispatcher: void send(com.ansca.corona.CoronaRuntimeTask)> --> r0 := @this: com.ansca.corona.CoronaRuntimeTaskDispatcher
<com.ansca.corona.CoronaRuntimeTaskDispatcher: void send(com.ansca.corona.CoronaRuntimeTask)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Corona", "CoronaRuntimeTaskDispatcher.send() doesn\'t have an available CoronaRuntime to run this task on! Abort!")
--------------------------------------------------------

<com.ansca.corona.CoronaSensorManager$1: void run()> --> r14 = virtualinvoke $r16.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.ansca.corona.CoronaSensorManager$1: void run()> --> if $z1 == 0 goto $i0 = virtualinvoke r12.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.ACCESS_FINE_LOCATION")
<com.ansca.corona.CoronaSensorManager$1: void run()> --> if r14 == null goto (branch)
<com.ansca.corona.CoronaRuntimeTaskDispatcher: void send(com.ansca.corona.CoronaRuntimeTask)> --> r0 := @this: com.ansca.corona.CoronaRuntimeTaskDispatcher
<com.ansca.corona.CoronaRuntimeTaskDispatcher: void send(com.ansca.corona.CoronaRuntimeTask)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Corona", "CoronaRuntimeTaskDispatcher.send() doesn\'t have an available CoronaRuntime to run this task on! Abort!")
--------------------------------------------------------

<com.ansca.corona.CoronaSensorManager$1: void run()> --> r14 = virtualinvoke $r16.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
<com.ansca.corona.CoronaSensorManager$1: void run()> --> $r2 = r0.<com.ansca.corona.CoronaSensorManager$1: com.ansca.corona.CoronaSensorManager this$0>
<com.ansca.corona.CoronaSensorManager$1: void run()> --> if r14 == null goto (branch)
<com.ansca.corona.CoronaSensorManager: void access$1100(com.ansca.corona.CoronaSensorManager)> --> $r0 := @parameter0: com.ansca.corona.CoronaSensorManager
<com.ansca.corona.CoronaSensorManager: void showLocationPermissionsMissingFromManifestAlert()> --> r0 := @this: com.ansca.corona.CoronaSensorManager
<com.ansca.corona.Controller: void showLocationPermissionsMissingFromManifestAlert()> --> r0 := @this: com.ansca.corona.Controller
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.ansca.corona.Controller$5: void run()> --> r0 := @this: com.ansca.corona.Controller$5
<com.ansca.corona.CoronaRuntimeTaskDispatcher: void send(com.ansca.corona.CoronaRuntimeTask)> --> r0 := @this: com.ansca.corona.CoronaRuntimeTaskDispatcher
<com.ansca.corona.CoronaRuntimeTaskDispatcher: void send(com.ansca.corona.CoronaRuntimeTask)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Corona", "CoronaRuntimeTaskDispatcher.send() doesn\'t have an event manager to use! Abort!")
--------------------------------------------------------

<com.ansca.corona.CoronaSensorManager$1: void run()> --> r14 = virtualinvoke $r16.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("passive")
<com.ansca.corona.CoronaSensorManager$1: void run()> --> $r2 = r0.<com.ansca.corona.CoronaSensorManager$1: com.ansca.corona.CoronaSensorManager this$0>
<com.ansca.corona.CoronaSensorManager$1: void run()> --> if r14 == null goto (branch)
<com.ansca.corona.CoronaRuntimeTaskDispatcher: void send(com.ansca.corona.CoronaRuntimeTask)> --> r0 := @this: com.ansca.corona.CoronaRuntimeTaskDispatcher
<com.ansca.corona.CoronaRuntimeTaskDispatcher: void send(com.ansca.corona.CoronaRuntimeTask)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Corona", "CoronaRuntimeTaskDispatcher.send() doesn\'t have an available CoronaRuntime to run this task on! Abort!")
--------------------------------------------------------

<com.ansca.corona.CoronaSensorManager$1: void run()> --> r14 = virtualinvoke $r16.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.ansca.corona.CoronaSensorManager$1: void run()> --> if r14 == null goto (branch)
<com.ansca.corona.CoronaRuntimeTaskDispatcher: void send(com.ansca.corona.CoronaRuntimeTask)> --> r0 := @this: com.ansca.corona.CoronaRuntimeTaskDispatcher
<com.ansca.corona.CoronaRuntimeTaskDispatcher: void send(com.ansca.corona.CoronaRuntimeTask)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Corona", "CoronaRuntimeTaskDispatcher.send() doesn\'t have an event manager to use! Abort!")
--------------------------------------------------------

<com.ansca.corona.CoronaSensorManager$1: void run()> --> r14 = virtualinvoke $r16.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.ansca.corona.CoronaSensorManager$1: void run()> --> if $z1 == 0 goto $i0 = virtualinvoke r12.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.ACCESS_FINE_LOCATION")
<com.ansca.corona.CoronaSensorManager$1: void run()> --> if r14 == null goto (branch)
<com.ansca.corona.CoronaSensorManager: void access$1100(com.ansca.corona.CoronaSensorManager)> --> $r0 := @parameter0: com.ansca.corona.CoronaSensorManager
<com.ansca.corona.CoronaSensorManager: void showLocationPermissionsMissingFromManifestAlert()> --> r0 := @this: com.ansca.corona.CoronaSensorManager
<com.ansca.corona.Controller: void showLocationPermissionsMissingFromManifestAlert()> --> r0 := @this: com.ansca.corona.Controller
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.ansca.corona.Controller$5: void run()> --> r0 := @this: com.ansca.corona.Controller$5
<com.ansca.corona.CoronaRuntimeTaskDispatcher: void send(com.ansca.corona.CoronaRuntimeTask)> --> r0 := @this: com.ansca.corona.CoronaRuntimeTaskDispatcher
<com.ansca.corona.CoronaRuntimeTaskDispatcher: void send(com.ansca.corona.CoronaRuntimeTask)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Corona", "CoronaRuntimeTaskDispatcher.send() doesn\'t have an event manager to use! Abort!")
--------------------------------------------------------

