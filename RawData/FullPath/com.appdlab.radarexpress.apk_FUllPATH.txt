<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.squareup.okhttp.internal.b.c: void setRequestMethod(java.lang.String)> --> r0 := @this: com.squareup.okhttp.internal.b.c
<com.squareup.okhttp.internal.b.c: void setRequestMethod(java.lang.String)> --> specialinvoke r0.<com.squareup.okhttp.internal.b.a: void setRequestMethod(java.lang.String)>("HEAD")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.ReverseGeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.ReverseGeocodeTask
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> r1 := @this: com.appdlab.radarexpress.ReverseGeocodeTask
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> $d0 = virtualinvoke $r0.<com.appdlab.radarexpress.SimpleLocation: double getLatitude()>()
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> r14 := @caughtexception
<org.geonames.j: java.util.List b(org.geonames.d)> --> $r0 := @parameter0: org.geonames.d
<org.geonames.j: org.jdom.Element e(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $i1 = virtualinvoke $r5.<java.net.HttpURLConnection: int getResponseCode()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.LocationsActivity$1: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.LocationsActivity$1
<com.appdlab.radarexpress.LocationsActivity$1: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.LocationsActivity$1
<com.appdlab.radarexpress.SavedLocationsFile$Utils: com.appdlab.radarexpress.SavedLocationsFile getFile(android.content.Context)> --> $r1 := @parameter0: android.content.Context
<com.appdlab.radarexpress.LocalPersistence: java.lang.Object readObjectFromFile(android.content.Context,java.lang.String)> --> $r5 := @parameter0: android.content.Context
<com.appdlab.radarexpress.LocalPersistence: java.lang.Object readObjectFromFile(android.content.Context,java.lang.String)> --> $r8 = virtualinvoke $r5.<android.content.Context: java.io.FileInputStream openFileInput(java.lang.String)>("SavedLocationsFile.dat")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.f$1: void run()> --> r0 := @this: com.facebook.ads.internal.f$1
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.l.a$b: void run()> --> r0 := @this: com.facebook.ads.internal.l.a$b
<com.facebook.ads.internal.l.a: com.facebook.ads.internal.l.b a(android.view.View,int)> --> $r0 := @parameter0: android.view.View
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power")
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r4 := @caughtexception
<com.facebook.ads.internal.k.p: com.facebook.ads.internal.h.p a(java.lang.Exception,android.content.Context)> --> $r3 := @parameter0: java.lang.Exception
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> $r1 := @parameter0: com.facebook.ads.internal.h.p
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r6)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.f$1: void run()> --> r0 := @this: com.facebook.ads.internal.f$1
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.l.a$b: void run()> --> r0 := @this: com.facebook.ads.internal.l.a$b
<com.facebook.ads.internal.l.a: com.facebook.ads.internal.l.b a(android.view.View,int)> --> $r0 := @parameter0: android.view.View
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $z0 = virtualinvoke $r3.<android.os.PowerManager: boolean isInteractive()>()
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r4 := @caughtexception
<com.facebook.ads.internal.k.p: com.facebook.ads.internal.h.p a(java.lang.Exception,android.content.Context)> --> $r3 := @parameter0: java.lang.Exception
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> $r1 := @parameter0: com.facebook.ads.internal.h.p
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> $r4 = virtualinvoke $r2.<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>("crasheslog", 32768)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.squareup.okhttp.internal.b.c: int getResponseCode()> --> r0 := @this: com.squareup.okhttp.internal.b.c
<com.squareup.okhttp.internal.b.a: int getResponseCode()> --> r0 := @this: com.squareup.okhttp.internal.b.a
<com.squareup.okhttp.internal.b.a: int getResponseCode()> --> $i0 = virtualinvoke r1.<java.net.HttpURLConnection: int getResponseCode()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.ReverseGeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.ReverseGeocodeTask
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> r1 := @this: com.appdlab.radarexpress.ReverseGeocodeTask
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> $d0 = virtualinvoke $r0.<com.appdlab.radarexpress.SimpleLocation: double getLatitude()>()
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> r14 := @caughtexception
<org.geonames.j: java.util.List b(org.geonames.d)> --> $r0 := @parameter0: org.geonames.d
<org.geonames.j: java.util.List b(org.geonames.d)> --> $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "UTF8")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$2$1: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$2$1
<com.appdlab.radarexpress.MainActivity$2$1: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$2$1
<com.appdlab.radarexpress.SavedLocationsFile$Utils: void saveFile(android.content.Context,com.appdlab.radarexpress.SavedLocationsFile)> --> $r0 := @parameter0: android.content.Context
<com.appdlab.radarexpress.LocalPersistence: void writeObjectToFile(android.content.Context,java.lang.Object,java.lang.String)> --> $r4 := @parameter0: android.content.Context
<com.appdlab.radarexpress.LocalPersistence: void writeObjectToFile(android.content.Context,java.lang.Object,java.lang.String)> --> $r7 = virtualinvoke $r4.<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>("SavedLocationsFile.dat", 0)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r9 = virtualinvoke $r5.<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)>(r8, 1)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r4, "UTF8")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: java.util.List a(org.geonames.d)> --> $r1 := @parameter0: org.geonames.d
<org.geonames.j: java.util.List a(org.geonames.d)> --> $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF8")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.LocationResolver$LastKnownLocationTask: void run()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity$6: void gotLocation(android.location.Location)> --> r0 := @this: com.appdlab.radarexpress.MainActivity$6
<com.appdlab.radarexpress.MainActivity$6$1: void <init>(com.appdlab.radarexpress.MainActivity$6,android.location.Location)> --> r0 := @this: com.appdlab.radarexpress.MainActivity$6$1
<com.appdlab.radarexpress.MainActivity$6$1: void <init>(com.appdlab.radarexpress.MainActivity$6,android.location.Location)> --> r0.<com.appdlab.radarexpress.MainActivity$6$1: android.location.Location val$resolvedLocation> = $r2
<com.appdlab.radarexpress.MainActivity$6: void gotLocation(android.location.Location)> --> specialinvoke $r3.<com.appdlab.radarexpress.MainActivity$6$1: void <init>(com.appdlab.radarexpress.MainActivity$6,android.location.Location)>(r0, $r1)
<com.appdlab.radarexpress.MainActivity$6$1: void run()> --> r0 := @this: com.appdlab.radarexpress.MainActivity$6$1
<com.appdlab.radarexpress.MainActivity$6$1: void run()> --> $r4 = r0.<com.appdlab.radarexpress.MainActivity$6$1: android.location.Location val$resolvedLocation>
<com.appdlab.radarexpress.MainActivity$6$1: void run()> --> if $r4 == null goto staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RadarExpress", "The current location could not be resolved.")
<com.appdlab.radarexpress.MainActivity$6$1: void run()> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RadarExpress", "The current location could not be resolved.")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.squareup.okhttp.internal.b.c: void setRequestMethod(java.lang.String)> --> r0 := @this: com.squareup.okhttp.internal.b.c
<com.squareup.okhttp.internal.b.a: void setRequestMethod(java.lang.String)> --> r1 := @this: com.squareup.okhttp.internal.b.a
<com.squareup.okhttp.internal.b.a: void setRequestMethod(java.lang.String)> --> virtualinvoke r2.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("HEAD")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.jdom.Element e(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r4 = virtualinvoke $r10.<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)>($r2)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("launch_count", $l0)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: void onPostExecute(java.lang.Object)> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: void onPostExecute(java.lang.Void)> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: void onPostExecute(java.lang.Void)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RadarExpress", "Using iastate.edu radar server.")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.f$1: void run()> --> r0 := @this: com.facebook.ads.internal.f$1
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.l.a$b: void run()> --> r0 := @this: com.facebook.ads.internal.l.a$b
<com.facebook.ads.internal.l.a: com.facebook.ads.internal.l.b a(android.view.View,int)> --> $r0 := @parameter0: android.view.View
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $z0 = virtualinvoke $r3.<android.os.PowerManager: boolean isInteractive()>()
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r4 := @caughtexception
<com.facebook.ads.internal.k.p: com.facebook.ads.internal.h.p a(java.lang.Exception,android.content.Context)> --> $r3 := @parameter0: java.lang.Exception
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> $r1 := @parameter0: com.facebook.ads.internal.h.p
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r6)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r9 = virtualinvoke $r5.<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)>(r8, 1)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r4, "UTF8")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.f$1: void run()> --> r0 := @this: com.facebook.ads.internal.f$1
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.l.a$b: void run()> --> r0 := @this: com.facebook.ads.internal.l.a$b
<com.facebook.ads.internal.l.a: com.facebook.ads.internal.l.b a(android.view.View,int)> --> $r0 := @parameter0: android.view.View
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power")
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r4 := @caughtexception
<com.facebook.ads.internal.k.p: com.facebook.ads.internal.h.p a(java.lang.Exception,android.content.Context)> --> $r3 := @parameter0: java.lang.Exception
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> $r1 := @parameter0: com.facebook.ads.internal.h.p
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> $r3 = staticinvoke <com.facebook.ads.internal.k.p: org.json.JSONObject a(com.facebook.ads.internal.h.p)>($r1)
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> $r8 := @caughtexception
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "Failed to store crash", $r8)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.squareup.okhttp.internal.b.b: int getResponseCode()> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.b.b: com.squareup.okhttp.internal.http.h d()> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.b.b: boolean a(boolean)> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.b.b: boolean a(boolean)> --> $r1 = r0.<com.squareup.okhttp.internal.b.b: com.squareup.okhttp.internal.http.h c>
<com.squareup.okhttp.internal.b.b: boolean a(boolean)> --> $r7 := @caughtexception
<com.squareup.okhttp.internal.b.b: boolean a(boolean)> --> $r1 = r0.<com.squareup.okhttp.internal.b.b: com.squareup.okhttp.internal.http.h c>
<com.squareup.okhttp.internal.http.h: com.squareup.okhttp.internal.http.h a(com.squareup.okhttp.internal.http.RouteException)> --> r0 := @this: com.squareup.okhttp.internal.http.h
<com.squareup.okhttp.internal.b.b: boolean a(boolean)> --> $r1 = virtualinvoke $r1.<com.squareup.okhttp.internal.http.h: com.squareup.okhttp.internal.http.h a(com.squareup.okhttp.internal.http.RouteException)>($r7)
<com.squareup.okhttp.internal.b.b: boolean a(boolean)> --> r0.<com.squareup.okhttp.internal.b.b: com.squareup.okhttp.internal.http.h c> = $r1
<com.squareup.okhttp.internal.b.b: boolean a(boolean)> --> $r1 = r0.<com.squareup.okhttp.internal.b.b: com.squareup.okhttp.internal.http.h c>
<com.squareup.okhttp.internal.http.h: com.squareup.okhttp.internal.http.h a(com.squareup.okhttp.internal.http.RouteException)> --> r0 := @this: com.squareup.okhttp.internal.http.h
<com.squareup.okhttp.internal.http.h: com.squareup.okhttp.internal.http.q j()> --> r1 := @this: com.squareup.okhttp.internal.http.h
<com.squareup.okhttp.internal.http.h: com.squareup.okhttp.internal.http.q j()> --> if $r3 == null goto $r4 = r1.<com.squareup.okhttp.internal.http.h: com.squareup.okhttp.x l>
<com.squareup.okhttp.internal.http.h: com.squareup.okhttp.internal.http.h a(com.squareup.okhttp.internal.http.RouteException)> --> $r5 = virtualinvoke r0.<com.squareup.okhttp.internal.http.h: com.squareup.okhttp.internal.http.q j()>()
<com.squareup.okhttp.internal.b.b: boolean a(boolean)> --> $r1 = virtualinvoke $r1.<com.squareup.okhttp.internal.http.h: com.squareup.okhttp.internal.http.h a(com.squareup.okhttp.internal.http.RouteException)>($r7)
<com.squareup.okhttp.internal.b.b: boolean a(boolean)> --> $r5 := @caughtexception
<com.squareup.okhttp.internal.http.h: com.squareup.okhttp.internal.http.q j()> --> r1 := @this: com.squareup.okhttp.internal.http.h
<com.squareup.okhttp.internal.h: void a(java.io.Closeable)> --> $r1 := @parameter0: java.io.Closeable
<com.squareup.okhttp.internal.http.e$b: void close()> --> r0 := @this: com.squareup.okhttp.internal.http.e$b
<a.n: a.d b(java.lang.String)> --> r1 := @this: a.n
<a.n: a.d x()> --> r1 := @this: a.n
<a.a$1: void a_(a.c,long)> --> r2 := @this: a.a$1
<a.a: void c()> --> r0 := @this: a.a
<a.a: void a(a.a,long,boolean)> --> $r0 := @parameter0: a.a
<a.a: void a(a.a,long,boolean)> --> $r2 = new a.a
<a.a: void a(a.a,long,boolean)> --> <a.a: a.a b> = $r2
<a.a: void c()> --> staticinvoke <a.a: void a(a.a,long,boolean)>(r0, $l0, $z0)
<a.a$2: long a(a.c,long)> --> virtualinvoke $r2.<a.a: void a(boolean)>(0)
<a.a: a.a e()> --> if $i4 < 0 goto return null
<a.a: a.a e()> --> $r0 = <a.a: a.a b>
<a.a$a: void run()> --> $r1 = staticinvoke <a.a: a.a e()>()
<a.m$3: void a()> --> r0 := @this: a.m$3
<a.m$3: void a()> --> virtualinvoke $r1.<java.net.Socket: void close()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RadarExpress", "No last known location was found. Attempting to resolve current location...")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.squareup.okhttp.internal.b.b: int getResponseCode()> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.b.b: com.squareup.okhttp.internal.http.h d()> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.v: java.net.URL b()> --> r0 := @this: com.squareup.okhttp.v
<com.squareup.okhttp.p: java.net.URL a()> --> r0 := @this: com.squareup.okhttp.p
<com.squareup.okhttp.p: java.net.URL a()> --> specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>(r2)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.squareup.okhttp.internal.b.b: int getResponseCode()> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.b.b: com.squareup.okhttp.internal.http.h d()> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.v: java.net.URL b()> --> r0 := @this: com.squareup.okhttp.v
<com.squareup.okhttp.p: java.net.URL a()> --> r0 := @this: com.squareup.okhttp.p
<com.squareup.okhttp.p: java.net.URL a()> --> specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>(r2)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.jdom.Element e(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r6 = virtualinvoke $r5.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RadarExpress", "No location providers are available on this device.")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RadarExpress", "No location providers are available on this device.")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.jdom.Element e(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream a(java.lang.String,java.lang.String,int,java.io.IOException)> --> $r1 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream a(java.lang.String,java.lang.String,int,java.io.IOException)> --> specialinvoke $r8.<java.net.URL: void <init>(java.lang.String)>($r1)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.squareup.okhttp.internal.b.b: int getResponseCode()> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.b.b: com.squareup.okhttp.internal.http.h d()> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.http.h: com.squareup.okhttp.v l()> --> r0 := @this: com.squareup.okhttp.internal.http.h
<com.squareup.okhttp.p: com.squareup.okhttp.p c(java.lang.String)> --> r1 := @this: com.squareup.okhttp.p
<com.squareup.okhttp.p$a: com.squareup.okhttp.p$a$a a(com.squareup.okhttp.p,java.lang.String)> --> r0 := @this: com.squareup.okhttp.p$a
<com.squareup.okhttp.p$a: java.lang.String g(java.lang.String,int,int)> --> $r0 := @parameter0: java.lang.String
<com.squareup.okhttp.p$a: java.net.InetAddress h(java.lang.String,int,int)> --> $r1 := @parameter0: java.lang.String
<com.squareup.okhttp.p$a: java.net.InetAddress h(java.lang.String,int,int)> --> $r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>($r2)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.jdom.Element e(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream a(java.lang.String,java.lang.String,int,java.io.IOException)> --> $r1 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream a(java.lang.String,java.lang.String,int,java.io.IOException)> --> $r9 = virtualinvoke $r8.<java.net.URL: java.net.URLConnection openConnection()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.squareup.okhttp.internal.b.b: int getResponseCode()> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.b.b: com.squareup.okhttp.internal.http.h d()> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.http.h: com.squareup.okhttp.v l()> --> r0 := @this: com.squareup.okhttp.internal.http.h
<com.squareup.okhttp.p: com.squareup.okhttp.p c(java.lang.String)> --> r1 := @this: com.squareup.okhttp.p
<com.squareup.okhttp.p$a: com.squareup.okhttp.p$a$a a(com.squareup.okhttp.p,java.lang.String)> --> r0 := @this: com.squareup.okhttp.p$a
<com.squareup.okhttp.p$a: java.lang.String g(java.lang.String,int,int)> --> $r0 := @parameter0: java.lang.String
<com.squareup.okhttp.p$a: java.net.InetAddress h(java.lang.String,int,int)> --> $r1 := @parameter0: java.lang.String
<com.squareup.okhttp.p$a: java.net.InetAddress h(java.lang.String,int,int)> --> $r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>($r2)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>("http://radar.appdlab.com:8080/tiles/timestamps.jsonp")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> virtualinvoke $r3.<java.net.HttpURLConnection: void disconnect()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> virtualinvoke $r3.<java.net.HttpURLConnection: void disconnect()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r9 = virtualinvoke $r5.<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)>(r8, 1)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RadarExpress", "Couldn\'t get location from Geocoder. Trying GeoName...")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r9 = virtualinvoke $r5.<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)>(r8, 1)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RadarExpress", "Couldn\'t get location from Geocoder. Trying GeoName...")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r9 = virtualinvoke $r5.<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)>(r8, 1)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.jdom.Element e(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> specialinvoke $r10.<java.net.URL: void <init>(java.lang.String)>($r3)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.f$1: void run()> --> r0 := @this: com.facebook.ads.internal.f$1
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.l.a$b: void run()> --> r0 := @this: com.facebook.ads.internal.l.a$b
<com.facebook.ads.internal.l.a: com.facebook.ads.internal.l.b a(android.view.View,int)> --> $r0 := @parameter0: android.view.View
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $z0 = virtualinvoke $r3.<android.os.PowerManager: boolean isInteractive()>()
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r4 := @caughtexception
<com.facebook.ads.internal.k.p: com.facebook.ads.internal.h.p a(java.lang.Exception,android.content.Context)> --> $r3 := @parameter0: java.lang.Exception
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> $r1 := @parameter0: com.facebook.ads.internal.h.p
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r6)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.jdom.Element e(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r4 = virtualinvoke $r10.<java.net.URL: java.net.URLConnection openConnection()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r9 = virtualinvoke $r5.<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)>(r8, 1)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.jdom.Element e(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r4 = virtualinvoke $r10.<java.net.URL: java.net.URLConnection openConnection()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.f$1: void run()> --> r0 := @this: com.facebook.ads.internal.f$1
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.l.a$b: void run()> --> r0 := @this: com.facebook.ads.internal.l.a$b
<com.facebook.ads.internal.l.a: com.facebook.ads.internal.l.b a(android.view.View,int)> --> $r0 := @parameter0: android.view.View
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $z0 = virtualinvoke $r3.<android.os.PowerManager: boolean isInteractive()>()
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r4 := @caughtexception
<com.facebook.ads.internal.k.p: com.facebook.ads.internal.h.p a(java.lang.Exception,android.content.Context)> --> $r3 := @parameter0: java.lang.Exception
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> $r1 := @parameter0: com.facebook.ads.internal.h.p
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r6)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> $r3 = (java.lang.String[]) $r2
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r8 = $r4[0]
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.jdom.Element e(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream a(java.lang.String,java.lang.String,int,java.io.IOException)> --> $r1 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream a(java.lang.String,java.lang.String,int,java.io.IOException)> --> $r10 = virtualinvoke $r9.<java.net.URLConnection: java.io.InputStream getInputStream()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.jdom.Element e(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream a(java.lang.String,java.lang.String,int,java.io.IOException)> --> $r1 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream a(java.lang.String,java.lang.String,int,java.io.IOException)> --> $r10 = virtualinvoke $r9.<java.net.URLConnection: java.io.InputStream getInputStream()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.f$1: void run()> --> r0 := @this: com.facebook.ads.internal.f$1
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.l.a$b: void run()> --> r0 := @this: com.facebook.ads.internal.l.a$b
<com.facebook.ads.internal.l.a: com.facebook.ads.internal.l.b a(android.view.View,int)> --> $r0 := @parameter0: android.view.View
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power")
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r4 := @caughtexception
<com.facebook.ads.internal.k.p: com.facebook.ads.internal.h.p a(java.lang.Exception,android.content.Context)> --> $r3 := @parameter0: java.lang.Exception
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> $r1 := @parameter0: com.facebook.ads.internal.h.p
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r6)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> virtualinvoke $r3.<java.net.HttpURLConnection: void disconnect()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r4, "UTF8")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r9 = virtualinvoke $r5.<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)>(r8, 1)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r4, "UTF8")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> $r3 = (java.lang.String[]) $r2
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r8 = $r4[0]
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.jdom.Element e(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream a(java.lang.String,java.lang.String,int,java.io.IOException)> --> $r1 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream a(java.lang.String,java.lang.String,int,java.io.IOException)> --> $r10 = virtualinvoke $r9.<java.net.URLConnection: java.io.InputStream getInputStream()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity$18: void run()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$18
<com.appdlab.radarexpress.MainActivity$18: void run()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("RadarExpress", "mWebView is null. Restarting...")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$4: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$4
<com.appdlab.radarexpress.MainActivity$4: com.appdlab.radarexpress.SavedLocationsFile doInBackground(java.lang.Void[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$4
<com.appdlab.radarexpress.SavedLocationsFile$Utils: com.appdlab.radarexpress.SavedLocationsFile getFile(android.content.Context)> --> $r1 := @parameter0: android.content.Context
<com.appdlab.radarexpress.LocalPersistence: java.lang.Object readObjectFromFile(android.content.Context,java.lang.String)> --> $r5 := @parameter0: android.content.Context
<com.appdlab.radarexpress.LocalPersistence: java.lang.Object readObjectFromFile(android.content.Context,java.lang.String)> --> $r8 = virtualinvoke $r5.<android.content.Context: java.io.FileInputStream openFileInput(java.lang.String)>("SavedLocationsFile.dat")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.f$1: void run()> --> r0 := @this: com.facebook.ads.internal.f$1
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.l.a$b: void run()> --> r0 := @this: com.facebook.ads.internal.l.a$b
<com.facebook.ads.internal.l.a: com.facebook.ads.internal.l.b a(android.view.View,int)> --> $r0 := @parameter0: android.view.View
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power")
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r4 := @caughtexception
<com.facebook.ads.internal.k.p: com.facebook.ads.internal.h.p a(java.lang.Exception,android.content.Context)> --> $r3 := @parameter0: java.lang.Exception
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> $r1 := @parameter0: com.facebook.ads.internal.h.p
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> $r4 = virtualinvoke $r2.<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>("crasheslog", 32768)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.squareup.okhttp.internal.b.c: int getResponseCode()> --> r0 := @this: com.squareup.okhttp.internal.b.c
<com.squareup.okhttp.internal.b.a: int getResponseCode()> --> r0 := @this: com.squareup.okhttp.internal.b.a
<com.squareup.okhttp.internal.b.a: int getResponseCode()> --> $i0 = virtualinvoke r1.<java.net.HttpURLConnection: int getResponseCode()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r4, "UTF8")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver$LastKnownLocationTask: void run()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity$6: void gotLocation(android.location.Location)> --> r0 := @this: com.appdlab.radarexpress.MainActivity$6
<com.appdlab.radarexpress.MainActivity$6$1: void <init>(com.appdlab.radarexpress.MainActivity$6,android.location.Location)> --> r0 := @this: com.appdlab.radarexpress.MainActivity$6$1
<com.appdlab.radarexpress.MainActivity$6$1: void <init>(com.appdlab.radarexpress.MainActivity$6,android.location.Location)> --> r0.<com.appdlab.radarexpress.MainActivity$6$1: android.location.Location val$resolvedLocation> = $r2
<com.appdlab.radarexpress.MainActivity$6: void gotLocation(android.location.Location)> --> specialinvoke $r3.<com.appdlab.radarexpress.MainActivity$6$1: void <init>(com.appdlab.radarexpress.MainActivity$6,android.location.Location)>(r0, $r1)
<com.appdlab.radarexpress.MainActivity$6$1: void run()> --> r0 := @this: com.appdlab.radarexpress.MainActivity$6$1
<com.appdlab.radarexpress.MainActivity$6$1: void run()> --> $r4 = r0.<com.appdlab.radarexpress.MainActivity$6$1: android.location.Location val$resolvedLocation>
<com.appdlab.radarexpress.MainActivity$6$1: void run()> --> if $r4 == null goto staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RadarExpress", "The current location could not be resolved.")
<com.appdlab.radarexpress.MainActivity$6$1: void run()> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RadarExpress", "The current location could not be resolved.")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.squareup.okhttp.internal.b.b: int getResponseCode()> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.b.b: com.squareup.okhttp.internal.http.h d()> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.http.q: void b()> --> r0 := @this: com.squareup.okhttp.internal.http.q
<com.squareup.okhttp.internal.http.q: void a(boolean,boolean,boolean)> --> r1 := @this: com.squareup.okhttp.internal.http.q
<com.squareup.okhttp.internal.h: void a(java.net.Socket)> --> $r1 := @parameter0: java.net.Socket
<com.squareup.okhttp.internal.h: void a(java.net.Socket)> --> virtualinvoke $r1.<java.net.Socket: void close()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: void onPostExecute(java.lang.Object)> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: void onPostExecute(java.lang.Void)> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: void onPostExecute(java.lang.Void)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RadarExpress", "Using iastate.edu radar server.")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.LocationsActivity$2: void onPostExecute(java.lang.Object)> --> r0 := @this: com.appdlab.radarexpress.LocationsActivity$2
<com.appdlab.radarexpress.LocationsActivity$2: void onPostExecute(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.LocationsActivity$2
<com.appdlab.radarexpress.LocationsActivity$2: void onPostExecute(com.appdlab.radarexpress.SimpleLocation)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r3, "No match found.")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.f$1: void run()> --> r0 := @this: com.facebook.ads.internal.f$1
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.l.a$b: void run()> --> r0 := @this: com.facebook.ads.internal.l.a$b
<com.facebook.ads.internal.l.a: com.facebook.ads.internal.l.b a(android.view.View,int)> --> $r0 := @parameter0: android.view.View
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power")
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r4 := @caughtexception
<com.facebook.ads.internal.k.p: com.facebook.ads.internal.h.p a(java.lang.Exception,android.content.Context)> --> $r3 := @parameter0: java.lang.Exception
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> $r1 := @parameter0: com.facebook.ads.internal.h.p
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r6)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r4, "UTF8")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$2$1: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$2$1
<com.appdlab.radarexpress.MainActivity$2$1: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$2$1
<com.appdlab.radarexpress.SavedLocationsFile$Utils: void saveFile(android.content.Context,com.appdlab.radarexpress.SavedLocationsFile)> --> $r0 := @parameter0: android.content.Context
<com.appdlab.radarexpress.LocalPersistence: void writeObjectToFile(android.content.Context,java.lang.Object,java.lang.String)> --> $r4 := @parameter0: android.content.Context
<com.appdlab.radarexpress.LocalPersistence: void writeObjectToFile(android.content.Context,java.lang.Object,java.lang.String)> --> virtualinvoke $r11.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r0)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.ReverseGeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.ReverseGeocodeTask
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> r1 := @this: com.appdlab.radarexpress.ReverseGeocodeTask
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> $d0 = virtualinvoke $r0.<com.appdlab.radarexpress.SimpleLocation: double getLatitude()>()
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> r14 := @caughtexception
<org.geonames.j: java.util.List b(org.geonames.d)> --> $r0 := @parameter0: org.geonames.d
<org.geonames.j: org.jdom.Element e(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> specialinvoke $r10.<java.net.URL: void <init>(java.lang.String)>($r3)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.squareup.okhttp.internal.b.c: int getResponseCode()> --> r0 := @this: com.squareup.okhttp.internal.b.c
<com.squareup.okhttp.internal.b.c: int getResponseCode()> --> $i0 = specialinvoke r0.<com.squareup.okhttp.internal.b.a: int getResponseCode()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.f$1: void run()> --> r0 := @this: com.facebook.ads.internal.f$1
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.l.a$b: void run()> --> r0 := @this: com.facebook.ads.internal.l.a$b
<com.facebook.ads.internal.l.a: com.facebook.ads.internal.l.b a(android.view.View,int)> --> $r0 := @parameter0: android.view.View
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $z0 = virtualinvoke $r3.<android.os.PowerManager: boolean isInteractive()>()
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r4 := @caughtexception
<com.facebook.ads.internal.k.p: com.facebook.ads.internal.h.p a(java.lang.Exception,android.content.Context)> --> $r3 := @parameter0: java.lang.Exception
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> $r1 := @parameter0: com.facebook.ads.internal.h.p
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r6)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.ReverseGeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.ReverseGeocodeTask
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> r1 := @this: com.appdlab.radarexpress.ReverseGeocodeTask
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> $d0 = virtualinvoke $r0.<com.appdlab.radarexpress.SimpleLocation: double getLatitude()>()
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> r14 := @caughtexception
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RadarExpress", "Couldn\'t get location from Geocoder. Trying GeoName...")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.ReverseGeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.ReverseGeocodeTask
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> r1 := @this: com.appdlab.radarexpress.ReverseGeocodeTask
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> $d0 = virtualinvoke $r0.<com.appdlab.radarexpress.SimpleLocation: double getLatitude()>()
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> r14 := @caughtexception
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RadarExpress", "Couldn\'t get location from Geocoder. Trying GeoName...")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.f$1: void run()> --> r0 := @this: com.facebook.ads.internal.f$1
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.l.a$b: void run()> --> r0 := @this: com.facebook.ads.internal.l.a$b
<com.facebook.ads.internal.l.a: com.facebook.ads.internal.l.b a(android.view.View,int)> --> $r0 := @parameter0: android.view.View
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power")
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r4 := @caughtexception
<com.facebook.ads.internal.k.p: com.facebook.ads.internal.h.p a(java.lang.Exception,android.content.Context)> --> $r3 := @parameter0: java.lang.Exception
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> $r1 := @parameter0: com.facebook.ads.internal.h.p
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r6)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.squareup.okhttp.internal.b.c: void disconnect()> --> r0 := @this: com.squareup.okhttp.internal.b.c
<com.squareup.okhttp.internal.b.c: void disconnect()> --> specialinvoke r0.<com.squareup.okhttp.internal.b.a: void disconnect()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.squareup.okhttp.internal.b.c: void disconnect()> --> r0 := @this: com.squareup.okhttp.internal.b.c
<com.squareup.okhttp.internal.b.c: void disconnect()> --> specialinvoke r0.<com.squareup.okhttp.internal.b.a: void disconnect()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.jdom.Element e(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream a(java.lang.String,java.lang.String,int,java.io.IOException)> --> $r1 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream a(java.lang.String,java.lang.String,int,java.io.IOException)> --> specialinvoke $r8.<java.net.URL: void <init>(java.lang.String)>($r1)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> $r3 = (java.lang.String[]) $r2
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r8 = $r4[0]
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.jdom.Element e(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream a(java.lang.String,java.lang.String,int,java.io.IOException)> --> $r1 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream a(java.lang.String,java.lang.String,int,java.io.IOException)> --> specialinvoke $r8.<java.net.URL: void <init>(java.lang.String)>($r1)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$4: void onPostExecute(java.lang.Object)> --> r0 := @this: com.appdlab.radarexpress.MainActivity$4
<com.appdlab.radarexpress.MainActivity$4: void onPostExecute(com.appdlab.radarexpress.SavedLocationsFile)> --> r0 := @this: com.appdlab.radarexpress.MainActivity$4
<com.appdlab.radarexpress.MainActivity$4: void onPostExecute(com.appdlab.radarexpress.SavedLocationsFile)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RadarExpress", "No home location is set.")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$4: void onPostExecute(java.lang.Object)> --> r0 := @this: com.appdlab.radarexpress.MainActivity$4
<com.appdlab.radarexpress.MainActivity$4: void onPostExecute(com.appdlab.radarexpress.SavedLocationsFile)> --> r0 := @this: com.appdlab.radarexpress.MainActivity$4
<com.appdlab.radarexpress.MainActivity$4: void onPostExecute(com.appdlab.radarexpress.SavedLocationsFile)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RadarExpress", "No home location is set.")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity$18: void run()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$18
<com.appdlab.radarexpress.MainActivity$18: void run()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("RadarExpress", "mWebView is null. Restarting...")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.f$1: void run()> --> r0 := @this: com.facebook.ads.internal.f$1
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.l.a$b: void run()> --> r0 := @this: com.facebook.ads.internal.l.a$b
<com.facebook.ads.internal.l.a: com.facebook.ads.internal.l.b a(android.view.View,int)> --> $r0 := @parameter0: android.view.View
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $z0 = virtualinvoke $r3.<android.os.PowerManager: boolean isInteractive()>()
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r4 := @caughtexception
<com.facebook.ads.internal.k.p: com.facebook.ads.internal.h.p a(java.lang.Exception,android.content.Context)> --> $r3 := @parameter0: java.lang.Exception
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> $r1 := @parameter0: com.facebook.ads.internal.h.p
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r6)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.squareup.okhttp.internal.b.c: void disconnect()> --> r0 := @this: com.squareup.okhttp.internal.b.c
<com.squareup.okhttp.internal.b.c: void disconnect()> --> specialinvoke r0.<com.squareup.okhttp.internal.b.a: void disconnect()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r4, "UTF8")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.mopub.mobileads.RepeatingHandlerRunnable: void run()> --> r0 := @this: com.mopub.mobileads.RepeatingHandlerRunnable
<com.mopub.mobileads.VastVideoViewProgressRunnable: void doWork()> --> r0 := @this: com.mopub.mobileads.VastVideoViewProgressRunnable
<com.mopub.mobileads.VastMacroHelper: com.mopub.mobileads.VastMacroHelper withAssetUri(java.lang.String)> --> r0 := @this: com.mopub.mobileads.VastMacroHelper
<com.mopub.mobileads.VastMacroHelper: com.mopub.mobileads.VastMacroHelper withAssetUri(java.lang.String)> --> $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "UTF-8")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("HEAD")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r4, "UTF8")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.squareup.okhttp.internal.b.b: int getResponseCode()> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.b.b: com.squareup.okhttp.internal.http.h d()> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.http.q: void b()> --> r0 := @this: com.squareup.okhttp.internal.http.q
<com.squareup.okhttp.internal.http.q: void a(boolean,boolean,boolean)> --> r1 := @this: com.squareup.okhttp.internal.http.q
<com.squareup.okhttp.internal.h: void a(java.net.Socket)> --> $r1 := @parameter0: java.net.Socket
<com.squareup.okhttp.internal.h: void a(java.net.Socket)> --> virtualinvoke $r1.<java.net.Socket: void close()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.ReverseGeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.ReverseGeocodeTask
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> r1 := @this: com.appdlab.radarexpress.ReverseGeocodeTask
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> $d0 = virtualinvoke $r0.<com.appdlab.radarexpress.SimpleLocation: double getLatitude()>()
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> r14 := @caughtexception
<org.geonames.j: java.util.List b(org.geonames.d)> --> $r0 := @parameter0: org.geonames.d
<org.geonames.j: org.jdom.Element e(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r6 = virtualinvoke $r5.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.mopub.volley.ExecutorDelivery$a: void run()> --> r0 := @this: com.mopub.volley.ExecutorDelivery$a
<com.mopub.volley.CacheDispatcher$1: void run()> --> r2 := @this: com.mopub.volley.CacheDispatcher$1
<com.mopub.volley.CacheDispatcher: void <clinit>()> --> nop
<com.mopub.volley.VolleyLog: void <clinit>()> --> nop
<com.mopub.volley.VolleyLog: void <clinit>()> --> $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>($r0, 2)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.LocationsActivity$2: void onPostExecute(java.lang.Object)> --> r0 := @this: com.appdlab.radarexpress.LocationsActivity$2
<com.appdlab.radarexpress.LocationsActivity$2: void onPostExecute(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.LocationsActivity$2
<com.appdlab.radarexpress.LocationsActivity$2: void onPostExecute(com.appdlab.radarexpress.SimpleLocation)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r3, "No match found.")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$2$1: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$2$1
<com.appdlab.radarexpress.MainActivity$2$1: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$2$1
<com.appdlab.radarexpress.SavedLocationsFile$Utils: void saveFile(android.content.Context,com.appdlab.radarexpress.SavedLocationsFile)> --> $r0 := @parameter0: android.content.Context
<com.appdlab.radarexpress.LocalPersistence: void writeObjectToFile(android.content.Context,java.lang.Object,java.lang.String)> --> $r4 := @parameter0: android.content.Context
<com.appdlab.radarexpress.LocalPersistence: void writeObjectToFile(android.content.Context,java.lang.Object,java.lang.String)> --> virtualinvoke $r11.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r0)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r9 = virtualinvoke $r5.<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)>(r8, 1)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r4, "UTF8")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.ReverseGeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.ReverseGeocodeTask
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> r1 := @this: com.appdlab.radarexpress.ReverseGeocodeTask
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> $d0 = virtualinvoke $r0.<com.appdlab.radarexpress.SimpleLocation: double getLatitude()>()
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> r14 := @caughtexception
<org.geonames.j: java.util.List b(org.geonames.d)> --> $r0 := @parameter0: org.geonames.d
<org.geonames.j: org.jdom.Element e(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> specialinvoke $r10.<java.net.URL: void <init>(java.lang.String)>($r3)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.squareup.okhttp.internal.b.c: int getResponseCode()> --> r0 := @this: com.squareup.okhttp.internal.b.c
<com.squareup.okhttp.internal.b.c: int getResponseCode()> --> $i0 = specialinvoke r0.<com.squareup.okhttp.internal.b.a: int getResponseCode()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RadarExpress", "No last known location was found. Attempting to resolve current location...")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.ReverseGeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.ReverseGeocodeTask
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> r1 := @this: com.appdlab.radarexpress.ReverseGeocodeTask
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> $d0 = virtualinvoke $r0.<com.appdlab.radarexpress.SimpleLocation: double getLatitude()>()
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> r14 := @caughtexception
<org.geonames.j: java.util.List b(org.geonames.d)> --> $r0 := @parameter0: org.geonames.d
<org.geonames.j: java.util.List b(org.geonames.d)> --> $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "UTF8")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.ReverseGeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.ReverseGeocodeTask
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> r1 := @this: com.appdlab.radarexpress.ReverseGeocodeTask
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> $d0 = virtualinvoke $r0.<com.appdlab.radarexpress.SimpleLocation: double getLatitude()>()
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> r14 := @caughtexception
<org.geonames.j: java.util.List b(org.geonames.d)> --> $r0 := @parameter0: org.geonames.d
<org.geonames.j: java.util.List b(org.geonames.d)> --> $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "UTF8")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.ReverseGeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.ReverseGeocodeTask
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> r1 := @this: com.appdlab.radarexpress.ReverseGeocodeTask
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> $d0 = virtualinvoke $r0.<com.appdlab.radarexpress.SimpleLocation: double getLatitude()>()
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> r14 := @caughtexception
<org.geonames.j: java.util.List b(org.geonames.d)> --> $r0 := @parameter0: org.geonames.d
<org.geonames.j: org.jdom.Element e(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r6 = virtualinvoke $r5.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> $r3 = (java.lang.String[]) $r2
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r8 = $r4[0]
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.jdom.Element e(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream a(java.lang.String,java.lang.String,int,java.io.IOException)> --> $r1 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream a(java.lang.String,java.lang.String,int,java.io.IOException)> --> specialinvoke $r8.<java.net.URL: void <init>(java.lang.String)>($r1)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> $r3 = (java.lang.String[]) $r2
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r8 = $r4[0]
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.jdom.Element e(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream a(java.lang.String,java.lang.String,int,java.io.IOException)> --> $r1 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream a(java.lang.String,java.lang.String,int,java.io.IOException)> --> $r9 = virtualinvoke $r8.<java.net.URL: java.net.URLConnection openConnection()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.f$1: void run()> --> r0 := @this: com.facebook.ads.internal.f$1
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.l.a$b: void run()> --> r0 := @this: com.facebook.ads.internal.l.a$b
<com.facebook.ads.internal.l.a: com.facebook.ads.internal.l.b a(android.view.View,int)> --> $r0 := @parameter0: android.view.View
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power")
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r4 := @caughtexception
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, "Exception in screen interactive check, assuming interactive.", $r4)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.f$1: void run()> --> r0 := @this: com.facebook.ads.internal.f$1
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.l.a$b: void run()> --> r0 := @this: com.facebook.ads.internal.l.a$b
<com.facebook.ads.internal.l.a: com.facebook.ads.internal.l.b a(android.view.View,int)> --> $r0 := @parameter0: android.view.View
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power")
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r4 := @caughtexception
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, "Exception in screen interactive check, assuming interactive.", $r4)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>("http://radar.appdlab.com:8080/tiles/timestamps.jsonp")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.f$1: void run()> --> r0 := @this: com.facebook.ads.internal.f$1
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.l.a$b: void run()> --> r0 := @this: com.facebook.ads.internal.l.a$b
<com.facebook.ads.internal.l.a: com.facebook.ads.internal.l.b a(android.view.View,int)> --> $r0 := @parameter0: android.view.View
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power")
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r4 := @caughtexception
<com.facebook.ads.internal.k.p: com.facebook.ads.internal.h.p a(java.lang.Exception,android.content.Context)> --> $r3 := @parameter0: java.lang.Exception
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> $r1 := @parameter0: com.facebook.ads.internal.h.p
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r6)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.jdom.Element e(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> specialinvoke $r10.<java.net.URL: void <init>(java.lang.String)>($r3)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> virtualinvoke $r3.<java.net.HttpURLConnection: void disconnect()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.squareup.okhttp.internal.b.b: int getResponseCode()> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.b.b: com.squareup.okhttp.internal.http.h d()> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.http.h: com.squareup.okhttp.v l()> --> r0 := @this: com.squareup.okhttp.internal.http.h
<com.squareup.okhttp.internal.http.k: com.squareup.okhttp.v a(com.squareup.okhttp.b,com.squareup.okhttp.x,java.net.Proxy)> --> $r2 := @parameter0: com.squareup.okhttp.b
<com.squareup.okhttp.internal.http.a: com.squareup.okhttp.v a(java.net.Proxy,com.squareup.okhttp.x)> --> r0 := @this: com.squareup.okhttp.internal.http.a
<com.squareup.okhttp.internal.http.a: java.net.InetAddress a(java.net.Proxy,com.squareup.okhttp.p)> --> r3 := @this: com.squareup.okhttp.internal.http.a
<com.squareup.okhttp.internal.http.a: java.net.InetAddress a(java.net.Proxy,com.squareup.okhttp.p)> --> $r7 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>($r8)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r4, "UTF8")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r9 = virtualinvoke $r5.<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)>(r8, 1)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r4, "UTF8")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.squareup.okhttp.internal.b.b: int getResponseCode()> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.b.b: com.squareup.okhttp.internal.http.h d()> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.http.h: com.squareup.okhttp.v l()> --> r0 := @this: com.squareup.okhttp.internal.http.h
<com.squareup.okhttp.internal.http.k: com.squareup.okhttp.v a(com.squareup.okhttp.b,com.squareup.okhttp.x,java.net.Proxy)> --> $r2 := @parameter0: com.squareup.okhttp.b
<com.squareup.okhttp.internal.http.a: com.squareup.okhttp.v a(java.net.Proxy,com.squareup.okhttp.x)> --> r0 := @this: com.squareup.okhttp.internal.http.a
<com.squareup.okhttp.internal.http.a: java.net.InetAddress a(java.net.Proxy,com.squareup.okhttp.p)> --> r3 := @this: com.squareup.okhttp.internal.http.a
<com.squareup.okhttp.internal.http.a: java.net.InetAddress a(java.net.Proxy,com.squareup.okhttp.p)> --> $r7 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>($r8)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.jdom.Element e(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream a(java.lang.String,java.lang.String,int,java.io.IOException)> --> $r1 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream a(java.lang.String,java.lang.String,int,java.io.IOException)> --> $r10 = virtualinvoke $r9.<java.net.URLConnection: java.io.InputStream getInputStream()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.f$1: void run()> --> r0 := @this: com.facebook.ads.internal.f$1
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.l.a$b: void run()> --> r0 := @this: com.facebook.ads.internal.l.a$b
<com.facebook.ads.internal.l.a: com.facebook.ads.internal.l.b a(android.view.View,int)> --> $r0 := @parameter0: android.view.View
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power")
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r4 := @caughtexception
<com.facebook.ads.internal.k.p: com.facebook.ads.internal.h.p a(java.lang.Exception,android.content.Context)> --> $r3 := @parameter0: java.lang.Exception
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> $r1 := @parameter0: com.facebook.ads.internal.h.p
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r6)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.squareup.okhttp.internal.b.c: void setRequestMethod(java.lang.String)> --> r0 := @this: com.squareup.okhttp.internal.b.c
<com.squareup.okhttp.internal.b.c: void setRequestMethod(java.lang.String)> --> specialinvoke r0.<com.squareup.okhttp.internal.b.a: void setRequestMethod(java.lang.String)>("HEAD")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.ReverseGeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.ReverseGeocodeTask
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> r1 := @this: com.appdlab.radarexpress.ReverseGeocodeTask
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> $d0 = virtualinvoke $r0.<com.appdlab.radarexpress.SimpleLocation: double getLatitude()>()
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> r14 := @caughtexception
<org.geonames.j: java.util.List b(org.geonames.d)> --> $r0 := @parameter0: org.geonames.d
<org.geonames.j: org.jdom.Element e(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $i1 = virtualinvoke $r5.<java.net.HttpURLConnection: int getResponseCode()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.f$1: void run()> --> r0 := @this: com.facebook.ads.internal.f$1
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.l.a$b: void run()> --> r0 := @this: com.facebook.ads.internal.l.a$b
<com.facebook.ads.internal.l.a: com.facebook.ads.internal.l.b a(android.view.View,int)> --> $r0 := @parameter0: android.view.View
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $z0 = virtualinvoke $r3.<android.os.PowerManager: boolean isInteractive()>()
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r4 := @caughtexception
<com.facebook.ads.internal.k.p: com.facebook.ads.internal.h.p a(java.lang.Exception,android.content.Context)> --> $r3 := @parameter0: java.lang.Exception
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> $r1 := @parameter0: com.facebook.ads.internal.h.p
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r6)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.squareup.okhttp.internal.b.c: void disconnect()> --> r0 := @this: com.squareup.okhttp.internal.b.c
<com.squareup.okhttp.internal.b.c: void disconnect()> --> specialinvoke r0.<com.squareup.okhttp.internal.b.a: void disconnect()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.mopub.mobileads.RepeatingHandlerRunnable: void run()> --> r0 := @this: com.mopub.mobileads.RepeatingHandlerRunnable
<com.mopub.mobileads.VastVideoViewProgressRunnable: void doWork()> --> r0 := @this: com.mopub.mobileads.VastVideoViewProgressRunnable
<com.mopub.mobileads.VastMacroHelper: com.mopub.mobileads.VastMacroHelper withAssetUri(java.lang.String)> --> r0 := @this: com.mopub.mobileads.VastMacroHelper
<com.mopub.mobileads.VastMacroHelper: com.mopub.mobileads.VastMacroHelper withAssetUri(java.lang.String)> --> $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "UTF-8")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("HEAD")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.ReverseGeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.ReverseGeocodeTask
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> r1 := @this: com.appdlab.radarexpress.ReverseGeocodeTask
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> $d0 = virtualinvoke $r0.<com.appdlab.radarexpress.SimpleLocation: double getLatitude()>()
<com.appdlab.radarexpress.ReverseGeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(com.appdlab.radarexpress.SimpleLocation[])> --> r14 := @caughtexception
<org.geonames.j: java.util.List b(org.geonames.d)> --> $r0 := @parameter0: org.geonames.d
<org.geonames.j: java.util.List b(org.geonames.d)> --> $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "UTF8")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$2$1: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$2$1
<com.appdlab.radarexpress.MainActivity$2$1: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$2$1
<com.appdlab.radarexpress.SavedLocationsFile$Utils: void saveFile(android.content.Context,com.appdlab.radarexpress.SavedLocationsFile)> --> $r0 := @parameter0: android.content.Context
<com.appdlab.radarexpress.LocalPersistence: void writeObjectToFile(android.content.Context,java.lang.Object,java.lang.String)> --> $r4 := @parameter0: android.content.Context
<com.appdlab.radarexpress.LocalPersistence: void writeObjectToFile(android.content.Context,java.lang.Object,java.lang.String)> --> $r7 = virtualinvoke $r4.<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>("SavedLocationsFile.dat", 0)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r9 = virtualinvoke $r5.<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)>(r8, 1)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.jdom.Element e(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r4 = virtualinvoke $r10.<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)>($r2)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r9 = virtualinvoke $r5.<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)>(r8, 1)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r4, "UTF8")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r9 = virtualinvoke $r5.<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)>(r8, 1)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: java.util.List a(org.geonames.d)> --> $r1 := @parameter0: org.geonames.d
<org.geonames.j: java.util.List a(org.geonames.d)> --> $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF8")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.squareup.okhttp.internal.b.c: void setRequestMethod(java.lang.String)> --> r0 := @this: com.squareup.okhttp.internal.b.c
<com.squareup.okhttp.internal.b.a: void setRequestMethod(java.lang.String)> --> r1 := @this: com.squareup.okhttp.internal.b.a
<com.squareup.okhttp.internal.b.a: void setRequestMethod(java.lang.String)> --> virtualinvoke r2.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("HEAD")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r9 = virtualinvoke $r5.<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)>(r8, 1)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r4, "UTF8")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("launch_count", $l0)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.jdom.Element e(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r6 = virtualinvoke $r5.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.mopub.volley.ExecutorDelivery$a: void run()> --> r0 := @this: com.mopub.volley.ExecutorDelivery$a
<com.mopub.volley.CacheDispatcher$1: void run()> --> r2 := @this: com.mopub.volley.CacheDispatcher$1
<com.mopub.volley.CacheDispatcher: void <clinit>()> --> nop
<com.mopub.volley.VolleyLog: void <clinit>()> --> nop
<com.mopub.volley.VolleyLog: void <clinit>()> --> $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>($r0, 2)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r4, "UTF8")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.f$1: void run()> --> r0 := @this: com.facebook.ads.internal.f$1
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.l.a$b: void run()> --> r0 := @this: com.facebook.ads.internal.l.a$b
<com.facebook.ads.internal.l.a: com.facebook.ads.internal.l.b a(android.view.View,int)> --> $r0 := @parameter0: android.view.View
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $z0 = virtualinvoke $r3.<android.os.PowerManager: boolean isInteractive()>()
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r4 := @caughtexception
<com.facebook.ads.internal.k.p: com.facebook.ads.internal.h.p a(java.lang.Exception,android.content.Context)> --> $r3 := @parameter0: java.lang.Exception
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> $r1 := @parameter0: com.facebook.ads.internal.h.p
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> $r3 = staticinvoke <com.facebook.ads.internal.k.p: org.json.JSONObject a(com.facebook.ads.internal.h.p)>($r1)
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> $r8 := @caughtexception
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "Failed to store crash", $r8)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.squareup.okhttp.internal.b.b: int getResponseCode()> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.b.b: com.squareup.okhttp.internal.http.h d()> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.b.b: boolean a(boolean)> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.b.b: boolean a(boolean)> --> $r1 = r0.<com.squareup.okhttp.internal.b.b: com.squareup.okhttp.internal.http.h c>
<com.squareup.okhttp.internal.b.b: boolean a(boolean)> --> $r7 := @caughtexception
<com.squareup.okhttp.internal.b.b: boolean a(boolean)> --> $r1 = r0.<com.squareup.okhttp.internal.b.b: com.squareup.okhttp.internal.http.h c>
<com.squareup.okhttp.internal.http.h: com.squareup.okhttp.internal.http.h a(com.squareup.okhttp.internal.http.RouteException)> --> r0 := @this: com.squareup.okhttp.internal.http.h
<com.squareup.okhttp.internal.b.b: boolean a(boolean)> --> $r1 = virtualinvoke $r1.<com.squareup.okhttp.internal.http.h: com.squareup.okhttp.internal.http.h a(com.squareup.okhttp.internal.http.RouteException)>($r7)
<com.squareup.okhttp.internal.b.b: boolean a(boolean)> --> r0.<com.squareup.okhttp.internal.b.b: com.squareup.okhttp.internal.http.h c> = $r1
<com.squareup.okhttp.internal.b.b: boolean a(boolean)> --> $r1 = r0.<com.squareup.okhttp.internal.b.b: com.squareup.okhttp.internal.http.h c>
<com.squareup.okhttp.internal.http.h: com.squareup.okhttp.internal.http.h a(com.squareup.okhttp.internal.http.RouteException)> --> r0 := @this: com.squareup.okhttp.internal.http.h
<com.squareup.okhttp.internal.http.h: com.squareup.okhttp.internal.http.q j()> --> r1 := @this: com.squareup.okhttp.internal.http.h
<com.squareup.okhttp.internal.http.h: com.squareup.okhttp.internal.http.q j()> --> if $r3 == null goto $r4 = r1.<com.squareup.okhttp.internal.http.h: com.squareup.okhttp.x l>
<com.squareup.okhttp.internal.http.h: com.squareup.okhttp.internal.http.h a(com.squareup.okhttp.internal.http.RouteException)> --> $r5 = virtualinvoke r0.<com.squareup.okhttp.internal.http.h: com.squareup.okhttp.internal.http.q j()>()
<com.squareup.okhttp.internal.b.b: boolean a(boolean)> --> $r1 = virtualinvoke $r1.<com.squareup.okhttp.internal.http.h: com.squareup.okhttp.internal.http.h a(com.squareup.okhttp.internal.http.RouteException)>($r7)
<com.squareup.okhttp.internal.b.b: boolean a(boolean)> --> $r5 := @caughtexception
<com.squareup.okhttp.internal.http.h: com.squareup.okhttp.internal.http.q j()> --> r1 := @this: com.squareup.okhttp.internal.http.h
<com.squareup.okhttp.internal.h: void a(java.io.Closeable)> --> $r1 := @parameter0: java.io.Closeable
<com.squareup.okhttp.internal.http.e$b: void close()> --> r0 := @this: com.squareup.okhttp.internal.http.e$b
<a.n: a.d b(java.lang.String)> --> r1 := @this: a.n
<a.n: a.d x()> --> r1 := @this: a.n
<a.a$1: void a_(a.c,long)> --> r2 := @this: a.a$1
<a.a: void c()> --> r0 := @this: a.a
<a.a: void a(a.a,long,boolean)> --> $r0 := @parameter0: a.a
<a.a: void a(a.a,long,boolean)> --> $r2 = new a.a
<a.a: void a(a.a,long,boolean)> --> <a.a: a.a b> = $r2
<a.a: void c()> --> staticinvoke <a.a: void a(a.a,long,boolean)>(r0, $l0, $z0)
<a.a$2: long a(a.c,long)> --> virtualinvoke $r2.<a.a: void a(boolean)>(0)
<a.a: a.a e()> --> if $i4 < 0 goto return null
<a.a: a.a e()> --> $r0 = <a.a: a.a b>
<a.a$a: void run()> --> $r1 = staticinvoke <a.a: a.a e()>()
<a.m$3: void a()> --> r0 := @this: a.m$3
<a.m$3: void a()> --> virtualinvoke $r1.<java.net.Socket: void close()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.jdom.Element e(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream a(java.lang.String,java.lang.String,int,java.io.IOException)> --> $r1 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream a(java.lang.String,java.lang.String,int,java.io.IOException)> --> $r9 = virtualinvoke $r8.<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)>($r7)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> $r3 = (java.lang.String[]) $r2
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r8 = $r4[0]
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.jdom.Element e(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream d(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream a(java.lang.String,java.lang.String,int,java.io.IOException)> --> $r1 := @parameter0: java.lang.String
<org.geonames.j: java.io.InputStream a(java.lang.String,java.lang.String,int,java.io.IOException)> --> $r9 = virtualinvoke $r8.<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)>($r7)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.squareup.okhttp.internal.b.b: int getResponseCode()> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.b.b: com.squareup.okhttp.internal.http.h d()> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.b.b: boolean a(boolean)> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.b.b: boolean a(boolean)> --> $r1 = r0.<com.squareup.okhttp.internal.b.b: com.squareup.okhttp.internal.http.h c>
<com.squareup.okhttp.internal.b.b: boolean a(boolean)> --> $r5 := @caughtexception
<com.squareup.okhttp.internal.http.h: com.squareup.okhttp.internal.http.q j()> --> r1 := @this: com.squareup.okhttp.internal.http.h
<com.squareup.okhttp.internal.h: void a(java.io.Closeable)> --> $r1 := @parameter0: java.io.Closeable
<com.squareup.okhttp.y: void close()> --> r1 := @this: com.squareup.okhttp.y
<a.o: void close()> --> r0 := @this: a.o
<com.squareup.okhttp.internal.http.e$c: void close()> --> r0 := @this: com.squareup.okhttp.internal.http.e$c
<com.squareup.okhttp.internal.h: boolean a(a.t,int,java.util.concurrent.TimeUnit)> --> $r2 := @parameter0: a.t
<com.squareup.okhttp.internal.h: boolean b(a.t,int,java.util.concurrent.TimeUnit)> --> $r1 := @parameter0: a.t
<com.squareup.okhttp.internal.http.h$2: long a(a.c,long)> --> r0 := @this: com.squareup.okhttp.internal.http.h$2
<a.o: long a(a.c,long)> --> r1 := @this: a.o
<com.squareup.okhttp.internal.a.i$a: long a(a.c,long)> --> r0 := @this: com.squareup.okhttp.internal.a.i$a
<a.o: void i(long)> --> r1 := @this: a.o
<a.o: void i(long)> --> $r3 = new java.lang.IllegalStateException
<com.squareup.okhttp.internal.a.i$c: boolean a(com.squareup.okhttp.internal.a.b$a)> --> interfaceinvoke $r3.<a.e: void i(long)>($l5)
<com.squareup.okhttp.internal.a.d$c: void a()> --> $z0 = interfaceinvoke $r7.<com.squareup.okhttp.internal.a.b: boolean a(com.squareup.okhttp.internal.a.b$a)>(r4)
<com.squareup.okhttp.internal.a.d$c: void a()> --> $r8 = <com.squareup.okhttp.internal.a.a: com.squareup.okhttp.internal.a.a a>
<com.squareup.okhttp.internal.a.d$c: void a()> --> $r9 := @caughtexception
<com.squareup.okhttp.internal.a.d: void a(com.squareup.okhttp.internal.a.d,com.squareup.okhttp.internal.a.a,com.squareup.okhttp.internal.a.a)> --> $r0 := @parameter0: com.squareup.okhttp.internal.a.d
<com.squareup.okhttp.internal.a.d: void a(com.squareup.okhttp.internal.a.a,com.squareup.okhttp.internal.a.a)> --> r0 := @this: com.squareup.okhttp.internal.a.d
<com.squareup.okhttp.internal.a.d: void a(com.squareup.okhttp.internal.a.a,com.squareup.okhttp.internal.a.a)> --> $r5 := @caughtexception
<com.squareup.okhttp.internal.a.d: void a(com.squareup.okhttp.internal.a.a,com.squareup.okhttp.internal.a.a)> --> virtualinvoke r15.<java.net.Socket: void close()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.squareup.okhttp.internal.b.b: int getResponseCode()> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.b.b: com.squareup.okhttp.internal.http.h d()> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.b.b: boolean a(boolean)> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.b.b: boolean a(boolean)> --> $r1 = r0.<com.squareup.okhttp.internal.b.b: com.squareup.okhttp.internal.http.h c>
<com.squareup.okhttp.internal.b.b: boolean a(boolean)> --> $r5 := @caughtexception
<com.squareup.okhttp.internal.http.h: com.squareup.okhttp.internal.http.q j()> --> r1 := @this: com.squareup.okhttp.internal.http.h
<com.squareup.okhttp.internal.h: void a(java.io.Closeable)> --> $r1 := @parameter0: java.io.Closeable
<com.squareup.okhttp.y: void close()> --> r1 := @this: com.squareup.okhttp.y
<a.o: void close()> --> r0 := @this: a.o
<a.o: void close()> --> r0 := @this: a.o
<com.squareup.okhttp.internal.http.e$c: void close()> --> r0 := @this: com.squareup.okhttp.internal.http.e$c
<com.squareup.okhttp.internal.h: boolean a(a.t,int,java.util.concurrent.TimeUnit)> --> $r2 := @parameter0: a.t
<com.squareup.okhttp.internal.h: boolean b(a.t,int,java.util.concurrent.TimeUnit)> --> $r1 := @parameter0: a.t
<com.squareup.okhttp.internal.http.h$2: long a(a.c,long)> --> r0 := @this: com.squareup.okhttp.internal.http.h$2
<a.o: long a(a.c,long)> --> r1 := @this: a.o
<com.squareup.okhttp.internal.a.i$a: long a(a.c,long)> --> r0 := @this: com.squareup.okhttp.internal.a.i$a
<a.o: void i(long)> --> r1 := @this: a.o
<a.o: void i(long)> --> $r3 = new java.lang.IllegalStateException
<com.squareup.okhttp.internal.a.i$c: boolean a(com.squareup.okhttp.internal.a.b$a)> --> interfaceinvoke $r3.<a.e: void i(long)>($l5)
<com.squareup.okhttp.internal.a.d$c: void a()> --> $z0 = interfaceinvoke $r7.<com.squareup.okhttp.internal.a.b: boolean a(com.squareup.okhttp.internal.a.b$a)>(r4)
<com.squareup.okhttp.internal.a.d$c: void a()> --> $r8 = <com.squareup.okhttp.internal.a.a: com.squareup.okhttp.internal.a.a a>
<com.squareup.okhttp.internal.a.d$c: void a()> --> $r9 := @caughtexception
<com.squareup.okhttp.internal.a.d: void a(com.squareup.okhttp.internal.a.d,com.squareup.okhttp.internal.a.a,com.squareup.okhttp.internal.a.a)> --> $r0 := @parameter0: com.squareup.okhttp.internal.a.d
<com.squareup.okhttp.internal.a.d: void a(com.squareup.okhttp.internal.a.a,com.squareup.okhttp.internal.a.a)> --> r0 := @this: com.squareup.okhttp.internal.a.d
<com.squareup.okhttp.internal.a.d: void a(com.squareup.okhttp.internal.a.a,com.squareup.okhttp.internal.a.a)> --> $r5 := @caughtexception
<com.squareup.okhttp.internal.a.d: void a(com.squareup.okhttp.internal.a.a,com.squareup.okhttp.internal.a.a)> --> virtualinvoke r15.<java.net.Socket: void close()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> $i0 = virtualinvoke $r3.<java.net.HttpURLConnection: int getResponseCode()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> $i0 = virtualinvoke $r3.<java.net.HttpURLConnection: int getResponseCode()>()
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r4, "UTF8")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r9 = virtualinvoke $r5.<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)>(r8, 1)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r4, "UTF8")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r9 = virtualinvoke $r5.<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)>(r8, 1)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r4, "UTF8")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.GeocodeTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> r3 := @this: com.appdlab.radarexpress.GeocodeTask
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0)
<com.appdlab.radarexpress.GeocodeTask: com.appdlab.radarexpress.SimpleLocation doInBackground(java.lang.String[])> --> $r1 := @caughtexception
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r3 := @parameter0: org.geonames.h
<org.geonames.j: org.geonames.i a(org.geonames.h)> --> $r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r4, "UTF8")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("date_firstlaunch", $l1)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("date_firstlaunch", $l1)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.f$1: void run()> --> r0 := @this: com.facebook.ads.internal.f$1
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.l.a$b: void run()> --> r0 := @this: com.facebook.ads.internal.l.a$b
<com.facebook.ads.internal.l.a: com.facebook.ads.internal.l.b a(android.view.View,int)> --> $r0 := @parameter0: android.view.View
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r1, "Invalid context in screen interactive check, assuming interactive.")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.f$1: void run()> --> r0 := @this: com.facebook.ads.internal.f$1
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.l.a$b: void run()> --> r0 := @this: com.facebook.ads.internal.l.a$b
<com.facebook.ads.internal.l.a: com.facebook.ads.internal.l.b a(android.view.View,int)> --> $r0 := @parameter0: android.view.View
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power")
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r4 := @caughtexception
<com.facebook.ads.internal.k.p: com.facebook.ads.internal.h.p a(java.lang.Exception,android.content.Context)> --> $r3 := @parameter0: java.lang.Exception
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> $r1 := @parameter0: com.facebook.ads.internal.h.p
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r6)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.f$1: void run()> --> r0 := @this: com.facebook.ads.internal.f$1
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.l.a$b: void run()> --> r0 := @this: com.facebook.ads.internal.l.a$b
<com.facebook.ads.internal.l.a: com.facebook.ads.internal.l.b a(android.view.View,int)> --> $r0 := @parameter0: android.view.View
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r1, "Invalid context in screen interactive check, assuming interactive.")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.f$1: void run()> --> r0 := @this: com.facebook.ads.internal.f$1
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.l.a$b: void run()> --> r0 := @this: com.facebook.ads.internal.l.a$b
<com.facebook.ads.internal.l.a: com.facebook.ads.internal.l.b a(android.view.View,int)> --> $r0 := @parameter0: android.view.View
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $z0 = virtualinvoke $r3.<android.os.PowerManager: boolean isInteractive()>()
<com.facebook.ads.internal.k.q: boolean b(android.content.Context)> --> $r4 := @caughtexception
<com.facebook.ads.internal.k.p: com.facebook.ads.internal.h.p a(java.lang.Exception,android.content.Context)> --> $r3 := @parameter0: java.lang.Exception
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> $r1 := @parameter0: com.facebook.ads.internal.h.p
<com.facebook.ads.internal.k.p: void a(com.facebook.ads.internal.h.p,android.content.Context)> --> virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r6)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.squareup.okhttp.internal.b.b: int getResponseCode()> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.b.b: com.squareup.okhttp.internal.http.h d()> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.b.b: boolean a(boolean)> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.b.b: boolean a(boolean)> --> $r1 = r0.<com.squareup.okhttp.internal.b.b: com.squareup.okhttp.internal.http.h c>
<com.squareup.okhttp.internal.b.b: boolean a(boolean)> --> $r5 := @caughtexception
<com.squareup.okhttp.internal.http.h: com.squareup.okhttp.internal.http.q j()> --> r1 := @this: com.squareup.okhttp.internal.http.h
<com.squareup.okhttp.internal.h: void a(java.io.Closeable)> --> $r1 := @parameter0: java.io.Closeable
<com.squareup.okhttp.internal.http.e$b: void close()> --> r0 := @this: com.squareup.okhttp.internal.http.e$b
<a.n: a.d b(java.lang.String)> --> r1 := @this: a.n
<a.n: a.d x()> --> r1 := @this: a.n
<a.m$1: void a_(a.c,long)> --> r0 := @this: a.m$1
<a.m$1: void a_(a.c,long)> --> virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>($r5, $i4, $i3)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.appdlab.radarexpress.MainActivity$PingServerTask: boolean isMyServerDown()> --> r1 := @this: com.appdlab.radarexpress.MainActivity$PingServerTask
<com.squareup.okhttp.internal.b.b: int getResponseCode()> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.b.b: com.squareup.okhttp.internal.http.h d()> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.b.b: boolean a(boolean)> --> r0 := @this: com.squareup.okhttp.internal.b.b
<com.squareup.okhttp.internal.b.b: boolean a(boolean)> --> $r1 = r0.<com.squareup.okhttp.internal.b.b: com.squareup.okhttp.internal.http.h c>
<com.squareup.okhttp.internal.b.b: boolean a(boolean)> --> $r5 := @caughtexception
<com.squareup.okhttp.internal.http.h: com.squareup.okhttp.internal.http.q j()> --> r1 := @this: com.squareup.okhttp.internal.http.h
<com.squareup.okhttp.internal.h: void a(java.io.Closeable)> --> $r1 := @parameter0: java.io.Closeable
<com.squareup.okhttp.internal.http.e$b: void close()> --> r0 := @this: com.squareup.okhttp.internal.http.e$b
<a.n: a.d b(java.lang.String)> --> r1 := @this: a.n
<a.n: a.d x()> --> r1 := @this: a.n
<a.m$1: void a_(a.c,long)> --> r0 := @this: a.m$1
<a.m$1: void a_(a.c,long)> --> virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>($r5, $i4, $i3)
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r3 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.f$1: void run()> --> r0 := @this: com.facebook.ads.internal.f$1
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.l.a$b: void run()> --> r0 := @this: com.facebook.ads.internal.l.a$b
<com.facebook.ads.internal.l.a: com.facebook.ads.internal.l.b a(android.view.View,int)> --> $r0 := @parameter0: android.view.View
<com.facebook.ads.internal.k.ap: boolean a(java.util.Map)> --> $r0 := @parameter0: java.util.Map
<com.facebook.ads.internal.k.ap: boolean a(java.util.Map)> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r2, "Invalid Window info in window interactive check, assuming not obstructed by Keyguard.")
--------------------------------------------------------

<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> $r4 = virtualinvoke $r1.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r3 == null goto (branch)
<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()> --> if $r4 == null goto return null
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> $r2 = virtualinvoke $r1.<com.appdlab.radarexpress.LocationResolver: android.location.Location getLastKnownLocation()>()
<com.appdlab.radarexpress.MainActivity: void getLastKnownLocation()> --> if $r2 == null goto $r1 = r0.<com.appdlab.radarexpress.MainActivity: com.appdlab.radarexpress.LocationResolver mLocationResolver>
<com.appdlab.radarexpress.MainActivity: void initMap(com.appdlab.radarexpress.SimpleLocation)> --> r0 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.MainActivity: void executeReverseGeocodeTask(com.appdlab.radarexpress.SimpleLocation)> --> r2 := @this: com.appdlab.radarexpress.MainActivity
<com.appdlab.radarexpress.Utils: void execute(android.os.AsyncTask,java.lang.Object[])> --> $r0 := @parameter0: android.os.AsyncTask
<com.appdlab.radarexpress.AppRater: java.lang.Object doInBackground(java.lang.Object[])> --> r1 := @this: com.appdlab.radarexpress.AppRater
<com.appdlab.radarexpress.AppRater: java.lang.Void doInBackground(java.lang.Void[])> --> r0 := @this: com.appdlab.radarexpress.AppRater
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.f$1: void run()> --> r0 := @this: com.facebook.ads.internal.f$1
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.facebook.ads.internal.l.a$b: void run()> --> r0 := @this: com.facebook.ads.internal.l.a$b
<com.facebook.ads.internal.l.a: com.facebook.ads.internal.l.b a(android.view.View,int)> --> $r0 := @parameter0: android.view.View
<com.facebook.ads.internal.k.ap: boolean a(java.util.Map)> --> $r0 := @parameter0: java.util.Map
<com.facebook.ads.internal.k.ap: boolean a(java.util.Map)> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r2, "Invalid Window info in window interactive check, assuming not obstructed by Keyguard.")
--------------------------------------------------------

