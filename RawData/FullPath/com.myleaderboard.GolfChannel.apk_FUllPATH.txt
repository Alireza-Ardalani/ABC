<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $d0 = virtualinvoke $r5.<android.location.Location: double getLatitude()>()
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> $r4 = virtualinvoke $r3.<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()>()
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> if $r4 == null goto interfaceinvoke $r1.<com.gimbal.proximity.a: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.gimbal.internal.location.services.d$1: void a(int,java.lang.String)> --> r0 := @this: com.gimbal.internal.location.services.d$1
<com.gimbal.c.b: void d(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.c.b
<org.slf4j.impl.AndroidLogger: void warn(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<com.gimbal.logging.util.LogCapture: void capture(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)> --> $r1 := @parameter0: java.lang.String
<com.gimbal.logging.util.LogCapture: void stack(com.gimbal.logging.util.LogCapture$LogEntry,java.lang.Throwable)> --> $r2 := @parameter0: com.gimbal.logging.util.LogCapture$LogEntry
<com.gimbal.logging.util.LogCapture: void stack(com.gimbal.logging.util.LogCapture$LogEntry,java.lang.Throwable)> --> $r12 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
<com.gimbal.logging.util.LogCapture: void stack(com.gimbal.logging.util.LogCapture$LogEntry,java.lang.Throwable)> --> $r1 := @caughtexception
<com.gimbal.logging.util.LogCapture: void stack(com.gimbal.logging.util.LogCapture$LogEntry,java.lang.Throwable)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Log Capture", "Unable to capture stack")
--------------------------------------------------------

<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $d0 = virtualinvoke $r5.<android.location.Location: double getLatitude()>()
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> $r4 = virtualinvoke $r3.<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()>()
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> if $r4 == null goto interfaceinvoke $r1.<com.gimbal.proximity.a: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.a,com.gimbal.proximity.a)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.e: com.qsl.faar.protocol.GeoCircle c()> --> r0 := @this: com.qsl.faar.service.b.e
<com.gimbal.internal.cache.a: java.lang.Object a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.a
<com.gimbal.internal.cache.d: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.d
<com.a.a.c.d: void a(java.lang.String,com.gimbal.internal.cache.CacheEntry)> --> r0 := @this: com.a.a.c.d
<com.a.a.c.d: void a(java.lang.String,com.gimbal.internal.cache.CacheEntry)> --> interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r1, $r4)
--------------------------------------------------------

<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $d1 = virtualinvoke $r5.<android.location.Location: double getLongitude()>()
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> $r4 = virtualinvoke $r3.<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()>()
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> if $r4 == null goto interfaceinvoke $r1.<com.gimbal.proximity.a: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.a,com.gimbal.proximity.a)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.e: com.qsl.faar.protocol.GeoCircle c()> --> r0 := @this: com.qsl.faar.service.b.e
<com.gimbal.internal.cache.a: java.lang.Object a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.a
<com.gimbal.internal.cache.d: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.d
<com.a.a.c.d: void a(java.lang.String,com.gimbal.internal.cache.CacheEntry)> --> r0 := @this: com.a.a.c.d
<com.gimbal.internal.cache.b: java.lang.String a(com.gimbal.internal.cache.CacheEntry)> --> r0 := @this: com.gimbal.internal.cache.b
<com.gimbal.internal.cache.b: java.lang.String a(com.gimbal.internal.cache.CacheEntry)> --> $r3 = r0.<com.gimbal.internal.cache.b: com.gimbal.internal.json.JsonMapper b>
<com.gimbal.internal.cache.b: java.lang.String a(com.gimbal.internal.cache.CacheEntry)> --> $r4 := @caughtexception
<com.gimbal.c.b: void e(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.c.b
<org.slf4j.impl.AndroidLogger: void error(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<com.gimbal.logging.util.LogCapture: void capture(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)> --> $r1 := @parameter0: java.lang.String
<com.gimbal.logging.util.LogCapture: void logLine(com.gimbal.logging.util.LogCapture$LogEntry)> --> $r0 := @parameter0: com.gimbal.logging.util.LogCapture$LogEntry
<com.gimbal.logging.util.LogCapture: void saveLine(java.lang.String)> --> $r2 := @parameter0: java.lang.String
<com.gimbal.logging.util.LogCapture: void saveLine(java.lang.String)> --> virtualinvoke $r3.<java.io.OutputStream: void write(byte[])>($r0)
--------------------------------------------------------

<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r5 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> if $r5 == null goto exitmonitor r0
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r1 = new com.qsl.faar.service.location.a
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> $r4 = virtualinvoke $r3.<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()>()
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> if $r4 == null goto interfaceinvoke $r1.<com.gimbal.proximity.a: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.a,com.gimbal.proximity.a)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.e: com.qsl.faar.protocol.GeoCircle c()> --> r0 := @this: com.qsl.faar.service.b.e
<com.gimbal.internal.cache.a: java.lang.Object a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.a
<com.gimbal.internal.cache.d: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.d
<com.a.a.c.d: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> r0 := @this: com.a.a.c.d
<com.a.a.c.d: com.gimbal.internal.cache.CacheEntry c(java.lang.String)> --> r0 := @this: com.a.a.c.d
<com.gimbal.internal.cache.b: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.b
<com.gimbal.internal.cache.b: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> $r3 = r0.<com.gimbal.internal.cache.b: com.gimbal.internal.json.JsonMapper b>
<com.gimbal.internal.cache.b: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> $r5 := @caughtexception
<com.gimbal.c.b: void e(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.c.b
<org.slf4j.impl.AndroidLogger: void error(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<org.slf4j.impl.AndroidLogger: void error(java.lang.String,java.lang.Object[])> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, $r4)
--------------------------------------------------------

<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $d1 = virtualinvoke $r5.<android.location.Location: double getLongitude()>()
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> $r4 = virtualinvoke $r3.<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()>()
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> if $r4 == null goto interfaceinvoke $r1.<com.gimbal.proximity.a: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.a,com.gimbal.proximity.a)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.e: com.qsl.faar.protocol.GeoCircle c()> --> r0 := @this: com.qsl.faar.service.b.e
<com.gimbal.internal.cache.a: java.lang.Object a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.a
<com.gimbal.internal.cache.d: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.d
<com.a.a.c.d: void a(java.lang.String,com.gimbal.internal.cache.CacheEntry)> --> r0 := @this: com.a.a.c.d
<com.gimbal.internal.cache.b: java.lang.String a(com.gimbal.internal.cache.CacheEntry)> --> r0 := @this: com.gimbal.internal.cache.b
<com.gimbal.internal.cache.b: java.lang.String a(com.gimbal.internal.cache.CacheEntry)> --> $r3 = r0.<com.gimbal.internal.cache.b: com.gimbal.internal.json.JsonMapper b>
<com.gimbal.internal.cache.b: java.lang.String a(com.gimbal.internal.cache.CacheEntry)> --> $r4 := @caughtexception
<com.gimbal.c.b: void e(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.c.b
<org.slf4j.impl.AndroidLogger: void error(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<com.gimbal.logging.util.LogCapture: void capture(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)> --> $r1 := @parameter0: java.lang.String
<com.gimbal.logging.util.LogCapture: void logLine(com.gimbal.logging.util.LogCapture$LogEntry)> --> $r0 := @parameter0: com.gimbal.logging.util.LogCapture$LogEntry
<com.gimbal.logging.util.LogCapture: void saveLine(java.lang.String)> --> $r2 := @parameter0: java.lang.String
<com.gimbal.logging.util.LogCapture: void saveLine(java.lang.String)> --> virtualinvoke $r3.<java.io.OutputStream: void write(byte[])>($r0)
--------------------------------------------------------

<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $d0 = virtualinvoke $r5.<android.location.Location: double getLatitude()>()
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> $r4 = virtualinvoke $r3.<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()>()
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> if $r4 == null goto interfaceinvoke $r1.<com.gimbal.proximity.a: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.a,com.gimbal.proximity.a)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.e: com.qsl.faar.protocol.GeoCircle c()> --> r0 := @this: com.qsl.faar.service.b.e
<com.gimbal.internal.cache.a: java.lang.Object a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.a
<com.gimbal.internal.cache.d: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.d
<com.a.a.c.d: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> r0 := @this: com.a.a.c.d
<com.a.a.c.d: com.gimbal.internal.cache.CacheEntry c(java.lang.String)> --> r0 := @this: com.a.a.c.d
<com.a.a.c.d: com.gimbal.internal.cache.CacheEntry c(java.lang.String)> --> $r1 = r0.<com.a.a.c.d: com.gimbal.internal.cache.b c>
<com.gimbal.internal.cache.b: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.b
<com.gimbal.internal.cache.b: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> $r3 = r0.<com.gimbal.internal.cache.b: com.gimbal.internal.json.JsonMapper b>
<com.gimbal.internal.cache.b: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> $r5 := @caughtexception
<com.gimbal.c.b: void e(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.c.b
<org.slf4j.impl.AndroidLogger: void error(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<com.gimbal.logging.util.LogCapture: void capture(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)> --> $r1 := @parameter0: java.lang.String
<com.gimbal.logging.util.LogCapture: void logLine(com.gimbal.logging.util.LogCapture$LogEntry)> --> $r0 := @parameter0: com.gimbal.logging.util.LogCapture$LogEntry
<com.gimbal.logging.util.LogCapture: void saveLine(java.lang.String)> --> $r2 := @parameter0: java.lang.String
<com.gimbal.logging.util.LogCapture: void saveLine(java.lang.String)> --> virtualinvoke $r3.<java.io.OutputStream: void write(byte[])>($r0)
--------------------------------------------------------

<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r5 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> if $r5 == null goto exitmonitor r0
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r1 = new com.qsl.faar.service.location.a
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> $r4 = virtualinvoke $r3.<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()>()
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> if $r4 == null goto interfaceinvoke $r1.<com.gimbal.proximity.a: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.a,com.gimbal.proximity.a)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.d: void b(com.qsl.faar.service.location.a,com.gimbal.proximity.a)> --> r0 := @this: com.qsl.faar.service.b.d
<com.gimbal.internal.location.services.d$1: void a(int,java.lang.String)> --> r0 := @this: com.gimbal.internal.location.services.d$1
<com.gimbal.c.b: void d(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.c.b
<org.slf4j.impl.AndroidLogger: void warn(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<com.gimbal.logging.util.LogCapture: void capture(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)> --> $r1 := @parameter0: java.lang.String
<com.gimbal.logging.util.LogCapture: void logLine(com.gimbal.logging.util.LogCapture$LogEntry)> --> $r0 := @parameter0: com.gimbal.logging.util.LogCapture$LogEntry
<com.gimbal.logging.util.LogCapture: void saveLine(java.lang.String)> --> $r2 := @parameter0: java.lang.String
<com.gimbal.logging.util.LogCapture: void saveLine(java.lang.String)> --> virtualinvoke $r3.<java.io.OutputStream: void write(byte[])>($r0)
--------------------------------------------------------

<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $d1 = virtualinvoke $r5.<android.location.Location: double getLongitude()>()
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> $r4 = virtualinvoke $r3.<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()>()
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> if $r4 == null goto interfaceinvoke $r1.<com.gimbal.proximity.a: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.a,com.gimbal.proximity.a)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.e: com.qsl.faar.protocol.GeoCircle c()> --> r0 := @this: com.qsl.faar.service.b.e
<com.gimbal.internal.cache.a: java.lang.Object a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.a
<com.gimbal.internal.cache.d: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.d
<com.a.a.c.d: void a(java.lang.String,com.gimbal.internal.cache.CacheEntry)> --> r0 := @this: com.a.a.c.d
<com.gimbal.internal.cache.b: java.lang.String a(com.gimbal.internal.cache.CacheEntry)> --> r0 := @this: com.gimbal.internal.cache.b
<com.gimbal.internal.cache.b: java.lang.String a(com.gimbal.internal.cache.CacheEntry)> --> $r3 = r0.<com.gimbal.internal.cache.b: com.gimbal.internal.json.JsonMapper b>
<com.gimbal.internal.cache.b: java.lang.String a(com.gimbal.internal.cache.CacheEntry)> --> $r4 := @caughtexception
<com.gimbal.c.b: void e(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.c.b
<org.slf4j.impl.AndroidLogger: void error(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<com.gimbal.logging.util.LogCapture: void capture(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)> --> $r1 := @parameter0: java.lang.String
<com.gimbal.logging.util.LogCapture: void stack(com.gimbal.logging.util.LogCapture$LogEntry,java.lang.Throwable)> --> $r2 := @parameter0: com.gimbal.logging.util.LogCapture$LogEntry
<com.gimbal.logging.util.LogCapture: void stack(com.gimbal.logging.util.LogCapture$LogEntry,java.lang.Throwable)> --> $r4 = virtualinvoke $r3.<java.lang.Throwable: java.lang.String getMessage()>()
<com.gimbal.logging.util.LogCapture: void stack(com.gimbal.logging.util.LogCapture$LogEntry,java.lang.Throwable)> --> $r1 := @caughtexception
<com.gimbal.logging.util.LogCapture: void stack(com.gimbal.logging.util.LogCapture$LogEntry,java.lang.Throwable)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Log Capture", "Unable to capture stack")
--------------------------------------------------------

<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $d0 = virtualinvoke $r5.<android.location.Location: double getLatitude()>()
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> $r4 = virtualinvoke $r3.<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()>()
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> if $r4 == null goto interfaceinvoke $r1.<com.gimbal.proximity.a: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.gimbal.internal.location.services.d$1: void a(int,java.lang.String)> --> r0 := @this: com.gimbal.internal.location.services.d$1
<com.gimbal.c.b: void d(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.c.b
<org.slf4j.impl.AndroidLogger: void warn(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<com.gimbal.logging.util.LogCapture: void capture(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)> --> $r1 := @parameter0: java.lang.String
<com.gimbal.logging.util.LogCapture: void logLine(com.gimbal.logging.util.LogCapture$LogEntry)> --> $r0 := @parameter0: com.gimbal.logging.util.LogCapture$LogEntry
<com.gimbal.logging.util.LogCapture: void saveLine(java.lang.String)> --> $r2 := @parameter0: java.lang.String
<com.gimbal.logging.util.LogCapture: void saveLine(java.lang.String)> --> virtualinvoke $r3.<java.io.OutputStream: void write(byte[])>($r0)
--------------------------------------------------------

<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r5 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> if $r5 == null goto exitmonitor r0
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r1 = new com.qsl.faar.service.location.a
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> $r4 = virtualinvoke $r3.<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()>()
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> if $r4 == null goto interfaceinvoke $r1.<com.gimbal.proximity.a: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.a,com.gimbal.proximity.a)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.d: void b(com.qsl.faar.service.location.a,com.gimbal.proximity.a)> --> r0 := @this: com.qsl.faar.service.b.d
<com.gimbal.internal.location.services.d$1: void a(int,java.lang.String)> --> r0 := @this: com.gimbal.internal.location.services.d$1
<com.gimbal.c.b: void d(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.c.b
<org.slf4j.impl.AndroidLogger: void warn(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<com.gimbal.logging.util.LogCapture: void capture(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)> --> $r1 := @parameter0: java.lang.String
<com.gimbal.logging.util.LogCapture: void logLine(com.gimbal.logging.util.LogCapture$LogEntry)> --> $r0 := @parameter0: com.gimbal.logging.util.LogCapture$LogEntry
<com.gimbal.logging.util.LogCapture: void saveLine(java.lang.String)> --> $r2 := @parameter0: java.lang.String
<com.gimbal.logging.util.LogCapture: void saveLine(java.lang.String)> --> virtualinvoke $r3.<java.io.OutputStream: void write(byte[])>($r0)
--------------------------------------------------------

<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $d1 = virtualinvoke $r5.<android.location.Location: double getLongitude()>()
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> $r4 = virtualinvoke $r3.<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()>()
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> if $r4 == null goto interfaceinvoke $r1.<com.gimbal.proximity.a: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.a,com.gimbal.proximity.a)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.e: com.qsl.faar.protocol.GeoCircle c()> --> r0 := @this: com.qsl.faar.service.b.e
<com.gimbal.internal.cache.a: java.lang.Object a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.a
<com.gimbal.internal.cache.d: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.d
<com.gimbal.internal.cache.d: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> $r1 = r0.<com.gimbal.internal.cache.d: com.gimbal.internal.cache.c a>
<com.a.a.c.d: void a(java.lang.String,com.gimbal.internal.cache.CacheEntry)> --> r0 := @this: com.a.a.c.d
<com.a.a.c.d: void a(java.lang.String,com.gimbal.internal.cache.CacheEntry)> --> $r3 = r0.<com.a.a.c.d: com.gimbal.internal.cache.b c>
<com.gimbal.internal.cache.b: java.lang.String a(com.gimbal.internal.cache.CacheEntry)> --> r0 := @this: com.gimbal.internal.cache.b
<com.gimbal.internal.cache.b: java.lang.String a(com.gimbal.internal.cache.CacheEntry)> --> $r3 = r0.<com.gimbal.internal.cache.b: com.gimbal.internal.json.JsonMapper b>
<com.gimbal.internal.cache.b: java.lang.String a(com.gimbal.internal.cache.CacheEntry)> --> $r4 := @caughtexception
<com.gimbal.c.b: void e(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.c.b
<org.slf4j.impl.AndroidLogger: void error(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<org.slf4j.impl.AndroidLogger: void error(java.lang.String,java.lang.Object[])> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, $r4)
--------------------------------------------------------

<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r5 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> if $r5 == null goto exitmonitor r0
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r1 = new com.qsl.faar.service.location.a
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> $r4 = virtualinvoke $r3.<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()>()
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> if $r4 == null goto interfaceinvoke $r1.<com.gimbal.proximity.a: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.a,com.gimbal.proximity.a)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.e: com.qsl.faar.protocol.GeoCircle c()> --> r0 := @this: com.qsl.faar.service.b.e
<com.gimbal.internal.cache.a: java.lang.Object a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.a
<com.gimbal.internal.cache.d: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.d
<com.a.a.c.d: void a(java.lang.String,com.gimbal.internal.cache.CacheEntry)> --> r0 := @this: com.a.a.c.d
<com.a.a.c.d: void a(java.lang.String,com.gimbal.internal.cache.CacheEntry)> --> interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r1, $r4)
--------------------------------------------------------

<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $d1 = virtualinvoke $r5.<android.location.Location: double getLongitude()>()
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> $r4 = virtualinvoke $r3.<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()>()
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> if $r4 == null goto interfaceinvoke $r1.<com.gimbal.proximity.a: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.a,com.gimbal.proximity.a)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.e: com.qsl.faar.protocol.GeoCircle c()> --> r0 := @this: com.qsl.faar.service.b.e
<com.gimbal.internal.cache.a: java.lang.Object a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.a
<com.gimbal.internal.cache.d: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.d
<com.a.a.c.d: void a(java.lang.String,com.gimbal.internal.cache.CacheEntry)> --> r0 := @this: com.a.a.c.d
<com.gimbal.internal.cache.b: java.lang.String a(com.gimbal.internal.cache.CacheEntry)> --> r0 := @this: com.gimbal.internal.cache.b
<com.gimbal.internal.cache.b: java.lang.String a(com.gimbal.internal.cache.CacheEntry)> --> $r3 = r0.<com.gimbal.internal.cache.b: com.gimbal.internal.json.JsonMapper b>
<com.gimbal.internal.cache.b: java.lang.String a(com.gimbal.internal.cache.CacheEntry)> --> $r4 := @caughtexception
<com.gimbal.c.b: void e(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.c.b
<org.slf4j.impl.AndroidLogger: void error(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<com.gimbal.logging.util.LogCapture: void capture(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)> --> $r1 := @parameter0: java.lang.String
<com.gimbal.logging.util.LogCapture: void logLine(com.gimbal.logging.util.LogCapture$LogEntry)> --> $r0 := @parameter0: com.gimbal.logging.util.LogCapture$LogEntry
<com.gimbal.logging.util.LogCapture: void saveLine(java.lang.String)> --> $r2 := @parameter0: java.lang.String
<com.gimbal.logging.util.LogCapture: void saveLine(java.lang.String)> --> virtualinvoke $r3.<java.io.OutputStream: void write(byte[])>($r0)
--------------------------------------------------------

<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $d1 = virtualinvoke $r5.<android.location.Location: double getLongitude()>()
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> $r4 = virtualinvoke $r3.<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()>()
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> if $r4 == null goto interfaceinvoke $r1.<com.gimbal.proximity.a: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.a,com.gimbal.proximity.a)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.e: com.qsl.faar.protocol.GeoCircle c()> --> r0 := @this: com.qsl.faar.service.b.e
<com.gimbal.internal.cache.a: java.lang.Object a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.a
<com.gimbal.internal.cache.d: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.d
<com.a.a.c.d: void a(java.lang.String,com.gimbal.internal.cache.CacheEntry)> --> r0 := @this: com.a.a.c.d
<com.a.a.c.d: void a(java.lang.String,com.gimbal.internal.cache.CacheEntry)> --> interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r1, $r4)
--------------------------------------------------------

<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r5 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> if $r5 == null goto exitmonitor r0
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r1 = new com.qsl.faar.service.location.a
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> $r4 = virtualinvoke $r3.<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()>()
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> if $r4 == null goto interfaceinvoke $r1.<com.gimbal.proximity.a: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.a,com.gimbal.proximity.a)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.d: void b(com.qsl.faar.service.location.a,com.gimbal.proximity.a)> --> r0 := @this: com.qsl.faar.service.b.d
<com.gimbal.internal.location.services.d$1: void a(int,java.lang.String)> --> r0 := @this: com.gimbal.internal.location.services.d$1
<com.gimbal.c.b: void d(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.c.b
<org.slf4j.impl.AndroidLogger: void warn(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<org.slf4j.impl.AndroidLogger: void warn(java.lang.String,java.lang.Object[])> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r3, $r4)
--------------------------------------------------------

<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $d0 = virtualinvoke $r5.<android.location.Location: double getLatitude()>()
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> $r4 = virtualinvoke $r3.<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()>()
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> if $r4 == null goto interfaceinvoke $r1.<com.gimbal.proximity.a: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.a,com.gimbal.proximity.a)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.e: com.qsl.faar.protocol.GeoCircle c()> --> r0 := @this: com.qsl.faar.service.b.e
<com.gimbal.internal.cache.a: java.lang.Object a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.a
<com.gimbal.internal.cache.d: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.d
<com.a.a.c.d: void a(java.lang.String,com.gimbal.internal.cache.CacheEntry)> --> r0 := @this: com.a.a.c.d
<com.gimbal.internal.cache.b: java.lang.String a(com.gimbal.internal.cache.CacheEntry)> --> r0 := @this: com.gimbal.internal.cache.b
<com.gimbal.internal.cache.b: java.lang.String a(com.gimbal.internal.cache.CacheEntry)> --> $r1 = virtualinvoke $r3.<com.gimbal.internal.json.JsonMapper: java.lang.String writeValueAsString(java.lang.Object)>($r2)
<com.gimbal.internal.cache.b: java.lang.String a(com.gimbal.internal.cache.CacheEntry)> --> $r4 := @caughtexception
<com.gimbal.c.b: void e(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.c.b
<org.slf4j.impl.AndroidLogger: void error(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<org.slf4j.impl.AndroidLogger: void error(java.lang.String,java.lang.Object[])> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, $r4)
--------------------------------------------------------

<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r5 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> if $r5 == null goto exitmonitor r0
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r1 = new com.qsl.faar.service.location.a
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> $r4 = virtualinvoke $r3.<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()>()
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> if $r4 == null goto interfaceinvoke $r1.<com.gimbal.proximity.a: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.a,com.gimbal.proximity.a)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.d: void b(com.qsl.faar.service.location.a,com.gimbal.proximity.a)> --> r0 := @this: com.qsl.faar.service.b.d
<com.gimbal.internal.location.services.d$1: void a(int,java.lang.String)> --> r0 := @this: com.gimbal.internal.location.services.d$1
<com.gimbal.internal.location.services.d: void <clinit>()> --> nop
<com.gimbal.internal.d: com.gimbal.c.a a(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.gimbal.c.a: void <init>(java.lang.String)> --> r0 := @this: com.gimbal.c.a
<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()> --> $i0 = <org.slf4j.LoggerFactory: int INITIALIZATION_STATE>
<org.slf4j.impl.StaticLoggerBinder: void <clinit>()> --> nop
<org.slf4j.impl.StaticLoggerBinder: void <init>()> --> r0 := @this: org.slf4j.impl.StaticLoggerBinder
<org.slf4j.impl.StaticLoggerBinder: void <init>()> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("-----", "Using android logger factory")
--------------------------------------------------------

<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r5 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> if $r5 == null goto exitmonitor r0
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r1 = new com.qsl.faar.service.location.a
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> $r4 = virtualinvoke $r3.<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()>()
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> if $r4 == null goto interfaceinvoke $r1.<com.gimbal.proximity.a: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.a,com.gimbal.proximity.a)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.d: void b(com.qsl.faar.service.location.a,com.gimbal.proximity.a)> --> r0 := @this: com.qsl.faar.service.b.d
<com.gimbal.internal.location.services.d$1: void a(int,java.lang.String)> --> r0 := @this: com.gimbal.internal.location.services.d$1
<com.gimbal.c.b: void d(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.c.b
<org.slf4j.impl.AndroidLogger: void warn(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<com.gimbal.logging.util.LogCapture: void capture(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)> --> $r1 := @parameter0: java.lang.String
<com.gimbal.logging.util.LogCapture: void logLine(com.gimbal.logging.util.LogCapture$LogEntry)> --> $r0 := @parameter0: com.gimbal.logging.util.LogCapture$LogEntry
<com.gimbal.logging.util.LogCapture: void saveLine(java.lang.String)> --> $r2 := @parameter0: java.lang.String
<com.gimbal.logging.util.LogCapture: void saveLine(java.lang.String)> --> virtualinvoke $r3.<java.io.OutputStream: void write(byte[])>($r0)
--------------------------------------------------------

<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $d0 = virtualinvoke $r5.<android.location.Location: double getLatitude()>()
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> $r4 = virtualinvoke $r3.<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()>()
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> if $r4 == null goto interfaceinvoke $r1.<com.gimbal.proximity.a: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.a,com.gimbal.proximity.a)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.e: com.qsl.faar.protocol.GeoCircle c()> --> r0 := @this: com.qsl.faar.service.b.e
<com.gimbal.internal.cache.a: java.lang.Object a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.a
<com.gimbal.internal.cache.d: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.d
<com.a.a.c.d: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> r0 := @this: com.a.a.c.d
<com.a.a.c.d: com.gimbal.internal.cache.CacheEntry c(java.lang.String)> --> r0 := @this: com.a.a.c.d
<com.a.a.c.d: com.gimbal.internal.cache.CacheEntry c(java.lang.String)> --> $r1 = r0.<com.a.a.c.d: com.gimbal.internal.cache.b c>
<com.gimbal.internal.cache.b: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.b
<com.gimbal.internal.cache.b: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> $r3 = r0.<com.gimbal.internal.cache.b: com.gimbal.internal.json.JsonMapper b>
<com.gimbal.internal.cache.b: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> $r5 := @caughtexception
<com.gimbal.internal.cache.b: void <clinit>()> --> nop
<com.gimbal.internal.d: com.gimbal.c.b b(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.gimbal.c.b: void <init>(java.lang.String)> --> r0 := @this: com.gimbal.c.b
<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()> --> $i0 = <org.slf4j.LoggerFactory: int INITIALIZATION_STATE>
<org.slf4j.impl.StaticLoggerBinder: void <clinit>()> --> nop
<org.slf4j.impl.StaticLoggerBinder: void <init>()> --> r0 := @this: org.slf4j.impl.StaticLoggerBinder
<org.slf4j.impl.StaticLoggerBinder: void <init>()> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("-----", "Using android logger factory")
--------------------------------------------------------

<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $d1 = virtualinvoke $r5.<android.location.Location: double getLongitude()>()
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> $r4 = virtualinvoke $r3.<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()>()
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> if $r4 == null goto interfaceinvoke $r1.<com.gimbal.proximity.a: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.a,com.gimbal.proximity.a)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.e: com.qsl.faar.protocol.GeoCircle c()> --> r0 := @this: com.qsl.faar.service.b.e
<com.gimbal.internal.cache.a: java.lang.Object a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.a
<com.gimbal.internal.cache.d: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.d
<com.a.a.c.d: void a(java.lang.String,com.gimbal.internal.cache.CacheEntry)> --> r0 := @this: com.a.a.c.d
<com.gimbal.internal.cache.b: java.lang.String a(com.gimbal.internal.cache.CacheEntry)> --> r0 := @this: com.gimbal.internal.cache.b
<com.gimbal.internal.cache.b: java.lang.String a(com.gimbal.internal.cache.CacheEntry)> --> $r3 = r0.<com.gimbal.internal.cache.b: com.gimbal.internal.json.JsonMapper b>
<com.gimbal.internal.cache.b: java.lang.String a(com.gimbal.internal.cache.CacheEntry)> --> $r4 := @caughtexception
<com.gimbal.internal.cache.b: void <clinit>()> --> nop
<com.gimbal.internal.d: com.gimbal.c.b b(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.gimbal.c.b: void <init>(java.lang.String)> --> r0 := @this: com.gimbal.c.b
<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()> --> $i0 = <org.slf4j.LoggerFactory: int INITIALIZATION_STATE>
<org.slf4j.impl.StaticLoggerBinder: void <clinit>()> --> nop
<org.slf4j.impl.StaticLoggerBinder: void <init>()> --> r0 := @this: org.slf4j.impl.StaticLoggerBinder
<org.slf4j.impl.StaticLoggerBinder: void <init>()> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("-----", "Using android logger factory")
--------------------------------------------------------

<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $d1 = virtualinvoke $r5.<android.location.Location: double getLongitude()>()
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> $r4 = virtualinvoke $r3.<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()>()
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> if $r4 == null goto interfaceinvoke $r1.<com.gimbal.proximity.a: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.a,com.gimbal.proximity.a)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.e: com.qsl.faar.protocol.GeoCircle c()> --> r0 := @this: com.qsl.faar.service.b.e
<com.gimbal.internal.cache.a: java.lang.Object a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.a
<com.gimbal.internal.cache.d: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.d
<com.a.a.c.d: void a(java.lang.String,com.gimbal.internal.cache.CacheEntry)> --> r0 := @this: com.a.a.c.d
<com.gimbal.internal.cache.b: java.lang.String a(com.gimbal.internal.cache.CacheEntry)> --> r0 := @this: com.gimbal.internal.cache.b
<com.gimbal.internal.cache.b: java.lang.String a(com.gimbal.internal.cache.CacheEntry)> --> $r3 = r0.<com.gimbal.internal.cache.b: com.gimbal.internal.json.JsonMapper b>
<com.gimbal.internal.cache.b: java.lang.String a(com.gimbal.internal.cache.CacheEntry)> --> $r4 := @caughtexception
<com.gimbal.c.b: void e(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.c.b
<org.slf4j.impl.AndroidLogger: void error(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<com.gimbal.logging.util.LogCapture: void capture(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)> --> $r1 := @parameter0: java.lang.String
<com.gimbal.logging.util.LogCapture: void logLine(com.gimbal.logging.util.LogCapture$LogEntry)> --> $r0 := @parameter0: com.gimbal.logging.util.LogCapture$LogEntry
<com.gimbal.logging.util.LogCapture: void saveLine(java.lang.String)> --> $r2 := @parameter0: java.lang.String
<com.gimbal.logging.util.LogCapture: void saveLine(java.lang.String)> --> virtualinvoke $r3.<java.io.OutputStream: void write(byte[])>($r0)
--------------------------------------------------------

<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $d0 = virtualinvoke $r5.<android.location.Location: double getLatitude()>()
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> $r4 = virtualinvoke $r3.<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()>()
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> if $r4 == null goto interfaceinvoke $r1.<com.gimbal.proximity.a: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.gimbal.internal.location.services.d$1: void a(int,java.lang.String)> --> r0 := @this: com.gimbal.internal.location.services.d$1
<com.gimbal.c.b: void d(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.c.b
<org.slf4j.impl.AndroidLogger: void warn(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<com.gimbal.logging.util.LogCapture: void capture(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)> --> $r1 := @parameter0: java.lang.String
<com.gimbal.logging.util.LogCapture: void logLine(com.gimbal.logging.util.LogCapture$LogEntry)> --> $r0 := @parameter0: com.gimbal.logging.util.LogCapture$LogEntry
<com.gimbal.logging.util.LogCapture: void saveLine(java.lang.String)> --> $r2 := @parameter0: java.lang.String
<com.gimbal.logging.util.LogCapture: void saveLine(java.lang.String)> --> virtualinvoke $r3.<java.io.OutputStream: void write(byte[])>($r0)
--------------------------------------------------------

<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $d1 = virtualinvoke $r5.<android.location.Location: double getLongitude()>()
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> $r4 = virtualinvoke $r3.<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()>()
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> if $r4 == null goto interfaceinvoke $r1.<com.gimbal.proximity.a: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.gimbal.internal.location.services.d$1: void a(int,java.lang.String)> --> r0 := @this: com.gimbal.internal.location.services.d$1
<com.gimbal.c.b: void d(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.c.b
<org.slf4j.impl.AndroidLogger: void warn(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<org.slf4j.impl.AndroidLogger: void warn(java.lang.String,java.lang.Object[])> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r3, $r4)
--------------------------------------------------------

<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r5 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> if $r5 == null goto exitmonitor r0
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r1 = new com.qsl.faar.service.location.a
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> $r4 = virtualinvoke $r3.<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()>()
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> if $r4 == null goto interfaceinvoke $r1.<com.gimbal.proximity.a: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.a,com.gimbal.proximity.a)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.d: void b(com.qsl.faar.service.location.a,com.gimbal.proximity.a)> --> r0 := @this: com.qsl.faar.service.b.d
<com.gimbal.internal.location.services.d$1: void a(int,java.lang.String)> --> r0 := @this: com.gimbal.internal.location.services.d$1
<com.gimbal.c.b: void d(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.c.b
<org.slf4j.impl.AndroidLogger: void warn(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<com.gimbal.logging.util.LogCapture: void capture(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)> --> $r1 := @parameter0: java.lang.String
<com.gimbal.logging.util.LogCapture: void stack(com.gimbal.logging.util.LogCapture$LogEntry,java.lang.Throwable)> --> $r2 := @parameter0: com.gimbal.logging.util.LogCapture$LogEntry
<com.gimbal.logging.util.LogCapture: void stack(com.gimbal.logging.util.LogCapture$LogEntry,java.lang.Throwable)> --> $r4 = virtualinvoke $r3.<java.lang.Throwable: java.lang.String getMessage()>()
<com.gimbal.logging.util.LogCapture: void stack(com.gimbal.logging.util.LogCapture$LogEntry,java.lang.Throwable)> --> $r1 := @caughtexception
<com.gimbal.logging.util.LogCapture: void stack(com.gimbal.logging.util.LogCapture$LogEntry,java.lang.Throwable)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Log Capture", "Unable to capture stack")
--------------------------------------------------------

<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r5 = virtualinvoke $r2.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> if $r5 == null goto exitmonitor r0
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r1 = new com.qsl.faar.service.location.a
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> $r4 = virtualinvoke $r3.<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()>()
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> if $r4 == null goto interfaceinvoke $r1.<com.gimbal.proximity.a: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.a,com.gimbal.proximity.a)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.d: void b(com.qsl.faar.service.location.a,com.gimbal.proximity.a)> --> r0 := @this: com.qsl.faar.service.b.d
<com.gimbal.internal.location.services.d$1: void a(int,java.lang.String)> --> r0 := @this: com.gimbal.internal.location.services.d$1
<com.gimbal.c.b: void d(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.c.b
<org.slf4j.impl.AndroidLogger: void warn(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<com.gimbal.logging.util.LogCapture: void capture(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)> --> $r1 := @parameter0: java.lang.String
<com.gimbal.logging.util.LogCapture: void logLine(com.gimbal.logging.util.LogCapture$LogEntry)> --> $r0 := @parameter0: com.gimbal.logging.util.LogCapture$LogEntry
<com.gimbal.logging.util.LogCapture: void saveLine(java.lang.String)> --> $r2 := @parameter0: java.lang.String
<com.gimbal.logging.util.LogCapture: void saveLine(java.lang.String)> --> virtualinvoke $r3.<java.io.OutputStream: void write(byte[])>($r0)
--------------------------------------------------------

<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $d0 = virtualinvoke $r5.<android.location.Location: double getLatitude()>()
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> $r4 = virtualinvoke $r3.<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()>()
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> if $r4 == null goto interfaceinvoke $r1.<com.gimbal.proximity.a: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.gimbal.internal.location.services.d$1: void a(int,java.lang.String)> --> r0 := @this: com.gimbal.internal.location.services.d$1
<com.gimbal.c.b: void d(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.c.b
<org.slf4j.impl.AndroidLogger: void warn(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<org.slf4j.impl.AndroidLogger: void warn(java.lang.String,java.lang.Object[])> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r3, $r4)
--------------------------------------------------------

<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $d0 = virtualinvoke $r5.<android.location.Location: double getLatitude()>()
<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()> --> $r7 := @caughtexception
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> $r4 = virtualinvoke $r3.<com.qsl.faar.service.location.c: com.qsl.faar.service.location.a a()>()
<com.qsl.faar.service.b.d: void a(com.gimbal.proximity.a)> --> if $r4 == null goto interfaceinvoke $r1.<com.gimbal.proximity.a: void a(int,java.lang.String)>(20001, "Unable to refresh place bubble, no fix available")
<com.qsl.faar.service.b.d: void a(com.qsl.faar.service.location.a,com.gimbal.proximity.a)> --> r0 := @this: com.qsl.faar.service.b.d
<com.qsl.faar.service.b.e: com.qsl.faar.protocol.GeoCircle c()> --> r0 := @this: com.qsl.faar.service.b.e
<com.gimbal.internal.cache.a: java.lang.Object a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.a
<com.gimbal.internal.cache.d: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.d
<com.a.a.c.d: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> r0 := @this: com.a.a.c.d
<com.a.a.c.d: com.gimbal.internal.cache.CacheEntry c(java.lang.String)> --> r0 := @this: com.a.a.c.d
<com.a.a.c.d: com.gimbal.internal.cache.CacheEntry c(java.lang.String)> --> $r1 = r0.<com.a.a.c.d: com.gimbal.internal.cache.b c>
<com.gimbal.internal.cache.b: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> r0 := @this: com.gimbal.internal.cache.b
<com.gimbal.internal.cache.b: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> $r3 = r0.<com.gimbal.internal.cache.b: com.gimbal.internal.json.JsonMapper b>
<com.gimbal.internal.cache.b: com.gimbal.internal.cache.CacheEntry a(java.lang.String)> --> $r5 := @caughtexception
<com.gimbal.c.b: void e(java.lang.String,java.lang.Object[])> --> r0 := @this: com.gimbal.c.b
<org.slf4j.impl.AndroidLogger: void error(java.lang.String,java.lang.Object[])> --> r0 := @this: org.slf4j.impl.AndroidLogger
<com.gimbal.logging.util.LogCapture: void capture(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)> --> $r1 := @parameter0: java.lang.String
<com.gimbal.logging.util.LogCapture: void logLine(com.gimbal.logging.util.LogCapture$LogEntry)> --> $r0 := @parameter0: com.gimbal.logging.util.LogCapture$LogEntry
<com.gimbal.logging.util.LogCapture: void saveLine(java.lang.String)> --> $r2 := @parameter0: java.lang.String
<com.gimbal.logging.util.LogCapture: void saveLine(java.lang.String)> --> virtualinvoke $r3.<java.io.OutputStream: void write(byte[])>($r0)
--------------------------------------------------------

