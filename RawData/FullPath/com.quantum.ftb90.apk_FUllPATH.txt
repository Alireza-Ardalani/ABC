<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.urbanairship.actions.f$a: void run()> --> r0 := @this: com.urbanairship.actions.f$a
<com.urbanairship.actions.f: com.urbanairship.actions.e a(com.urbanairship.actions.f,com.urbanairship.actions.b)> --> $r0 := @parameter0: com.urbanairship.actions.f
<com.urbanairship.actions.f: com.urbanairship.actions.e b(com.urbanairship.actions.b)> --> r0 := @this: com.urbanairship.actions.f
<com.urbanairship.j: void d(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.urbanairship.j: void d(java.lang.String)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r0)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher$4: void run()> --> r0 := @this: com.cooladata.android.EventPublisher$4
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> $r1 = new com.cooladata.android.DatabaseHelper
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> <com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper instance> = $r1
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> $r1 = <com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper instance>
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> if $r1 != null goto $r1 = <com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper instance>
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> <com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper instance> = $r1
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> $r1 = <com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper instance>
<com.cooladata.android.EventPublisher: void updateServer(boolean)> --> $r5 = staticinvoke <com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)>($r3)
<com.cooladata.android.DatabaseHelper: android.util.Pair getEvents(int)> --> r0 := @this: com.cooladata.android.DatabaseHelper
<com.cooladata.android.DatabaseHelper: android.util.Pair getEvents(int)> --> if $i0 < 0 goto $r5 = null
<com.cooladata.android.DatabaseHelper: android.util.Pair getEvents(int)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CoolaDataTracker", $r5)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$7: void a()> --> r0 := @this: de.infonline.lib.d$7
<de.infonline.lib.z: void d(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<de.infonline.lib.z: void d(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<de.infonline.lib.z: void d(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("INFOnline", $r1)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$11: void a()> --> r0 := @this: de.infonline.lib.d$11
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r3)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r10 = virtualinvoke $r8.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$11: void a()> --> r0 := @this: de.infonline.lib.d$11
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r3)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> virtualinvoke $r10.<java.io.OutputStream: void write(byte[])>($r11)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> virtualinvoke $r10.<java.io.OutputStream: void write(byte[])>($r11)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> virtualinvoke $r10.<java.io.OutputStream: void write(byte[])>($r11)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r33 = new java.net.URL
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r21 := @caughtexception
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> virtualinvoke $r6.<java.net.HttpURLConnection: void disconnect()>()
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$12: void a()> --> r0 := @this: de.infonline.lib.d$12
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> virtualinvoke $r7.<java.io.BufferedWriter: void write(java.lang.String)>($r2)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.cooladata.android.EventPublisher$3: void run()> --> r0 := @this: com.cooladata.android.EventPublisher$3
<com.cooladata.android.EventPublisher: boolean access$100(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> virtualinvoke $r8.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$5: void a()> --> r0 := @this: de.infonline.lib.d$5
<de.infonline.lib.w$a: java.util.Date b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w$a: void a(android.content.Context,java.util.Date)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w$a: void a(android.content.Context,java.util.Date)> --> virtualinvoke $r2.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r1)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.cooladata.android.EventPublisher$3: void run()> --> r0 := @this: com.cooladata.android.EventPublisher$3
<com.cooladata.android.EventPublisher: boolean access$100(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r7 = virtualinvoke $r6.<java.net.URL: java.net.URLConnection openConnection()>()
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r33 = new java.net.URL
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r22 := @caughtexception
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> virtualinvoke $r6.<java.net.HttpURLConnection: void disconnect()>()
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$11: void a()> --> r0 := @this: de.infonline.lib.d$11
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> virtualinvoke $r3.<java.io.FileOutputStream: void write(byte[])>($r4)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$12: void a()> --> r0 := @this: de.infonline.lib.d$12
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r3)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$11: void a()> --> r0 := @this: de.infonline.lib.d$11
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> virtualinvoke $r3.<java.io.FileOutputStream: void write(byte[])>($r4)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.cooladata.android.CoolaDataTracker$1: void run()> --> r0 := @this: com.cooladata.android.CoolaDataTracker$1
<com.cooladata.android.CoolaDataTracker: void getAdvertisingId()> --> $r11 := @caughtexception
<com.cooladata.android.CoolaDataTracker: void getAdvertisingId()> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CoolaDataTracker", "Encountered an error connecting to Google Play Services", $r11)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread httpThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void updateServer(boolean)> --> $r14 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread httpThread>
<com.cooladata.android.EventPublisher: void updateServer(boolean)> --> $r10 := @caughtexception
<com.cooladata.android.EventPublisher: void updateServer(boolean)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CoolaDataTracker", $r11)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> virtualinvoke $r8.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void k()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void o()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void r()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void c(java.lang.String,java.util.Map,java.util.Map,com.androidquery.a.c)> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void c(java.lang.String,java.util.Map,java.util.Map,com.androidquery.a.c)> --> specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r1)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$11: void a()> --> r0 := @this: de.infonline.lib.d$11
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> virtualinvoke $r7.<java.io.BufferedWriter: void write(java.lang.String)>($r2)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$12: void a()> --> r0 := @this: de.infonline.lib.d$12
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r3)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$10: void a()> --> r0 := @this: de.infonline.lib.d$10
<de.infonline.lib.z: void e(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<de.infonline.lib.z: void e(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<de.infonline.lib.z: void e(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("INFOnline", $r1)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: long logEvent(com.cooladata.android.json.JSONObject)> --> $r0 := @parameter0: com.cooladata.android.json.JSONObject
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> $r1 = new com.cooladata.android.DatabaseHelper
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> <com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper instance> = $r1
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> $r1 = <com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper instance>
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> if $r1 != null goto $r1 = <com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper instance>
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> <com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper instance> = $r1
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> $r1 = <com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper instance>
<com.cooladata.android.EventPublisher: long logEvent(com.cooladata.android.json.JSONObject)> --> $r2 = staticinvoke <com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)>($r1)
<com.cooladata.android.DatabaseHelper: long addEvent(java.lang.String)> --> r0 := @this: com.cooladata.android.DatabaseHelper
<com.cooladata.android.DatabaseHelper: long addEvent(java.lang.String)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CoolaDataTracker", "Insert failed")
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> virtualinvoke $r10.<java.io.OutputStream: void write(byte[])>($r11)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$12: void a()> --> r0 := @this: de.infonline.lib.d$12
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r3)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.CoolaDataTracker$2: void run()> --> r0 := @this: com.cooladata.android.CoolaDataTracker$2
<com.cooladata.android.CoolaDataTracker: long access$000(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r0 = $r7.<com.cooladata.android.DeviceInfo: java.lang.String screenSize>
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CoolaDataTracker", $r0)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r10 = virtualinvoke $r8.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.cooladata.android.EventPublisher$3: void run()> --> r0 := @this: com.cooladata.android.EventPublisher$3
<com.cooladata.android.EventPublisher: boolean access$100(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> virtualinvoke $r8.<java.net.HttpURLConnection: void setDoInput(boolean)>(1)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.cooladata.android.EventPublisher$3: void run()> --> r0 := @this: com.cooladata.android.EventPublisher$3
<com.cooladata.android.EventPublisher: boolean access$100(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r6 = new java.net.URL
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r22 := @caughtexception
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> virtualinvoke $r5.<java.net.HttpURLConnection: void disconnect()>()
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$11: void a()> --> r0 := @this: de.infonline.lib.d$11
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> virtualinvoke $r3.<java.io.FileOutputStream: void write(byte[])>($r4)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.cooladata.android.EventPublisher$3: void run()> --> r0 := @this: com.cooladata.android.EventPublisher$3
<com.cooladata.android.EventPublisher: boolean access$100(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> virtualinvoke $r8.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST")
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$12: void a()> --> r0 := @this: de.infonline.lib.d$12
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r3)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher$3: void run()> --> r0 := @this: com.cooladata.android.EventPublisher$3
<com.cooladata.android.EventPublisher: boolean access$100(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r7 = virtualinvoke $r6.<java.net.URL: java.net.URLConnection openConnection()>()
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r22 := @caughtexception
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> virtualinvoke $r5.<java.net.HttpURLConnection: void disconnect()>()
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$12: void a()> --> r0 := @this: de.infonline.lib.d$12
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r3)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void k()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void o()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void r()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void b(java.lang.String,java.util.Map,com.androidquery.a.c)> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void a(org.apache.http.client.methods.HttpUriRequest,java.lang.String,java.util.Map,com.androidquery.a.c)> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: org.apache.http.impl.client.DefaultHttpClient t()> --> $r0 = <com.androidquery.a.a: org.apache.http.impl.client.DefaultHttpClient P>
<com.androidquery.util.a: void a(java.lang.Object)> --> $r0 := @parameter0: java.lang.Object
<com.androidquery.util.a: void a(java.lang.Object)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AQuery", $r2)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher$3: void run()> --> r0 := @this: com.cooladata.android.EventPublisher$3
<com.cooladata.android.EventPublisher: boolean access$100(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> virtualinvoke $r8.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST")
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$11: void a()> --> r0 := @this: de.infonline.lib.d$11
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r3)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r33 = new java.net.URL
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r21 := @caughtexception
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> virtualinvoke $r6.<java.net.HttpURLConnection: void disconnect()>()
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> virtualinvoke $r10.<java.io.OutputStream: void write(byte[])>($r11)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$11: void a()> --> r0 := @this: de.infonline.lib.d$11
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r3)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$11: void a()> --> r0 := @this: de.infonline.lib.d$11
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> virtualinvoke $r3.<java.io.FileOutputStream: void write(byte[])>($r4)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$12: void a()> --> r0 := @this: de.infonline.lib.d$12
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> virtualinvoke $r7.<java.io.BufferedWriter: void write(java.lang.String)>($r2)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$12: void a()> --> r0 := @this: de.infonline.lib.d$12
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> virtualinvoke $r3.<java.io.FileOutputStream: void write(byte[])>($r4)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: long logEvent(com.cooladata.android.json.JSONObject)> --> $r0 := @parameter0: com.cooladata.android.json.JSONObject
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> $r1 = new com.cooladata.android.DatabaseHelper
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> <com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper instance> = $r1
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> $r1 = <com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper instance>
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> if $r1 != null goto $r1 = <com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper instance>
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> <com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper instance> = $r1
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> $r1 = <com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper instance>
<com.cooladata.android.EventPublisher: long logEvent(com.cooladata.android.json.JSONObject)> --> $r2 = staticinvoke <com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)>($r1)
<com.cooladata.android.DatabaseHelper: int removeEvents(long)> --> r0 := @this: com.cooladata.android.DatabaseHelper
<com.cooladata.android.DatabaseHelper: int removeEvents(long)> --> $i2 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("events", $r3, null)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$11: void a()> --> r0 := @this: de.infonline.lib.d$11
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> virtualinvoke $r3.<java.io.FileOutputStream: void write(byte[])>($r4)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void k()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void o()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: java.lang.Object a(java.lang.String,byte[],com.androidquery.a.c)> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: java.lang.Object a(java.lang.String,byte[],com.androidquery.a.c)> --> $r1 = r0.<com.androidquery.a.a: java.lang.String B>
<com.androidquery.a.a: java.lang.Object a(java.lang.String,byte[],com.androidquery.a.c)> --> $r20 := @caughtexception
<com.androidquery.util.a: void b(java.lang.Throwable)> --> $r0 := @parameter0: java.lang.Throwable
<com.androidquery.util.a: void a(java.lang.Object,java.lang.Object)> --> $r0 := @parameter0: java.lang.Object
<com.androidquery.util.a: void a(java.lang.Object,java.lang.Object)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AQuery", $r3)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.AccessTokenManager$1: void run()> --> r0 := @this: com.facebook.AccessTokenManager$1
<com.facebook.AccessTokenManager: void access$000(com.facebook.AccessTokenManager,com.facebook.AccessToken$AccessTokenRefreshCallback)> --> $r0 := @parameter0: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: void refreshCurrentAccessTokenImpl(com.facebook.AccessToken$AccessTokenRefreshCallback)> --> r0 := @this: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: com.facebook.GraphRequest createExtendAccessTokenRequest(com.facebook.AccessToken,com.facebook.GraphRequest$Callback)> --> $r0 := @parameter0: com.facebook.AccessToken
<com.facebook.AccessTokenManager: com.facebook.GraphRequest createExtendAccessTokenRequest(com.facebook.AccessToken,com.facebook.GraphRequest$Callback)> --> virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("grant_type", "fb_extend_sso_token")
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$12: void a()> --> r0 := @this: de.infonline.lib.d$12
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> virtualinvoke $r7.<java.io.BufferedWriter: void write(java.lang.String)>($r2)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> virtualinvoke $r8.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.cooladata.android.EventPublisher$3: void run()> --> r0 := @this: com.cooladata.android.EventPublisher$3
<com.cooladata.android.EventPublisher: boolean access$100(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> virtualinvoke $r8.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> virtualinvoke $r10.<java.io.OutputStream: void write(byte[])>($r11)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> specialinvoke $r33.<java.net.URL: void <init>(java.lang.String)>("https://config.ioam.de/appcfg.php")
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher$3: void run()> --> r0 := @this: com.cooladata.android.EventPublisher$3
<com.cooladata.android.EventPublisher: boolean access$100(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r13 = virtualinvoke $r8.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$11: void a()> --> r0 := @this: de.infonline.lib.d$11
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> virtualinvoke $r7.<java.io.BufferedWriter: void write(java.lang.String)>($r2)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher$3: void run()> --> r0 := @this: com.cooladata.android.EventPublisher$3
<com.cooladata.android.EventPublisher: boolean access$100(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> virtualinvoke $r8.<java.net.HttpURLConnection: void setDoInput(boolean)>(1)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r10 = virtualinvoke $r8.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void k()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void o()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void r()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void b(java.lang.String,java.util.Map,com.androidquery.a.c)> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void b(java.lang.Object,java.lang.Object)> --> $r0 := @parameter0: java.lang.Object
<com.androidquery.util.a: void b(java.lang.Object,java.lang.Object)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AQuery", $r3)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w$a: java.util.Date a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w$a: java.util.Date a(android.content.Context)> --> $r4 = staticinvoke <de.infonline.lib.w$a: java.io.File c(android.content.Context)>($r0)
<de.infonline.lib.w$a: java.util.Date a(android.content.Context)> --> $r9 := @caughtexception
<de.infonline.lib.z: void b(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<de.infonline.lib.z: void b(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<de.infonline.lib.z: void b(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("INFOnline", $r1)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$11: void a()> --> r0 := @this: de.infonline.lib.d$11
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r3)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> virtualinvoke $r10.<java.io.OutputStream: void write(byte[])>($r11)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$11: void a()> --> r0 := @this: de.infonline.lib.d$11
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r3)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$12: void a()> --> r0 := @this: de.infonline.lib.d$12
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r3)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.cooladata.android.EventPublisher$3: void run()> --> r0 := @this: com.cooladata.android.EventPublisher$3
<com.cooladata.android.EventPublisher: boolean access$100(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r6 = new java.net.URL
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r22 := @caughtexception
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CoolaDataTracker", "Exception:", $r22)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $i0 = virtualinvoke $r8.<java.net.HttpURLConnection: int getResponseCode()>()
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher$3: void run()> --> r0 := @this: com.cooladata.android.EventPublisher$3
<com.cooladata.android.EventPublisher: boolean access$100(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> virtualinvoke $r8.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$12: void a()> --> r0 := @this: de.infonline.lib.d$12
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r3)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$12: void a()> --> r0 := @this: de.infonline.lib.d$12
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r3)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: long logEvent(com.cooladata.android.json.JSONObject)> --> $r0 := @parameter0: com.cooladata.android.json.JSONObject
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> $r1 = new com.cooladata.android.DatabaseHelper
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> <com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper instance> = $r1
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> $r1 = <com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper instance>
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> if $r1 != null goto $r1 = <com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper instance>
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> <com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper instance> = $r1
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> $r1 = <com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper instance>
<com.cooladata.android.EventPublisher: long logEvent(com.cooladata.android.json.JSONObject)> --> $r2 = staticinvoke <com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)>($r1)
<com.cooladata.android.DatabaseHelper: long addEvent(java.lang.String)> --> r0 := @this: com.cooladata.android.DatabaseHelper
<com.cooladata.android.DatabaseHelper: long addEvent(java.lang.String)> --> $l0 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("events", null, $r2)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> virtualinvoke $r8.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$13: void a()> --> r0 := @this: de.infonline.lib.d$13
<de.infonline.lib.q: org.json.JSONArray a()> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: org.json.JSONArray a(java.io.File)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.z: void a(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<de.infonline.lib.z: void a(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<de.infonline.lib.z: void a(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("INFOnline", $r1)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.cooladata.android.EventPublisher$3: void run()> --> r0 := @this: com.cooladata.android.EventPublisher$3
<com.cooladata.android.EventPublisher: boolean access$100(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r13 = virtualinvoke $r8.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$5: void a()> --> r0 := @this: de.infonline.lib.d$5
<de.infonline.lib.z: void c(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<de.infonline.lib.z: void c(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<de.infonline.lib.z: void c(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("INFOnline", $r1)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$11: void a()> --> r0 := @this: de.infonline.lib.d$11
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r3)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$5: void a()> --> r0 := @this: de.infonline.lib.d$5
<de.infonline.lib.w$a: java.util.Date b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w$a: void a(android.content.Context,java.util.Date)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w$a: void a(android.content.Context,java.util.Date)> --> virtualinvoke $r2.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r1)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$12: void a()> --> r0 := @this: de.infonline.lib.d$12
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r3)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher$3: void run()> --> r0 := @this: com.cooladata.android.EventPublisher$3
<com.cooladata.android.EventPublisher: boolean access$100(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r15 = virtualinvoke $r8.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.cooladata.android.EventPublisher$3: void run()> --> r0 := @this: com.cooladata.android.EventPublisher$3
<com.cooladata.android.EventPublisher: boolean access$100(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r15 = virtualinvoke $r8.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void k()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void m()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: java.lang.Object a(java.lang.String,java.io.File,com.androidquery.a.c)> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: byte[] a(java.io.InputStream)> --> $r0 := @parameter0: java.io.InputStream
<com.androidquery.util.a: void a(java.io.InputStream,java.io.OutputStream)> --> $r0 := @parameter0: java.io.InputStream
<com.androidquery.util.a: void a(java.io.InputStream,java.io.OutputStream,int,com.androidquery.util.e)> --> $r0 := @parameter0: java.io.InputStream
<com.androidquery.util.a: void a(java.io.InputStream,java.io.OutputStream,int,com.androidquery.util.e)> --> virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, $i0)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$11: void a()> --> r0 := @this: de.infonline.lib.d$11
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> virtualinvoke $r7.<java.io.BufferedWriter: void write(java.lang.String)>($r2)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r7 = virtualinvoke $r33.<java.net.URL: java.net.URLConnection openConnection()>()
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$11: void a()> --> r0 := @this: de.infonline.lib.d$11
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r3)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$11: void a()> --> r0 := @this: de.infonline.lib.d$11
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> virtualinvoke $r3.<java.io.FileOutputStream: void write(byte[])>($r4)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher$3: void run()> --> r0 := @this: com.cooladata.android.EventPublisher$3
<com.cooladata.android.EventPublisher: boolean access$100(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> virtualinvoke $r8.<java.net.HttpURLConnection: void setDoInput(boolean)>(1)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.z: void c(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<de.infonline.lib.z: void c(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<de.infonline.lib.z: void c(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("INFOnline", $r1)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r33 = new java.net.URL
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r22 := @caughtexception
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> virtualinvoke $r6.<java.net.HttpURLConnection: void disconnect()>()
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> virtualinvoke $r8.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$10: void a()> --> r0 := @this: de.infonline.lib.d$10
<de.infonline.lib.z: void e(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<de.infonline.lib.z: void e(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<de.infonline.lib.z: void e(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("INFOnline", $r1)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$12: void a()> --> r0 := @this: de.infonline.lib.d$12
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> virtualinvoke $r3.<java.io.FileOutputStream: void write(byte[])>($r4)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher$3: void run()> --> r0 := @this: com.cooladata.android.EventPublisher$3
<com.cooladata.android.EventPublisher: boolean access$100(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r15 = virtualinvoke $r8.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void k()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void o()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void r()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void b(java.lang.String,java.util.Map,com.androidquery.a.c)> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void a(org.apache.http.client.methods.HttpUriRequest,java.lang.String,java.util.Map,com.androidquery.a.c)> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: org.apache.http.impl.client.DefaultHttpClient t()> --> $r0 = <com.androidquery.a.a: org.apache.http.impl.client.DefaultHttpClient P>
<com.androidquery.util.a: void a(java.lang.Object)> --> $r0 := @parameter0: java.lang.Object
<com.androidquery.util.a: void a(java.lang.Object)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AQuery", $r2)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher$3: void run()> --> r0 := @this: com.cooladata.android.EventPublisher$3
<com.cooladata.android.EventPublisher: boolean access$100(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r7 = virtualinvoke $r6.<java.net.URL: java.net.URLConnection openConnection()>()
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r22 := @caughtexception
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CoolaDataTracker", "Exception:", $r22)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> virtualinvoke $r10.<java.io.OutputStream: void write(byte[])>($r11)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread httpThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void updateServer(boolean)> --> $r14 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread httpThread>
<com.cooladata.android.EventPublisher: void updateServer(boolean)> --> $r10 := @caughtexception
<com.cooladata.android.EventPublisher: void updateServer(boolean)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CoolaDataTracker", $r11)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$12: void a()> --> r0 := @this: de.infonline.lib.d$12
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r3)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> virtualinvoke $r10.<java.io.OutputStream: void write(byte[])>($r11)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$12: void a()> --> r0 := @this: de.infonline.lib.d$12
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> virtualinvoke $r3.<java.io.FileOutputStream: void write(byte[])>($r4)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.urbanairship.actions.f$a: void run()> --> r0 := @this: com.urbanairship.actions.f$a
<com.urbanairship.actions.f: com.urbanairship.actions.e a(com.urbanairship.actions.f,com.urbanairship.actions.b)> --> $r0 := @parameter0: com.urbanairship.actions.f
<com.urbanairship.actions.f: com.urbanairship.actions.e b(com.urbanairship.actions.b)> --> r0 := @this: com.urbanairship.actions.f
<com.urbanairship.j: void d(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.urbanairship.j: void d(java.lang.String)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r0)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r10 = virtualinvoke $r8.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.CoolaDataTracker$2: void run()> --> r0 := @this: com.cooladata.android.CoolaDataTracker$2
<com.cooladata.android.CoolaDataTracker: long access$000(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r0 = $r7.<com.cooladata.android.DeviceInfo: java.lang.String screenSize>
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CoolaDataTracker", $r0)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher$3: void run()> --> r0 := @this: com.cooladata.android.EventPublisher$3
<com.cooladata.android.EventPublisher: boolean access$100(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r7 = virtualinvoke $r6.<java.net.URL: java.net.URLConnection openConnection()>()
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void k()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void o()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void r()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void c(java.lang.String,java.util.Map,java.util.Map,com.androidquery.a.c)> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void c(java.lang.String,java.util.Map,java.util.Map,com.androidquery.a.c)> --> specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r1)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r33 = new java.net.URL
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r22 := @caughtexception
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> virtualinvoke $r6.<java.net.HttpURLConnection: void disconnect()>()
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$7: void a()> --> r0 := @this: de.infonline.lib.d$7
<de.infonline.lib.z: void d(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<de.infonline.lib.z: void d(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<de.infonline.lib.z: void d(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("INFOnline", $r1)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.cooladata.android.CoolaDataTracker$1: void run()> --> r0 := @this: com.cooladata.android.CoolaDataTracker$1
<com.cooladata.android.CoolaDataTracker: void getAdvertisingId()> --> $r11 := @caughtexception
<com.cooladata.android.CoolaDataTracker: void getAdvertisingId()> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CoolaDataTracker", "Encountered an error connecting to Google Play Services", $r11)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.CoolaDataTracker$2: void run()> --> r0 := @this: com.cooladata.android.CoolaDataTracker$2
<com.cooladata.android.CoolaDataTracker: long access$000(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: long logEvent(com.cooladata.android.json.JSONObject)> --> $r0 := @parameter0: com.cooladata.android.json.JSONObject
<com.cooladata.android.DatabaseHelper: long addEvent(java.lang.String)> --> r0 := @this: com.cooladata.android.DatabaseHelper
<com.cooladata.android.DatabaseHelper: long addEvent(java.lang.String)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CoolaDataTracker", "Insert failed")
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$12: void a()> --> r0 := @this: de.infonline.lib.d$12
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r3)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.cooladata.android.EventPublisher$3: void run()> --> r0 := @this: com.cooladata.android.EventPublisher$3
<com.cooladata.android.EventPublisher: boolean access$100(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> specialinvoke $r6.<java.net.URL: void <init>(java.lang.String)>($r0)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$11: void a()> --> r0 := @this: de.infonline.lib.d$11
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r3)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> virtualinvoke $r10.<java.io.OutputStream: void write(byte[])>($r11)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: long logEvent(com.cooladata.android.json.JSONObject)> --> $r0 := @parameter0: com.cooladata.android.json.JSONObject
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> $r1 = new com.cooladata.android.DatabaseHelper
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> <com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper instance> = $r1
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> $r1 = <com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper instance>
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> if $r1 != null goto $r1 = <com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper instance>
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> <com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper instance> = $r1
<com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)> --> $r1 = <com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper instance>
<com.cooladata.android.EventPublisher: void updateServer(boolean)> --> $r5 = staticinvoke <com.cooladata.android.DatabaseHelper: com.cooladata.android.DatabaseHelper getDatabaseHelper(android.content.Context)>($r3)
<com.cooladata.android.DatabaseHelper: android.util.Pair getEvents(int)> --> r0 := @this: com.cooladata.android.DatabaseHelper
<com.cooladata.android.DatabaseHelper: android.util.Pair getEvents(int)> --> if $i0 < 0 goto $r5 = null
<com.cooladata.android.DatabaseHelper: android.util.Pair getEvents(int)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CoolaDataTracker", $r5)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher$3: void run()> --> r0 := @this: com.cooladata.android.EventPublisher$3
<com.cooladata.android.EventPublisher: boolean access$100(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r7 = virtualinvoke $r6.<java.net.URL: java.net.URLConnection openConnection()>()
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r22 := @caughtexception
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> virtualinvoke $r5.<java.net.HttpURLConnection: void disconnect()>()
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.cooladata.android.EventPublisher$3: void run()> --> r0 := @this: com.cooladata.android.EventPublisher$3
<com.cooladata.android.EventPublisher: boolean access$100(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> virtualinvoke $r8.<java.net.HttpURLConnection: void setDoInput(boolean)>(1)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r33 = new java.net.URL
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r22 := @caughtexception
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> virtualinvoke $r6.<java.net.HttpURLConnection: void disconnect()>()
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.cooladata.android.EventPublisher$3: void run()> --> r0 := @this: com.cooladata.android.EventPublisher$3
<com.cooladata.android.EventPublisher: boolean access$100(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r6 = new java.net.URL
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r22 := @caughtexception
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> virtualinvoke $r5.<java.net.HttpURLConnection: void disconnect()>()
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void k()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void o()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void b(java.lang.Object,java.lang.Object)> --> $r0 := @parameter0: java.lang.Object
<com.androidquery.util.a: void b(java.lang.Object,java.lang.Object)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AQuery", $r3)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher$3: void run()> --> r0 := @this: com.cooladata.android.EventPublisher$3
<com.cooladata.android.EventPublisher: boolean access$100(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> virtualinvoke $r8.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> virtualinvoke $r10.<java.io.OutputStream: void write(byte[])>($r11)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$5: void a()> --> r0 := @this: de.infonline.lib.d$5
<de.infonline.lib.w$a: java.util.Date b(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w$a: void a(android.content.Context,java.util.Date)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w$a: void a(android.content.Context,java.util.Date)> --> $r4 = staticinvoke <de.infonline.lib.w$a: java.io.File c(android.content.Context)>($r0)
<de.infonline.lib.w$a: void a(android.content.Context,java.util.Date)> --> $r5 := @caughtexception
<de.infonline.lib.z: void b(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<de.infonline.lib.z: void b(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<de.infonline.lib.z: void b(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("INFOnline", $r1)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$12: void a()> --> r0 := @this: de.infonline.lib.d$12
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r3)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher$3: void run()> --> r0 := @this: com.cooladata.android.EventPublisher$3
<com.cooladata.android.EventPublisher: boolean access$100(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> specialinvoke $r6.<java.net.URL: void <init>(java.lang.String)>($r0)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$11: void a()> --> r0 := @this: de.infonline.lib.d$11
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> virtualinvoke $r7.<java.io.BufferedWriter: void write(java.lang.String)>($r2)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$6: void a()> --> r0 := @this: de.infonline.lib.d$6
<de.infonline.lib.v: boolean a(de.infonline.lib.y)> --> r0 := @this: de.infonline.lib.v
<de.infonline.lib.z: void a(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<de.infonline.lib.z: void a(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<de.infonline.lib.z: void a(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("INFOnline", $r1)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.CoolaDataTracker$2: void run()> --> r0 := @this: com.cooladata.android.CoolaDataTracker$2
<com.cooladata.android.CoolaDataTracker: long access$000(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: long logEvent(com.cooladata.android.json.JSONObject)> --> $r0 := @parameter0: com.cooladata.android.json.JSONObject
<com.cooladata.android.DatabaseHelper: int removeEvents(long)> --> r0 := @this: com.cooladata.android.DatabaseHelper
<com.cooladata.android.DatabaseHelper: int removeEvents(long)> --> $i2 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("events", $r3, null)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$12: void a()> --> r0 := @this: de.infonline.lib.d$12
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> virtualinvoke $r3.<java.io.FileOutputStream: void write(byte[])>($r4)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$11: void a()> --> r0 := @this: de.infonline.lib.d$11
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r3)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$12: void a()> --> r0 := @this: de.infonline.lib.d$12
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r3)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> virtualinvoke $r10.<java.io.OutputStream: void write(byte[])>($r11)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$11: void a()> --> r0 := @this: de.infonline.lib.d$11
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r3)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void k()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void o()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: java.lang.Object a(java.lang.String,byte[],com.androidquery.a.c)> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: java.lang.Object a(java.lang.String,byte[],com.androidquery.a.c)> --> $r1 = r0.<com.androidquery.a.a: java.lang.String B>
<com.androidquery.a.a: java.lang.Object a(java.lang.String,byte[],com.androidquery.a.c)> --> $r20 := @caughtexception
<com.androidquery.util.a: void b(java.lang.Throwable)> --> $r0 := @parameter0: java.lang.Throwable
<com.androidquery.util.a: void a(java.lang.Object,java.lang.Object)> --> $r0 := @parameter0: java.lang.Object
<com.androidquery.util.a: void a(java.lang.Object,java.lang.Object)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AQuery", $r3)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$12: void a()> --> r0 := @this: de.infonline.lib.d$12
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> virtualinvoke $r3.<java.io.FileOutputStream: void write(byte[])>($r4)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r33 = new java.net.URL
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r21 := @caughtexception
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> virtualinvoke $r6.<java.net.HttpURLConnection: void disconnect()>()
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$12: void a()> --> r0 := @this: de.infonline.lib.d$12
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> virtualinvoke $r7.<java.io.BufferedWriter: void write(java.lang.String)>($r2)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.cooladata.android.EventPublisher$3: void run()> --> r0 := @this: com.cooladata.android.EventPublisher$3
<com.cooladata.android.EventPublisher: boolean access$100(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r13 = virtualinvoke $r8.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$11: void a()> --> r0 := @this: de.infonline.lib.d$11
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r3)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> specialinvoke $r33.<java.net.URL: void <init>(java.lang.String)>("https://config.ioam.de/appcfg.php")
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.facebook.AccessTokenManager$1: void run()> --> r0 := @this: com.facebook.AccessTokenManager$1
<com.facebook.AccessTokenManager: void access$000(com.facebook.AccessTokenManager,com.facebook.AccessToken$AccessTokenRefreshCallback)> --> $r0 := @parameter0: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: void refreshCurrentAccessTokenImpl(com.facebook.AccessToken$AccessTokenRefreshCallback)> --> r0 := @this: com.facebook.AccessTokenManager
<com.facebook.AccessTokenManager: com.facebook.GraphRequest createExtendAccessTokenRequest(com.facebook.AccessToken,com.facebook.GraphRequest$Callback)> --> $r0 := @parameter0: com.facebook.AccessToken
<com.facebook.AccessTokenManager: com.facebook.GraphRequest createExtendAccessTokenRequest(com.facebook.AccessToken,com.facebook.GraphRequest$Callback)> --> virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("grant_type", "fb_extend_sso_token")
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher$3: void run()> --> r0 := @this: com.cooladata.android.EventPublisher$3
<com.cooladata.android.EventPublisher: boolean access$100(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r13 = virtualinvoke $r8.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$12: void a()> --> r0 := @this: de.infonline.lib.d$12
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> virtualinvoke $r3.<java.io.FileOutputStream: void write(byte[])>($r4)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r7 = virtualinvoke $r33.<java.net.URL: java.net.URLConnection openConnection()>()
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> virtualinvoke $r10.<java.io.OutputStream: void write(byte[])>($r11)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$11: void a()> --> r0 := @this: de.infonline.lib.d$11
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r3)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$12: void a()> --> r0 := @this: de.infonline.lib.d$12
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> virtualinvoke $r3.<java.io.FileOutputStream: void write(byte[])>($r4)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $i0 = virtualinvoke $r8.<java.net.HttpURLConnection: int getResponseCode()>()
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void k()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: void m()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.a.a: java.lang.Object a(java.lang.String,java.io.File,com.androidquery.a.c)> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: byte[] a(java.io.InputStream)> --> $r0 := @parameter0: java.io.InputStream
<com.androidquery.util.a: void a(java.io.InputStream,java.io.OutputStream)> --> $r0 := @parameter0: java.io.InputStream
<com.androidquery.util.a: void a(java.io.InputStream,java.io.OutputStream,int,com.androidquery.util.e)> --> $r0 := @parameter0: java.io.InputStream
<com.androidquery.util.a: void a(java.io.InputStream,java.io.OutputStream,int,com.androidquery.util.e)> --> virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, $i0)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.CoolaDataTracker$2: void run()> --> r0 := @this: com.cooladata.android.CoolaDataTracker$2
<com.cooladata.android.CoolaDataTracker: long access$000(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: long logEvent(com.cooladata.android.json.JSONObject)> --> $r0 := @parameter0: com.cooladata.android.json.JSONObject
<com.cooladata.android.DatabaseHelper: long addEvent(java.lang.String)> --> r0 := @this: com.cooladata.android.DatabaseHelper
<com.cooladata.android.DatabaseHelper: long addEvent(java.lang.String)> --> $l0 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("events", null, $r2)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> virtualinvoke $r10.<java.io.OutputStream: void write(byte[])>($r11)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$3: void a()> --> r0 := @this: de.infonline.lib.d$3
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r33 = new java.net.URL
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> $r21 := @caughtexception
<de.infonline.lib.w: de.infonline.lib.v a(android.content.Context)> --> virtualinvoke $r6.<java.net.HttpURLConnection: void disconnect()>()
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.cooladata.android.EventPublisher$3: void run()> --> r0 := @this: com.cooladata.android.EventPublisher$3
<com.cooladata.android.EventPublisher: boolean access$100(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r0 := @parameter0: java.lang.String
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> $r15 = virtualinvoke $r8.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$11: void a()> --> r0 := @this: de.infonline.lib.d$11
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r3)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLatitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<com.androidquery.a.a: void run()> --> r0 := @this: com.androidquery.a.a
<com.androidquery.util.a: void a(java.lang.Runnable)> --> $r0 := @parameter0: java.lang.Runnable
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$11: void a()> --> r0 := @this: de.infonline.lib.d$11
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> virtualinvoke $r3.<java.io.FileOutputStream: void write(byte[])>($r4)
--------------------------------------------------------

<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $d0 = virtualinvoke $r17.<android.location.Location: double getLongitude()>()
<com.cooladata.android.CoolaDataTracker: long trackEvent(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)> --> $r15 := @caughtexception
<com.cooladata.android.EventPublisher: void <clinit>()> --> nop
<com.cooladata.android.EventPublisher: void <clinit>()> --> $r1 = new com.cooladata.android.WorkerThread
<com.cooladata.android.EventPublisher: void <clinit>()> --> <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread> = $r1
<com.cooladata.android.EventPublisher: boolean makeEventUploadPostRequest(java.lang.String,com.cooladata.android.json.JSONObject,long)> --> staticinvoke <com.cooladata.android.EventPublisher: void removeEventsAndReturn(long)>($l0)
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> $r1 = <com.cooladata.android.EventPublisher: com.cooladata.android.WorkerThread logThread>
<com.cooladata.android.EventPublisher: void runOnLogThread(java.lang.Runnable)> --> if $r2 == $r1 goto interfaceinvoke $r0.<java.lang.Runnable: void run()>()
<com.cooladata.android.WorkerThread: void post(java.lang.Runnable)> --> r0 := @this: com.cooladata.android.WorkerThread
<android.os.Handler: boolean post(java.lang.Runnable)> --> this := @this: android.os.Handler
<de.infonline.lib.d$b: void run()> --> r0 := @this: de.infonline.lib.d$b
<de.infonline.lib.d$12: void a()> --> r0 := @this: de.infonline.lib.d$12
<de.infonline.lib.q: boolean a(org.json.JSONArray)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: boolean a(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: void b(java.io.File,java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> r0 := @this: de.infonline.lib.q
<de.infonline.lib.q: byte[] a(java.lang.String)> --> virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r3)
--------------------------------------------------------

