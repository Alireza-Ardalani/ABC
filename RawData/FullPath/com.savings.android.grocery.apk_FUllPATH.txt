<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> $d0 = virtualinvoke $r13.<android.location.Location: double getLatitude()>()
<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> r2 := @caughtexception
<com.inmarket.m2m.internal.geofence.LocationManager: void sendDeviceLogEntry(java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.geofence.LocationManager
<com.inmarket.m2m.internal.M2MServiceUtil: void sendDeviceLogEntry(android.content.Context,java.lang.String,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.M2MServiceUtil: void sendDeviceLogEntry(android.content.Context,java.lang.String,java.lang.String,int)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.data.M2MSvcConfig: com.inmarket.m2m.internal.data.M2MSvcConfig instance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.log.LogI: void i(java.lang.String,java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void i(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> $d0 = virtualinvoke $r13.<android.location.Location: double getLongitude()>()
<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> r2 := @caughtexception
<com.inmarket.m2m.internal.geofence.LocationManager: void sendDeviceLogEntry(java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.geofence.LocationManager
<com.inmarket.m2m.internal.M2MServiceUtil: void sendDeviceLogEntry(android.content.Context,java.lang.String,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.M2MServiceUtil: void sendDeviceLogEntry(android.content.Context,java.lang.String,java.lang.String,int)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.network.DeviceLogEntryNetTask: void <clinit>()> --> nop
<com.inmarket.m2m.internal.network.OkNetworkTask: void <clinit>()> --> nop
<com.inmarket.m2m.internal.network.OkNetworkTask: void <clinit>()> --> $r0 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>("application/json; charset=utf-8")
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> $d0 = virtualinvoke $r13.<android.location.Location: double getLongitude()>()
<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> r2 := @caughtexception
<com.inmarket.m2m.internal.geofence.LocationManager: void sendDeviceLogEntry(java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.geofence.LocationManager
<com.inmarket.m2m.internal.M2MServiceUtil: void sendDeviceLogEntry(android.content.Context,java.lang.String,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.M2MServiceUtil: void sendDeviceLogEntry(android.content.Context,java.lang.String,java.lang.String,int)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.log.Log: void v(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.inmarket.m2m.internal.log.LogI: void v(java.lang.String,java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void v(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> $d0 = virtualinvoke $r13.<android.location.Location: double getLongitude()>()
<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> r2 := @caughtexception
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> nop
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI GEO> = $r3
<com.inmarket.m2m.internal.geofence.LocationManager: void lambda$removeAllGeofences$10(com.inmarket.m2m.internal.geofence.LocationManager,java.lang.String,java.lang.Runnable,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.ConnectionResult)> --> $r6 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI GEO>
<com.inmarket.m2m.internal.log.LogI: void e(java.lang.String,java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void e(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> $d0 = virtualinvoke $r13.<android.location.Location: double getLongitude()>()
<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> r2 := @caughtexception
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> nop
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> $r3 = new com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void <init>(boolean)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> specialinvoke $r3.<com.inmarket.m2m.internal.log.LogI: void <init>(boolean)>(0)
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI GEO> = $r3
<com.inmarket.m2m.internal.log.LogI: void e(java.lang.String,java.lang.String)> --> $r2 = staticinvoke <com.inmarket.m2m.internal.log.Log: java.lang.String _mod(java.lang.String,java.lang.String,java.lang.String)>("ERROR", $r1, $r2)
<com.inmarket.m2m.internal.geofence.LocationManager: void lambda$removeAllGeofences$10(com.inmarket.m2m.internal.geofence.LocationManager,java.lang.String,java.lang.Runnable,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.ConnectionResult)> --> virtualinvoke $r6.<com.inmarket.m2m.internal.log.LogI: void e(java.lang.String,java.lang.String)>($r7, $r1)
<com.inmarket.m2m.internal.geofence.LocationManager: void lambda$removeAllGeofences$10(com.inmarket.m2m.internal.geofence.LocationManager,java.lang.String,java.lang.Runnable,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.ConnectionResult)> --> $r17 = (java.lang.SecurityException) r5
<com.inmarket.m2m.internal.geofence.LocationManager: android.app.PendingIntent getGeofencePendingIntent(android.content.Context)> --> $r3 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI GEO>
<com.inmarket.m2m.internal.log.LogI: void d(java.lang.String,java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void d(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> $d0 = virtualinvoke $r13.<android.location.Location: double getLongitude()>()
<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> r2 := @caughtexception
<com.inmarket.m2m.internal.log.LogI: void e(java.lang.String,java.lang.String,java.lang.Throwable)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void e(java.lang.String,java.lang.String,java.lang.Throwable)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, $r2, $r3)
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> $d0 = virtualinvoke $r13.<android.location.Location: double getLatitude()>()
<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> r2 := @caughtexception
<com.inmarket.m2m.internal.geofence.LocationManager: void sendDeviceLogEntry(java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.geofence.LocationManager
<com.inmarket.m2m.internal.M2MServiceUtil: void sendDeviceLogEntry(android.content.Context,java.lang.String,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.M2MServiceUtil: void sendDeviceLogEntry(android.content.Context,java.lang.String,java.lang.String,int)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.network.OkNetworkTask: void <clinit>()> --> nop
<com.inmarket.m2m.internal.network.OkNetworkTask: void <clinit>()> --> $r0 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>("application/x-www-form-urlencoded")
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> $d0 = virtualinvoke $r13.<android.location.Location: double getLatitude()>()
<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> r2 := @caughtexception
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> nop
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> $r3 = new com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void <init>(boolean)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> specialinvoke $r3.<com.inmarket.m2m.internal.log.LogI: void <init>(boolean)>(0)
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI GEO> = $r3
<com.inmarket.m2m.internal.log.LogI: void e(java.lang.String,java.lang.String)> --> $r2 = staticinvoke <com.inmarket.m2m.internal.log.Log: java.lang.String _mod(java.lang.String,java.lang.String,java.lang.String)>("ERROR", $r1, $r2)
<com.inmarket.m2m.internal.geofence.LocationManager: void lambda$removeAllGeofences$10(com.inmarket.m2m.internal.geofence.LocationManager,java.lang.String,java.lang.Runnable,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.ConnectionResult)> --> virtualinvoke $r6.<com.inmarket.m2m.internal.log.LogI: void e(java.lang.String,java.lang.String)>($r7, $r1)
<com.inmarket.m2m.internal.geofence.LocationManager: void lambda$removeAllGeofences$10(com.inmarket.m2m.internal.geofence.LocationManager,java.lang.String,java.lang.Runnable,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.ConnectionResult)> --> $r17 = (java.lang.SecurityException) r5
<com.inmarket.m2m.internal.geofence.LocationManager: android.app.PendingIntent getGeofencePendingIntent(android.content.Context)> --> $r3 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI GEO>
<com.inmarket.m2m.internal.log.LogI: void d(java.lang.String,java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: boolean isEnabled()> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void d(java.lang.String,java.lang.String)> --> $z0 = virtualinvoke r0.<com.inmarket.m2m.internal.log.LogI: boolean isEnabled()>()
<com.inmarket.m2m.internal.geofence.LocationManager: android.app.PendingIntent getGeofencePendingIntent(android.content.Context)> --> virtualinvoke $r3.<com.inmarket.m2m.internal.log.LogI: void d(java.lang.String,java.lang.String)>($r4, $r6)
<com.inmarket.m2m.internal.geofence.LocationManager: android.app.PendingIntent getGeofencePendingIntent(android.content.Context)> --> $r3 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI GEO>
<com.inmarket.m2m.internal.geofence.LocationManager: void removeAllGeofences(java.lang.Runnable)> --> virtualinvoke $r4.<com.inmarket.m2m.internal.log.LogI: void d(java.lang.String,java.lang.String)>($r5, $r6)
<com.inmarket.m2m.internal.geofence.LocationManager: void lambda$getLocationUpdate$1(com.inmarket.m2m.internal.geofence.LocationManager,int,java.lang.String,com.inmarket.m2m.internal.geofence.LocationManager$LocationCallback,long,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.ConnectionResult)> --> $r13 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI GEO>
<com.inmarket.m2m.internal.log.LogI: void w(java.lang.String,java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void w(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> $d0 = virtualinvoke $r13.<android.location.Location: double getLongitude()>()
<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> r2 := @caughtexception
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> nop
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> $r3 = new com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void <init>(boolean)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> specialinvoke $r3.<com.inmarket.m2m.internal.log.LogI: void <init>(boolean)>(0)
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI GEO> = $r3
<com.inmarket.m2m.internal.log.LogI: void e(java.lang.String,java.lang.String)> --> $r2 = staticinvoke <com.inmarket.m2m.internal.log.Log: java.lang.String _mod(java.lang.String,java.lang.String,java.lang.String)>("ERROR", $r1, $r2)
<com.inmarket.m2m.internal.geofence.LocationManager: void lambda$removeAllGeofences$10(com.inmarket.m2m.internal.geofence.LocationManager,java.lang.String,java.lang.Runnable,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.ConnectionResult)> --> virtualinvoke $r6.<com.inmarket.m2m.internal.log.LogI: void e(java.lang.String,java.lang.String)>($r7, $r1)
<com.inmarket.m2m.internal.geofence.LocationManager: void lambda$removeAllGeofences$10(com.inmarket.m2m.internal.geofence.LocationManager,java.lang.String,java.lang.Runnable,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.ConnectionResult)> --> $r17 = (java.lang.SecurityException) r5
<com.inmarket.m2m.internal.geofence.LocationManager: android.app.PendingIntent getGeofencePendingIntent(android.content.Context)> --> $r3 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI GEO>
<com.inmarket.m2m.internal.log.LogI: void d(java.lang.String,java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: boolean isEnabled()> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void d(java.lang.String,java.lang.String)> --> $z0 = virtualinvoke r0.<com.inmarket.m2m.internal.log.LogI: boolean isEnabled()>()
<com.inmarket.m2m.internal.geofence.LocationManager: android.app.PendingIntent getGeofencePendingIntent(android.content.Context)> --> virtualinvoke $r3.<com.inmarket.m2m.internal.log.LogI: void d(java.lang.String,java.lang.String)>($r4, $r6)
<com.inmarket.m2m.internal.geofence.LocationManager: android.app.PendingIntent getGeofencePendingIntent(android.content.Context)> --> $r3 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI GEO>
<com.inmarket.m2m.internal.geofence.GeofencingBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> --> virtualinvoke $r3.<com.inmarket.m2m.internal.log.LogI: void d(java.lang.String,java.lang.String)>($r6, $r11)
<com.inmarket.m2m.internal.geofence.LocationManager: void initiateLocationsFetch(android.content.Context,com.inmarket.m2m.internal.data.UserLocation)> --> $r3 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI GEO>
<com.inmarket.m2m.internal.log.LogI: void w(java.lang.String,java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void w(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> $d0 = virtualinvoke $r13.<android.location.Location: double getLatitude()>()
<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> r2 := @caughtexception
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> nop
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> $r3 = new com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void <init>(boolean)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> specialinvoke $r3.<com.inmarket.m2m.internal.log.LogI: void <init>(boolean)>(0)
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI GEO> = $r3
<com.inmarket.m2m.internal.log.LogI: void e(java.lang.String,java.lang.String)> --> $r2 = staticinvoke <com.inmarket.m2m.internal.log.Log: java.lang.String _mod(java.lang.String,java.lang.String,java.lang.String)>("ERROR", $r1, $r2)
<com.inmarket.m2m.internal.geofence.LocationManager: void lambda$removeAllGeofences$10(com.inmarket.m2m.internal.geofence.LocationManager,java.lang.String,java.lang.Runnable,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.ConnectionResult)> --> virtualinvoke $r6.<com.inmarket.m2m.internal.log.LogI: void e(java.lang.String,java.lang.String)>($r7, $r1)
<com.inmarket.m2m.internal.geofence.LocationManager: void lambda$removeAllGeofences$10(com.inmarket.m2m.internal.geofence.LocationManager,java.lang.String,java.lang.Runnable,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.ConnectionResult)> --> $r17 = (java.lang.SecurityException) r5
<com.inmarket.m2m.internal.geofence.LocationManager: android.app.PendingIntent getGeofencePendingIntent(android.content.Context)> --> $r3 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI GEO>
<com.inmarket.m2m.internal.log.LogI: void d(java.lang.String,java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void d(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> $d0 = virtualinvoke $r13.<android.location.Location: double getLatitude()>()
<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> r2 := @caughtexception
<com.inmarket.m2m.internal.log.LogI: void e(java.lang.String,java.lang.String,java.lang.Throwable)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void e(java.lang.String,java.lang.String,java.lang.Throwable)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, $r2, $r3)
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> $d0 = virtualinvoke $r13.<android.location.Location: double getLongitude()>()
<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> r2 := @caughtexception
<com.inmarket.m2m.internal.geofence.LocationManager: void sendDeviceLogEntry(java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.geofence.LocationManager
<com.inmarket.m2m.internal.M2MServiceUtil: void sendDeviceLogEntry(android.content.Context,java.lang.String,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.M2MServiceUtil: void sendDeviceLogEntry(android.content.Context,java.lang.String,java.lang.String,int)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.network.OkNetworkTask: void <clinit>()> --> nop
<com.inmarket.m2m.internal.network.OkNetworkTask: void <clinit>()> --> $r0 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>("application/x-www-form-urlencoded")
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> $d0 = virtualinvoke $r13.<android.location.Location: double getLongitude()>()
<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> r2 := @caughtexception
<com.inmarket.m2m.internal.geofence.LocationManager: void sendDeviceLogEntry(java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.geofence.LocationManager
<com.inmarket.m2m.internal.M2MServiceUtil: void sendDeviceLogEntry(android.content.Context,java.lang.String,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.M2MServiceUtil: void sendDeviceLogEntry(android.content.Context,java.lang.String,java.lang.String,int)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.data.M2MSvcConfig: com.inmarket.m2m.internal.data.M2MSvcConfig instance(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.log.LogI: void i(java.lang.String,java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void i(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> $d0 = virtualinvoke $r13.<android.location.Location: double getLatitude()>()
<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> r2 := @caughtexception
<com.inmarket.m2m.internal.geofence.LocationManager: void sendDeviceLogEntry(java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.geofence.LocationManager
<com.inmarket.m2m.internal.M2MServiceUtil: void sendDeviceLogEntry(android.content.Context,java.lang.String,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.M2MServiceUtil: void sendDeviceLogEntry(android.content.Context,java.lang.String,java.lang.String,int)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.network.OkNetworkTask: void <clinit>()> --> nop
<com.inmarket.m2m.internal.network.OkNetworkTask: void <clinit>()> --> $r0 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>("application/json; charset=utf-8")
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> $d0 = virtualinvoke $r13.<android.location.Location: double getLongitude()>()
<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> r2 := @caughtexception
<com.inmarket.m2m.internal.geofence.LocationManager: void sendDeviceLogEntry(java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.geofence.LocationManager
<com.inmarket.m2m.internal.M2MServiceUtil: void sendDeviceLogEntry(android.content.Context,java.lang.String,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.M2MServiceUtil: void sendDeviceLogEntry(android.content.Context,java.lang.String,java.lang.String,int)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.network.DeviceLogEntryNetTask: void <init>()> --> r0 := @this: com.inmarket.m2m.internal.network.DeviceLogEntryNetTask
<com.inmarket.m2m.internal.network.PostNetworkTask: void <init>()> --> r0 := @this: com.inmarket.m2m.internal.network.PostNetworkTask
<com.inmarket.m2m.internal.network.OkNetworkTask: void <init>()> --> r0 := @this: com.inmarket.m2m.internal.network.OkNetworkTask
<com.inmarket.m2m.internal.network.OkNetworkTask: void initializeClass()> --> r0 = new okhttp3.OkHttpClient$Builder
<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()> --> r0 := @this: okhttp3.OkHttpClient$Builder
<okhttp3.OkHttpClient: void <clinit>()> --> nop
<okhttp3.Protocol: void <clinit>()> --> nop
<okhttp3.Protocol: void <clinit>()> --> <okhttp3.Protocol: okhttp3.Protocol HTTP_1_1> = $r0
<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)> --> $r29 = <okhttp3.Protocol: okhttp3.Protocol HTTP_1_1>
<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)> --> $r23 := @caughtexception
<okhttp3.internal.Util: void closeQuietly(java.net.Socket)> --> $r0 := @parameter0: java.net.Socket
<okhttp3.internal.Util: void closeQuietly(java.net.Socket)> --> virtualinvoke $r0.<java.net.Socket: void close()>()
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> $d0 = virtualinvoke $r13.<android.location.Location: double getLatitude()>()
<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> r2 := @caughtexception
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> nop
<com.inmarket.m2m.internal.log.Log: void <clinit>()> --> <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI GEO> = $r3
<com.inmarket.m2m.internal.geofence.LocationManager: void lambda$removeAllGeofences$10(com.inmarket.m2m.internal.geofence.LocationManager,java.lang.String,java.lang.Runnable,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.ConnectionResult)> --> $r6 = <com.inmarket.m2m.internal.log.Log: com.inmarket.m2m.internal.log.LogI GEO>
<com.inmarket.m2m.internal.log.LogI: void e(java.lang.String,java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void e(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> $d0 = virtualinvoke $r13.<android.location.Location: double getLatitude()>()
<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> r2 := @caughtexception
<com.inmarket.m2m.internal.geofence.LocationManager: void sendDeviceLogEntry(java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.geofence.LocationManager
<com.inmarket.m2m.internal.M2MServiceUtil: void sendDeviceLogEntry(android.content.Context,java.lang.String,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.M2MServiceUtil: void sendDeviceLogEntry(android.content.Context,java.lang.String,java.lang.String,int)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.log.Log: void v(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.inmarket.m2m.internal.log.LogI: void v(java.lang.String,java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.log.LogI
<com.inmarket.m2m.internal.log.LogI: void v(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> $d0 = virtualinvoke $r13.<android.location.Location: double getLatitude()>()
<com.inmarket.m2m.internal.geofence.LocationManager: void handleIntent(android.content.Intent)> --> r2 := @caughtexception
<com.inmarket.m2m.internal.geofence.LocationManager: void sendDeviceLogEntry(java.lang.String)> --> r0 := @this: com.inmarket.m2m.internal.geofence.LocationManager
<com.inmarket.m2m.internal.M2MServiceUtil: void sendDeviceLogEntry(android.content.Context,java.lang.String,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.M2MServiceUtil: void sendDeviceLogEntry(android.content.Context,java.lang.String,java.lang.String,int)> --> $r0 := @parameter0: android.content.Context
<com.inmarket.m2m.internal.network.DeviceLogEntryNetTask: void <init>()> --> r0 := @this: com.inmarket.m2m.internal.network.DeviceLogEntryNetTask
<com.inmarket.m2m.internal.network.PostNetworkTask: void <init>()> --> r0 := @this: com.inmarket.m2m.internal.network.PostNetworkTask
<com.inmarket.m2m.internal.network.OkNetworkTask: void <init>()> --> r0 := @this: com.inmarket.m2m.internal.network.OkNetworkTask
<com.inmarket.m2m.internal.network.OkNetworkTask: void initializeClass()> --> r0 = new okhttp3.OkHttpClient$Builder
<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()> --> r0 := @this: okhttp3.OkHttpClient$Builder
<okhttp3.OkHttpClient: void <clinit>()> --> nop
<okhttp3.Protocol: void <clinit>()> --> nop
<okhttp3.Protocol: void <clinit>()> --> <okhttp3.Protocol: okhttp3.Protocol HTTP_1_1> = $r0
<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)> --> $r29 = <okhttp3.Protocol: okhttp3.Protocol HTTP_1_1>
<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)> --> $r23 := @caughtexception
<okhttp3.internal.Util: void closeQuietly(java.net.Socket)> --> $r0 := @parameter0: java.net.Socket
<okhttp3.internal.Util: void closeQuietly(java.net.Socket)> --> virtualinvoke $r0.<java.net.Socket: void close()>()
--------------------------------------------------------

