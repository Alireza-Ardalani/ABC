<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings$1: void run()> --> r0 := @this: com.onradar.sdk._RadarSettings$1
<com.onradar.sdk._RadarSettings$1: void run()> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-ad-id", $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("mParticle", $r3, $r1)
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> r0.<com.joann.android.MainActivity: android.location.Location location> = $r9
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r0 := @parameter0: java.lang.Double
<com.joann.android.utilities.AccountManager: boolean isGigyaSessionValid()> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void setGigyaUser(com.gigya.socialize.GSObject)> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.gigya.socialize.GSObject: java.lang.String toJsonString()> --> r0 := @this: com.gigya.socialize.GSObject
<com.gigya.socialize.GSObject: org.json.JSONObject toJsonObject()> --> r0 := @this: com.gigya.socialize.GSObject
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: com.mparticle.internal.s getUserStorage(long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: com.mparticle.internal.s b(android.content.Context,long)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void <init>(android.content.Context,long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s$a: void a(android.content.Context,boolean)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s$a: void a(android.content.Context,boolean)> --> $r2 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("mp::needs_to_migrate_to_mpid_dependent", 0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.util.ButtonLog: void infoFormat(java.lang.String,java.lang.String,java.lang.Object[])> --> $r0 := @parameter0: java.lang.String
<com.usebutton.sdk.internal.util.ButtonLog: void doLogInfo(java.lang.String,java.lang.String,java.lang.Object[])> --> r0 := @this: com.usebutton.sdk.internal.util.ButtonLog
<com.usebutton.sdk.internal.util.ButtonLog: boolean isLoggingEnabled()> --> r0 := @this: com.usebutton.sdk.internal.util.ButtonLog
<com.usebutton.sdk.internal.util.ButtonLog: boolean isLoggingEnabled()> --> $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("ButtonSDK", $i0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::push_reg_id", $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::push_reg_id", $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings$1: void run()> --> r0 := @this: com.onradar.sdk._RadarSettings$1
<com.onradar.sdk._RadarSettings$1: void run()> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-ad-id", $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void access$100(com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl)> --> $r0 := @parameter0: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void dispatchActions()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl: void close()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl
<com.maxymiser.mmtapp.internal.core.persistence.DatabaseManager: void closeDatabase()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.persistence.DatabaseManager
<com.maxymiser.mmtapp.internal.core.persistence.DatabaseManager: void closeDatabase()> --> virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void close()>()
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.util.ButtonLog: void infoFormat(java.lang.String,java.lang.String,java.lang.Object[])> --> $r0 := @parameter0: java.lang.String
<com.usebutton.sdk.internal.util.ButtonLog: void doLogInfo(java.lang.String,java.lang.String,java.lang.Object[])> --> r0 := @this: com.usebutton.sdk.internal.util.ButtonLog
<com.usebutton.sdk.internal.util.ButtonLog$1: void i(java.lang.String,java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.util.ButtonLog$1
<com.usebutton.sdk.internal.util.ButtonLog$1: void i(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("mParticle", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void access$100(com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl)> --> $r0 := @parameter0: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void dispatchActions()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl: com.maxymiser.mmtapp.internal.core.model.ActionModel getActionToDispatch()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl
<com.maxymiser.mmtapp.internal.core.persistence.ActionDBWrapper: com.maxymiser.mmtapp.internal.core.model.ActionModel getActionToDispatch(android.database.sqlite.SQLiteDatabase)> --> $r0 := @parameter0: android.database.sqlite.SQLiteDatabase
<com.maxymiser.mmtapp.internal.core.persistence.ActionDBWrapper: com.maxymiser.mmtapp.internal.core.model.ActionModel getActionToDispatch(android.database.sqlite.SQLiteDatabase)> --> $r2 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("actions", $r1, null, null, null, null, "actionTimestamp ASC")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,boolean)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.ConfigManager: void setPushToken(java.lang.String)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: void setPushToken(java.lang.String)> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::pushtoken", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,boolean)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.ConfigManager: void setPushToken(java.lang.String)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: void setPushToken(java.lang.String)> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::pushtoken", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(com.mparticle.internal.Session)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.c.d$a: com.mparticle.internal.c.a a()> --> r0 := @this: com.mparticle.internal.c.d$a
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: com.mparticle.internal.s getUserStorage(long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: com.mparticle.internal.s b(android.content.Context,long)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void <init>(android.content.Context,long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: android.content.SharedPreferences g(long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void a(java.util.Set)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void a(android.content.Context,java.util.Set)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void a(android.content.Context,java.util.Set)> --> $r7 = interfaceinvoke $r7.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::user_config_collection", $r8)
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> r0.<com.joann.android.MainActivity: android.location.Location location> = $r9
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r0 := @parameter0: java.lang.Double
<com.joann.android.utilities.AccountManager: boolean isGigyaSessionValid()> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> $r0 = <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI instance>
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> $r0 = new com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI instance> = $r0
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> $r0 = <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI instance>
<com.gigya.socialize.android.GSAsyncRequest: void afterResponse(com.gigya.socialize.GSResponse,java.lang.Object)> --> $r9 = staticinvoke <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()>()
<com.gigya.socialize.android.GSAPI: void setSession(com.gigya.socialize.android.GSSession,java.lang.String,com.gigya.socialize.GSResponseListener,java.lang.Object)> --> r0 := @this: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void setSession(com.gigya.socialize.android.GSSession,java.lang.String,com.gigya.socialize.GSResponseListener,java.lang.Object)> --> if r5 == null goto $z0 = 1
<com.gigya.socialize.android.GSAPI: void setSession(com.gigya.socialize.android.GSSession,java.lang.String,com.gigya.socialize.GSResponseListener,java.lang.Object)> --> r0.<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSSession session> = $r1
<com.gigya.socialize.android.GSAPI: void saveSession()> --> r0 := @this: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void saveSession()> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("session.Token", $r4)
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> r0.<com.joann.android.MainActivity: android.location.Location location> = $r9
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r0 := @parameter0: java.lang.Double
<com.joann.android.utilities.AccountManager: boolean isGigyaSessionValid()> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void setApiUser(com.joann.android.rest.models.User)> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.PreferencesManager: void putObject(java.lang.String,java.lang.Object)> --> r0 := @this: com.joann.android.utilities.PreferencesManager
<com.joann.android.utilities.PreferencesManager: void putObject(java.lang.String,java.lang.Object)> --> $r8 = interfaceinvoke $r8.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r1, $r6)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.MParticle$1: void onReceived(java.lang.String)> --> r0 := @this: com.mparticle.MParticle$1
<com.mparticle.MParticle: com.mparticle.MParticle getInstance()> --> $r0 = <com.mparticle.MParticle: com.mparticle.MParticle instance>
<com.mparticle.internal.Logger: void error(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void error(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("mParticle", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("mParticle", $r3, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void postEventAsync(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker$1
<com.usebutton.sdk.internal.events.IntermediateStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.IntermediateStore
<com.usebutton.sdk.internal.events.DatabaseStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.DatabaseStore
<com.usebutton.sdk.internal.events.DatabaseStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: void close()>()
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.gigya.socialize.android.GSAPI$10: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.gigya.socialize.android.GSAPI$10
<com.gigya.socialize.android.GSAPI: void access$400(com.gigya.socialize.android.GSAPI,java.lang.String)> --> $r0 := @parameter0: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void setUCID(java.lang.String)> --> r0 := @this: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void setUCID(java.lang.String)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("ucid", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void access$100(com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl)> --> $r0 := @parameter0: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void dispatchActions()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl: com.maxymiser.mmtapp.internal.core.model.ActionModel getActionToDispatch()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl
<com.maxymiser.mmtapp.internal.core.persistence.ConfigurationDBWrapper: com.maxymiser.mmtapp.internal.core.model.ConfigurationModel getConfigurationWithId(android.database.sqlite.SQLiteDatabase,long)> --> $r0 := @parameter0: android.database.sqlite.SQLiteDatabase
<com.maxymiser.mmtapp.internal.core.persistence.ConfigurationDBWrapper: com.maxymiser.mmtapp.internal.core.model.ConfigurationModel getConfigurationWithId(android.database.sqlite.SQLiteDatabase,long)> --> $r4 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("configurations", $r3, "_id = ?", r1, null, null, null)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("mParticle", $r3, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::push_reg_sender_id", $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::push_reg_sender_id", $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("mParticle", $r3, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> $r3 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: boolean getTracking(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: boolean getTracking(android.content.Context)> --> if $r0 != null goto $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("RadarSDK", 0)
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> $z0 = staticinvoke <com.onradar.sdk._RadarSettings: boolean getTracking(android.content.Context)>($r3)
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> if $z0 != 0 goto $r4 = "android.intent.action.BOOT_COMPLETED"
<com.onradar.sdk._RadarSettings: void clearStoppedAt(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void clearStoppedAt(android.content.Context)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("radar-stoppedAt", 0L)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarLogger: void log(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarLogger: void log(android.content.Context,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("_RadarLogger", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("mParticle", $r3, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,boolean)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.c.d$a: com.mparticle.internal.c.a a()> --> r0 := @this: com.mparticle.internal.c.d$a
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: com.mparticle.internal.s getUserStorage(long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: com.mparticle.internal.s b(android.content.Context,long)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void <init>(android.content.Context,long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s$a: void a(com.mparticle.internal.s)> --> r0 := @this: com.mparticle.internal.s$a
<com.mparticle.internal.s: void b(java.lang.String)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void b(java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r2, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: boolean isLoggable(int)> --> $i0 := @parameter0: int
<com.mparticle.internal.Logger: boolean isLoggable(int)> --> $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("mParticle", $i0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.gigya.socialize.android.GSAPI$10: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.gigya.socialize.android.GSAPI$10
<com.gigya.socialize.android.GSAPI: void access$400(com.gigya.socialize.android.GSAPI,java.lang.String)> --> $r0 := @parameter0: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void setUCID(java.lang.String)> --> r0 := @this: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void setUCID(java.lang.String)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("ucid", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.MParticle$1: void onReceived(java.lang.String)> --> r0 := @this: com.mparticle.MParticle$1
<com.mparticle.MParticle: com.mparticle.MParticle getInstance()> --> $r0 = <com.mparticle.MParticle: com.mparticle.MParticle instance>
<com.mparticle.internal.Logger: void error(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void error(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("mParticle", $r3, $r1)
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> r0.<com.joann.android.MainActivity: android.location.Location location> = $r9
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r0 := @parameter0: java.lang.Double
<com.joann.android.utilities.AccountManager: boolean isGigyaSessionValid()> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> $r0 = <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI instance>
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> $r0 = new com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI instance> = $r0
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> $r0 = <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI instance>
<com.gigya.socialize.android.GSAsyncRequest: void afterResponse(com.gigya.socialize.GSResponse,java.lang.Object)> --> $r9 = staticinvoke <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()>()
<com.gigya.socialize.android.GSAPI: void setSession(com.gigya.socialize.android.GSSession,java.lang.String,com.gigya.socialize.GSResponseListener,java.lang.Object)> --> r0 := @this: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void setSession(com.gigya.socialize.android.GSSession,java.lang.String,com.gigya.socialize.GSResponseListener,java.lang.Object)> --> if r5 == null goto $z0 = 1
<com.gigya.socialize.android.GSAPI: void setSession(com.gigya.socialize.android.GSSession,java.lang.String,com.gigya.socialize.GSResponseListener,java.lang.Object)> --> r0.<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSSession session> = $r1
<com.gigya.socialize.android.GSAPI: void saveSession()> --> r0 := @this: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void saveSession()> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("session.ExpirationTime", $l0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("mParticle", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: void b(com.mparticle.internal.Session)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.s: void d(long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void d(long)> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>($r1, $l0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.gigya.socialize.android.GSAPI$10: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.gigya.socialize.android.GSAPI$10
<com.gigya.socialize.android.GSAPI$10: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, $r7)
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r0 := @parameter0: java.lang.Double
<com.joann.android.utilities.AccountManager: boolean isGigyaSessionValid()> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void setGigyaUser(com.gigya.socialize.GSObject)> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.gigya.socialize.GSObject: java.lang.String toJsonString()> --> r0 := @this: com.gigya.socialize.GSObject
<com.gigya.socialize.GSObject: org.json.JSONObject toJsonObject()> --> r0 := @this: com.gigya.socialize.GSObject
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: com.mparticle.internal.s getUserStorage(long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: com.mparticle.internal.s b(android.content.Context,long)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void <init>(android.content.Context,long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: android.content.SharedPreferences g(long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void a(java.util.Set)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void a(android.content.Context,java.util.Set)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void a(android.content.Context,java.util.Set)> --> $r7 = interfaceinvoke $r7.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::user_config_collection", $r8)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("mParticle", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void postEventAsync(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker$1
<com.usebutton.sdk.internal.events.IntermediateStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.IntermediateStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.DatabaseStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void close()>()
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("mParticle", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,boolean)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.c.d$a: com.mparticle.internal.c.a a()> --> r0 := @this: com.mparticle.internal.c.d$a
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: com.mparticle.internal.s getUserStorage(long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: com.mparticle.internal.s b(android.content.Context,long)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void <init>(android.content.Context,long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s$a: void a(android.content.Context,boolean)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s$a: void a(android.content.Context,boolean)> --> $r2 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("mp::needs_to_migrate_to_mpid_dependent", 0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(com.mparticle.internal.Session)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.s: void j()> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void j()> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>($r1, -1L)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void trackOnce(com.onradar.sdk.RadarCallback)> --> $r1 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void trackOnce(com.onradar.sdk.RadarCallback)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void trackOnce(com.onradar.sdk.RadarCallback)> --> $r3 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: java.lang.String getPublishableKey(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: java.lang.String getPublishableKey(android.content.Context)> --> if $r0 != null goto $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("RadarSDK", 0)
<com.onradar.sdk._Radar: void trackOnce(com.onradar.sdk.RadarCallback)> --> $r4 = staticinvoke <com.onradar.sdk._RadarSettings: java.lang.String getPublishableKey(android.content.Context)>($r3)
<com.onradar.sdk._Radar: void trackOnce(com.onradar.sdk.RadarCallback)> --> if $r4 == null goto (branch)
<com.joann.android.MainActivity$3: void onCallback(com.onradar.sdk.Radar$RadarStatus,android.location.Location,com.onradar.sdk.model.RadarEvent[],com.onradar.sdk.model.RadarUser)> --> r0 := @this: com.joann.android.MainActivity$3
<com.joann.android.MainActivity$3: void onCallback(com.onradar.sdk.Radar$RadarStatus,android.location.Location,com.onradar.sdk.model.RadarEvent[],com.onradar.sdk.model.RadarUser)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("RadarCallback", $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.MParticle$1: void onReceived(java.lang.String)> --> r0 := @this: com.mparticle.MParticle$1
<com.mparticle.b: void a(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.b: void a(android.content.Context,java.lang.String)> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::install_referrer", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk.Radar: void trackOnce(com.onradar.sdk.RadarCallback)> --> $r1 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> staticinvoke <com.onradar.sdk.Radar: void trackOnce(com.onradar.sdk.RadarCallback)>($r16)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void setUserId(java.lang.String)> --> $r1 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void setUserId(java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void setUserId(java.lang.String)> --> $r2 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setUserId(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void setUserId(android.content.Context,java.lang.String)> --> if $r0 != null goto (branch)
<com.onradar.sdk._RadarSettings: void setUserId(android.content.Context,java.lang.String)> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-userId", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: boolean isLoggable(int)> --> $i0 := @parameter0: int
<com.mparticle.internal.Logger: boolean isLoggable(int)> --> $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("mParticle", $i0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void access$100(com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl)> --> $r0 := @parameter0: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void dispatchActions()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl: com.maxymiser.mmtapp.internal.core.model.ActionModel getActionToDispatch()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl
<com.maxymiser.mmtapp.internal.core.persistence.ActionDBWrapper: com.maxymiser.mmtapp.internal.core.model.ActionModel getActionToDispatch(android.database.sqlite.SQLiteDatabase)> --> $r0 := @parameter0: android.database.sqlite.SQLiteDatabase
<com.maxymiser.mmtapp.internal.core.persistence.ActionDBWrapper: com.maxymiser.mmtapp.internal.core.model.ActionModel getActionToDispatch(android.database.sqlite.SQLiteDatabase)> --> $r2 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("actions", $r1, null, null, null, null, "actionTimestamp ASC")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.joann.android.utilities.AccountManager$4: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.joann.android.utilities.AccountManager$4
<com.joann.android.utilities.AccountManager$4: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, $r6)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.MParticle$1: void onReceived(java.lang.String)> --> r0 := @this: com.mparticle.MParticle$1
<com.mparticle.MParticle: com.mparticle.MParticle getInstance()> --> $r0 = <com.mparticle.MParticle: com.mparticle.MParticle instance>
<com.mparticle.internal.Logger: void error(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void error(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("mParticle", $r3)
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> r0.<com.joann.android.MainActivity: android.location.Location location> = $r9
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r0 := @parameter0: java.lang.Double
<com.joann.android.utilities.AccountManager: boolean isGigyaSessionValid()> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> $r0 = <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI instance>
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> $r0 = new com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI instance> = $r0
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> $r0 = <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI instance>
<com.gigya.socialize.android.GSAsyncRequest$GSRequestTask: com.gigya.socialize.GSResponse doInBackground(com.gigya.socialize.GSRequest[])> --> $r6 = staticinvoke <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()>()
<com.gigya.socialize.android.GSAPI: void saveTimestampOffset(long)> --> r0 := @this: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void saveTimestampOffset(long)> --> interfaceinvoke $r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("tsOffset", $l0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,boolean)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.c.d$a: com.mparticle.internal.c.a a()> --> r0 := @this: com.mparticle.internal.c.d$a
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: com.mparticle.internal.s getUserStorage(long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: com.mparticle.internal.s b(android.content.Context,long)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void <init>(android.content.Context,long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s$a: void a(com.mparticle.internal.s)> --> r0 := @this: com.mparticle.internal.s$a
<com.mparticle.internal.s: void b(java.lang.String)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void b(java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r2, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.joann.android.utilities.AccountManager$4: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.joann.android.utilities.AccountManager$4
<com.joann.android.utilities.AccountManager$4: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, $r6)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.joann.android.utilities.AccountManager$4: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.joann.android.utilities.AccountManager$4
<com.joann.android.utilities.AccountManager: void access$100(com.joann.android.utilities.AccountManager,com.gigya.socialize.GSObject)> --> $r0 := @parameter0: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void setGigyaUser(com.gigya.socialize.GSObject)> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.PreferencesManager: void putString(java.lang.String,java.lang.String)> --> r0 := @this: com.joann.android.utilities.PreferencesManager
<com.joann.android.utilities.PreferencesManager: void putString(java.lang.String,java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarSettings: void updateSentAt(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void updateSentAt(android.content.Context)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("radar-sentAt", $l0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarClient: void updateLocation(android.content.Context,android.location.Location,boolean,boolean,com.onradar.sdk._RadarCallback)> --> r0 := @this: com.onradar.sdk._RadarClient
<com.onradar.sdk._Radar$3: void onCallback(com.onradar.sdk.Radar$RadarStatus,org.json.JSONObject,com.onradar.sdk.model.RadarEvent[],com.onradar.sdk.model.RadarUser)> --> r0 := @this: com.onradar.sdk._Radar$3
<com.onradar.sdk._RadarSettings: void setRadarId(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void setRadarId(android.content.Context,java.lang.String)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-_id", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("mp::osversion", $i0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.gigya.socialize.android.GSAPI$10: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.gigya.socialize.android.GSAPI$10
<com.gigya.socialize.android.GSAPI: void access$500(com.gigya.socialize.android.GSAPI,java.lang.String)> --> $r0 := @parameter0: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void setGMID(java.lang.String)> --> r0 := @this: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void setGMID(java.lang.String)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("gmid", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("mp::appversion", $i0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void postEventAsync(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker$1
<com.usebutton.sdk.internal.events.IntermediateStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.IntermediateStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.DatabaseStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void close()>()
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void postEventAsync(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker$1
<com.usebutton.sdk.internal.events.IntermediateStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.IntermediateStore
<com.usebutton.sdk.internal.events.DatabaseStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.DatabaseStore
<com.usebutton.sdk.internal.events.DatabaseStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> $l1 = virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("events", null, $r9)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.joann.android.utilities.AccountManager$4: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.joann.android.utilities.AccountManager$4
<com.joann.android.utilities.AccountManager: void access$200(com.joann.android.utilities.AccountManager,java.lang.String)> --> $r0 := @parameter0: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void sendNotification(java.lang.String)> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void sendNotification(java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.gigya.socialize.android.GSAPI$12: void run()> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(com.mparticle.internal.Session)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.s: void j()> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void j()> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>($r1, -1L)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> $r1 = r0.<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl this$0>
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void access$100(com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl)> --> $r0 := @parameter0: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void dispatchActions()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: boolean isAllowed()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void dispatchActions()> --> $z0 = specialinvoke r0.<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: boolean isAllowed()>()
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: boolean sendAction(com.maxymiser.mmtapp.internal.core.model.ActionModel)> --> return 0
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: boolean sendAction(com.maxymiser.mmtapp.internal.core.model.ActionModel)> --> $r5 = r0.<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: com.maxymiser.mmtapp.internal.core.ServiceProvider serviceProvider>
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: boolean sendAction(com.maxymiser.mmtapp.internal.core.model.ActionModel)> --> r14 := @caughtexception
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLog: void warn(java.lang.String,java.lang.Throwable)> --> $r0 := @parameter0: java.lang.String
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl: void warn(java.lang.String,java.lang.String,java.lang.Throwable)> --> r0 := @this: com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl: void warn(java.lang.String,java.lang.String,java.lang.Throwable)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MMTApp", $r2, $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void postEventAsync(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker$1
<com.usebutton.sdk.internal.events.IntermediateStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.IntermediateStore
<com.usebutton.sdk.internal.events.DatabaseStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.DatabaseStore
<com.usebutton.sdk.internal.events.DatabaseStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> $l1 = virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("events", null, $r9)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.pushio.manager.PIORegistrationManager$1: void run()> --> r0 := @this: com.pushio.manager.PIORegistrationManager$1
<com.pushio.manager.PIORegistrationManager: void registerApp()> --> r0 := @this: com.pushio.manager.PIORegistrationManager
<com.pushio.manager.PIOLogger: int v(java.lang.Object[])> --> $r0 := @parameter0: java.lang.Object[]
<com.pushio.manager.PIOLogger: int println(int,java.lang.Object[])> --> $i0 := @parameter0: int
<com.pushio.manager.PIOLogger: int println(int,java.lang.Object[])> --> $i0 = staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>($i0, "pushio", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarLogger: void log(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarLogger: void log(android.content.Context,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("_RadarLogger", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void postEventAsync(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker$1
<com.usebutton.sdk.internal.events.IntermediateStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.IntermediateStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.DatabaseStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> i3 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("events", "seqno = ?", $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void backgroundSendLocation(android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void backgroundSendLocation(android.location.Location,boolean,boolean)> --> virtualinvoke r3.<android.os.PersistableBundle: void putDouble(java.lang.String,double)>("latitude", $d0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::push_reg_sender_id", $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.gigya.socialize.android.GSAPI$10: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.gigya.socialize.android.GSAPI$10
<com.gigya.socialize.android.GSAPI: void access$500(com.gigya.socialize.android.GSAPI,java.lang.String)> --> $r0 := @parameter0: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void setGMID(java.lang.String)> --> r0 := @this: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void setGMID(java.lang.String)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("gmid", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarSettings: void updateSentAt(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void updateSentAt(android.content.Context)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("radar-sentAt", $l0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("mp::appversion", $i0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarClient: void updateLocation(android.content.Context,android.location.Location,boolean,boolean,com.onradar.sdk._RadarCallback)> --> r0 := @this: com.onradar.sdk._RadarClient
<com.onradar.sdk._Radar$3: void onCallback(com.onradar.sdk.Radar$RadarStatus,org.json.JSONObject,com.onradar.sdk.model.RadarEvent[],com.onradar.sdk.model.RadarUser)> --> r0 := @this: com.onradar.sdk._Radar$3
<com.onradar.sdk._RadarSettings: void setRadarId(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void setRadarId(android.content.Context,java.lang.String)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-_id", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.gigya.socialize.android.GSAPI$12: void run()> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.mparticle.internal.AppStateManager$2: void run()> --> r0 := @this: com.mparticle.internal.AppStateManager$2
<com.mparticle.internal.ConfigManager: void setPreviousGoogleAdId()> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: void setPreviousGoogleAdId()> --> $r5 = interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::previous::android::id", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarClient: void updateLocation(android.content.Context,android.location.Location,boolean,boolean,com.onradar.sdk._RadarCallback)> --> r0 := @this: com.onradar.sdk._RadarClient
<com.onradar.sdk._Radar$3: void onCallback(com.onradar.sdk.Radar$RadarStatus,org.json.JSONObject,com.onradar.sdk.model.RadarEvent[],com.onradar.sdk.model.RadarUser)> --> r0 := @this: com.onradar.sdk._Radar$3
<com.onradar.sdk._RadarSettings: void setRadarId(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void setRadarId(android.content.Context,java.lang.String)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-_id", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void access$100(com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl)> --> $r0 := @parameter0: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void dispatchActions()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl: void close()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl
<com.maxymiser.mmtapp.internal.core.persistence.DatabaseManager: void closeDatabase()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.persistence.DatabaseManager
<com.maxymiser.mmtapp.internal.core.persistence.DatabaseManager: void closeDatabase()> --> virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void close()>()
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void initialize(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void logStateTransition(java.lang.String,java.lang.String,long,long,java.lang.String,java.lang.String,java.lang.String,int)> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long,int)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long,int)> --> $r13 = interfaceinvoke $r13.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("mp::crashed_in_foreground", 1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void setUserId(java.lang.String)> --> $r1 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void setUserId(java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void setUserId(java.lang.String)> --> $r2 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setUserId(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void setUserId(android.content.Context,java.lang.String)> --> if $r0 != null goto (branch)
<com.onradar.sdk._RadarSettings: void setUserId(android.content.Context,java.lang.String)> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-userId", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.util.ButtonLog: void infoFormat(java.lang.String,java.lang.String,java.lang.Object[])> --> $r0 := @parameter0: java.lang.String
<com.usebutton.sdk.internal.util.ButtonLog: void doLogInfo(java.lang.String,java.lang.String,java.lang.Object[])> --> r0 := @this: com.usebutton.sdk.internal.util.ButtonLog
<com.usebutton.sdk.internal.util.ButtonLog$1: void i(java.lang.String,java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.util.ButtonLog$1
<com.usebutton.sdk.internal.util.ButtonLog$1: void i(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r0 := @parameter0: java.lang.Double
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r13 = staticinvoke <com.joann.android.utilities.PreferencesManager: com.joann.android.utilities.PreferencesManager getInstance()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> r3 := @caughtexception
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NotificationsManager", "trying to use uninitialized PreferencesManager")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(com.mparticle.internal.Session)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.c.d$a: com.mparticle.internal.c.a a()> --> r0 := @this: com.mparticle.internal.c.d$a
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: com.mparticle.internal.s getUserStorage(long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: com.mparticle.internal.s b(android.content.Context,long)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void <init>(android.content.Context,long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s$a: void a(com.mparticle.internal.s)> --> r0 := @this: com.mparticle.internal.s$a
<com.mparticle.internal.s: void b(java.lang.String)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void b(java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r2, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.pushio.manager.PIORegistrationManager$1: void run()> --> r0 := @this: com.pushio.manager.PIORegistrationManager$1
<com.pushio.manager.PIORegistrationManager: void registerApp()> --> r0 := @this: com.pushio.manager.PIORegistrationManager
<com.pushio.manager.PIOLogger: int v(java.lang.Object[])> --> $r0 := @parameter0: java.lang.Object[]
<com.pushio.manager.PIOLogger: int println(int,java.lang.Object[])> --> $i0 := @parameter0: int
<com.pushio.manager.PIOLogger: int println(int,java.lang.Object[])> --> $i0 = staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>($i0, "pushio", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void initialize(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void logStateTransition(java.lang.String,java.lang.String,long,long,java.lang.String,java.lang.String,java.lang.String,int)> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long,int)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long,int)> --> $r13 = interfaceinvoke $r13.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("mp::crashed_in_foreground", 1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings$1: void run()> --> r0 := @this: com.onradar.sdk._RadarSettings$1
<com.onradar.sdk._RadarSettings$1: void run()> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-ad-id", $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.pushio.manager.PIORegistrationManager$1: void run()> --> r0 := @this: com.pushio.manager.PIORegistrationManager$1
<com.pushio.manager.PIORegistrationManager: void registerApp()> --> r0 := @this: com.pushio.manager.PIORegistrationManager
<com.pushio.manager.PIOLogger: int v(java.lang.Object[])> --> $r0 := @parameter0: java.lang.Object[]
<com.pushio.manager.PIOLogger: int println(int,java.lang.Object[])> --> $i0 := @parameter0: int
<com.pushio.manager.PIOLogger: int println(int,java.lang.Object[])> --> $i0 = staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>($i0, "pushio", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.gigya.socialize.android.GSAPI$12: void run()> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.MParticle$1: void onReceived(java.lang.String)> --> r0 := @this: com.mparticle.MParticle$1
<com.mparticle.b: void a(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.b: void a(android.content.Context,java.lang.String)> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::install_referrer", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("mParticle", $r3)
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> r0.<com.joann.android.MainActivity: android.location.Location location> = $r9
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r0 := @parameter0: java.lang.Double
<com.joann.android.utilities.AccountManager: boolean isGigyaSessionValid()> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> $r0 = <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI instance>
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> $r0 = new com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI instance> = $r0
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> $r0 = <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI instance>
<com.gigya.socialize.android.GSAsyncRequest: void afterResponse(com.gigya.socialize.GSResponse,java.lang.Object)> --> $r9 = staticinvoke <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()>()
<com.gigya.socialize.android.GSAPI: void setSession(com.gigya.socialize.android.GSSession,java.lang.String,com.gigya.socialize.GSResponseListener,java.lang.Object)> --> r0 := @this: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void setSession(com.gigya.socialize.android.GSSession,java.lang.String,com.gigya.socialize.GSResponseListener,java.lang.Object)> --> if r5 == null goto $z0 = 1
<com.gigya.socialize.android.GSAPI: void setSession(com.gigya.socialize.android.GSSession,java.lang.String,com.gigya.socialize.GSResponseListener,java.lang.Object)> --> r0.<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSSession session> = $r1
<com.gigya.socialize.android.GSAPI: void saveSession()> --> r0 := @this: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void saveSession()> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("session.Secret", $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("mp::osversion", $i0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: boolean isLoggable(int)> --> $i0 := @parameter0: int
<com.mparticle.internal.Logger: boolean isLoggable(int)> --> $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("mParticle", $i0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void trackOnce(com.onradar.sdk.RadarCallback)> --> $r1 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void trackOnce(com.onradar.sdk.RadarCallback)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void trackOnce(com.onradar.sdk.RadarCallback)> --> $r3 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: java.lang.String getPublishableKey(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: java.lang.String getPublishableKey(android.content.Context)> --> if $r0 != null goto $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("RadarSDK", 0)
<com.onradar.sdk._Radar: void trackOnce(com.onradar.sdk.RadarCallback)> --> $r4 = staticinvoke <com.onradar.sdk._RadarSettings: java.lang.String getPublishableKey(android.content.Context)>($r3)
<com.onradar.sdk._Radar: void trackOnce(com.onradar.sdk.RadarCallback)> --> if $r4 == null goto (branch)
<com.joann.android.MainActivity$3: void onCallback(com.onradar.sdk.Radar$RadarStatus,android.location.Location,com.onradar.sdk.model.RadarEvent[],com.onradar.sdk.model.RadarUser)> --> r0 := @this: com.joann.android.MainActivity$3
<com.joann.android.MainActivity$3: void onCallback(com.onradar.sdk.Radar$RadarStatus,android.location.Location,com.onradar.sdk.model.RadarEvent[],com.onradar.sdk.model.RadarUser)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("RadarCallback", $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings$1: void run()> --> r0 := @this: com.onradar.sdk._RadarSettings$1
<com.onradar.sdk._RadarSettings$1: void run()> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-ad-id", $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("mp::appversion", $i0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.joann.android.utilities.AccountManager$4: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.joann.android.utilities.AccountManager$4
<com.joann.android.utilities.AccountManager$4: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, $r6)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.MParticle$1: void onReceived(java.lang.String)> --> r0 := @this: com.mparticle.MParticle$1
<com.mparticle.MParticle: com.mparticle.MParticle getInstance()> --> $r0 = <com.mparticle.MParticle: com.mparticle.MParticle instance>
<com.mparticle.MParticle: com.mparticle.MParticle getInstance(android.content.Context,com.mparticle.MParticleOptions)> --> r1 := @parameter0: android.content.Context
<com.mparticle.MParticle: void <init>(com.mparticle.MParticleOptions)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.ConfigManager: void setNetworkOptions(com.mparticle.networking.NetworkOptions)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: void setNetworkOptions(com.mparticle.networking.NetworkOptions)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::network:options", $r2)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: void b(com.mparticle.internal.Session)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.s: void d(long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void d(long)> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>($r1, $l0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void initialize(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void logStateTransition(java.lang.String,java.lang.String,long,long,java.lang.String,java.lang.String,java.lang.String,int)> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long,int)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long,int)> --> $r13 = interfaceinvoke $r13.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("mp::crashed_in_foreground", 1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.MParticle$1: void onReceived(java.lang.String)> --> r0 := @this: com.mparticle.MParticle$1
<com.mparticle.MParticle: com.mparticle.MParticle getInstance()> --> $r0 = <com.mparticle.MParticle: com.mparticle.MParticle instance>
<com.mparticle.internal.Logger: void error(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void error(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("mParticle", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.gigya.socialize.android.GSAPI$10: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.gigya.socialize.android.GSAPI$10
<com.gigya.socialize.android.GSAPI$10: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, $r7)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.MParticle$1: void onReceived(java.lang.String)> --> r0 := @this: com.mparticle.MParticle$1
<com.mparticle.MParticle: com.mparticle.MParticle getInstance()> --> $r0 = <com.mparticle.MParticle: com.mparticle.MParticle instance>
<com.mparticle.MParticle: com.mparticle.MParticle getInstance(android.content.Context,com.mparticle.MParticleOptions)> --> r1 := @parameter0: android.content.Context
<com.mparticle.MParticle: void <init>(com.mparticle.MParticleOptions)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.ConfigManager: void setNetworkOptions(com.mparticle.networking.NetworkOptions)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: void setNetworkOptions(com.mparticle.networking.NetworkOptions)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::network:options", $r2)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void postEventAsync(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker$1
<com.usebutton.sdk.internal.events.IntermediateStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.IntermediateStore
<com.usebutton.sdk.internal.events.DatabaseStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.DatabaseStore
<com.usebutton.sdk.internal.events.DatabaseStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> $l1 = virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("events", null, $r9)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(com.mparticle.internal.Session)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.s: void d(java.lang.String)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void d(java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r2, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.MParticle$1: void onReceived(java.lang.String)> --> r0 := @this: com.mparticle.MParticle$1
<com.mparticle.MParticle: com.mparticle.MParticle getInstance()> --> $r0 = <com.mparticle.MParticle: com.mparticle.MParticle instance>
<com.mparticle.MParticle: com.mparticle.MParticle getInstance(android.content.Context,com.mparticle.MParticleOptions)> --> r1 := @parameter0: android.content.Context
<com.mparticle.MParticle: void <init>(com.mparticle.MParticleOptions)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.ConfigManager: void setNetworkOptions(com.mparticle.networking.NetworkOptions)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: void setNetworkOptions(com.mparticle.networking.NetworkOptions)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::network:options", $r2)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void postEventAsync(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker$1
<com.usebutton.sdk.internal.events.IntermediateStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.IntermediateStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.DatabaseStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> i3 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("events", "seqno = ?", $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void postEventAsync(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker$1
<com.usebutton.sdk.internal.events.IntermediateStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.IntermediateStore
<com.usebutton.sdk.internal.events.DatabaseStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.DatabaseStore
<com.usebutton.sdk.internal.events.DatabaseStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: void close()>()
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void startTracking()> --> $r0 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void startTracking()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: boolean checkSelfPermissions()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void startTracking()> --> $z0 = virtualinvoke r0.<com.onradar.sdk._Radar: boolean checkSelfPermissions()>()
<com.onradar.sdk._Radar: void startTracking()> --> $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setTracking(android.content.Context,boolean)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void setTracking(android.content.Context,boolean)> --> if $r0 != null goto $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("RadarSDK", 0)
<com.onradar.sdk._RadarSettings: void setTracking(android.content.Context,boolean)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("radar-tracking", 1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.joann.android.utilities.AccountManager$4: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.joann.android.utilities.AccountManager$4
<com.joann.android.utilities.AccountManager: void access$200(com.joann.android.utilities.AccountManager,java.lang.String)> --> $r0 := @parameter0: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void sendNotification(java.lang.String)> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void sendNotification(java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("mParticle", $r3)
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r0 := @parameter0: java.lang.Double
<com.joann.android.utilities.AccountManager: boolean isGigyaSessionValid()> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void setGigyaUser(com.gigya.socialize.GSObject)> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.PreferencesManager: void putString(java.lang.String,java.lang.String)> --> r0 := @this: com.joann.android.utilities.PreferencesManager
<com.joann.android.utilities.PreferencesManager: void putString(java.lang.String,java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::push_reg_sender_id", $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void postEventAsync(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker$1
<com.usebutton.sdk.internal.events.IntermediateStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.IntermediateStore
<com.usebutton.sdk.internal.events.DatabaseStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.DatabaseStore
<com.usebutton.sdk.internal.events.DatabaseStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: void close()>()
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.joann.android.utilities.AccountManager$4: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.joann.android.utilities.AccountManager$4
<com.joann.android.utilities.AccountManager: void access$100(com.joann.android.utilities.AccountManager,com.gigya.socialize.GSObject)> --> $r0 := @parameter0: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void setGigyaUser(com.gigya.socialize.GSObject)> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.PreferencesManager: void putString(java.lang.String,java.lang.String)> --> r0 := @this: com.joann.android.utilities.PreferencesManager
<com.joann.android.utilities.PreferencesManager: void putString(java.lang.String,java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void postEventAsync(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker$1
<com.usebutton.sdk.internal.events.IntermediateStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.IntermediateStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.DatabaseStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void close()>()
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> $r1 = r0.<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl this$0>
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void access$100(com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl)> --> $r0 := @parameter0: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void dispatchActions()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: boolean isAllowed()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void dispatchActions()> --> $z0 = specialinvoke r0.<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: boolean isAllowed()>()
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: boolean sendAction(com.maxymiser.mmtapp.internal.core.model.ActionModel)> --> return 0
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: boolean sendAction(com.maxymiser.mmtapp.internal.core.model.ActionModel)> --> $r5 = r0.<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: com.maxymiser.mmtapp.internal.core.ServiceProvider serviceProvider>
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: boolean sendAction(com.maxymiser.mmtapp.internal.core.model.ActionModel)> --> r14 := @caughtexception
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLog: void warn(java.lang.String,java.lang.Throwable)> --> $r0 := @parameter0: java.lang.String
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl: void warn(java.lang.String,java.lang.String,java.lang.Throwable)> --> r0 := @this: com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl: void warn(java.lang.String,java.lang.String,java.lang.Throwable)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MMTApp", $r2, $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,boolean)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.ConfigManager: void setPushToken(java.lang.String)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: void setPushToken(java.lang.String)> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::pushtoken", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: void b(com.mparticle.internal.Session)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.s: void d(long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void d(long)> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>($r1, $l0)
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r0 := @parameter0: java.lang.Double
<com.joann.android.utilities.AccountManager: boolean isGigyaSessionValid()> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> $r0 = <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI instance>
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> $r0 = new com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI instance> = $r0
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> $r0 = <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI instance>
<com.gigya.socialize.android.GSAsyncRequest: void afterResponse(com.gigya.socialize.GSResponse,java.lang.Object)> --> $r9 = staticinvoke <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()>()
<com.gigya.socialize.android.GSAPI: void setSession(com.gigya.socialize.android.GSSession,java.lang.String,com.gigya.socialize.GSResponseListener,java.lang.Object)> --> r0 := @this: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void setSession(com.gigya.socialize.android.GSSession,java.lang.String,com.gigya.socialize.GSResponseListener,java.lang.Object)> --> if r5 == null goto $z0 = 1
<com.gigya.socialize.android.GSAPI: void setSession(com.gigya.socialize.android.GSSession,java.lang.String,com.gigya.socialize.GSResponseListener,java.lang.Object)> --> r0.<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSSession session> = $r1
<com.gigya.socialize.android.GSAPI: void saveSession()> --> r0 := @this: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void saveSession()> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("session.Secret", $r4)
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r0 := @parameter0: java.lang.Double
<com.joann.android.utilities.AccountManager: boolean isGigyaSessionValid()> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> $r0 = <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI instance>
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> $r0 = new com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI instance> = $r0
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> $r0 = <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI instance>
<com.gigya.socialize.android.GSAsyncRequest: void afterResponse(com.gigya.socialize.GSResponse,java.lang.Object)> --> $r9 = staticinvoke <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()>()
<com.gigya.socialize.android.GSAPI: void setSession(com.gigya.socialize.android.GSSession,java.lang.String,com.gigya.socialize.GSResponseListener,java.lang.Object)> --> r0 := @this: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void setSession(com.gigya.socialize.android.GSSession,java.lang.String,com.gigya.socialize.GSResponseListener,java.lang.Object)> --> if r5 == null goto $z0 = 1
<com.gigya.socialize.android.GSAPI: void setSession(com.gigya.socialize.android.GSSession,java.lang.String,com.gigya.socialize.GSResponseListener,java.lang.Object)> --> r0.<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSSession session> = $r1
<com.gigya.socialize.android.GSAPI: void saveSession()> --> r0 := @this: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void saveSession()> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("session.Token", $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("mParticle", $r3, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void access$100(com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl)> --> $r0 := @parameter0: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void dispatchActions()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl: void close()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl
<com.maxymiser.mmtapp.internal.core.persistence.DatabaseManager: void closeDatabase()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.persistence.DatabaseManager
<com.maxymiser.mmtapp.internal.core.persistence.DatabaseManager: void closeDatabase()> --> virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void close()>()
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void access$100(com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl)> --> $r0 := @parameter0: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void dispatchActions()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl: void close()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl
<com.maxymiser.mmtapp.internal.core.persistence.DatabaseManager: void closeDatabase()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.persistence.DatabaseManager
<com.maxymiser.mmtapp.internal.core.persistence.DatabaseManager: void closeDatabase()> --> virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void close()>()
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.util.ButtonLog: void infoFormat(java.lang.String,java.lang.String,java.lang.Object[])> --> $r0 := @parameter0: java.lang.String
<com.usebutton.sdk.internal.util.ButtonLog: void doLogInfo(java.lang.String,java.lang.String,java.lang.Object[])> --> r0 := @this: com.usebutton.sdk.internal.util.ButtonLog
<com.usebutton.sdk.internal.util.ButtonLog: boolean isLoggingEnabled()> --> r0 := @this: com.usebutton.sdk.internal.util.ButtonLog
<com.usebutton.sdk.internal.util.ButtonLog: boolean isLoggingEnabled()> --> $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("ButtonSDK", $i0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("mParticle", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.util.ButtonLog: void infoFormat(java.lang.String,java.lang.String,java.lang.Object[])> --> $r0 := @parameter0: java.lang.String
<com.usebutton.sdk.internal.util.ButtonLog: void doLogInfo(java.lang.String,java.lang.String,java.lang.Object[])> --> r0 := @this: com.usebutton.sdk.internal.util.ButtonLog
<com.usebutton.sdk.internal.util.ButtonLog: boolean isLoggingEnabled()> --> r0 := @this: com.usebutton.sdk.internal.util.ButtonLog
<com.usebutton.sdk.internal.util.ButtonLog: boolean isLoggingEnabled()> --> $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("ButtonSDK", $i0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.pushio.manager.PIORegistrationManager$1: void run()> --> r0 := @this: com.pushio.manager.PIORegistrationManager$1
<com.pushio.manager.PIORegistrationManager: void registerApp()> --> r0 := @this: com.pushio.manager.PIORegistrationManager
<com.pushio.manager.PIOLogger: int v(java.lang.Object[])> --> $r0 := @parameter0: java.lang.Object[]
<com.pushio.manager.PIOLogger: int println(int,java.lang.Object[])> --> $i0 := @parameter0: int
<com.pushio.manager.PIOLogger: int println(int,java.lang.Object[])> --> $i0 = staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>($i0, "pushio", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::push_reg_id", $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> $r3 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: boolean getTracking(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: boolean getTracking(android.content.Context)> --> if $r0 != null goto $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("RadarSDK", 0)
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> $z0 = staticinvoke <com.onradar.sdk._RadarSettings: boolean getTracking(android.content.Context)>($r3)
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> if $z0 != 0 goto $r4 = "android.intent.action.BOOT_COMPLETED"
<com.onradar.sdk._RadarSettings: void clearStoppedAt(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void clearStoppedAt(android.content.Context)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("radar-stoppedAt", 0L)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("mParticle", $r3, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.MParticle$1: void onReceived(java.lang.String)> --> r0 := @this: com.mparticle.MParticle$1
<com.mparticle.MParticle: com.mparticle.MParticle getInstance()> --> $r0 = <com.mparticle.MParticle: com.mparticle.MParticle instance>
<com.mparticle.MParticle: com.mparticle.MParticle getInstance(android.content.Context,com.mparticle.MParticleOptions)> --> r1 := @parameter0: android.content.Context
<com.mparticle.MParticle: void <init>(com.mparticle.MParticleOptions)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.ConfigManager: void setIdentityConnectionTimeout(int)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: void setIdentityConnectionTimeout(int)> --> $r2 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("mp::connection:timeout:identity", $i0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLog: void debug(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl: void debug(java.lang.String,java.lang.String)> --> r0 := @this: com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl: void debug(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MMTApp", $r2)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLog: void debug(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl: void debug(java.lang.String,java.lang.String)> --> r0 := @this: com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl: void debug(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MMTApp", $r2)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.gigya.socialize.android.GSAPI$11: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.gigya.socialize.android.GSAPI$11
<com.gigya.socialize.android.GSAPI$11: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("mParticle", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.joann.android.utilities.AccountManager$4: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.joann.android.utilities.AccountManager$4
<com.joann.android.utilities.AccountManager: void access$200(com.joann.android.utilities.AccountManager,java.lang.String)> --> $r0 := @parameter0: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void sendNotification(java.lang.String)> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void sendNotification(java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.joann.android.utilities.AccountManager$4: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.joann.android.utilities.AccountManager$4
<com.joann.android.utilities.AccountManager$4: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, $r6)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,boolean)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.c.d$a: com.mparticle.internal.c.a a()> --> r0 := @this: com.mparticle.internal.c.d$a
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: com.mparticle.internal.s getUserStorage(long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: com.mparticle.internal.s b(android.content.Context,long)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void <init>(android.content.Context,long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s$a: void a(android.content.Context,boolean)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s$a: void a(android.content.Context,boolean)> --> $r2 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("mp::needs_to_migrate_to_mpid_dependent", 0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void startTracking()> --> $r0 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void startTracking()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: boolean checkSelfPermissions()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void startTracking()> --> $z0 = virtualinvoke r0.<com.onradar.sdk._Radar: boolean checkSelfPermissions()>()
<com.onradar.sdk._Radar: void startTracking()> --> $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setTracking(android.content.Context,boolean)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void setTracking(android.content.Context,boolean)> --> if $r0 != null goto $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("RadarSDK", 0)
<com.onradar.sdk._RadarSettings: void setTracking(android.content.Context,boolean)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("radar-tracking", 1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.joann.android.utilities.AccountManager$4: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.joann.android.utilities.AccountManager$4
<com.joann.android.utilities.AccountManager: void access$100(com.joann.android.utilities.AccountManager,com.gigya.socialize.GSObject)> --> $r0 := @parameter0: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void setGigyaUser(com.gigya.socialize.GSObject)> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.PreferencesManager: void putString(java.lang.String,java.lang.String)> --> r0 := @this: com.joann.android.utilities.PreferencesManager
<com.joann.android.utilities.PreferencesManager: void putString(java.lang.String,java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> $r1 = r0.<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl this$0>
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void access$100(com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl)> --> $r0 := @parameter0: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void dispatchActions()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: boolean isAllowed()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void dispatchActions()> --> $z0 = specialinvoke r0.<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: boolean isAllowed()>()
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: boolean sendAction(com.maxymiser.mmtapp.internal.core.model.ActionModel)> --> return 1
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: boolean sendAction(com.maxymiser.mmtapp.internal.core.model.ActionModel)> --> $r5 = r0.<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: com.maxymiser.mmtapp.internal.core.ServiceProvider serviceProvider>
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: boolean sendAction(com.maxymiser.mmtapp.internal.core.model.ActionModel)> --> r14 := @caughtexception
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLog: void warn(java.lang.String,java.lang.Throwable)> --> $r0 := @parameter0: java.lang.String
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl: void warn(java.lang.String,java.lang.String,java.lang.Throwable)> --> r0 := @this: com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl: void warn(java.lang.String,java.lang.String,java.lang.Throwable)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MMTApp", $r2, $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarLogger: void log(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarLogger: void log(android.content.Context,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("_RadarLogger", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("mp::appversion", $i0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("mParticle", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.gigya.socialize.android.GSAPI$10: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.gigya.socialize.android.GSAPI$10
<com.gigya.socialize.android.GSAPI: void access$400(com.gigya.socialize.android.GSAPI,java.lang.String)> --> $r0 := @parameter0: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void setUCID(java.lang.String)> --> r0 := @this: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void setUCID(java.lang.String)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("ucid", $r1)
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r0 := @parameter0: java.lang.Double
<com.joann.android.utilities.AccountManager: boolean isGigyaSessionValid()> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void setGigyaUser(com.gigya.socialize.GSObject)> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.gigya.socialize.GSObject: java.lang.String toJsonString()> --> r0 := @this: com.gigya.socialize.GSObject
<com.gigya.socialize.GSObject: org.json.JSONObject toJsonObject()> --> r0 := @this: com.gigya.socialize.GSObject
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: com.mparticle.internal.s getUserStorage(long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: com.mparticle.internal.s b(android.content.Context,long)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void <init>(android.content.Context,long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s$a: void a(com.mparticle.internal.s)> --> r0 := @this: com.mparticle.internal.s$a
<com.mparticle.internal.s: void b(java.lang.String)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void b(java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r2, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void postEventAsync(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker$1
<com.usebutton.sdk.internal.events.IntermediateStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.IntermediateStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.DatabaseStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> $r5 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("events", $r4, null, null, null, null, "seqno ASC")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.util.ButtonLog: void infoFormat(java.lang.String,java.lang.String,java.lang.Object[])> --> $r0 := @parameter0: java.lang.String
<com.usebutton.sdk.internal.util.ButtonLog: void doLogInfo(java.lang.String,java.lang.String,java.lang.Object[])> --> r0 := @this: com.usebutton.sdk.internal.util.ButtonLog
<com.usebutton.sdk.internal.util.ButtonLog$1: void i(java.lang.String,java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.util.ButtonLog$1
<com.usebutton.sdk.internal.util.ButtonLog$1: void i(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> $r3 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: boolean getTracking(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: boolean getTracking(android.content.Context)> --> if $r0 != null goto $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("RadarSDK", 0)
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> $z0 = staticinvoke <com.onradar.sdk._RadarSettings: boolean getTracking(android.content.Context)>($r3)
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> if $z0 != 0 goto $r4 = "android.intent.action.BOOT_COMPLETED"
<com.onradar.sdk._RadarSettings: void clearStoppedAt(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void clearStoppedAt(android.content.Context)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("radar-stoppedAt", 0L)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("mParticle", $r3, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarClient: void updateLocation(android.content.Context,android.location.Location,boolean,boolean,com.onradar.sdk._RadarCallback)> --> r0 := @this: com.onradar.sdk._RadarClient
<com.onradar.sdk._Radar$3: void onCallback(com.onradar.sdk.Radar$RadarStatus,org.json.JSONObject,com.onradar.sdk.model.RadarEvent[],com.onradar.sdk.model.RadarUser)> --> r0 := @this: com.onradar.sdk._Radar$3
<com.onradar.sdk._RadarSettings: void setRadarId(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void setRadarId(android.content.Context,java.lang.String)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-_id", $r1)
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r0 := @parameter0: java.lang.Double
<com.joann.android.utilities.AccountManager: boolean isGigyaSessionValid()> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void setGigyaUser(com.gigya.socialize.GSObject)> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.gigya.socialize.GSObject: java.lang.String toJsonString()> --> r0 := @this: com.gigya.socialize.GSObject
<com.gigya.socialize.GSObject: org.json.JSONObject toJsonObject()> --> r0 := @this: com.gigya.socialize.GSObject
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: void g(java.lang.String)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void g(java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r2, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("mParticle", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,boolean)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.c.d$a: com.mparticle.internal.c.a a()> --> r0 := @this: com.mparticle.internal.c.d$a
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: void g(java.lang.String)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void g(java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r2, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarSettings: void updateSentAt(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void updateSentAt(android.content.Context)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("radar-sentAt", $l0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(com.mparticle.internal.Session)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.s: void j()> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void j()> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>($r1, -1L)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.mparticle.internal.AppStateManager$2: void run()> --> r0 := @this: com.mparticle.internal.AppStateManager$2
<com.mparticle.internal.ConfigManager: void setPreviousGoogleAdId()> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: void setPreviousGoogleAdId()> --> $r5 = interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::previous::android::id", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(com.mparticle.internal.Session)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.c.d$a: com.mparticle.internal.c.a a()> --> r0 := @this: com.mparticle.internal.c.d$a
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: com.mparticle.internal.s getUserStorage(long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: com.mparticle.internal.s b(android.content.Context,long)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void <init>(android.content.Context,long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: android.content.SharedPreferences g(long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void a(java.util.Set)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void a(android.content.Context,java.util.Set)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void a(android.content.Context,java.util.Set)> --> $r7 = interfaceinvoke $r7.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::user_config_collection", $r8)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("mp::osversion", $i0)
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> r0.<com.joann.android.MainActivity: android.location.Location location> = $r9
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r0 := @parameter0: java.lang.Double
<com.joann.android.utilities.AccountManager: boolean isGigyaSessionValid()> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void sendNotification(java.lang.String)> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void sendNotification(java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("mParticle", $r3, $r1)
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> r0.<com.joann.android.MainActivity: android.location.Location location> = $r9
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r0 := @parameter0: java.lang.Double
<com.joann.android.utilities.AccountManager: boolean isGigyaSessionValid()> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void setGigyaUser(com.gigya.socialize.GSObject)> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.gigya.socialize.GSObject: java.lang.String toJsonString()> --> r0 := @this: com.gigya.socialize.GSObject
<com.gigya.socialize.GSObject: org.json.JSONObject toJsonObject()> --> r0 := @this: com.gigya.socialize.GSObject
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: com.mparticle.internal.s getUserStorage(long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: com.mparticle.internal.s b(android.content.Context,long)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void <init>(android.content.Context,long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s$a: void a(com.mparticle.internal.s)> --> r0 := @this: com.mparticle.internal.s$a
<com.mparticle.internal.s: void d(java.lang.String)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void d(java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r2, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("mParticle", $r3, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings$1: void run()> --> r0 := @this: com.onradar.sdk._RadarSettings$1
<com.onradar.sdk._RadarSettings$1: void run()> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-ad-id", "OptedOut")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(com.mparticle.internal.Session)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.s: void j()> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void j()> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>($r1, -1L)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void postEventAsync(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker$1
<com.usebutton.sdk.internal.events.IntermediateStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.IntermediateStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.DatabaseStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> i3 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("events", "seqno = ?", $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.gigya.socialize.android.GSAPI$12: void run()> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void access$100(com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl)> --> $r0 := @parameter0: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void dispatchActions()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl: com.maxymiser.mmtapp.internal.core.model.ActionModel getActionToDispatch()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl
<com.maxymiser.mmtapp.internal.core.persistence.ConfigurationDBWrapper: com.maxymiser.mmtapp.internal.core.model.ConfigurationModel getConfigurationWithId(android.database.sqlite.SQLiteDatabase,long)> --> $r0 := @parameter0: android.database.sqlite.SQLiteDatabase
<com.maxymiser.mmtapp.internal.core.persistence.ConfigurationDBWrapper: com.maxymiser.mmtapp.internal.core.model.ConfigurationModel getConfigurationWithId(android.database.sqlite.SQLiteDatabase,long)> --> $r4 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("configurations", $r3, "_id = ?", r1, null, null, null)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void postEventAsync(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker$1
<com.usebutton.sdk.internal.events.IntermediateStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.IntermediateStore
<com.usebutton.sdk.internal.events.DatabaseStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.DatabaseStore
<com.usebutton.sdk.internal.events.DatabaseStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> $l1 = virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("events", null, $r9)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.gigya.socialize.android.GSAPI$10: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.gigya.socialize.android.GSAPI$10
<com.gigya.socialize.android.GSAPI$10: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, $r7)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.gigya.socialize.android.GSAPI$10: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.gigya.socialize.android.GSAPI$10
<com.gigya.socialize.android.GSAPI$10: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, $r7)
--------------------------------------------------------

<com.onradar.sdk._RadarSettings: void updateLastMovingLocation(android.content.Context,android.location.Location)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._RadarSettings: void updateLastMovingLocation(android.content.Context,android.location.Location)> --> $f0 = (float) $d0
<com.onradar.sdk._RadarSettings: void updateLastMovingLocation(android.content.Context,android.location.Location)> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putFloat(java.lang.String,float)>("radar-lastMovingLocationLatitude", $f0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.MParticle$1: void onReceived(java.lang.String)> --> r0 := @this: com.mparticle.MParticle$1
<com.mparticle.MParticle: com.mparticle.MParticle getInstance()> --> $r0 = <com.mparticle.MParticle: com.mparticle.MParticle instance>
<com.mparticle.internal.Logger: void error(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void error(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("mParticle", $r3, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void initialize(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void logStateTransition(java.lang.String,java.lang.String,long,long,java.lang.String,java.lang.String,java.lang.String,int)> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long,int)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long,int)> --> $r13 = interfaceinvoke $r13.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("mp::crashed_in_foreground", 1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,boolean)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.c.d$a: com.mparticle.internal.c.a a()> --> r0 := @this: com.mparticle.internal.c.d$a
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: com.mparticle.internal.s getUserStorage(long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: com.mparticle.internal.s b(android.content.Context,long)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void <init>(android.content.Context,long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s$a: void a(com.mparticle.internal.s)> --> r0 := @this: com.mparticle.internal.s$a
<com.mparticle.internal.s: void b(java.lang.String)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void b(java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r2, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.MParticle$1: void onReceived(java.lang.String)> --> r0 := @this: com.mparticle.MParticle$1
<com.mparticle.MParticle: com.mparticle.MParticle getInstance()> --> $r0 = <com.mparticle.MParticle: com.mparticle.MParticle instance>
<com.mparticle.MParticle: com.mparticle.MParticle getInstance(android.content.Context,com.mparticle.MParticleOptions)> --> r1 := @parameter0: android.content.Context
<com.mparticle.MParticle: void <init>(com.mparticle.MParticleOptions)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.ConfigManager: void setNetworkOptions(com.mparticle.networking.NetworkOptions)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: void setNetworkOptions(com.mparticle.networking.NetworkOptions)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::network:options", $r2)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.util.ButtonLog: void infoFormat(java.lang.String,java.lang.String,java.lang.Object[])> --> $r0 := @parameter0: java.lang.String
<com.usebutton.sdk.internal.util.ButtonLog: void doLogInfo(java.lang.String,java.lang.String,java.lang.Object[])> --> r0 := @this: com.usebutton.sdk.internal.util.ButtonLog
<com.usebutton.sdk.internal.util.ButtonLog$1: void i(java.lang.String,java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.util.ButtonLog$1
<com.usebutton.sdk.internal.util.ButtonLog$1: void i(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("mParticle", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,boolean)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.c.d$a: com.mparticle.internal.c.a a()> --> r0 := @this: com.mparticle.internal.c.d$a
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: void g(java.lang.String)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void g(java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r2, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void postEventAsync(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker$1
<com.usebutton.sdk.internal.events.IntermediateStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.IntermediateStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.DatabaseStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> $r5 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("events", $r4, null, null, null, null, "seqno ASC")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.MParticle$1: void onReceived(java.lang.String)> --> r0 := @this: com.mparticle.MParticle$1
<com.mparticle.b: void a(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.b: void a(android.content.Context,java.lang.String)> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::install_referrer", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.gigya.socialize.android.GSAPI$11: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.gigya.socialize.android.GSAPI$11
<com.gigya.socialize.android.GSAPI$11: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void access$100(com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl)> --> $r0 := @parameter0: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void dispatchActions()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl: com.maxymiser.mmtapp.internal.core.model.ActionModel getActionToDispatch()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl
<com.maxymiser.mmtapp.internal.core.persistence.ActionDBWrapper: com.maxymiser.mmtapp.internal.core.model.ActionModel getActionToDispatch(android.database.sqlite.SQLiteDatabase)> --> $r0 := @parameter0: android.database.sqlite.SQLiteDatabase
<com.maxymiser.mmtapp.internal.core.persistence.ActionDBWrapper: com.maxymiser.mmtapp.internal.core.model.ActionModel getActionToDispatch(android.database.sqlite.SQLiteDatabase)> --> $r2 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("actions", $r1, null, null, null, null, "actionTimestamp ASC")
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r0 := @parameter0: java.lang.Double
<com.joann.android.utilities.AccountManager: boolean isGigyaSessionValid()> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> $r0 = <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI instance>
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> $r0 = new com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI instance> = $r0
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> $r0 = <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI instance>
<com.gigya.socialize.android.GSAsyncRequest: void afterResponse(com.gigya.socialize.GSResponse,java.lang.Object)> --> $r9 = staticinvoke <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()>()
<com.gigya.socialize.android.GSAPI: void setSession(com.gigya.socialize.android.GSSession,java.lang.String,com.gigya.socialize.GSResponseListener,java.lang.Object)> --> r0 := @this: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void setSession(com.gigya.socialize.android.GSSession,java.lang.String,com.gigya.socialize.GSResponseListener,java.lang.Object)> --> if r5 == null goto $z0 = 1
<com.gigya.socialize.android.GSAPI: void setSession(com.gigya.socialize.android.GSSession,java.lang.String,com.gigya.socialize.GSResponseListener,java.lang.Object)> --> r0.<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSSession session> = $r1
<com.gigya.socialize.android.GSAPI: void saveSession()> --> r0 := @this: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void saveSession()> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("session.ExpirationTime", $l0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings$1: void run()> --> r0 := @this: com.onradar.sdk._RadarSettings$1
<com.onradar.sdk._RadarSettings$1: void run()> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-ad-id", "OptedOut")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void startTracking()> --> $r0 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void startTracking()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: boolean checkSelfPermissions()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void startTracking()> --> $z0 = virtualinvoke r0.<com.onradar.sdk._Radar: boolean checkSelfPermissions()>()
<com.onradar.sdk._Radar: void startTracking()> --> $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setTracking(android.content.Context,boolean)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void setTracking(android.content.Context,boolean)> --> if $r0 != null goto $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("RadarSDK", 0)
<com.onradar.sdk._RadarSettings: void setTracking(android.content.Context,boolean)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("radar-tracking", 1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.onradar.sdk._RadarLocationRequest$1: void run()> --> r0 := @this: com.onradar.sdk._RadarLocationRequest$1
<com.onradar.sdk._Radar: void didTimeout(com.onradar.sdk._RadarLocationRequest)> --> r0 := @this: com.onradar.sdk._Radar
<com.joann.android.MainActivity$3: void onCallback(com.onradar.sdk.Radar$RadarStatus,android.location.Location,com.onradar.sdk.model.RadarEvent[],com.onradar.sdk.model.RadarUser)> --> r0 := @this: com.joann.android.MainActivity$3
<com.joann.android.MainActivity$3: void onCallback(com.onradar.sdk.Radar$RadarStatus,android.location.Location,com.onradar.sdk.model.RadarEvent[],com.onradar.sdk.model.RadarUser)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("RadarCallback", $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("mParticle", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.joann.android.utilities.AccountManager$4: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.joann.android.utilities.AccountManager$4
<com.joann.android.utilities.AccountManager$4: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, $r6)
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r0 := @parameter0: java.lang.Double
<com.joann.android.utilities.AccountManager: boolean isGigyaSessionValid()> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: boolean isGigyaSessionValid()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, "getSession user is logged in")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(com.mparticle.internal.Session)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.s: void d(java.lang.String)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void d(java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r2, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.MParticle$1: void onReceived(java.lang.String)> --> r0 := @this: com.mparticle.MParticle$1
<com.mparticle.MParticle: com.mparticle.MParticle getInstance()> --> $r0 = <com.mparticle.MParticle: com.mparticle.MParticle instance>
<com.mparticle.MParticle: com.mparticle.MParticle getInstance(android.content.Context,com.mparticle.MParticleOptions)> --> r1 := @parameter0: android.content.Context
<com.mparticle.MParticle: void <init>(com.mparticle.MParticleOptions)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.ConfigManager: void setIdentityConnectionTimeout(int)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: void setIdentityConnectionTimeout(int)> --> $r2 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("mp::connection:timeout:identity", $i0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings$1: void run()> --> r0 := @this: com.onradar.sdk._RadarSettings$1
<com.onradar.sdk._RadarSettings$1: void run()> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-ad-id", $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::push_reg_id", $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.gigya.socialize.android.GSAPI$12: void run()> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::push_reg_id", $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.pushio.manager.PIORegistrationManager$1: void run()> --> r0 := @this: com.pushio.manager.PIORegistrationManager$1
<com.pushio.manager.PIORegistrationManager: void registerApp()> --> r0 := @this: com.pushio.manager.PIORegistrationManager
<com.pushio.manager.PIOLogger: int v(java.lang.Object[])> --> $r0 := @parameter0: java.lang.Object[]
<com.pushio.manager.PIOLogger: int println(int,java.lang.Object[])> --> $i0 := @parameter0: int
<com.pushio.manager.PIOLogger: int println(int,java.lang.Object[])> --> $i0 = staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>($i0, "pushio", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void access$100(com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl)> --> $r0 := @parameter0: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void dispatchActions()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl: com.maxymiser.mmtapp.internal.core.model.ActionModel getActionToDispatch()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl
<com.maxymiser.mmtapp.internal.core.persistence.ActionDBWrapper: com.maxymiser.mmtapp.internal.core.model.ActionModel getActionToDispatch(android.database.sqlite.SQLiteDatabase)> --> $r0 := @parameter0: android.database.sqlite.SQLiteDatabase
<com.maxymiser.mmtapp.internal.core.persistence.ActionDBWrapper: com.maxymiser.mmtapp.internal.core.model.ActionModel getActionToDispatch(android.database.sqlite.SQLiteDatabase)> --> $r2 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("actions", $r1, null, null, null, null, "actionTimestamp ASC")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("mParticle", $r3, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.MParticle$1: void onReceived(java.lang.String)> --> r0 := @this: com.mparticle.MParticle$1
<com.mparticle.MParticle: com.mparticle.MParticle getInstance()> --> $r0 = <com.mparticle.MParticle: com.mparticle.MParticle instance>
<com.mparticle.internal.Logger: void error(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void error(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("mParticle", $r3, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void access$100(com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl)> --> $r0 := @parameter0: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void dispatchActions()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl: com.maxymiser.mmtapp.internal.core.model.ActionModel getActionToDispatch()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl
<com.maxymiser.mmtapp.internal.core.persistence.ActionDBWrapper: com.maxymiser.mmtapp.internal.core.model.ActionModel getActionToDispatch(android.database.sqlite.SQLiteDatabase)> --> $r0 := @parameter0: android.database.sqlite.SQLiteDatabase
<com.maxymiser.mmtapp.internal.core.persistence.ActionDBWrapper: com.maxymiser.mmtapp.internal.core.model.ActionModel getActionToDispatch(android.database.sqlite.SQLiteDatabase)> --> $r2 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("actions", $r1, null, null, null, null, "actionTimestamp ASC")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.gigya.socialize.android.GSAPI$10: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.gigya.socialize.android.GSAPI$10
<com.gigya.socialize.android.GSAPI: void access$500(com.gigya.socialize.android.GSAPI,java.lang.String)> --> $r0 := @parameter0: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void setGMID(java.lang.String)> --> r0 := @this: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void setGMID(java.lang.String)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("gmid", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,boolean)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.ConfigManager: void setPushToken(java.lang.String)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: void setPushToken(java.lang.String)> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::pushtoken", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLog: void debug(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl: void debug(java.lang.String,java.lang.String)> --> r0 := @this: com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl: void debug(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MMTApp", $r2)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,boolean)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.ConfigManager: void setPushToken(java.lang.String)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: void setPushToken(java.lang.String)> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::pushtoken", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(com.mparticle.internal.Session)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.c.d$a: com.mparticle.internal.c.a a()> --> r0 := @this: com.mparticle.internal.c.d$a
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: void g(java.lang.String)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void g(java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r2, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.MParticle$1: void onReceived(java.lang.String)> --> r0 := @this: com.mparticle.MParticle$1
<com.mparticle.MParticle: com.mparticle.MParticle getInstance()> --> $r0 = <com.mparticle.MParticle: com.mparticle.MParticle instance>
<com.mparticle.MParticle: com.mparticle.MParticle getInstance(android.content.Context,com.mparticle.MParticleOptions)> --> r1 := @parameter0: android.content.Context
<com.mparticle.MParticle: void <init>(com.mparticle.MParticleOptions)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.ConfigManager: void setIdentityConnectionTimeout(int)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: void setIdentityConnectionTimeout(int)> --> $r2 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("mp::connection:timeout:identity", $i0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("mParticle", $r3, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::push_reg_sender_id", $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> $r1 = r0.<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl this$0>
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void access$100(com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl)> --> $r0 := @parameter0: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void dispatchActions()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: boolean isAllowed()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void dispatchActions()> --> $z0 = specialinvoke r0.<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: boolean isAllowed()>()
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: boolean sendAction(com.maxymiser.mmtapp.internal.core.model.ActionModel)> --> return 0
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: boolean sendAction(com.maxymiser.mmtapp.internal.core.model.ActionModel)> --> $r5 = r0.<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: com.maxymiser.mmtapp.internal.core.ServiceProvider serviceProvider>
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: boolean sendAction(com.maxymiser.mmtapp.internal.core.model.ActionModel)> --> r14 := @caughtexception
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLog: void warn(java.lang.String,java.lang.Throwable)> --> $r0 := @parameter0: java.lang.String
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl: void warn(java.lang.String,java.lang.String,java.lang.Throwable)> --> r0 := @this: com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl: void warn(java.lang.String,java.lang.String,java.lang.Throwable)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MMTApp", $r2, $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("mParticle", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: void b(com.mparticle.internal.Session)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.s: void d(long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void d(long)> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>($r1, $l0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("mParticle", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(com.mparticle.internal.Session)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.s: void d(java.lang.String)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void d(java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r2, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void trackOnce(com.onradar.sdk.RadarCallback)> --> $r1 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void trackOnce(com.onradar.sdk.RadarCallback)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void trackOnce(com.onradar.sdk.RadarCallback)> --> $r3 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: java.lang.String getPublishableKey(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: java.lang.String getPublishableKey(android.content.Context)> --> if $r0 != null goto $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("RadarSDK", 0)
<com.onradar.sdk._Radar: void trackOnce(com.onradar.sdk.RadarCallback)> --> $r4 = staticinvoke <com.onradar.sdk._RadarSettings: java.lang.String getPublishableKey(android.content.Context)>($r3)
<com.onradar.sdk._Radar: void trackOnce(com.onradar.sdk.RadarCallback)> --> if $r4 == null goto (branch)
<com.joann.android.MainActivity$3: void onCallback(com.onradar.sdk.Radar$RadarStatus,android.location.Location,com.onradar.sdk.model.RadarEvent[],com.onradar.sdk.model.RadarUser)> --> r0 := @this: com.joann.android.MainActivity$3
<com.joann.android.MainActivity$3: void onCallback(com.onradar.sdk.Radar$RadarStatus,android.location.Location,com.onradar.sdk.model.RadarEvent[],com.onradar.sdk.model.RadarUser)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("RadarCallback", $r5)
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> r0.<com.joann.android.MainActivity: android.location.Location location> = $r9
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r0 := @parameter0: java.lang.Double
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r13 = staticinvoke <com.joann.android.utilities.PreferencesManager: com.joann.android.utilities.PreferencesManager getInstance()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> r3 := @caughtexception
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NotificationsManager", "trying to use uninitialized PreferencesManager")
--------------------------------------------------------

<com.onradar.sdk._Radar: void backgroundSendLocation(android.location.Location,boolean,boolean)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void backgroundSendLocation(android.location.Location,boolean,boolean)> --> virtualinvoke r3.<android.os.PersistableBundle: void putDouble(java.lang.String,double)>("longitude", $d0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings$1: void run()> --> r0 := @this: com.onradar.sdk._RadarSettings$1
<com.onradar.sdk._RadarSettings$1: void run()> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-ad-id", "OptedOut")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("mParticle", $r3, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void postEventAsync(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker$1
<com.usebutton.sdk.internal.events.IntermediateStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.IntermediateStore
<com.usebutton.sdk.internal.events.DatabaseStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.DatabaseStore
<com.usebutton.sdk.internal.events.DatabaseStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: void close()>()
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("mp::osversion", $i0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.gigya.socialize.android.GSAPI$10: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.gigya.socialize.android.GSAPI$10
<com.gigya.socialize.android.GSAPI: void access$400(com.gigya.socialize.android.GSAPI,java.lang.String)> --> $r0 := @parameter0: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void setUCID(java.lang.String)> --> r0 := @this: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void setUCID(java.lang.String)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("ucid", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.joann.android.utilities.AccountManager$4: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.joann.android.utilities.AccountManager$4
<com.joann.android.utilities.AccountManager: void access$200(com.joann.android.utilities.AccountManager,java.lang.String)> --> $r0 := @parameter0: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void sendNotification(java.lang.String)> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void sendNotification(java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("mParticle", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk.Radar: void trackOnce(com.onradar.sdk.RadarCallback)> --> $r1 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> staticinvoke <com.onradar.sdk.Radar: void trackOnce(com.onradar.sdk.RadarCallback)>($r16)
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void setUserId(java.lang.String)> --> $r1 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void setUserId(java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void setUserId(java.lang.String)> --> $r2 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setUserId(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void setUserId(android.content.Context,java.lang.String)> --> if $r0 != null goto (branch)
<com.onradar.sdk._RadarSettings: void setUserId(android.content.Context,java.lang.String)> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-userId", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(com.mparticle.internal.Session)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.s: void d(java.lang.String)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void d(java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r2, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings$1: void run()> --> r0 := @this: com.onradar.sdk._RadarSettings$1
<com.onradar.sdk._RadarSettings$1: void run()> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-ad-id", $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("mParticle", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void initialize(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void logStateTransition(java.lang.String,java.lang.String,long,long,java.lang.String,java.lang.String,java.lang.String,int)> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long,int)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long,int)> --> $r13 = interfaceinvoke $r13.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("mp::crashed_in_foreground", 1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.mparticle.internal.AppStateManager$2: void run()> --> r0 := @this: com.mparticle.internal.AppStateManager$2
<com.mparticle.internal.ConfigManager: void setPreviousGoogleAdId()> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: void setPreviousGoogleAdId()> --> $r5 = interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::previous::android::id", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void postEventAsync(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker$1
<com.usebutton.sdk.internal.events.IntermediateStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.IntermediateStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.DatabaseStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> $r5 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("events", $r4, null, null, null, null, "seqno ASC")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("mParticle", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.MParticle$1: void onReceived(java.lang.String)> --> r0 := @this: com.mparticle.MParticle$1
<com.mparticle.MParticle: com.mparticle.MParticle getInstance()> --> $r0 = <com.mparticle.MParticle: com.mparticle.MParticle instance>
<com.mparticle.MParticle: com.mparticle.MParticle getInstance(android.content.Context,com.mparticle.MParticleOptions)> --> r1 := @parameter0: android.content.Context
<com.mparticle.MParticle: void <init>(com.mparticle.MParticleOptions)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.ConfigManager: void setIdentityConnectionTimeout(int)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: void setIdentityConnectionTimeout(int)> --> $r2 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("mp::connection:timeout:identity", $i0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void postEventAsync(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker$1
<com.usebutton.sdk.internal.events.IntermediateStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.IntermediateStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.DatabaseStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> $r5 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("events", $r4, null, null, null, null, "seqno ASC")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.MParticle$1: void onReceived(java.lang.String)> --> r0 := @this: com.mparticle.MParticle$1
<com.mparticle.MParticle: com.mparticle.MParticle getInstance()> --> $r0 = <com.mparticle.MParticle: com.mparticle.MParticle instance>
<com.mparticle.MParticle: com.mparticle.MParticle getInstance(android.content.Context,com.mparticle.MParticleOptions)> --> r1 := @parameter0: android.content.Context
<com.mparticle.MParticle: void <init>(com.mparticle.MParticleOptions)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.ConfigManager: void setIdentityConnectionTimeout(int)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: void setIdentityConnectionTimeout(int)> --> $r2 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("mp::connection:timeout:identity", $i0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.mparticle.internal.AppStateManager$2: void run()> --> r0 := @this: com.mparticle.internal.AppStateManager$2
<com.mparticle.internal.ConfigManager: void setPreviousGoogleAdId()> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: void setPreviousGoogleAdId()> --> $r5 = interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::previous::android::id", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void access$100(com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl)> --> $r0 := @parameter0: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void dispatchActions()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl: com.maxymiser.mmtapp.internal.core.model.ActionModel getActionToDispatch()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl
<com.maxymiser.mmtapp.internal.core.persistence.ConfigurationDBWrapper: com.maxymiser.mmtapp.internal.core.model.ConfigurationModel getConfigurationWithId(android.database.sqlite.SQLiteDatabase,long)> --> $r0 := @parameter0: android.database.sqlite.SQLiteDatabase
<com.maxymiser.mmtapp.internal.core.persistence.ConfigurationDBWrapper: com.maxymiser.mmtapp.internal.core.model.ConfigurationModel getConfigurationWithId(android.database.sqlite.SQLiteDatabase,long)> --> $r4 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("configurations", $r3, "_id = ?", r1, null, null, null)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("mParticle", $r3, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("mParticle", $r3, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void setUserId(java.lang.String)> --> $r1 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void setUserId(java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void setUserId(java.lang.String)> --> $r2 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setUserId(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void setUserId(android.content.Context,java.lang.String)> --> if $r0 != null goto (branch)
<com.onradar.sdk._RadarSettings: void setUserId(android.content.Context,java.lang.String)> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-userId", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void postEventAsync(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker$1
<com.usebutton.sdk.internal.events.IntermediateStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.IntermediateStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.DatabaseStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> i3 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("events", "seqno = ?", $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,boolean)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.c.d$a: com.mparticle.internal.c.a a()> --> r0 := @this: com.mparticle.internal.c.d$a
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: com.mparticle.internal.s getUserStorage(long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: com.mparticle.internal.s b(android.content.Context,long)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void <init>(android.content.Context,long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s$a: void a(android.content.Context,boolean)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s$a: void a(android.content.Context,boolean)> --> $r2 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("mp::needs_to_migrate_to_mpid_dependent", 0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,boolean)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.ConfigManager: void setPushToken(java.lang.String)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: void setPushToken(java.lang.String)> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::pushtoken", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarLogger: void log(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarLogger: void log(android.content.Context,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("_RadarLogger", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> $r3 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: boolean getTracking(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: boolean getTracking(android.content.Context)> --> if $r0 != null goto $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("RadarSDK", 0)
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> $z0 = staticinvoke <com.onradar.sdk._RadarSettings: boolean getTracking(android.content.Context)>($r3)
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> if $z0 != 0 goto $r4 = "android.intent.action.BOOT_COMPLETED"
<com.onradar.sdk._RadarSettings: void clearStoppedAt(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void clearStoppedAt(android.content.Context)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("radar-stoppedAt", 0L)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.gigya.socialize.android.GSAPI$10: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.gigya.socialize.android.GSAPI$10
<com.gigya.socialize.android.GSAPI$10: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, $r7)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.util.ButtonLog: void infoFormat(java.lang.String,java.lang.String,java.lang.Object[])> --> $r0 := @parameter0: java.lang.String
<com.usebutton.sdk.internal.util.ButtonLog: void doLogInfo(java.lang.String,java.lang.String,java.lang.Object[])> --> r0 := @this: com.usebutton.sdk.internal.util.ButtonLog
<com.usebutton.sdk.internal.util.ButtonLog: boolean isLoggingEnabled()> --> r0 := @this: com.usebutton.sdk.internal.util.ButtonLog
<com.usebutton.sdk.internal.util.ButtonLog: boolean isLoggingEnabled()> --> $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("ButtonSDK", $i0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("mParticle", $r3, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void postEventAsync(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker$1
<com.usebutton.sdk.internal.events.IntermediateStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.IntermediateStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.DatabaseStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void close()>()
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(com.mparticle.internal.Session)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.s: void j()> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void j()> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>($r1, -1L)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.gigya.socialize.android.GSAPI$10: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.gigya.socialize.android.GSAPI$10
<com.gigya.socialize.android.GSAPI: void access$500(com.gigya.socialize.android.GSAPI,java.lang.String)> --> $r0 := @parameter0: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void setGMID(java.lang.String)> --> r0 := @this: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void setGMID(java.lang.String)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("gmid", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,boolean)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.c.d$a: com.mparticle.internal.c.a a()> --> r0 := @this: com.mparticle.internal.c.d$a
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: com.mparticle.internal.s getUserStorage(long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: com.mparticle.internal.s b(android.content.Context,long)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void <init>(android.content.Context,long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s$a: void a(android.content.Context,boolean)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s$a: void a(android.content.Context,boolean)> --> $r2 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("mp::needs_to_migrate_to_mpid_dependent", 0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void access$100(com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl)> --> $r0 := @parameter0: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void dispatchActions()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl: com.maxymiser.mmtapp.internal.core.model.ActionModel getActionToDispatch()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl
<com.maxymiser.mmtapp.internal.core.persistence.ConfigurationDBWrapper: com.maxymiser.mmtapp.internal.core.model.ConfigurationModel getConfigurationWithId(android.database.sqlite.SQLiteDatabase,long)> --> $r0 := @parameter0: android.database.sqlite.SQLiteDatabase
<com.maxymiser.mmtapp.internal.core.persistence.ConfigurationDBWrapper: com.maxymiser.mmtapp.internal.core.model.ConfigurationModel getConfigurationWithId(android.database.sqlite.SQLiteDatabase,long)> --> $r4 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("configurations", $r3, "_id = ?", r1, null, null, null)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.gigya.socialize.android.GSAPI$10: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.gigya.socialize.android.GSAPI$10
<com.gigya.socialize.android.GSAPI$10: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, $r7)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(com.mparticle.internal.Session)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.c.d$a: com.mparticle.internal.c.a a()> --> r0 := @this: com.mparticle.internal.c.d$a
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: void g(java.lang.String)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void g(java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r2, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void access$100(com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl)> --> $r0 := @parameter0: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void dispatchActions()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl: com.maxymiser.mmtapp.internal.core.model.ActionModel getActionToDispatch()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl
<com.maxymiser.mmtapp.internal.core.persistence.ConfigurationDBWrapper: com.maxymiser.mmtapp.internal.core.model.ConfigurationModel getConfigurationWithId(android.database.sqlite.SQLiteDatabase,long)> --> $r0 := @parameter0: android.database.sqlite.SQLiteDatabase
<com.maxymiser.mmtapp.internal.core.persistence.ConfigurationDBWrapper: com.maxymiser.mmtapp.internal.core.model.ConfigurationModel getConfigurationWithId(android.database.sqlite.SQLiteDatabase,long)> --> $r4 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("configurations", $r3, "_id = ?", r1, null, null, null)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("mParticle", $r3, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.MParticle$1: void onReceived(java.lang.String)> --> r0 := @this: com.mparticle.MParticle$1
<com.mparticle.MParticle: com.mparticle.MParticle getInstance()> --> $r0 = <com.mparticle.MParticle: com.mparticle.MParticle instance>
<com.mparticle.internal.Logger: void error(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void error(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("mParticle", $r3, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(com.mparticle.internal.Session)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.s: void d(java.lang.String)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void d(java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r2, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("mParticle", $r3)
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> r0.<com.joann.android.MainActivity: android.location.Location location> = $r9
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r0 := @parameter0: java.lang.Double
<com.joann.android.utilities.AccountManager: boolean isGigyaSessionValid()> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void setAccessToken(java.lang.String)> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.PreferencesManager: void putString(java.lang.String,java.lang.String)> --> r0 := @this: com.joann.android.utilities.PreferencesManager
<com.joann.android.utilities.PreferencesManager: void putString(java.lang.String,java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLog: void debug(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl: void debug(java.lang.String,java.lang.String)> --> r0 := @this: com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl: void debug(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MMTApp", $r2)
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> r0.<com.joann.android.MainActivity: android.location.Location location> = $r9
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r0 := @parameter0: java.lang.Double
<com.joann.android.utilities.AccountManager: boolean isGigyaSessionValid()> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void setGigyaUser(com.gigya.socialize.GSObject)> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.gigya.socialize.GSObject: java.lang.String toJsonString()> --> r0 := @this: com.gigya.socialize.GSObject
<com.gigya.socialize.GSObject: org.json.JSONObject toJsonObject()> --> r0 := @this: com.gigya.socialize.GSObject
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: com.mparticle.internal.s getUserStorage(long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: com.mparticle.internal.s b(android.content.Context,long)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void <init>(android.content.Context,long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: android.content.SharedPreferences g(long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void a(java.util.Set)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void a(android.content.Context,java.util.Set)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void a(android.content.Context,java.util.Set)> --> $r7 = interfaceinvoke $r7.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::user_config_collection", $r8)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("mParticle", $r3, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::push_reg_sender_id", $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("mParticle", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("mp::appversion", $i0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.MParticle$1: void onReceived(java.lang.String)> --> r0 := @this: com.mparticle.MParticle$1
<com.mparticle.MParticle: com.mparticle.MParticle getInstance()> --> $r0 = <com.mparticle.MParticle: com.mparticle.MParticle instance>
<com.mparticle.internal.Logger: void error(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void error(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("mParticle", $r3, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void postEventAsync(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker$1
<com.usebutton.sdk.internal.events.IntermediateStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.IntermediateStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.DatabaseStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> i3 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("events", "seqno = ?", $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.gigya.socialize.android.GSAPI$11: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.gigya.socialize.android.GSAPI$11
<com.gigya.socialize.android.GSAPI$11: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,boolean)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.c.d$a: com.mparticle.internal.c.a a()> --> r0 := @this: com.mparticle.internal.c.d$a
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: com.mparticle.internal.s getUserStorage(long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: com.mparticle.internal.s b(android.content.Context,long)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void <init>(android.content.Context,long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: android.content.SharedPreferences g(long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void a(java.util.Set)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void a(android.content.Context,java.util.Set)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void a(android.content.Context,java.util.Set)> --> $r7 = interfaceinvoke $r7.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::user_config_collection", $r8)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void setUserId(java.lang.String)> --> $r1 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void setUserId(java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void setUserId(java.lang.String)> --> $r2 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setUserId(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void setUserId(android.content.Context,java.lang.String)> --> if $r0 != null goto (branch)
<com.onradar.sdk._RadarSettings: void setUserId(android.content.Context,java.lang.String)> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-userId", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings$1: void run()> --> r0 := @this: com.onradar.sdk._RadarSettings$1
<com.onradar.sdk._RadarSettings$1: void run()> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-ad-id", "OptedOut")
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.onradar.sdk.Radar: void setPlacesProvider(com.onradar.sdk.Radar$RadarPlacesProvider)> --> $r0 := @parameter0: com.onradar.sdk.Radar$RadarPlacesProvider
<com.onradar.sdk._Radar: void setPlacesProvider(com.onradar.sdk.Radar$RadarPlacesProvider)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._RadarSettings: void setPlacesProvider(android.content.Context,com.onradar.sdk.Radar$RadarPlacesProvider)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void setPlacesProvider(android.content.Context,com.onradar.sdk.Radar$RadarPlacesProvider)> --> interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-placesProvider", r2)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.gigya.socialize.android.GSAPI$10: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.gigya.socialize.android.GSAPI$10
<com.gigya.socialize.android.GSAPI: void access$400(com.gigya.socialize.android.GSAPI,java.lang.String)> --> $r0 := @parameter0: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void setUCID(java.lang.String)> --> r0 := @this: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void setUCID(java.lang.String)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("ucid", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,boolean)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.c.d$a: com.mparticle.internal.c.a a()> --> r0 := @this: com.mparticle.internal.c.d$a
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: com.mparticle.internal.s getUserStorage(long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: com.mparticle.internal.s b(android.content.Context,long)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void <init>(android.content.Context,long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: android.content.SharedPreferences g(long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void a(java.util.Set)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void a(android.content.Context,java.util.Set)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void a(android.content.Context,java.util.Set)> --> $r7 = interfaceinvoke $r7.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::user_config_collection", $r8)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.joann.android.utilities.AccountManager$4: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.joann.android.utilities.AccountManager$4
<com.joann.android.utilities.AccountManager: void access$100(com.joann.android.utilities.AccountManager,com.gigya.socialize.GSObject)> --> $r0 := @parameter0: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void setGigyaUser(com.gigya.socialize.GSObject)> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.PreferencesManager: void putString(java.lang.String,java.lang.String)> --> r0 := @this: com.joann.android.utilities.PreferencesManager
<com.joann.android.utilities.PreferencesManager: void putString(java.lang.String,java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.MParticle$1: void onReceived(java.lang.String)> --> r0 := @this: com.mparticle.MParticle$1
<com.mparticle.MParticle: com.mparticle.MParticle getInstance()> --> $r0 = <com.mparticle.MParticle: com.mparticle.MParticle instance>
<com.mparticle.internal.Logger: void error(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void error(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("mParticle", $r3)
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> r0.<com.joann.android.MainActivity: android.location.Location location> = $r9
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r0 := @parameter0: java.lang.Double
<com.joann.android.utilities.AccountManager: boolean isGigyaSessionValid()> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> $r0 = <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI instance>
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> $r0 = new com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI instance> = $r0
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> $r0 = <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI instance>
<com.gigya.socialize.android.GSAsyncRequest$GSRequestTask: void onPostExecute(com.gigya.socialize.GSResponse)> --> $r2 = staticinvoke <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()>()
<com.gigya.socialize.android.GSAPI: void reportError(java.lang.String,com.gigya.socialize.GSResponse)> --> r0 := @this: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void reportError(java.lang.String,com.gigya.socialize.GSResponse)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, $r6)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.mparticle.internal.AppStateManager$2: void run()> --> r0 := @this: com.mparticle.internal.AppStateManager$2
<com.mparticle.internal.ConfigManager: void setPreviousGoogleAdId()> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: void setPreviousGoogleAdId()> --> $r5 = interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::previous::android::id", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void setUserId(java.lang.String)> --> $r1 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void setUserId(java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void setUserId(java.lang.String)> --> $r2 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setUserId(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void setUserId(android.content.Context,java.lang.String)> --> if $r0 != null goto (branch)
<com.onradar.sdk._RadarSettings: void setRadarId(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void setRadarId(android.content.Context,java.lang.String)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-_id", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("mParticle", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> $r3 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: boolean getTracking(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: boolean getTracking(android.content.Context)> --> if $r0 != null goto $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("RadarSDK", 0)
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> $z0 = staticinvoke <com.onradar.sdk._RadarSettings: boolean getTracking(android.content.Context)>($r3)
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> if $z0 != 0 goto $r4 = "android.intent.action.BOOT_COMPLETED"
<com.onradar.sdk._RadarSettings: void clearStoppedAt(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void clearStoppedAt(android.content.Context)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("radar-stoppedAt", 0L)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: void b(com.mparticle.internal.Session)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.s: void d(long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void d(long)> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>($r1, $l0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void startTracking()> --> $r0 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void startTracking()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: boolean checkSelfPermissions()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void startTracking()> --> $z0 = virtualinvoke r0.<com.onradar.sdk._Radar: boolean checkSelfPermissions()>()
<com.onradar.sdk._Radar: void startTracking()> --> $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setTracking(android.content.Context,boolean)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void setTracking(android.content.Context,boolean)> --> if $r0 != null goto $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("RadarSDK", 0)
<com.onradar.sdk._RadarSettings: void setTracking(android.content.Context,boolean)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("radar-tracking", 1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("mParticle", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.MParticle$1: void onReceived(java.lang.String)> --> r0 := @this: com.mparticle.MParticle$1
<com.mparticle.MParticle: com.mparticle.MParticle getInstance()> --> $r0 = <com.mparticle.MParticle: com.mparticle.MParticle instance>
<com.mparticle.MParticle: com.mparticle.MParticle getInstance(android.content.Context,com.mparticle.MParticleOptions)> --> r1 := @parameter0: android.content.Context
<com.mparticle.MParticle: void <init>(com.mparticle.MParticleOptions)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.ConfigManager: void setNetworkOptions(com.mparticle.networking.NetworkOptions)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: void setNetworkOptions(com.mparticle.networking.NetworkOptions)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::network:options", $r2)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> $r1 = r0.<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl this$0>
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void access$100(com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl)> --> $r0 := @parameter0: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void dispatchActions()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: boolean isAllowed()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void dispatchActions()> --> $z0 = specialinvoke r0.<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: boolean isAllowed()>()
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: boolean sendAction(com.maxymiser.mmtapp.internal.core.model.ActionModel)> --> return 1
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: boolean sendAction(com.maxymiser.mmtapp.internal.core.model.ActionModel)> --> $r5 = r0.<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: com.maxymiser.mmtapp.internal.core.ServiceProvider serviceProvider>
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: boolean sendAction(com.maxymiser.mmtapp.internal.core.model.ActionModel)> --> r14 := @caughtexception
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLog: void warn(java.lang.String,java.lang.Throwable)> --> $r0 := @parameter0: java.lang.String
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl: void warn(java.lang.String,java.lang.String,java.lang.Throwable)> --> r0 := @this: com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl: void warn(java.lang.String,java.lang.String,java.lang.Throwable)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MMTApp", $r2, $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("mParticle", $r3, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: void b(com.mparticle.internal.Session)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.s: void d(long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void d(long)> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>($r1, $l0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.joann.android.utilities.AccountManager$4: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.joann.android.utilities.AccountManager$4
<com.joann.android.utilities.AccountManager: void access$200(com.joann.android.utilities.AccountManager,java.lang.String)> --> $r0 := @parameter0: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void sendNotification(java.lang.String)> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void sendNotification(java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("mParticle", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void startTracking()> --> $r0 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void startTracking()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: boolean checkSelfPermissions()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void startTracking()> --> $z0 = virtualinvoke r0.<com.onradar.sdk._Radar: boolean checkSelfPermissions()>()
<com.onradar.sdk._Radar: void startTracking()> --> $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setTracking(android.content.Context,boolean)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void setTracking(android.content.Context,boolean)> --> if $r0 != null goto $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("RadarSDK", 0)
<com.onradar.sdk._RadarSettings: void setTracking(android.content.Context,boolean)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("radar-tracking", 1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarSettings: void updateSentAt(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void updateSentAt(android.content.Context)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("radar-sentAt", $l0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.MParticle$1: void onReceived(java.lang.String)> --> r0 := @this: com.mparticle.MParticle$1
<com.mparticle.MParticle: com.mparticle.MParticle getInstance()> --> $r0 = <com.mparticle.MParticle: com.mparticle.MParticle instance>
<com.mparticle.internal.Logger: void error(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void error(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("mParticle", $r3)
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r0 := @parameter0: java.lang.Double
<com.joann.android.utilities.AccountManager: boolean isGigyaSessionValid()> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void setGigyaUser(com.gigya.socialize.GSObject)> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.gigya.socialize.GSObject: java.lang.String toJsonString()> --> r0 := @this: com.gigya.socialize.GSObject
<com.gigya.socialize.GSObject: org.json.JSONObject toJsonObject()> --> r0 := @this: com.gigya.socialize.GSObject
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: com.mparticle.internal.s getUserStorage(long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: com.mparticle.internal.s b(android.content.Context,long)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void <init>(android.content.Context,long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s$a: void a(android.content.Context,boolean)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s$a: void a(android.content.Context,boolean)> --> $r2 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("mp::needs_to_migrate_to_mpid_dependent", 0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.joann.android.utilities.AccountManager$4: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.joann.android.utilities.AccountManager$4
<com.joann.android.utilities.AccountManager: void access$200(com.joann.android.utilities.AccountManager,java.lang.String)> --> $r0 := @parameter0: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void sendNotification(java.lang.String)> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void sendNotification(java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void postEventAsync(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker$1
<com.usebutton.sdk.internal.events.IntermediateStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.IntermediateStore
<com.usebutton.sdk.internal.events.DatabaseStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.DatabaseStore
<com.usebutton.sdk.internal.events.DatabaseStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: void close()>()
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void postEventAsync(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker$1
<com.usebutton.sdk.internal.events.IntermediateStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.IntermediateStore
<com.usebutton.sdk.internal.events.DatabaseStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.DatabaseStore
<com.usebutton.sdk.internal.events.DatabaseStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: void close()>()
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void trackOnce(com.onradar.sdk.RadarCallback)> --> $r1 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void trackOnce(com.onradar.sdk.RadarCallback)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void trackOnce(com.onradar.sdk.RadarCallback)> --> $r3 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: java.lang.String getPublishableKey(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: java.lang.String getPublishableKey(android.content.Context)> --> if $r0 != null goto $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("RadarSDK", 0)
<com.onradar.sdk._Radar: void trackOnce(com.onradar.sdk.RadarCallback)> --> $r4 = staticinvoke <com.onradar.sdk._RadarSettings: java.lang.String getPublishableKey(android.content.Context)>($r3)
<com.onradar.sdk._Radar: void trackOnce(com.onradar.sdk.RadarCallback)> --> if $r4 == null goto (branch)
<com.joann.android.MainActivity$3: void onCallback(com.onradar.sdk.Radar$RadarStatus,android.location.Location,com.onradar.sdk.model.RadarEvent[],com.onradar.sdk.model.RadarUser)> --> r0 := @this: com.joann.android.MainActivity$3
<com.joann.android.MainActivity$3: void onCallback(com.onradar.sdk.Radar$RadarStatus,android.location.Location,com.onradar.sdk.model.RadarEvent[],com.onradar.sdk.model.RadarUser)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("RadarCallback", $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> $r1 = r0.<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl this$0>
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void access$100(com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl)> --> $r0 := @parameter0: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void dispatchActions()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: boolean isAllowed()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void dispatchActions()> --> $z0 = specialinvoke r0.<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: boolean isAllowed()>()
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: boolean sendAction(com.maxymiser.mmtapp.internal.core.model.ActionModel)> --> return 1
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: boolean sendAction(com.maxymiser.mmtapp.internal.core.model.ActionModel)> --> $r5 = r0.<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: com.maxymiser.mmtapp.internal.core.ServiceProvider serviceProvider>
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: boolean sendAction(com.maxymiser.mmtapp.internal.core.model.ActionModel)> --> r14 := @caughtexception
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLog: void warn(java.lang.String,java.lang.Throwable)> --> $r0 := @parameter0: java.lang.String
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl: void warn(java.lang.String,java.lang.String,java.lang.Throwable)> --> r0 := @this: com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl: void warn(java.lang.String,java.lang.String,java.lang.Throwable)> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MMTApp", $r2, $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("mParticle", $r3, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("mParticle", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.util.ButtonLog: void infoFormat(java.lang.String,java.lang.String,java.lang.Object[])> --> $r0 := @parameter0: java.lang.String
<com.usebutton.sdk.internal.util.ButtonLog: void doLogInfo(java.lang.String,java.lang.String,java.lang.Object[])> --> r0 := @this: com.usebutton.sdk.internal.util.ButtonLog
<com.usebutton.sdk.internal.util.ButtonLog$1: void i(java.lang.String,java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.util.ButtonLog$1
<com.usebutton.sdk.internal.util.ButtonLog$1: void i(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.util.ButtonLog: void infoFormat(java.lang.String,java.lang.String,java.lang.Object[])> --> $r0 := @parameter0: java.lang.String
<com.usebutton.sdk.internal.util.ButtonLog: void doLogInfo(java.lang.String,java.lang.String,java.lang.Object[])> --> r0 := @this: com.usebutton.sdk.internal.util.ButtonLog
<com.usebutton.sdk.internal.util.ButtonLog$1: void i(java.lang.String,java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.util.ButtonLog$1
<com.usebutton.sdk.internal.util.ButtonLog$1: void i(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.gigya.socialize.android.GSAPI$10: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.gigya.socialize.android.GSAPI$10
<com.gigya.socialize.android.GSAPI: void access$500(com.gigya.socialize.android.GSAPI,java.lang.String)> --> $r0 := @parameter0: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void setGMID(java.lang.String)> --> r0 := @this: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void setGMID(java.lang.String)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("gmid", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void access$100(com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl)> --> $r0 := @parameter0: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void dispatchActions()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl: void close()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl
<com.maxymiser.mmtapp.internal.core.persistence.DatabaseManager: void closeDatabase()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.persistence.DatabaseManager
<com.maxymiser.mmtapp.internal.core.persistence.DatabaseManager: void closeDatabase()> --> virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void close()>()
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("mParticle", $r3, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("mParticle", $r3, $r1)
--------------------------------------------------------

<com.onradar.sdk._RadarSettings: void updateLastMovingLocation(android.content.Context,android.location.Location)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._RadarSettings: void updateLastMovingLocation(android.content.Context,android.location.Location)> --> $f0 = (float) $d0
<com.onradar.sdk._RadarSettings: void updateLastMovingLocation(android.content.Context,android.location.Location)> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putFloat(java.lang.String,float)>("radar-lastMovingLocationLongitude", $f0)
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> r0.<com.joann.android.MainActivity: android.location.Location location> = $r9
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r0 := @parameter0: java.lang.Double
<com.joann.android.utilities.AccountManager: boolean isGigyaSessionValid()> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: boolean isGigyaSessionValid()> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, "getSession user is logged in")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("mp::osversion", $i0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarLogger: void log(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarLogger: void log(android.content.Context,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("_RadarLogger", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,boolean)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.c.d$a: com.mparticle.internal.c.a a()> --> r0 := @this: com.mparticle.internal.c.d$a
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: com.mparticle.internal.s getUserStorage(long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: com.mparticle.internal.s b(android.content.Context,long)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void <init>(android.content.Context,long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: android.content.SharedPreferences g(long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void a(java.util.Set)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void a(android.content.Context,java.util.Set)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void a(android.content.Context,java.util.Set)> --> $r7 = interfaceinvoke $r7.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::user_config_collection", $r8)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,boolean)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.c.d$a: com.mparticle.internal.c.a a()> --> r0 := @this: com.mparticle.internal.c.d$a
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: void g(java.lang.String)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void g(java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r2, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.MParticle$1: void onReceived(java.lang.String)> --> r0 := @this: com.mparticle.MParticle$1
<com.mparticle.b: void a(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.b: void a(android.content.Context,java.lang.String)> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::install_referrer", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.util.ButtonLog: void infoFormat(java.lang.String,java.lang.String,java.lang.Object[])> --> $r0 := @parameter0: java.lang.String
<com.usebutton.sdk.internal.util.ButtonLog: void doLogInfo(java.lang.String,java.lang.String,java.lang.Object[])> --> r0 := @this: com.usebutton.sdk.internal.util.ButtonLog
<com.usebutton.sdk.internal.util.ButtonLog: boolean isLoggingEnabled()> --> r0 := @this: com.usebutton.sdk.internal.util.ButtonLog
<com.usebutton.sdk.internal.util.ButtonLog: boolean isLoggingEnabled()> --> $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("ButtonSDK", $i0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: boolean isLoggable(int)> --> $i0 := @parameter0: int
<com.mparticle.internal.Logger: boolean isLoggable(int)> --> $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("mParticle", $i0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLog: void debug(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl: void debug(java.lang.String,java.lang.String)> --> r0 := @this: com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl: void debug(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MMTApp", $r2)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.gigya.socialize.android.GSAPI$11: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.gigya.socialize.android.GSAPI$11
<com.gigya.socialize.android.GSAPI$11: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("mParticle", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.gigya.socialize.android.GSAPI$11: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.gigya.socialize.android.GSAPI$11
<com.gigya.socialize.android.GSAPI$11: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings$1: void run()> --> r0 := @this: com.onradar.sdk._RadarSettings$1
<com.onradar.sdk._RadarSettings$1: void run()> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-ad-id", "OptedOut")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::push_reg_id", $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.joann.android.utilities.AccountManager$4: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.joann.android.utilities.AccountManager$4
<com.joann.android.utilities.AccountManager: void access$100(com.joann.android.utilities.AccountManager,com.gigya.socialize.GSObject)> --> $r0 := @parameter0: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void setGigyaUser(com.gigya.socialize.GSObject)> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.PreferencesManager: void putString(java.lang.String,java.lang.String)> --> r0 := @this: com.joann.android.utilities.PreferencesManager
<com.joann.android.utilities.PreferencesManager: void putString(java.lang.String,java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r0 := @parameter0: java.lang.Double
<com.joann.android.utilities.AccountManager: boolean isGigyaSessionValid()> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> $r0 = <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI instance>
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> $r0 = new com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI instance> = $r0
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> $r0 = <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI instance>
<com.gigya.socialize.android.GSAsyncRequest$GSRequestTask: void onPostExecute(com.gigya.socialize.GSResponse)> --> $r2 = staticinvoke <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()>()
<com.gigya.socialize.android.GSAPI: void reportError(java.lang.String,com.gigya.socialize.GSResponse)> --> r0 := @this: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void reportError(java.lang.String,com.gigya.socialize.GSResponse)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, $r6)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void trackOnce(com.onradar.sdk.RadarCallback)> --> $r1 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void trackOnce(com.onradar.sdk.RadarCallback)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void trackOnce(com.onradar.sdk.RadarCallback)> --> $r3 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: java.lang.String getPublishableKey(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: java.lang.String getPublishableKey(android.content.Context)> --> if $r0 != null goto $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("RadarSDK", 0)
<com.onradar.sdk._Radar: void trackOnce(com.onradar.sdk.RadarCallback)> --> $r4 = staticinvoke <com.onradar.sdk._RadarSettings: java.lang.String getPublishableKey(android.content.Context)>($r3)
<com.onradar.sdk._Radar: void trackOnce(com.onradar.sdk.RadarCallback)> --> if $r4 == null goto (branch)
<com.joann.android.MainActivity$3: void onCallback(com.onradar.sdk.Radar$RadarStatus,android.location.Location,com.onradar.sdk.model.RadarEvent[],com.onradar.sdk.model.RadarUser)> --> r0 := @this: com.joann.android.MainActivity$3
<com.joann.android.MainActivity$3: void onCallback(com.onradar.sdk.Radar$RadarStatus,android.location.Location,com.onradar.sdk.model.RadarEvent[],com.onradar.sdk.model.RadarUser)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("RadarCallback", $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(com.mparticle.internal.Session)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.c.d$a: com.mparticle.internal.c.a a()> --> r0 := @this: com.mparticle.internal.c.d$a
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: com.mparticle.internal.s getUserStorage(long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: com.mparticle.internal.s b(android.content.Context,long)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void <init>(android.content.Context,long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s$a: void a(android.content.Context,boolean)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s$a: void a(android.content.Context,boolean)> --> $r2 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("mp::needs_to_migrate_to_mpid_dependent", 0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(com.mparticle.internal.Session)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.c.d$a: com.mparticle.internal.c.a a()> --> r0 := @this: com.mparticle.internal.c.d$a
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: com.mparticle.internal.s getUserStorage(long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: com.mparticle.internal.s b(android.content.Context,long)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void <init>(android.content.Context,long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s$a: void a(com.mparticle.internal.s)> --> r0 := @this: com.mparticle.internal.s$a
<com.mparticle.internal.s: void b(java.lang.String)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void b(java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r2, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.mparticle.internal.AppStateManager$2: void run()> --> r0 := @this: com.mparticle.internal.AppStateManager$2
<com.mparticle.internal.ConfigManager: void setPreviousGoogleAdId()> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: void setPreviousGoogleAdId()> --> $r5 = interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::previous::android::id", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void access$100(com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl)> --> $r0 := @parameter0: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void dispatchActions()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl: void close()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl
<com.maxymiser.mmtapp.internal.core.persistence.DatabaseManager: void closeDatabase()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.persistence.DatabaseManager
<com.maxymiser.mmtapp.internal.core.persistence.DatabaseManager: void closeDatabase()> --> virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void close()>()
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarClient: void updateLocation(android.content.Context,android.location.Location,boolean,boolean,com.onradar.sdk._RadarCallback)> --> r0 := @this: com.onradar.sdk._RadarClient
<com.onradar.sdk._Radar$3: void onCallback(com.onradar.sdk.Radar$RadarStatus,org.json.JSONObject,com.onradar.sdk.model.RadarEvent[],com.onradar.sdk.model.RadarUser)> --> r0 := @this: com.onradar.sdk._Radar$3
<com.onradar.sdk._RadarSettings: void setRadarId(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void setRadarId(android.content.Context,java.lang.String)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-_id", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("mp::appversion", $i0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.MParticle$1: void onReceived(java.lang.String)> --> r0 := @this: com.mparticle.MParticle$1
<com.mparticle.b: void a(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.b: void a(android.content.Context,java.lang.String)> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::install_referrer", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void postEventAsync(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker$1
<com.usebutton.sdk.internal.events.IntermediateStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.IntermediateStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.DatabaseStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> $r5 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("events", $r4, null, null, null, null, "seqno ASC")
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r0 := @parameter0: java.lang.Double
<com.joann.android.utilities.AccountManager: boolean isGigyaSessionValid()> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void setGigyaUser(com.gigya.socialize.GSObject)> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.gigya.socialize.GSObject: java.lang.String toJsonString()> --> r0 := @this: com.gigya.socialize.GSObject
<com.gigya.socialize.GSObject: org.json.JSONObject toJsonObject()> --> r0 := @this: com.gigya.socialize.GSObject
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: com.mparticle.internal.s getUserStorage(long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: com.mparticle.internal.s b(android.content.Context,long)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void <init>(android.content.Context,long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s$a: void a(com.mparticle.internal.s)> --> r0 := @this: com.mparticle.internal.s$a
<com.mparticle.internal.s: void d(java.lang.String)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void d(java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r2, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void initialize(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void logStateTransition(java.lang.String,java.lang.String,long,long,java.lang.String,java.lang.String,java.lang.String,int)> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long,int)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long,int)> --> $r13 = interfaceinvoke $r13.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("mp::crashed_in_foreground", 1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(com.mparticle.internal.Session)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.s: void j()> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void j()> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>($r1, -1L)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLog: void debug(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl: void debug(java.lang.String,java.lang.String)> --> r0 := @this: com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl
<com.maxymiser.mmtapp.internal.core.logging.MMTAppLoggerImpl: void debug(java.lang.String,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MMTApp", $r2)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,boolean)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.c.d$a: com.mparticle.internal.c.a a()> --> r0 := @this: com.mparticle.internal.c.d$a
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: com.mparticle.internal.s getUserStorage(long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: com.mparticle.internal.s b(android.content.Context,long)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void <init>(android.content.Context,long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: android.content.SharedPreferences g(long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void a(java.util.Set)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void a(android.content.Context,java.util.Set)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void a(android.content.Context,java.util.Set)> --> $r7 = interfaceinvoke $r7.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::user_config_collection", $r8)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.MParticle$1: void onReceived(java.lang.String)> --> r0 := @this: com.mparticle.MParticle$1
<com.mparticle.MParticle: com.mparticle.MParticle getInstance()> --> $r0 = <com.mparticle.MParticle: com.mparticle.MParticle instance>
<com.mparticle.MParticle: com.mparticle.MParticle getInstance(android.content.Context,com.mparticle.MParticleOptions)> --> r1 := @parameter0: android.content.Context
<com.mparticle.MParticle: void <init>(com.mparticle.MParticleOptions)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.ConfigManager: void setIdentityConnectionTimeout(int)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: void setIdentityConnectionTimeout(int)> --> $r2 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("mp::connection:timeout:identity", $i0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.PushRegistrationHelper: void setInstanceId(android.content.Context,com.mparticle.internal.PushRegistrationHelper$PushRegistration)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("mp::osversion", $i0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.gigya.socialize.android.GSAPI$11: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.gigya.socialize.android.GSAPI$11
<com.gigya.socialize.android.GSAPI$11: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, $r5)
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> r0.<com.joann.android.MainActivity: android.location.Location location> = $r9
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.onradar.sdk.Radar: void setPlacesProvider(com.onradar.sdk.Radar$RadarPlacesProvider)> --> $r0 := @parameter0: com.onradar.sdk.Radar$RadarPlacesProvider
<com.onradar.sdk._Radar: void setPlacesProvider(com.onradar.sdk.Radar$RadarPlacesProvider)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._RadarSettings: void setPlacesProvider(android.content.Context,com.onradar.sdk.Radar$RadarPlacesProvider)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void setPlacesProvider(android.content.Context,com.onradar.sdk.Radar$RadarPlacesProvider)> --> interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-placesProvider", r2)
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> r0.<com.joann.android.MainActivity: android.location.Location location> = $r9
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r0 := @parameter0: java.lang.Double
<com.joann.android.utilities.AccountManager: boolean isGigyaSessionValid()> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void setGigyaUser(com.gigya.socialize.GSObject)> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.gigya.socialize.GSObject: java.lang.String toJsonString()> --> r0 := @this: com.gigya.socialize.GSObject
<com.gigya.socialize.GSObject: org.json.JSONObject toJsonObject()> --> r0 := @this: com.gigya.socialize.GSObject
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: com.mparticle.internal.s getUserStorage(long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: com.mparticle.internal.s b(android.content.Context,long)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void <init>(android.content.Context,long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s$a: void a(com.mparticle.internal.s)> --> r0 := @this: com.mparticle.internal.s$a
<com.mparticle.internal.s: void b(java.lang.String)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void b(java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r2, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarLogger: void log(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarLogger: void log(android.content.Context,java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("_RadarLogger", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void postEventAsync(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker$1
<com.usebutton.sdk.internal.events.IntermediateStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.IntermediateStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.DatabaseStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void close()>()
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void postEventAsync(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker$1
<com.usebutton.sdk.internal.events.IntermediateStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.IntermediateStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.DatabaseStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void close()>()
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r0 := @parameter0: java.lang.Double
<com.joann.android.utilities.AccountManager: boolean isGigyaSessionValid()> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void sendNotification(java.lang.String)> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void sendNotification(java.lang.String)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("mParticle", $r3, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void postEventAsync(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker$1
<com.usebutton.sdk.internal.events.IntermediateStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.IntermediateStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.DatabaseStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> i3 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("events", "seqno = ?", $r4)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> $r3 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: boolean getTracking(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: boolean getTracking(android.content.Context)> --> if $r0 != null goto $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("RadarSDK", 0)
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> $z0 = staticinvoke <com.onradar.sdk._RadarSettings: boolean getTracking(android.content.Context)>($r3)
<com.onradar.sdk._Radar: void onHandleIntent(android.content.Intent)> --> if $z0 != 0 goto $r4 = "android.intent.action.BOOT_COMPLETED"
<com.onradar.sdk._RadarSettings: void clearStoppedAt(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void clearStoppedAt(android.content.Context)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("radar-stoppedAt", 0L)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.MParticle$1: void onReceived(java.lang.String)> --> r0 := @this: com.mparticle.MParticle$1
<com.mparticle.MParticle: com.mparticle.MParticle getInstance()> --> $r0 = <com.mparticle.MParticle: com.mparticle.MParticle instance>
<com.mparticle.MParticle: com.mparticle.MParticle getInstance(android.content.Context,com.mparticle.MParticleOptions)> --> r1 := @parameter0: android.content.Context
<com.mparticle.MParticle: void <init>(com.mparticle.MParticleOptions)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.ConfigManager: void setNetworkOptions(com.mparticle.networking.NetworkOptions)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: void setNetworkOptions(com.mparticle.networking.NetworkOptions)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::network:options", $r2)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void access$100(com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl)> --> $r0 := @parameter0: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void dispatchActions()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl: com.maxymiser.mmtapp.internal.core.model.ActionModel getActionToDispatch()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl
<com.maxymiser.mmtapp.internal.core.persistence.ConfigurationDBWrapper: com.maxymiser.mmtapp.internal.core.model.ConfigurationModel getConfigurationWithId(android.database.sqlite.SQLiteDatabase,long)> --> $r0 := @parameter0: android.database.sqlite.SQLiteDatabase
<com.maxymiser.mmtapp.internal.core.persistence.ConfigurationDBWrapper: com.maxymiser.mmtapp.internal.core.model.ConfigurationModel getConfigurationWithId(android.database.sqlite.SQLiteDatabase,long)> --> $r4 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("configurations", $r3, "_id = ?", r1, null, null, null)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.gigya.socialize.android.GSAPI$10: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.gigya.socialize.android.GSAPI$10
<com.gigya.socialize.android.GSAPI: void access$500(com.gigya.socialize.android.GSAPI,java.lang.String)> --> $r0 := @parameter0: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void setGMID(java.lang.String)> --> r0 := @this: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void setGMID(java.lang.String)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("gmid", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void postEventAsync(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker$1
<com.usebutton.sdk.internal.events.IntermediateStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.IntermediateStore
<com.usebutton.sdk.internal.events.DatabaseStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.DatabaseStore
<com.usebutton.sdk.internal.events.DatabaseStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> $l1 = virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("events", null, $r9)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.gigya.socialize.android.GSAPI$12: void run()> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, $r5)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void startTracking()> --> $r0 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void startTracking()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: boolean checkSelfPermissions()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void startTracking()> --> $z0 = virtualinvoke r0.<com.onradar.sdk._Radar: boolean checkSelfPermissions()>()
<com.onradar.sdk._Radar: void startTracking()> --> $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setTracking(android.content.Context,boolean)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void setTracking(android.content.Context,boolean)> --> if $r0 != null goto $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("RadarSDK", 0)
<com.onradar.sdk._RadarSettings: void setTracking(android.content.Context,boolean)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("radar-tracking", 1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("mParticle", $r3, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.MParticle$1: void onReceived(java.lang.String)> --> r0 := @this: com.mparticle.MParticle$1
<com.mparticle.b: void a(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.b: void a(android.content.Context,java.lang.String)> --> $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mp::install_referrer", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(com.mparticle.internal.Session)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.s: void d(java.lang.String)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void d(java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r2, $r1)
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r0 := @parameter0: java.lang.Double
<com.joann.android.utilities.AccountManager: boolean isGigyaSessionValid()> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void setApiUser(com.joann.android.rest.models.User)> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.PreferencesManager: void putObject(java.lang.String,java.lang.Object)> --> r0 := @this: com.joann.android.utilities.PreferencesManager
<com.joann.android.utilities.PreferencesManager: void putObject(java.lang.String,java.lang.Object)> --> $r8 = interfaceinvoke $r8.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r1, $r6)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher: void run()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl$Dispatcher
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void access$100(com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl)> --> $r0 := @parameter0: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl: void dispatchActions()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.action.ActionDispatcherImpl
<com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl: com.maxymiser.mmtapp.internal.core.model.ActionModel getActionToDispatch()> --> r0 := @this: com.maxymiser.mmtapp.internal.core.persistence.PersistenceManagerImpl
<com.maxymiser.mmtapp.internal.core.persistence.ActionDBWrapper: com.maxymiser.mmtapp.internal.core.model.ActionModel getActionToDispatch(android.database.sqlite.SQLiteDatabase)> --> $r0 := @parameter0: android.database.sqlite.SQLiteDatabase
<com.maxymiser.mmtapp.internal.core.persistence.ActionDBWrapper: com.maxymiser.mmtapp.internal.core.model.ActionModel getActionToDispatch(android.database.sqlite.SQLiteDatabase)> --> $r2 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("actions", $r1, null, null, null, null, "actionTimestamp ASC")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.joann.android.utilities.AccountManager$4: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.joann.android.utilities.AccountManager$4
<com.joann.android.utilities.AccountManager$4: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, $r6)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,boolean)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.c.d$a: com.mparticle.internal.c.a a()> --> r0 := @this: com.mparticle.internal.c.d$a
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: com.mparticle.internal.s getUserStorage(long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: com.mparticle.internal.s b(android.content.Context,long)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void <init>(android.content.Context,long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s$a: void a(com.mparticle.internal.s)> --> r0 := @this: com.mparticle.internal.s$a
<com.mparticle.internal.s: void b(java.lang.String)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void b(java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r2, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarJobService: boolean onStartJob(android.app.job.JobParameters)> --> $r4 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void postEventAsync(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker$1
<com.usebutton.sdk.internal.events.IntermediateStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.IntermediateStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> r0 := @this: com.usebutton.sdk.internal.events.DatabaseStore
<com.usebutton.sdk.internal.events.DatabaseStore: void trimToSize(int)> --> $r5 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("events", $r4, null, null, null, null, "seqno ASC")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.util.ButtonLog: void infoFormat(java.lang.String,java.lang.String,java.lang.Object[])> --> $r0 := @parameter0: java.lang.String
<com.usebutton.sdk.internal.util.ButtonLog: void doLogInfo(java.lang.String,java.lang.String,java.lang.Object[])> --> r0 := @this: com.usebutton.sdk.internal.util.ButtonLog
<com.usebutton.sdk.internal.util.ButtonLog: boolean isLoggingEnabled()> --> r0 := @this: com.usebutton.sdk.internal.util.ButtonLog
<com.usebutton.sdk.internal.util.ButtonLog: boolean isLoggingEnabled()> --> $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("ButtonSDK", $i0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("mParticle", $r3, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.pushio.manager.PIORegistrationManager$1: void run()> --> r0 := @this: com.pushio.manager.PIORegistrationManager$1
<com.pushio.manager.PIORegistrationManager: void registerApp()> --> r0 := @this: com.pushio.manager.PIORegistrationManager
<com.pushio.manager.PIOLogger: int v(java.lang.Object[])> --> $r0 := @parameter0: java.lang.Object[]
<com.pushio.manager.PIOLogger: int println(int,java.lang.Object[])> --> $i0 := @parameter0: int
<com.pushio.manager.PIOLogger: int println(int,java.lang.Object[])> --> $i0 = staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>($i0, "pushio", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("mParticle", $r3)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = new android.os.Handler
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler> = $r9
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r9 != null goto $r1 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(java.lang.String,boolean)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.c.d$a: com.mparticle.internal.c.a a()> --> r0 := @this: com.mparticle.internal.c.d$a
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: void g(java.lang.String)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void g(java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r2, $r1)
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> r0.<com.joann.android.MainActivity: android.location.Location location> = $r9
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r0 := @parameter0: java.lang.Double
<com.joann.android.utilities.AccountManager: boolean isGigyaSessionValid()> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void setGigyaUser(com.gigya.socialize.GSObject)> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.gigya.socialize.GSObject: java.lang.String toJsonString()> --> r0 := @this: com.gigya.socialize.GSObject
<com.gigya.socialize.GSObject: org.json.JSONObject toJsonObject()> --> r0 := @this: com.gigya.socialize.GSObject
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: void g(java.lang.String)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s: void g(java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r2, $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void checkSessionTimeout()> --> r0 := @this: com.mparticle.internal.AppStateManager
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.usebutton.sdk.internal.core.ApplicationHooks$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.core.ApplicationHooks$1
<com.usebutton.sdk.internal.events.EventTracker: void trackEvent(java.lang.String)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void trackEventWithProperties(java.lang.String,org.json.JSONObject)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker: void postEventAsync(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker
<com.usebutton.sdk.internal.events.EventTracker$1: void run()> --> r0 := @this: com.usebutton.sdk.internal.events.EventTracker$1
<com.usebutton.sdk.internal.events.IntermediateStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.IntermediateStore
<com.usebutton.sdk.internal.events.DatabaseStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> r0 := @this: com.usebutton.sdk.internal.events.DatabaseStore
<com.usebutton.sdk.internal.events.DatabaseStore: boolean add(com.usebutton.sdk.internal.api.models.ClientEventDTO)> --> $l1 = virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("events", null, $r9)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.gigya.socialize.android.GSAPI$10: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.gigya.socialize.android.GSAPI$10
<com.gigya.socialize.android.GSAPI: void access$400(com.gigya.socialize.android.GSAPI,java.lang.String)> --> $r0 := @parameter0: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void setUCID(java.lang.String)> --> r0 := @this: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void setUCID(java.lang.String)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("ucid", $r1)
--------------------------------------------------------

<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = virtualinvoke r8.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r9 = r0.<com.joann.android.MainActivity: android.location.Location location>
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> if $r9 == null goto staticinvoke <com.joann.android.utilities.NotificationsManager: void updateDeviceInfo()>()
<com.joann.android.utilities.NotificationsManager: void updateDeviceInfo(java.lang.Double,java.lang.Double)> --> $r0 := @parameter0: java.lang.Double
<com.joann.android.utilities.AccountManager: boolean isGigyaSessionValid()> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> $r0 = <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI instance>
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> $r0 = new com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI instance> = $r0
<com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()> --> $r0 = <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI instance>
<com.gigya.socialize.android.GSAsyncRequest$GSRequestTask: com.gigya.socialize.GSResponse doInBackground(com.gigya.socialize.GSRequest[])> --> $r6 = staticinvoke <com.gigya.socialize.android.GSAPI: com.gigya.socialize.android.GSAPI getInstance()>()
<com.gigya.socialize.android.GSAPI: void saveTimestampOffset(long)> --> r0 := @this: com.gigya.socialize.android.GSAPI
<com.gigya.socialize.android.GSAPI: void saveTimestampOffset(long)> --> interfaceinvoke $r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("tsOffset", $l0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings$1: void run()> --> r0 := @this: com.onradar.sdk._RadarSettings$1
<com.onradar.sdk._RadarSettings$1: void run()> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-ad-id", "OptedOut")
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._RadarSettings: void updateSentAt(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void updateSentAt(android.content.Context)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("radar-sentAt", $l0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 0.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $b0 == 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.internal.PushRegistrationHelper$1: void run()> --> r0 := @this: com.mparticle.internal.PushRegistrationHelper$1
<com.mparticle.MParticle: void logPushRegistration(java.lang.String,java.lang.String)> --> r0 := @this: com.mparticle.MParticle
<com.mparticle.internal.AppStateManager: void ensureActiveSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.AppStateManager: void newSession()> --> r0 := @this: com.mparticle.internal.AppStateManager
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(com.mparticle.internal.Session)> --> r0 := @this: com.mparticle.internal.MessageManager
<com.mparticle.internal.c.d$a: com.mparticle.internal.c.a a()> --> r0 := @this: com.mparticle.internal.c.d$a
<org.json.JSONObject: void <clinit>()> --> nop
<org.json.JSONObject: void <clinit>()> --> <org.json.JSONObject: java.lang.Object NULL> = null
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r15 = <org.json.JSONObject: java.lang.Object NULL>
<com.mparticle.internal.MessageManager: com.mparticle.internal.c.a a(org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,long)> --> $r18 := @caughtexception
<com.mparticle.internal.ConfigManager: void saveUserIdentityJson(org.json.JSONArray,long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.ConfigManager: com.mparticle.internal.s getUserStorage(long)> --> r0 := @this: com.mparticle.internal.ConfigManager
<com.mparticle.internal.s: com.mparticle.internal.s b(android.content.Context,long)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s: void <init>(android.content.Context,long)> --> r0 := @this: com.mparticle.internal.s
<com.mparticle.internal.s$a: void a(android.content.Context,boolean)> --> $r0 := @parameter0: android.content.Context
<com.mparticle.internal.s$a: void a(android.content.Context,boolean)> --> $r2 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("mp::needs_to_migrate_to_mpid_dependent", 0)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.joann.android.MainActivity: void onCreate(android.os.Bundle)> --> $r13 = staticinvoke <com.joann.android.utilities.AccountManager: com.joann.android.utilities.AccountManager getInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void setUserId(java.lang.String)> --> $r1 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void setUserId(java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void setUserId(java.lang.String)> --> $r2 = r0.<com.onradar.sdk._Radar: android.content.Context mContext>
<com.onradar.sdk._RadarSettings: void setUserId(android.content.Context,java.lang.String)> --> $r0 := @parameter0: android.content.Context
<com.onradar.sdk._RadarSettings: void setUserId(android.content.Context,java.lang.String)> --> if $r0 != null goto (branch)
<com.onradar.sdk._RadarSettings: void setUserId(android.content.Context,java.lang.String)> --> interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("radar-userId", $r1)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpg -90.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 < 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.gigya.socialize.android.GSAPI$12: void run()> --> r0 := @this: com.gigya.socialize.android.GSAPI$12
<com.joann.android.utilities.AccountManager$4: void onGSResponse(java.lang.String,com.gigya.socialize.GSResponse,java.lang.Object)> --> r0 := @this: com.joann.android.utilities.AccountManager$4
<com.joann.android.utilities.AccountManager: void access$100(com.joann.android.utilities.AccountManager,com.gigya.socialize.GSObject)> --> $r0 := @parameter0: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.AccountManager: void setGigyaUser(com.gigya.socialize.GSObject)> --> r0 := @this: com.joann.android.utilities.AccountManager
<com.joann.android.utilities.PreferencesManager: void putString(java.lang.String,java.lang.String)> --> r0 := @this: com.joann.android.utilities.PreferencesManager
<com.joann.android.utilities.PreferencesManager: void putString(java.lang.String,java.lang.String)> --> $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>()
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $b0 = $d0 cmpl 180.0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> $i3 = (int) $b0
<com.onradar.sdk._Radar: void sendLocation(android.location.Location,boolean,boolean,com.onradar.sdk.RadarCallback)> --> if $i3 > 0 goto r4 = <com.onradar.sdk.Radar$RadarStatus: com.onradar.sdk.Radar$RadarStatus ERROR_LOCATION>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> entermonitor class "Lcom/onradar/sdk/_Radar;"
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = new com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void <init>()> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> specialinvoke $r0.<com.onradar.sdk._Radar: void <init>()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._RadarReceiver: void onReceive(android.content.Context,android.content.Intent)> --> $r3 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> if $r0 != null goto $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance> = $r0
<com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()> --> $r0 = <com.onradar.sdk._Radar: com.onradar.sdk._Radar sInstance>
<com.onradar.sdk.Radar: void initialize(android.content.Context,java.lang.String)> --> $r2 = staticinvoke <com.onradar.sdk._Radar: com.onradar.sdk._Radar getSharedInstance()>()
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> r0 := @this: com.onradar.sdk._Radar
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r2 != null goto staticinvoke <com.onradar.sdk._RadarSettings: void setPublishableKey(android.content.Context,java.lang.String)>($r1, $r2)
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> $r6 = r0.<com.onradar.sdk._Radar: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>
<com.onradar.sdk._Radar: void initialize(android.content.Context,java.lang.String)> --> if $r6 != null goto $r9 = r0.<com.onradar.sdk._Radar: android.os.Handler mPermissionsHandler>
<com.onradar.sdk._RadarSettings: void setAdId(android.content.Context)> --> $r0 := @parameter0: android.content.Context
<java.lang.Thread: void run()> --> this := @this: java.lang.Thread
<com.mparticle.b$1: void run()> --> r0 := @this: com.mparticle.b$1
<com.mparticle.b$1$1: void onInstallReferrerSetupFinished(int)> --> r0 := @this: com.mparticle.b$1$1
<com.mparticle.internal.Logger: void warning(java.lang.String[])> --> $r0 := @parameter0: java.lang.String[]
<com.mparticle.internal.Logger: void warning(java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: java.lang.Throwable
<com.mparticle.internal.Logger: void log(com.mparticle.MParticle$LogLevel,java.lang.Throwable,java.lang.String[])> --> $r0 := @parameter0: com.mparticle.MParticle$LogLevel
<com.mparticle.internal.Logger: boolean isLoggable(int)> --> $i0 := @parameter0: int
<com.mparticle.internal.Logger: boolean isLoggable(int)> --> $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("mParticle", $i0)
--------------------------------------------------------

