<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableJust: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableJust
<io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: void run()> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable
<io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: void onNext(java.lang.Object)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver
<com.nbcsports.regional.nbc_rsn.utils.TotalCast$$Lambda$2: java.lang.Object apply(java.lang.Object)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.utils.TotalCast$$Lambda$2
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: io.reactivex.ObservableSource lambda$totalRecall$1$TotalCast(com.nbcsports.regional.nbc_rsn.common.Config)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.utils.TotalCast
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: void post(android.location.Location)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.utils.TotalCast
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: void post(android.location.Location)> --> $r8 = virtualinvoke $r19.<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>($r4)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableJust: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableJust
<io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: void run()> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable
<io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: void onNext(java.lang.Object)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver
<com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$2: java.lang.Object apply(java.lang.Object)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$2
<com.nbcsports.regional.nbc_rsn.MainPresenter: io.reactivex.ObservableSource lambda$getLiveAssetsForPreLoad$2$MainPresenter(com.nbcsports.regional.nbc_rsn.common.Config)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<com.nbcsports.regional.nbc_rsn.MainPresenter: io.reactivex.ObservableSource lambda$getLiveAssetsForPreLoad$2$MainPresenter(com.nbcsports.regional.nbc_rsn.common.Config)> --> $r2 = virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>($r3)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.p: void run()> --> r0 := @this: com.kochava.base.p
<com.kochava.base.j: void h()> --> r0 := @this: com.kochava.base.j
<com.kochava.base.i: void a(java.lang.Runnable,boolean)> --> r0 := @this: com.kochava.base.i
<com.kochava.base.q: void run()> --> r0 := @this: com.kochava.base.q
<com.kochava.base.f: void a(java.lang.String,java.lang.Object)> --> r0 := @this: com.kochava.base.f
<com.kochava.base.f: void a(java.lang.String,java.lang.Object)> --> $r6 = interfaceinvoke $r6.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>($r3, $l1)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.m: void run()> --> r0 := @this: com.kochava.base.m
<com.kochava.base.j: org.json.JSONObject a(java.lang.String,java.lang.String,java.lang.String)> --> r0 := @this: com.kochava.base.j
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> virtualinvoke $r4.<java.net.HttpURLConnection: void setDoInput(boolean)>(1)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableJust: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableJust
<io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: void run()> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable
<io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: void onNext(java.lang.Object)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver
<com.nbcsports.regional.nbc_rsn.utils.TotalCast$$Lambda$2: java.lang.Object apply(java.lang.Object)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.utils.TotalCast$$Lambda$2
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: io.reactivex.ObservableSource lambda$totalRecall$1$TotalCast(com.nbcsports.regional.nbc_rsn.common.Config)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.utils.TotalCast
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: void post(android.location.Location)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.utils.TotalCast
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: void post(android.location.Location)> --> $r12 = interfaceinvoke $r11.<okhttp3.Call: okhttp3.Response execute()>()
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.TotalCast: io.reactivex.ObservableSource lambda$totalRecall$1$TotalCast(com.nbcsports.regional.nbc_rsn.common.Config)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: void post(android.location.Location)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.utils.TotalCast
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: void post(android.location.Location)> --> if $r1 != null goto $r2 = r0.<com.nbcsports.regional.nbc_rsn.utils.TotalCast: com.nbcsports.regional.nbc_rsn.common.Config config>
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: void post(android.location.Location)> --> $r12 = interfaceinvoke $r11.<okhttp3.Call: okhttp3.Response execute()>()
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.p: void run()> --> r0 := @this: com.kochava.base.p
<com.kochava.base.j: org.json.JSONObject a(java.lang.String,java.lang.String,java.lang.String)> --> r0 := @this: com.kochava.base.j
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> $r14 = virtualinvoke $r4.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableJust: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableJust
<io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: void run()> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable
<io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: void onNext(java.lang.Object)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver
<com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$2: java.lang.Object apply(java.lang.Object)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$2
<com.nbcsports.regional.nbc_rsn.MainPresenter: io.reactivex.ObservableSource lambda$getLiveAssetsForPreLoad$2$MainPresenter(com.nbcsports.regional.nbc_rsn.common.Config)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<com.nbcsports.regional.nbc_rsn.utils.PreferenceUtils: void setString(java.lang.String,java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.utils.PreferenceUtils
<com.f2prateek.rx.preferences2.RealPreference: void set(java.lang.Object)> --> r0 := @this: com.f2prateek.rx.preferences2.RealPreference
<com.f2prateek.rx.preferences2.StringAdapter: void set(java.lang.String,java.lang.Object,android.content.SharedPreferences$Editor)> --> r0 := @this: com.f2prateek.rx.preferences2.StringAdapter
<com.f2prateek.rx.preferences2.StringAdapter: void set(java.lang.String,java.lang.String,android.content.SharedPreferences$Editor)> --> r0 := @this: com.f2prateek.rx.preferences2.StringAdapter
<com.f2prateek.rx.preferences2.StringAdapter: void set(java.lang.String,java.lang.String,android.content.SharedPreferences$Editor)> --> interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r1, $r2)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableJust: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableJust
<io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: void run()> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable
<io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: void onNext(java.lang.Object)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver
<com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$2: java.lang.Object apply(java.lang.Object)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$2
<com.nbcsports.regional.nbc_rsn.MainPresenter: io.reactivex.ObservableSource lambda$getLiveAssetsForPreLoad$2$MainPresenter(com.nbcsports.regional.nbc_rsn.common.Config)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<com.nbcsports.regional.nbc_rsn.utils.PreferenceUtils: void setString(java.lang.String,java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.utils.PreferenceUtils
<com.f2prateek.rx.preferences2.RealPreference: void set(java.lang.Object)> --> r0 := @this: com.f2prateek.rx.preferences2.RealPreference
<com.f2prateek.rx.preferences2.BooleanAdapter: void set(java.lang.String,java.lang.Object,android.content.SharedPreferences$Editor)> --> r0 := @this: com.f2prateek.rx.preferences2.BooleanAdapter
<com.f2prateek.rx.preferences2.BooleanAdapter: void set(java.lang.String,java.lang.Boolean,android.content.SharedPreferences$Editor)> --> r0 := @this: com.f2prateek.rx.preferences2.BooleanAdapter
<com.f2prateek.rx.preferences2.BooleanAdapter: void set(java.lang.String,java.lang.Boolean,android.content.SharedPreferences$Editor)> --> interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>($r1, $z0)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.TotalCast: io.reactivex.ObservableSource lambda$totalRecall$1$TotalCast(com.nbcsports.regional.nbc_rsn.common.Config)> --> $r5 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: io.reactivex.ObservableSource lambda$totalRecall$1$TotalCast(com.nbcsports.regional.nbc_rsn.common.Config)> --> if $r5 == null goto (branch)
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: void post(android.location.Location)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.utils.TotalCast
<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)> --> $r1 := @parameter0: okhttp3.MediaType
<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)> --> $r1 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>($r5)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.m: void run()> --> r0 := @this: com.kochava.base.m
<com.kochava.base.j: org.json.JSONObject a(java.lang.String,java.lang.String,java.lang.String)> --> r0 := @this: com.kochava.base.j
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> virtualinvoke $r10.<java.io.OutputStreamWriter: void write(java.lang.String)>($r1)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.p: void run()> --> r0 := @this: com.kochava.base.p
<com.kochava.base.f: void a(java.lang.String,java.lang.Object)> --> r0 := @this: com.kochava.base.f
<com.kochava.base.f: void a(java.lang.String,java.lang.Object)> --> $r6 = interfaceinvoke $r6.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>($r3, $z0)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.m: void run()> --> r0 := @this: com.kochava.base.m
<com.kochava.base.Tracker: void a(int,java.lang.String,java.lang.String,java.lang.Object[])> --> $i0 := @parameter0: int
<com.kochava.base.Tracker: void a(int,java.lang.String,java.lang.String,java.lang.Object[])> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r0, $r1)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarXMapObservable: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarXMapObservable
<com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$0: java.lang.Object apply(java.lang.Object)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$0
<com.nbcsports.regional.nbc_rsn.MainPresenter: io.reactivex.ObservableSource lambda$getFreeWheelHashes$0$MainPresenter(com.nbcsports.regional.nbc_rsn.common.Config)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<com.nbcsports.regional.nbc_rsn.MainPresenter: io.reactivex.ObservableSource lambda$getFreeWheelHashes$0$MainPresenter(com.nbcsports.regional.nbc_rsn.common.Config)> --> $r8 = virtualinvoke $r7.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r6)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.p: void run()> --> r0 := @this: com.kochava.base.p
<com.kochava.base.j: org.json.JSONObject a(java.lang.String,java.lang.String,java.lang.String)> --> r0 := @this: com.kochava.base.j
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r0)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.p: void run()> --> r0 := @this: com.kochava.base.p
<com.kochava.base.j: void h()> --> r0 := @this: com.kochava.base.j
<com.kochava.base.i: void a(java.lang.Runnable,boolean)> --> r0 := @this: com.kochava.base.i
<com.kochava.base.q: void run()> --> r0 := @this: com.kochava.base.q
<com.kochava.base.f: void a(java.lang.String,java.lang.Object)> --> r0 := @this: com.kochava.base.f
<com.kochava.base.f: void a(java.lang.String,java.lang.Object)> --> $r6 = interfaceinvoke $r6.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>($r3, $i0)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.r: void run()> --> r0 := @this: com.kochava.base.r
<com.kochava.base.f: void d()> --> r0 := @this: com.kochava.base.f
<com.kochava.base.f: void d()> --> $i0 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("updates", "_id IN (SELECT _id FROM updates ORDER BY _id ASC LIMIT 1)", null)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarXMapObservable: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarXMapObservable
<com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$3: java.lang.Object apply(java.lang.Object)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$3
<com.nbcsports.regional.nbc_rsn.MainPresenter: io.reactivex.ObservableSource lambda$getNTPTimeForPreLoad$3$MainPresenter(com.nbcsports.regional.nbc_rsn.common.Config)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.common.Config
<com.nbcsports.regional.nbc_rsn.MainPresenter: io.reactivex.ObservableSource lambda$getNTPTimeForPreLoad$3$MainPresenter(com.nbcsports.regional.nbc_rsn.common.Config)> --> $r3 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>("https://time.google.com")
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.m: void run()> --> r0 := @this: com.kochava.base.m
<com.kochava.base.j: org.json.JSONObject a(java.lang.String,java.lang.String,java.lang.String)> --> r0 := @this: com.kochava.base.j
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> virtualinvoke $r10.<java.io.OutputStreamWriter: void write(java.lang.String)>($r1)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableJust: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableJust
<io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: void run()> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable
<io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: void onNext(java.lang.Object)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver
<com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$2: java.lang.Object apply(java.lang.Object)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$2
<com.nbcsports.regional.nbc_rsn.MainPresenter: io.reactivex.ObservableSource lambda$getLiveAssetsForPreLoad$2$MainPresenter(com.nbcsports.regional.nbc_rsn.common.Config)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<com.nbcsports.regional.nbc_rsn.MainPresenter: io.reactivex.ObservableSource lambda$getLiveAssetsForPreLoad$2$MainPresenter(com.nbcsports.regional.nbc_rsn.common.Config)> --> $r7 = interfaceinvoke $r6.<okhttp3.Call: okhttp3.Response execute()>()
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.TotalCast: io.reactivex.ObservableSource lambda$totalRecall$1$TotalCast(com.nbcsports.regional.nbc_rsn.common.Config)> --> $r5 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: io.reactivex.ObservableSource lambda$totalRecall$1$TotalCast(com.nbcsports.regional.nbc_rsn.common.Config)> --> if $r5 == null goto (branch)
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: void post(android.location.Location)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.utils.TotalCast
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: void post(android.location.Location)> --> $r6 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>("application/x-www-form-urlencoded")
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.urbanairship.iam.html.HtmlActivity$1: void run()> --> r0 := @this: com.urbanairship.iam.html.HtmlActivity$1
<com.urbanairship.iam.html.HtmlActivity: void load()> --> r0 := @this: com.urbanairship.iam.html.HtmlActivity
<com.urbanairship.iam.html.HtmlActivity: void load(long)> --> r0 := @this: com.urbanairship.iam.html.HtmlActivity
<com.urbanairship.Logger: void info(java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.urbanairship.Logger: void info(java.lang.String)> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r0)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.p: void run()> --> r0 := @this: com.kochava.base.p
<com.kochava.base.j: org.json.JSONObject a(java.lang.String,java.lang.String,java.lang.String)> --> r0 := @this: com.kochava.base.j
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> virtualinvoke $r4.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST")
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableJust: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableJust
<io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: void run()> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable
<io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: void onNext(java.lang.Object)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver
<com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$1: java.lang.Object apply(java.lang.Object)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$1
<com.nbcsports.regional.nbc_rsn.MainPresenter: io.reactivex.ObservableSource lambda$getTeamsContentForPreLoad$1$MainPresenter(com.nbcsports.regional.nbc_rsn.common.Config)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<com.nbcsports.regional.nbc_rsn.MainPresenter: io.reactivex.ObservableSource lambda$getTeamsContentForPreLoad$1$MainPresenter(com.nbcsports.regional.nbc_rsn.common.Config)> --> $r9 = virtualinvoke $r9.<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>($r10)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.m: void run()> --> r0 := @this: com.kochava.base.m
<com.kochava.base.j: org.json.JSONObject a(java.lang.String,java.lang.String,java.lang.String)> --> r0 := @this: com.kochava.base.j
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> virtualinvoke $r4.<java.net.HttpURLConnection: void connect()>()
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableObserveOn: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableObserveOn
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableCreate: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableCreate
<com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$9: void subscribe(io.reactivex.ObservableEmitter)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$9
<com.nbcsports.regional.nbc_rsn.MainPresenter: void lambda$getUserIpGeolocation$9$MainPresenter(okhttp3.Request,io.reactivex.ObservableEmitter)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<com.nbcsports.regional.nbc_rsn.MainPresenter: void lambda$getUserIpGeolocation$9$MainPresenter(okhttp3.Request,io.reactivex.ObservableEmitter)> --> $r5 = interfaceinvoke $r4.<okhttp3.Call: okhttp3.Response execute()>()
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.p: void run()> --> r0 := @this: com.kochava.base.p
<com.kochava.base.j: void h()> --> r0 := @this: com.kochava.base.j
<com.kochava.base.i: void a(java.lang.Runnable,boolean)> --> r0 := @this: com.kochava.base.i
<com.kochava.base.r: void run()> --> r0 := @this: com.kochava.base.r
<com.kochava.base.f: org.json.JSONObject e()> --> r0 := @this: com.kochava.base.f
<com.kochava.base.f: org.json.JSONObject e()> --> $r5 = virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("SELECT data FROM updates ORDER BY _id ASC LIMIT 1", null)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarXMapObservable: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarXMapObservable
<com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$3: java.lang.Object apply(java.lang.Object)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$3
<com.nbcsports.regional.nbc_rsn.MainPresenter: io.reactivex.ObservableSource lambda$getNTPTimeForPreLoad$3$MainPresenter(com.nbcsports.regional.nbc_rsn.common.Config)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.common.Config
<com.nbcsports.regional.nbc_rsn.MainPresenter: io.reactivex.ObservableSource lambda$getNTPTimeForPreLoad$3$MainPresenter(com.nbcsports.regional.nbc_rsn.common.Config)> --> $r5 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r4)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.p: void run()> --> r0 := @this: com.kochava.base.p
<com.kochava.base.j: org.json.JSONObject a(java.lang.String,java.lang.String,java.lang.String)> --> r0 := @this: com.kochava.base.j
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> $r3 = virtualinvoke $r2.<java.net.URL: java.net.URLConnection openConnection()>()
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableObserveOn: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableObserveOn
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableCreate: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableCreate
<com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$5: void subscribe(io.reactivex.ObservableEmitter)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$5
<com.nbcsports.regional.nbc_rsn.MainPresenter: void lambda$getConfigFromServer$5$MainPresenter(okhttp3.Request,io.reactivex.ObservableEmitter)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<com.nbcsports.regional.nbc_rsn.MainPresenter: void lambda$getConfigFromServer$5$MainPresenter(okhttp3.Request,io.reactivex.ObservableEmitter)> --> $r4 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r2)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.m: void run()> --> r0 := @this: com.kochava.base.m
<com.kochava.base.j: org.json.JSONObject a(java.lang.String,java.lang.String,java.lang.String)> --> r0 := @this: com.kochava.base.j
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> virtualinvoke $r10.<java.io.OutputStreamWriter: void write(java.lang.String)>($r1)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableJust: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableJust
<io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: void run()> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable
<io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver: void onNext(java.lang.Object)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver
<io.reactivex.internal.operators.observable.ObservableFilter$FilterObserver: void onNext(java.lang.Object)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableFilter$FilterObserver
<io.reactivex.internal.observers.LambdaObserver: void onNext(java.lang.Object)> --> r0 := @this: io.reactivex.internal.observers.LambdaObserver
<io.reactivex.internal.observers.LambdaObserver: void onNext(java.lang.Object)> --> $r2 = r0.<io.reactivex.internal.observers.LambdaObserver: io.reactivex.functions.Consumer onNext>
<io.reactivex.internal.observers.LambdaObserver: void onNext(java.lang.Object)> --> $r3 := @caughtexception
<io.reactivex.internal.observers.LambdaObserver: void onError(java.lang.Throwable)> --> r0 := @this: io.reactivex.internal.observers.LambdaObserver
<com.nbcsports.regional.nbc_rsn.data_bar.DataBarManager$requestOnce$3: void accept(java.lang.Object)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.data_bar.DataBarManager$requestOnce$3
<com.nbcsports.regional.nbc_rsn.data_bar.DataBarManager$requestOnce$3: void accept(java.lang.Throwable)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.data_bar.DataBarManager$requestOnce$3
<com.nbcsports.regional.nbc_rsn.extensions.GlobalKt: void e(java.lang.Object,java.lang.Object)> --> $r0 := @parameter0: java.lang.Object
<com.nbcsports.regional.nbc_rsn.extensions.GlobalKt: void e(java.lang.Object,java.lang.Object)> --> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, $r5)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.TotalCast: io.reactivex.ObservableSource lambda$totalRecall$1$TotalCast(com.nbcsports.regional.nbc_rsn.common.Config)> --> $r5 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: io.reactivex.ObservableSource lambda$totalRecall$1$TotalCast(com.nbcsports.regional.nbc_rsn.common.Config)> --> if $r5 == null goto (branch)
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: void post(android.location.Location)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.utils.TotalCast
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: void post(android.location.Location)> --> $r11 = virtualinvoke $r10.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r9)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableJust: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableJust
<io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: void run()> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable
<io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: void onNext(java.lang.Object)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver
<com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$2: java.lang.Object apply(java.lang.Object)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$2
<com.nbcsports.regional.nbc_rsn.MainPresenter: io.reactivex.ObservableSource lambda$getLiveAssetsForPreLoad$2$MainPresenter(com.nbcsports.regional.nbc_rsn.common.Config)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<com.nbcsports.regional.nbc_rsn.MainPresenter: io.reactivex.ObservableSource lambda$getLiveAssetsForPreLoad$2$MainPresenter(com.nbcsports.regional.nbc_rsn.common.Config)> --> $r6 = virtualinvoke $r5.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r4)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.p: void run()> --> r0 := @this: com.kochava.base.p
<com.kochava.base.j: void h()> --> r0 := @this: com.kochava.base.j
<com.kochava.base.i: void a(java.lang.Runnable,boolean)> --> r0 := @this: com.kochava.base.i
<com.kochava.base.q: void run()> --> r0 := @this: com.kochava.base.q
<com.kochava.base.f: void a(java.lang.String,java.lang.Object)> --> r0 := @this: com.kochava.base.f
<com.kochava.base.f: void a(java.lang.String,java.lang.Object)> --> $r6 = interfaceinvoke $r6.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r3, $r10)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.TotalCast: io.reactivex.ObservableSource lambda$totalRecall$1$TotalCast(com.nbcsports.regional.nbc_rsn.common.Config)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: io.reactivex.ObservableSource lambda$totalRecall$1$TotalCast(com.nbcsports.regional.nbc_rsn.common.Config)> --> if $r6 == null goto $r3 = staticinvoke <io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object)>($r1)
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: void post(android.location.Location)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.utils.TotalCast
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: void post(android.location.Location)> --> $r6 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>("application/x-www-form-urlencoded")
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableJust: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableJust
<io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: void run()> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable
<io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: void onNext(java.lang.Object)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver
<com.nbcsports.regional.nbc_rsn.utils.TotalCast$$Lambda$2: java.lang.Object apply(java.lang.Object)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.utils.TotalCast$$Lambda$2
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: io.reactivex.ObservableSource lambda$totalRecall$1$TotalCast(com.nbcsports.regional.nbc_rsn.common.Config)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.utils.TotalCast
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: void post(android.location.Location)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.utils.TotalCast
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: void post(android.location.Location)> --> $r6 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>("application/x-www-form-urlencoded")
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableJust: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableJust
<io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: void run()> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable
<io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: void onNext(java.lang.Object)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver
<com.nbcsports.regional.nbc_rsn.utils.TotalCast$$Lambda$2: java.lang.Object apply(java.lang.Object)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.utils.TotalCast$$Lambda$2
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: io.reactivex.ObservableSource lambda$totalRecall$1$TotalCast(com.nbcsports.regional.nbc_rsn.common.Config)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.utils.TotalCast
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: void post(android.location.Location)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.utils.TotalCast
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: void post(android.location.Location)> --> $r11 = virtualinvoke $r10.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r9)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.p: void run()> --> r0 := @this: com.kochava.base.p
<com.kochava.base.Tracker: void a(int,java.lang.String,java.lang.String,java.lang.Object[])> --> $i0 := @parameter0: int
<com.kochava.base.Tracker: void a(int,java.lang.String,java.lang.String,java.lang.Object[])> --> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r0, $r1)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.m: void run()> --> r0 := @this: com.kochava.base.m
<com.kochava.base.j: org.json.JSONObject a(java.lang.String,java.lang.String,java.lang.String)> --> r0 := @this: com.kochava.base.j
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> virtualinvoke $r10.<java.io.OutputStreamWriter: void write(java.lang.String)>($r1)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableJust: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableJust
<io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: void run()> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable
<io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: void onNext(java.lang.Object)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver
<com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$1: java.lang.Object apply(java.lang.Object)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$1
<com.nbcsports.regional.nbc_rsn.MainPresenter: io.reactivex.ObservableSource lambda$getTeamsContentForPreLoad$1$MainPresenter(com.nbcsports.regional.nbc_rsn.common.Config)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<com.nbcsports.regional.nbc_rsn.MainPresenter: io.reactivex.ObservableSource lambda$getTeamsContentForPreLoad$1$MainPresenter(com.nbcsports.regional.nbc_rsn.common.Config)> --> $r13 = virtualinvoke $r12.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r11)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarXMapObservable: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarXMapObservable
<com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$0: java.lang.Object apply(java.lang.Object)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$0
<com.nbcsports.regional.nbc_rsn.MainPresenter: io.reactivex.ObservableSource lambda$getFreeWheelHashes$0$MainPresenter(com.nbcsports.regional.nbc_rsn.common.Config)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<com.nbcsports.regional.nbc_rsn.MainPresenter: io.reactivex.ObservableSource lambda$getFreeWheelHashes$0$MainPresenter(com.nbcsports.regional.nbc_rsn.common.Config)> --> $r3 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>($r5)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.m: void run()> --> r0 := @this: com.kochava.base.m
<com.kochava.base.j: org.json.JSONObject a(java.lang.String,java.lang.String,java.lang.String)> --> r0 := @this: com.kochava.base.j
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> $r11 = virtualinvoke $r4.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.r: void run()> --> r0 := @this: com.kochava.base.r
<com.kochava.base.f: void a()> --> r0 := @this: com.kochava.base.f
<com.kochava.base.f: void a()> --> virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("VACUUM")
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.p: void run()> --> r0 := @this: com.kochava.base.p
<com.kochava.base.j: org.json.JSONObject a(java.lang.String,java.lang.String,java.lang.String)> --> r0 := @this: com.kochava.base.j
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> virtualinvoke $r4.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.TotalCast: io.reactivex.ObservableSource lambda$totalRecall$1$TotalCast(com.nbcsports.regional.nbc_rsn.common.Config)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: void post(android.location.Location)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.utils.TotalCast
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: void post(android.location.Location)> --> if $r1 != null goto $r2 = r0.<com.nbcsports.regional.nbc_rsn.utils.TotalCast: com.nbcsports.regional.nbc_rsn.common.Config config>
<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)> --> $r1 := @parameter0: okhttp3.MediaType
<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)> --> $r1 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>($r5)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableObserveOn: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableObserveOn
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableCreate: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableCreate
<com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$7: void subscribe(io.reactivex.ObservableEmitter)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$7
<com.nbcsports.regional.nbc_rsn.MainPresenter: void lambda$getTeamLogosFromServer$7$MainPresenter(okhttp3.Request,io.reactivex.ObservableEmitter)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<com.nbcsports.regional.nbc_rsn.MainPresenter: void lambda$getTeamLogosFromServer$7$MainPresenter(okhttp3.Request,io.reactivex.ObservableEmitter)> --> $r5 = interfaceinvoke $r4.<okhttp3.Call: okhttp3.Response execute()>()
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.p: void run()> --> r0 := @this: com.kochava.base.p
<com.kochava.base.j: org.json.JSONObject a(java.lang.String,java.lang.String,java.lang.String)> --> r0 := @this: com.kochava.base.j
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> virtualinvoke $r4.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.p: void run()> --> r0 := @this: com.kochava.base.p
<com.kochava.base.j: void h()> --> r0 := @this: com.kochava.base.j
<com.kochava.base.i: void a(java.lang.Runnable,boolean)> --> r0 := @this: com.kochava.base.i
<com.kochava.base.l: void run()> --> r0 := @this: com.kochava.base.l
<com.kochava.base.f: void a(org.json.JSONObject)> --> r0 := @this: com.kochava.base.f
<com.kochava.base.f: void a(org.json.JSONObject)> --> $l0 = virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("events", null, $r4)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.p: void run()> --> r0 := @this: com.kochava.base.p
<com.kochava.base.Tracker: void a(int,java.lang.String,java.lang.String,java.lang.Object[])> --> $i0 := @parameter0: int
<com.kochava.base.Tracker: void a(int,java.lang.String,java.lang.String,java.lang.Object[])> --> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r0, $r1)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableObserveOn: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableObserveOn
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableCreate: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableCreate
<com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$5: void subscribe(io.reactivex.ObservableEmitter)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$5
<com.nbcsports.regional.nbc_rsn.MainPresenter: void lambda$getConfigFromServer$5$MainPresenter(okhttp3.Request,io.reactivex.ObservableEmitter)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<com.nbcsports.regional.nbc_rsn.MainPresenter: void lambda$getConfigFromServer$5$MainPresenter(okhttp3.Request,io.reactivex.ObservableEmitter)> --> $r5 = interfaceinvoke $r4.<okhttp3.Call: okhttp3.Response execute()>()
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableJust: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableJust
<io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: void run()> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable
<com.nbcsports.regional.nbc_rsn.MainPresenter$1: void onNext(java.lang.Object)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter$1
<com.nbcsports.regional.nbc_rsn.MainPresenter$1: void onNext(com.nbcsports.regional.nbc_rsn.common.Config)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter$1
<com.nbcsports.regional.nbc_rsn.MainPresenter: void access$200(com.nbcsports.regional.nbc_rsn.MainPresenter,java.lang.String)> --> $r0 := @parameter0: com.nbcsports.regional.nbc_rsn.MainPresenter
<com.nbcsports.regional.nbc_rsn.MainPresenter: void getTeamLogosFromServer(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<com.nbcsports.regional.nbc_rsn.MainPresenter: void getTeamLogosFromServer(java.lang.String)> --> $r2 = virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>($r1)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.TotalCast: io.reactivex.ObservableSource lambda$totalRecall$1$TotalCast(com.nbcsports.regional.nbc_rsn.common.Config)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: io.reactivex.ObservableSource lambda$totalRecall$1$TotalCast(com.nbcsports.regional.nbc_rsn.common.Config)> --> if $r6 == null goto $r3 = staticinvoke <io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object)>($r1)
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: void post(android.location.Location)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.utils.TotalCast
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: void post(android.location.Location)> --> $r11 = virtualinvoke $r10.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r9)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.m: void run()> --> r0 := @this: com.kochava.base.m
<com.kochava.base.j: org.json.JSONObject a(java.lang.String,java.lang.String,java.lang.String)> --> r0 := @this: com.kochava.base.j
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> $r11 = virtualinvoke $r4.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableJust: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableJust
<io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: void run()> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable
<io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver: void onNext(java.lang.Object)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver
<io.reactivex.internal.operators.observable.ObservableFilter$FilterObserver: void onNext(java.lang.Object)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableFilter$FilterObserver
<io.reactivex.internal.observers.LambdaObserver: void onNext(java.lang.Object)> --> r0 := @this: io.reactivex.internal.observers.LambdaObserver
<com.nbcsports.regional.nbc_rsn.data_bar.DataBarManager$requestData$4: void accept(java.lang.Object)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.data_bar.DataBarManager$requestData$4
<com.nbcsports.regional.nbc_rsn.data_bar.DataBarManager$requestData$4: void accept(retrofit2.Response)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.data_bar.DataBarManager$requestData$4
<com.nbcsports.regional.nbc_rsn.extensions.GlobalKt: void d(java.lang.Object,java.lang.Object)> --> $r0 := @parameter0: java.lang.Object
<com.nbcsports.regional.nbc_rsn.extensions.GlobalKt: void d(java.lang.Object,java.lang.Object)> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, $r5)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.m: void run()> --> r0 := @this: com.kochava.base.m
<com.kochava.base.j: org.json.JSONObject a(java.lang.String,java.lang.String,java.lang.String)> --> r0 := @this: com.kochava.base.j
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> virtualinvoke $r4.<java.net.HttpURLConnection: void connect()>()
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.p: void run()> --> r0 := @this: com.kochava.base.p
<com.kochava.base.j: void h()> --> r0 := @this: com.kochava.base.j
<com.kochava.base.i: void a(java.lang.Runnable,boolean)> --> r0 := @this: com.kochava.base.i
<com.kochava.base.q: void run()> --> r0 := @this: com.kochava.base.q
<com.kochava.base.f: void a(java.lang.String,java.lang.Object)> --> r0 := @this: com.kochava.base.f
<com.kochava.base.f: void a(java.lang.String,java.lang.Object)> --> $r6 = interfaceinvoke $r6.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r3, $r10)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.m: void run()> --> r0 := @this: com.kochava.base.m
<com.kochava.base.Tracker: void a(int,java.lang.String,java.lang.String,java.lang.Object[])> --> $i0 := @parameter0: int
<com.kochava.base.Tracker: void a(int,java.lang.String,java.lang.String,java.lang.Object[])> --> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r0, $r1)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<com.nbcsports.regional.nbc_rsn.MainPresenter: io.reactivex.Observable getUserIpGeolocation(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<com.nbcsports.regional.nbc_rsn.MainPresenter: io.reactivex.Observable getUserIpGeolocation(java.lang.String)> --> $r2 = virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>($r1)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.m: void run()> --> r0 := @this: com.kochava.base.m
<com.kochava.base.j: org.json.JSONObject a(java.lang.String,java.lang.String,java.lang.String)> --> r0 := @this: com.kochava.base.j
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> virtualinvoke $r4.<java.net.HttpURLConnection: void setDoInput(boolean)>(1)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.p: void run()> --> r0 := @this: com.kochava.base.p
<com.kochava.base.j: org.json.JSONObject a(java.lang.String,java.lang.String,java.lang.String)> --> r0 := @this: com.kochava.base.j
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> $r0 := @parameter0: java.lang.String
<com.kochava.base.f: java.lang.String a(java.lang.String,java.lang.String)> --> $r14 = virtualinvoke $r4.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.TotalCast: io.reactivex.ObservableSource lambda$totalRecall$1$TotalCast(com.nbcsports.regional.nbc_rsn.common.Config)> --> $r5 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: io.reactivex.ObservableSource lambda$totalRecall$1$TotalCast(com.nbcsports.regional.nbc_rsn.common.Config)> --> if $r5 == null goto (branch)
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: void post(android.location.Location)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.utils.TotalCast
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: void post(android.location.Location)> --> $r12 = interfaceinvoke $r11.<okhttp3.Call: okhttp3.Response execute()>()
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.TotalCast: io.reactivex.ObservableSource lambda$totalRecall$1$TotalCast(com.nbcsports.regional.nbc_rsn.common.Config)> --> $r6 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network")
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: void post(android.location.Location)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.utils.TotalCast
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: void post(android.location.Location)> --> if $r1 != null goto $r2 = r0.<com.nbcsports.regional.nbc_rsn.utils.TotalCast: com.nbcsports.regional.nbc_rsn.common.Config config>
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: void post(android.location.Location)> --> $r8 = virtualinvoke $r19.<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>($r4)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableObserveOn: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableObserveOn
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableCreate: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableCreate
<com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$9: void subscribe(io.reactivex.ObservableEmitter)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$9
<com.nbcsports.regional.nbc_rsn.MainPresenter: void lambda$getUserIpGeolocation$9$MainPresenter(okhttp3.Request,io.reactivex.ObservableEmitter)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<com.nbcsports.regional.nbc_rsn.MainPresenter: void lambda$getUserIpGeolocation$9$MainPresenter(okhttp3.Request,io.reactivex.ObservableEmitter)> --> $r4 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r2)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableJust: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableJust
<io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: void run()> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable
<io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: void onNext(java.lang.Object)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver
<com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$1: java.lang.Object apply(java.lang.Object)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$1
<com.nbcsports.regional.nbc_rsn.MainPresenter: io.reactivex.ObservableSource lambda$getTeamsContentForPreLoad$1$MainPresenter(com.nbcsports.regional.nbc_rsn.common.Config)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<com.nbcsports.regional.nbc_rsn.MainPresenter: io.reactivex.ObservableSource lambda$getTeamsContentForPreLoad$1$MainPresenter(com.nbcsports.regional.nbc_rsn.common.Config)> --> $r14 = interfaceinvoke $r13.<okhttp3.Call: okhttp3.Response execute()>()
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.p: void run()> --> r0 := @this: com.kochava.base.p
<com.kochava.base.j: void h()> --> r0 := @this: com.kochava.base.j
<com.kochava.base.i: void a(java.lang.Runnable,boolean)> --> r0 := @this: com.kochava.base.i
<com.kochava.base.q: void run()> --> r0 := @this: com.kochava.base.q
<com.kochava.base.f: void a(java.lang.String,java.lang.Object)> --> r0 := @this: com.kochava.base.f
<com.kochava.base.f: void a(java.lang.String,java.lang.Object)> --> $r6 = interfaceinvoke $r6.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r3, $r10)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableObserveOn: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableObserveOn
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableCreate: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableCreate
<com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$7: void subscribe(io.reactivex.ObservableEmitter)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$7
<com.nbcsports.regional.nbc_rsn.MainPresenter: void lambda$getTeamLogosFromServer$7$MainPresenter(okhttp3.Request,io.reactivex.ObservableEmitter)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<com.nbcsports.regional.nbc_rsn.MainPresenter: void lambda$getTeamLogosFromServer$7$MainPresenter(okhttp3.Request,io.reactivex.ObservableEmitter)> --> $r4 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r2)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableTimer
<io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> --> r0 := @this: io.reactivex.android.schedulers.HandlerScheduler
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)> --> this := @this: android.os.Handler
<com.kochava.base.p: void run()> --> r0 := @this: com.kochava.base.p
<com.kochava.base.Tracker: void a(int,java.lang.String,java.lang.String,java.lang.Object[])> --> $i0 := @parameter0: int
<com.kochava.base.Tracker: void a(int,java.lang.String,java.lang.String,java.lang.Object[])> --> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r0, $r1)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.TotalCast: io.reactivex.ObservableSource lambda$totalRecall$1$TotalCast(com.nbcsports.regional.nbc_rsn.common.Config)> --> $r5 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: io.reactivex.ObservableSource lambda$totalRecall$1$TotalCast(com.nbcsports.regional.nbc_rsn.common.Config)> --> if $r5 == null goto (branch)
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: void post(android.location.Location)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.utils.TotalCast
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: void post(android.location.Location)> --> $r8 = virtualinvoke $r19.<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>($r4)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableJust: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableJust
<io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: void run()> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable
<io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: void onNext(java.lang.Object)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver
<com.nbcsports.regional.nbc_rsn.utils.TotalCast$$Lambda$2: java.lang.Object apply(java.lang.Object)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.utils.TotalCast$$Lambda$2
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: io.reactivex.ObservableSource lambda$totalRecall$1$TotalCast(com.nbcsports.regional.nbc_rsn.common.Config)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.utils.TotalCast
<com.nbcsports.regional.nbc_rsn.utils.TotalCast: void post(android.location.Location)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.utils.TotalCast
<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)> --> $r1 := @parameter0: okhttp3.MediaType
<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)> --> $r1 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>($r5)
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarXMapObservable: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarXMapObservable
<com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$0: java.lang.Object apply(java.lang.Object)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$0
<com.nbcsports.regional.nbc_rsn.MainPresenter: io.reactivex.ObservableSource lambda$getFreeWheelHashes$0$MainPresenter(com.nbcsports.regional.nbc_rsn.common.Config)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<com.nbcsports.regional.nbc_rsn.MainPresenter: io.reactivex.ObservableSource lambda$getFreeWheelHashes$0$MainPresenter(com.nbcsports.regional.nbc_rsn.common.Config)> --> $r9 = interfaceinvoke $r8.<okhttp3.Call: okhttp3.Response execute()>()
--------------------------------------------------------

<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r7 = virtualinvoke $r6.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps")
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> if $r7 == null goto staticinvoke <com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void requestLocationUpdates()>()
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void onRequestPermissionsResultReceived(com.nbcsports.regional.nbc_rsn.MainActivity,int,java.lang.String[],int[])> --> $r8 := @caughtexception
<com.nbcsports.regional.nbc_rsn.utils.LocationUtils: void getIpLocation(com.nbcsports.regional.nbc_rsn.MainActivity)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainActivity: void getIpGeolocation()> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainActivity
<com.nbcsports.regional.nbc_rsn.MainPresenter: void geolocationGet(java.lang.String)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter
<io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.Observable: void subscribe(io.reactivex.Observer)> --> r0 := @this: io.reactivex.Observable
<io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarXMapObservable: void subscribeActual(io.reactivex.Observer)> --> r0 := @this: io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarXMapObservable
<com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$3: java.lang.Object apply(java.lang.Object)> --> r0 := @this: com.nbcsports.regional.nbc_rsn.MainPresenter$$Lambda$3
<com.nbcsports.regional.nbc_rsn.MainPresenter: io.reactivex.ObservableSource lambda$getNTPTimeForPreLoad$3$MainPresenter(com.nbcsports.regional.nbc_rsn.common.Config)> --> $r1 := @parameter0: com.nbcsports.regional.nbc_rsn.common.Config
<com.nbcsports.regional.nbc_rsn.MainPresenter: io.reactivex.ObservableSource lambda$getNTPTimeForPreLoad$3$MainPresenter(com.nbcsports.regional.nbc_rsn.common.Config)> --> $r6 = interfaceinvoke $r5.<okhttp3.Call: okhttp3.Response execute()>()
--------------------------------------------------------

