<com.andnottech.funnyweather.ui.main.MainActivity: void onCreate(android.os.Bundle)>   [UI] -->
<com.andnottech.funnyweather.ui.main.MainPresenter: void <init>(com.andnottech.funnyweather.ui.main.MainContract$View)>   [UI] -->
<com.andnottech.funnyweather.ui.main.MainPresenter: void createRetrofit()>   [UI] -->
<retrofit2.Retrofit: java.lang.Object create(java.lang.Class)>   [UI] -->
<retrofit2.Retrofit: void eagerlyValidateMethods(java.lang.Class)>   [UI] -->
<retrofit2.Retrofit: retrofit2.ServiceMethod loadServiceMethod(java.lang.reflect.Method)>   [UI] -->
<retrofit2.ServiceMethod$Builder: retrofit2.ServiceMethod build()>   [UI] -->
<retrofit2.ServiceMethod$Builder: retrofit2.ParameterHandler parseParameter(int,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])>   [UI] -->
<retrofit2.ServiceMethod$Builder: retrofit2.ParameterHandler parseParameterAnnotation(int,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.'annotation'.Annotation)>   [UI] -->
<java.lang.String: boolean equals(java.lang.Object)>   [UI] -->
---------------------------------------------------------------
<com.andnottech.funnyweather.ui.main.MainActivity: void onDestroy()>   [UI] -->
<android.graphics.Bitmap: boolean isRecycled()>   [UI] -->
---------------------------------------------------------------
<com.andnottech.funnyweather.ui.main.MainActivity: void onCreate(android.os.Bundle)>   [UI] -->
<com.andnottech.funnyweather.ui.main.MainPresenter: void <init>(com.andnottech.funnyweather.ui.main.MainContract$View)>   [UI] -->
<com.andnottech.funnyweather.ui.main.MainPresenter: void createRetrofit()>   [UI] -->
<retrofit2.Retrofit: java.lang.Object create(java.lang.Class)>   [UI] -->
<retrofit2.Retrofit: void eagerlyValidateMethods(java.lang.Class)>   [UI] -->
<retrofit2.Retrofit: retrofit2.ServiceMethod loadServiceMethod(java.lang.reflect.Method)>   [UI] -->
<retrofit2.ServiceMethod$Builder: retrofit2.ServiceMethod build()>   [UI] -->
<retrofit2.ServiceMethod$Builder: void parseMethodAnnotation(java.lang.'annotation'.Annotation)>   [UI] -->
<java.lang.Object: boolean equals(java.lang.Object)>   [UI] -->
---------------------------------------------------------------
<com.andnottech.funnyweather.ui.main.MainActivity: void onDestroy()>   [UI] -->
<android.graphics.Bitmap: void recycle()>   [UI] -->
---------------------------------------------------------------
<com.andnottech.funnyweather.ui.main.MainActivity: void onCreate(android.os.Bundle)>   [UI] -->
<com.andnottech.funnyweather.ui.main.MainPresenter: void <init>(com.andnottech.funnyweather.ui.main.MainContract$View)>   [UI] -->
<com.andnottech.funnyweather.ui.main.MainPresenter: void createRetrofit()>   [UI] -->
<retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(java.lang.String)>   [UI] -->
<retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(okhttp3.HttpUrl)>   [UI] -->
<java.lang.String: boolean equals(java.lang.Object)>   [UI] -->
---------------------------------------------------------------
<com.andnottech.funnyweather.ui.main.MainActivity: void onCreate(android.os.Bundle)>   [UI] -->
<com.andnottech.funnyweather.ui.main.MainPresenter: void <init>(com.andnottech.funnyweather.ui.main.MainContract$View)>   [UI] -->
<com.andnottech.funnyweather.ui.main.MainPresenter: void createRetrofit()>   [UI] -->
<retrofit2.Retrofit: java.lang.Object create(java.lang.Class)>   [UI] -->
<retrofit2.Retrofit: void eagerlyValidateMethods(java.lang.Class)>   [UI] -->
<retrofit2.Retrofit: retrofit2.ServiceMethod loadServiceMethod(java.lang.reflect.Method)>   [UI] -->
<retrofit2.ServiceMethod$Builder: retrofit2.ServiceMethod build()>   [UI] -->
<retrofit2.ServiceMethod$Builder: retrofit2.ParameterHandler parseParameter(int,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])>   [UI] -->
<retrofit2.ServiceMethod$Builder: retrofit2.ParameterHandler parseParameterAnnotation(int,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.'annotation'.Annotation)>   [UI] -->
<retrofit2.Utils: java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)>   [UI] -->
<retrofit2.Utils: java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)>   [UI] -->
<retrofit2.Utils: java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable)>   [UI] -->
<retrofit2.Utils: int indexOf(java.lang.Object[],java.lang.Object)>   [UI] -->
<java.lang.Object: boolean equals(java.lang.Object)>   [UI] -->
---------------------------------------------------------------
<com.andnottech.funnyweather.ui.setup.SetupActivity: void onStart()>   [UI] -->
<com.andnottech.funnyweather.ui.setup.SetupPresenter: void start()>   [UI] -->
<java.lang.String: boolean equals(java.lang.Object)>   [UI] -->
---------------------------------------------------------------
